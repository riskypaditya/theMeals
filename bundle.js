(()=>{var __webpack_modules__={72:function(module,exports,__webpack_require__){eval('var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\n/*!\n  * Bootstrap v5.1.0 (https://getbootstrap.com/)\n  * Copyright 2011-2021 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n!function (t, e) {\n  "object" == ( false ? 0 : _typeof(exports)) && "undefined" != "object" ? module.exports = e() :  true ? !(__WEBPACK_AMD_DEFINE_FACTORY__ = (e),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : 0;\n}(this, function () {\n  "use strict";\n\n  var t = function t(_t2) {\n    var e = _t2.getAttribute("data-bs-target");\n\n    if (!e || "#" === e) {\n      var _i = _t2.getAttribute("href");\n\n      if (!_i || !_i.includes("#") && !_i.startsWith(".")) return null;\n      _i.includes("#") && !_i.startsWith("#") && (_i = "#" + _i.split("#")[1]), e = _i && "#" !== _i ? _i.trim() : null;\n    }\n\n    return e;\n  },\n      e = function e(_e2) {\n    var i = t(_e2);\n    return i && document.querySelector(i) ? i : null;\n  },\n      i = function i(e) {\n    var i = t(e);\n    return i ? document.querySelector(i) : null;\n  },\n      n = function n(t) {\n    t.dispatchEvent(new Event("transitionend"));\n  },\n      s = function s(t) {\n    return !(!t || "object" != _typeof(t)) && (void 0 !== t.jquery && (t = t[0]), void 0 !== t.nodeType);\n  },\n      o = function o(t) {\n    return s(t) ? t.jquery ? t[0] : t : "string" == typeof t && t.length > 0 ? document.querySelector(t) : null;\n  },\n      r = function r(t, e, i) {\n    Object.keys(i).forEach(function (n) {\n      var o = i[n],\n          r = e[n],\n          a = r && s(r) ? "element" : null == (l = r) ? "" + l : {}.toString.call(l).match(/\\s([a-z]+)/i)[1].toLowerCase();\n      var l;\n      if (!new RegExp(o).test(a)) throw new TypeError("".concat(t.toUpperCase(), ": Option \\"").concat(n, "\\" provided type \\"").concat(a, "\\" but expected type \\"").concat(o, "\\"."));\n    });\n  },\n      a = function a(t) {\n    return !(!s(t) || 0 === t.getClientRects().length) && "visible" === getComputedStyle(t).getPropertyValue("visibility");\n  },\n      l = function l(t) {\n    return !t || t.nodeType !== Node.ELEMENT_NODE || !!t.classList.contains("disabled") || (void 0 !== t.disabled ? t.disabled : t.hasAttribute("disabled") && "false" !== t.getAttribute("disabled"));\n  },\n      c = function c(t) {\n    if (!document.documentElement.attachShadow) return null;\n\n    if ("function" == typeof t.getRootNode) {\n      var _e3 = t.getRootNode();\n\n      return _e3 instanceof ShadowRoot ? _e3 : null;\n    }\n\n    return t instanceof ShadowRoot ? t : t.parentNode ? c(t.parentNode) : null;\n  },\n      h = function h() {},\n      d = function d(t) {\n    t.offsetHeight;\n  },\n      u = function u() {\n    var _window = window,\n        t = _window.jQuery;\n    return t && !document.body.hasAttribute("data-bs-no-jquery") ? t : null;\n  },\n      f = [],\n      p = function p() {\n    return "rtl" === document.documentElement.dir;\n  },\n      m = function m(t) {\n    var e;\n    e = function e() {\n      var e = u();\n\n      if (e) {\n        var _i2 = t.NAME,\n            _n = e.fn[_i2];\n        e.fn[_i2] = t.jQueryInterface, e.fn[_i2].Constructor = t, e.fn[_i2].noConflict = function () {\n          return e.fn[_i2] = _n, t.jQueryInterface;\n        };\n      }\n    }, "loading" === document.readyState ? (f.length || document.addEventListener("DOMContentLoaded", function () {\n      f.forEach(function (t) {\n        return t();\n      });\n    }), f.push(e)) : e();\n  },\n      g = function g(t) {\n    "function" == typeof t && t();\n  },\n      _ = function _(t, e) {\n    var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !0;\n    if (!i) return void g(t);\n\n    var s = function (t) {\n      if (!t) return 0;\n\n      var _window$getComputedSt = window.getComputedStyle(t),\n          e = _window$getComputedSt.transitionDuration,\n          i = _window$getComputedSt.transitionDelay;\n\n      var n = Number.parseFloat(e),\n          s = Number.parseFloat(i);\n      return n || s ? (e = e.split(",")[0], i = i.split(",")[0], 1e3 * (Number.parseFloat(e) + Number.parseFloat(i))) : 0;\n    }(e) + 5;\n\n    var o = !1;\n\n    var r = function r(_ref) {\n      var i = _ref.target;\n      i === e && (o = !0, e.removeEventListener("transitionend", r), g(t));\n    };\n\n    e.addEventListener("transitionend", r), setTimeout(function () {\n      o || n(e);\n    }, s);\n  },\n      b = function b(t, e, i, n) {\n    var s = t.indexOf(e);\n    if (-1 === s) return t[!i && n ? t.length - 1 : 0];\n    var o = t.length;\n    return s += i ? 1 : -1, n && (s = (s + o) % o), t[Math.max(0, Math.min(s, o - 1))];\n  },\n      v = /[^.]*(?=\\..*)\\.|.*/,\n      y = /\\..*/,\n      w = /::\\d+$/,\n      E = {};\n\n  var A = 1;\n  var T = {\n    mouseenter: "mouseover",\n    mouseleave: "mouseout"\n  },\n      O = /^(mouseenter|mouseleave)/i,\n      C = new Set(["click", "dblclick", "mouseup", "mousedown", "contextmenu", "mousewheel", "DOMMouseScroll", "mouseover", "mouseout", "mousemove", "selectstart", "selectend", "keydown", "keypress", "keyup", "orientationchange", "touchstart", "touchmove", "touchend", "touchcancel", "pointerdown", "pointermove", "pointerup", "pointerleave", "pointercancel", "gesturestart", "gesturechange", "gestureend", "focus", "blur", "change", "reset", "select", "submit", "focusin", "focusout", "load", "unload", "beforeunload", "resize", "move", "DOMContentLoaded", "readystatechange", "error", "abort", "scroll"]);\n\n  function k(t, e) {\n    return e && "".concat(e, "::").concat(A++) || t.uidEvent || A++;\n  }\n\n  function L(t) {\n    var e = k(t);\n    return t.uidEvent = e, E[e] = E[e] || {}, E[e];\n  }\n\n  function x(t, e) {\n    var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var n = Object.keys(t);\n\n    for (var _s = 0, _o = n.length; _s < _o; _s++) {\n      var _o2 = t[n[_s]];\n      if (_o2.originalHandler === e && _o2.delegationSelector === i) return _o2;\n    }\n\n    return null;\n  }\n\n  function D(t, e, i) {\n    var n = "string" == typeof e,\n        s = n ? i : e;\n    var o = I(t);\n    return C.has(o) || (o = t), [n, s, o];\n  }\n\n  function S(t, e, i, n, s) {\n    if ("string" != typeof e || !t) return;\n\n    if (i || (i = n, n = null), O.test(e)) {\n      var _t3 = function _t3(t) {\n        return function (e) {\n          if (!e.relatedTarget || e.relatedTarget !== e.delegateTarget && !e.delegateTarget.contains(e.relatedTarget)) return t.call(this, e);\n        };\n      };\n\n      n ? n = _t3(n) : i = _t3(i);\n    }\n\n    var _D = D(e, i, n),\n        _D2 = _slicedToArray(_D, 3),\n        o = _D2[0],\n        r = _D2[1],\n        a = _D2[2],\n        l = L(t),\n        c = l[a] || (l[a] = {}),\n        h = x(c, r, o ? i : null);\n\n    if (h) return void (h.oneOff = h.oneOff && s);\n    var d = k(r, e.replace(v, "")),\n        u = o ? function (t, e, i) {\n      return function n(s) {\n        var o = t.querySelectorAll(e);\n\n        for (var _r = s.target; _r && _r !== this; _r = _r.parentNode) {\n          for (var _a = o.length; _a--;) {\n            if (o[_a] === _r) return s.delegateTarget = _r, n.oneOff && P.off(t, s.type, e, i), i.apply(_r, [s]);\n          }\n        }\n\n        return null;\n      };\n    }(t, i, n) : function (t, e) {\n      return function i(n) {\n        return n.delegateTarget = t, i.oneOff && P.off(t, n.type, e), e.apply(t, [n]);\n      };\n    }(t, i);\n    u.delegationSelector = o ? i : null, u.originalHandler = r, u.oneOff = s, u.uidEvent = d, c[d] = u, t.addEventListener(a, u, o);\n  }\n\n  function N(t, e, i, n, s) {\n    var o = x(e[i], n, s);\n    o && (t.removeEventListener(i, o, Boolean(s)), delete e[i][o.uidEvent]);\n  }\n\n  function I(t) {\n    return t = t.replace(y, ""), T[t] || t;\n  }\n\n  var P = {\n    on: function on(t, e, i, n) {\n      S(t, e, i, n, !1);\n    },\n    one: function one(t, e, i, n) {\n      S(t, e, i, n, !0);\n    },\n    off: function off(t, e, i, n) {\n      if ("string" != typeof e || !t) return;\n\n      var _D3 = D(e, i, n),\n          _D4 = _slicedToArray(_D3, 3),\n          s = _D4[0],\n          o = _D4[1],\n          r = _D4[2],\n          a = r !== e,\n          l = L(t),\n          c = e.startsWith(".");\n\n      if (void 0 !== o) {\n        if (!l || !l[r]) return;\n        return void N(t, l, r, o, s ? i : null);\n      }\n\n      c && Object.keys(l).forEach(function (i) {\n        !function (t, e, i, n) {\n          var s = e[i] || {};\n          Object.keys(s).forEach(function (o) {\n            if (o.includes(n)) {\n              var _n2 = s[o];\n              N(t, e, i, _n2.originalHandler, _n2.delegationSelector);\n            }\n          });\n        }(t, l, i, e.slice(1));\n      });\n      var h = l[r] || {};\n      Object.keys(h).forEach(function (i) {\n        var n = i.replace(w, "");\n\n        if (!a || e.includes(n)) {\n          var _e4 = h[i];\n          N(t, l, r, _e4.originalHandler, _e4.delegationSelector);\n        }\n      });\n    },\n    trigger: function trigger(t, e, i) {\n      if ("string" != typeof e || !t) return null;\n      var n = u(),\n          s = I(e),\n          o = e !== s,\n          r = C.has(s);\n      var a,\n          l = !0,\n          c = !0,\n          h = !1,\n          d = null;\n      return o && n && (a = n.Event(e, i), n(t).trigger(a), l = !a.isPropagationStopped(), c = !a.isImmediatePropagationStopped(), h = a.isDefaultPrevented()), r ? (d = document.createEvent("HTMLEvents"), d.initEvent(s, l, !0)) : d = new CustomEvent(e, {\n        bubbles: l,\n        cancelable: !0\n      }), void 0 !== i && Object.keys(i).forEach(function (t) {\n        Object.defineProperty(d, t, {\n          get: function get() {\n            return i[t];\n          }\n        });\n      }), h && d.preventDefault(), c && t.dispatchEvent(d), d.defaultPrevented && void 0 !== a && a.preventDefault(), d;\n    }\n  },\n      j = new Map();\n  var M = {\n    set: function set(t, e, i) {\n      j.has(t) || j.set(t, new Map());\n      var n = j.get(t);\n      n.has(e) || 0 === n.size ? n.set(e, i) : console.error("Bootstrap doesn\'t allow more than one instance per element. Bound instance: ".concat(Array.from(n.keys())[0], "."));\n    },\n    get: function get(t, e) {\n      return j.has(t) && j.get(t).get(e) || null;\n    },\n    remove: function remove(t, e) {\n      if (!j.has(t)) return;\n      var i = j.get(t);\n      i["delete"](e), 0 === i.size && j["delete"](t);\n    }\n  };\n\n  var H = /*#__PURE__*/function () {\n    function H(t) {\n      _classCallCheck(this, H);\n\n      (t = o(t)) && (this._element = t, M.set(this._element, this.constructor.DATA_KEY, this));\n    }\n\n    _createClass(H, [{\n      key: "dispose",\n      value: function dispose() {\n        var _this = this;\n\n        M.remove(this._element, this.constructor.DATA_KEY), P.off(this._element, this.constructor.EVENT_KEY), Object.getOwnPropertyNames(this).forEach(function (t) {\n          _this[t] = null;\n        });\n      }\n    }, {\n      key: "_queueCallback",\n      value: function _queueCallback(t, e) {\n        var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !0;\n\n        _(t, e, i);\n      }\n    }], [{\n      key: "getInstance",\n      value: function getInstance(t) {\n        return M.get(o(t), this.DATA_KEY);\n      }\n    }, {\n      key: "getOrCreateInstance",\n      value: function getOrCreateInstance(t) {\n        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        return this.getInstance(t) || new this(t, "object" == _typeof(e) ? e : null);\n      }\n    }, {\n      key: "VERSION",\n      get: function get() {\n        return "5.1.0";\n      }\n    }, {\n      key: "NAME",\n      get: function get() {\n        throw new Error(\'You have to implement the static method "NAME", for each component!\');\n      }\n    }, {\n      key: "DATA_KEY",\n      get: function get() {\n        return "bs." + this.NAME;\n      }\n    }, {\n      key: "EVENT_KEY",\n      get: function get() {\n        return "." + this.DATA_KEY;\n      }\n    }]);\n\n    return H;\n  }();\n\n  var B = function B(t) {\n    var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "hide";\n    var n = "click.dismiss" + t.EVENT_KEY,\n        s = t.NAME;\n    P.on(document, n, "[data-bs-dismiss=\\"".concat(s, "\\"]"), function (n) {\n      if (["A", "AREA"].includes(this.tagName) && n.preventDefault(), l(this)) return;\n      var o = i(this) || this.closest("." + s);\n      t.getOrCreateInstance(o)[e]();\n    });\n  };\n\n  var R = /*#__PURE__*/function (_H) {\n    _inherits(R, _H);\n\n    var _super = _createSuper(R);\n\n    function R() {\n      _classCallCheck(this, R);\n\n      return _super.apply(this, arguments);\n    }\n\n    _createClass(R, [{\n      key: "close",\n      value: function close() {\n        var _this2 = this;\n\n        if (P.trigger(this._element, "close.bs.alert").defaultPrevented) return;\n\n        this._element.classList.remove("show");\n\n        var t = this._element.classList.contains("fade");\n\n        this._queueCallback(function () {\n          return _this2._destroyElement();\n        }, this._element, t);\n      }\n    }, {\n      key: "_destroyElement",\n      value: function _destroyElement() {\n        this._element.remove(), P.trigger(this._element, "closed.bs.alert"), this.dispose();\n      }\n    }], [{\n      key: "NAME",\n      get: function get() {\n        return "alert";\n      }\n    }, {\n      key: "jQueryInterface",\n      value: function jQueryInterface(t) {\n        return this.each(function () {\n          var e = R.getOrCreateInstance(this);\n\n          if ("string" == typeof t) {\n            if (void 0 === e[t] || t.startsWith("_") || "constructor" === t) throw new TypeError("No method named \\"".concat(t, "\\""));\n            e[t](this);\n          }\n        });\n      }\n    }]);\n\n    return R;\n  }(H);\n\n  B(R, "close"), m(R);\n\n  var W = /*#__PURE__*/function (_H2) {\n    _inherits(W, _H2);\n\n    var _super2 = _createSuper(W);\n\n    function W() {\n      _classCallCheck(this, W);\n\n      return _super2.apply(this, arguments);\n    }\n\n    _createClass(W, [{\n      key: "toggle",\n      value: function toggle() {\n        this._element.setAttribute("aria-pressed", this._element.classList.toggle("active"));\n      }\n    }], [{\n      key: "NAME",\n      get: function get() {\n        return "button";\n      }\n    }, {\n      key: "jQueryInterface",\n      value: function jQueryInterface(t) {\n        return this.each(function () {\n          var e = W.getOrCreateInstance(this);\n          "toggle" === t && e[t]();\n        });\n      }\n    }]);\n\n    return W;\n  }(H);\n\n  function z(t) {\n    return "true" === t || "false" !== t && (t === Number(t).toString() ? Number(t) : "" === t || "null" === t ? null : t);\n  }\n\n  function q(t) {\n    return t.replace(/[A-Z]/g, function (t) {\n      return "-" + t.toLowerCase();\n    });\n  }\n\n  P.on(document, "click.bs.button.data-api", \'[data-bs-toggle="button"]\', function (t) {\n    t.preventDefault();\n    var e = t.target.closest(\'[data-bs-toggle="button"]\');\n    W.getOrCreateInstance(e).toggle();\n  }), m(W);\n  var F = {\n    setDataAttribute: function setDataAttribute(t, e, i) {\n      t.setAttribute("data-bs-" + q(e), i);\n    },\n    removeDataAttribute: function removeDataAttribute(t, e) {\n      t.removeAttribute("data-bs-" + q(e));\n    },\n    getDataAttributes: function getDataAttributes(t) {\n      if (!t) return {};\n      var e = {};\n      return Object.keys(t.dataset).filter(function (t) {\n        return t.startsWith("bs");\n      }).forEach(function (i) {\n        var n = i.replace(/^bs/, "");\n        n = n.charAt(0).toLowerCase() + n.slice(1, n.length), e[n] = z(t.dataset[i]);\n      }), e;\n    },\n    getDataAttribute: function getDataAttribute(t, e) {\n      return z(t.getAttribute("data-bs-" + q(e)));\n    },\n    offset: function offset(t) {\n      var e = t.getBoundingClientRect();\n      return {\n        top: e.top + window.pageYOffset,\n        left: e.left + window.pageXOffset\n      };\n    },\n    position: function position(t) {\n      return {\n        top: t.offsetTop,\n        left: t.offsetLeft\n      };\n    }\n  },\n      U = {\n    find: function find(t) {\n      var _ref2;\n\n      var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : document.documentElement;\n      return (_ref2 = []).concat.apply(_ref2, _toConsumableArray(Element.prototype.querySelectorAll.call(e, t)));\n    },\n    findOne: function findOne(t) {\n      var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : document.documentElement;\n      return Element.prototype.querySelector.call(e, t);\n    },\n    children: function children(t, e) {\n      var _ref3;\n\n      return (_ref3 = []).concat.apply(_ref3, _toConsumableArray(t.children)).filter(function (t) {\n        return t.matches(e);\n      });\n    },\n    parents: function parents(t, e) {\n      var i = [];\n      var n = t.parentNode;\n\n      for (; n && n.nodeType === Node.ELEMENT_NODE && 3 !== n.nodeType;) {\n        n.matches(e) && i.push(n), n = n.parentNode;\n      }\n\n      return i;\n    },\n    prev: function prev(t, e) {\n      var i = t.previousElementSibling;\n\n      for (; i;) {\n        if (i.matches(e)) return [i];\n        i = i.previousElementSibling;\n      }\n\n      return [];\n    },\n    next: function next(t, e) {\n      var i = t.nextElementSibling;\n\n      for (; i;) {\n        if (i.matches(e)) return [i];\n        i = i.nextElementSibling;\n      }\n\n      return [];\n    },\n    focusableChildren: function focusableChildren(t) {\n      var e = ["a", "button", "input", "textarea", "select", "details", "[tabindex]", \'[contenteditable="true"]\'].map(function (t) {\n        return t + \':not([tabindex^="-"])\';\n      }).join(", ");\n      return this.find(e, t).filter(function (t) {\n        return !l(t) && a(t);\n      });\n    }\n  },\n      $ = {\n    interval: 5e3,\n    keyboard: !0,\n    slide: !1,\n    pause: "hover",\n    wrap: !0,\n    touch: !0\n  },\n      V = {\n    interval: "(number|boolean)",\n    keyboard: "boolean",\n    slide: "(boolean|string)",\n    pause: "(string|boolean)",\n    wrap: "boolean",\n    touch: "boolean"\n  },\n      K = "next",\n      X = "prev",\n      Y = "left",\n      Q = "right",\n      G = {\n    ArrowLeft: Q,\n    ArrowRight: Y\n  };\n\n  var Z = /*#__PURE__*/function (_H3) {\n    _inherits(Z, _H3);\n\n    var _super3 = _createSuper(Z);\n\n    function Z(t, e) {\n      var _this3;\n\n      _classCallCheck(this, Z);\n\n      _this3 = _super3.call(this, t), _this3._items = null, _this3._interval = null, _this3._activeElement = null, _this3._isPaused = !1, _this3._isSliding = !1, _this3.touchTimeout = null, _this3.touchStartX = 0, _this3.touchDeltaX = 0, _this3._config = _this3._getConfig(e), _this3._indicatorsElement = U.findOne(".carousel-indicators", _this3._element), _this3._touchSupported = "ontouchstart" in document.documentElement || navigator.maxTouchPoints > 0, _this3._pointerEvent = Boolean(window.PointerEvent), _this3._addEventListeners();\n      return _this3;\n    }\n\n    _createClass(Z, [{\n      key: "next",\n      value: function next() {\n        this._slide(K);\n      }\n    }, {\n      key: "nextWhenVisible",\n      value: function nextWhenVisible() {\n        !document.hidden && a(this._element) && this.next();\n      }\n    }, {\n      key: "prev",\n      value: function prev() {\n        this._slide(X);\n      }\n    }, {\n      key: "pause",\n      value: function pause(t) {\n        t || (this._isPaused = !0), U.findOne(".carousel-item-next, .carousel-item-prev", this._element) && (n(this._element), this.cycle(!0)), clearInterval(this._interval), this._interval = null;\n      }\n    }, {\n      key: "cycle",\n      value: function cycle(t) {\n        t || (this._isPaused = !1), this._interval && (clearInterval(this._interval), this._interval = null), this._config && this._config.interval && !this._isPaused && (this._updateInterval(), this._interval = setInterval((document.visibilityState ? this.nextWhenVisible : this.next).bind(this), this._config.interval));\n      }\n    }, {\n      key: "to",\n      value: function to(t) {\n        var _this4 = this;\n\n        this._activeElement = U.findOne(".active.carousel-item", this._element);\n\n        var e = this._getItemIndex(this._activeElement);\n\n        if (t > this._items.length - 1 || t < 0) return;\n        if (this._isSliding) return void P.one(this._element, "slid.bs.carousel", function () {\n          return _this4.to(t);\n        });\n        if (e === t) return this.pause(), void this.cycle();\n        var i = t > e ? K : X;\n\n        this._slide(i, this._items[t]);\n      }\n    }, {\n      key: "_getConfig",\n      value: function _getConfig(t) {\n        return t = _objectSpread(_objectSpread(_objectSpread({}, $), F.getDataAttributes(this._element)), "object" == _typeof(t) ? t : {}), r("carousel", t, V), t;\n      }\n    }, {\n      key: "_handleSwipe",\n      value: function _handleSwipe() {\n        var t = Math.abs(this.touchDeltaX);\n        if (t <= 40) return;\n        var e = t / this.touchDeltaX;\n        this.touchDeltaX = 0, e && this._slide(e > 0 ? Q : Y);\n      }\n    }, {\n      key: "_addEventListeners",\n      value: function _addEventListeners() {\n        var _this5 = this;\n\n        this._config.keyboard && P.on(this._element, "keydown.bs.carousel", function (t) {\n          return _this5._keydown(t);\n        }), "hover" === this._config.pause && (P.on(this._element, "mouseenter.bs.carousel", function (t) {\n          return _this5.pause(t);\n        }), P.on(this._element, "mouseleave.bs.carousel", function (t) {\n          return _this5.cycle(t);\n        })), this._config.touch && this._touchSupported && this._addTouchEventListeners();\n      }\n    }, {\n      key: "_addTouchEventListeners",\n      value: function _addTouchEventListeners() {\n        var _this6 = this;\n\n        var t = function t(_t4) {\n          !_this6._pointerEvent || "pen" !== _t4.pointerType && "touch" !== _t4.pointerType ? _this6._pointerEvent || (_this6.touchStartX = _t4.touches[0].clientX) : _this6.touchStartX = _t4.clientX;\n        },\n            e = function e(t) {\n          _this6.touchDeltaX = t.touches && t.touches.length > 1 ? 0 : t.touches[0].clientX - _this6.touchStartX;\n        },\n            i = function i(t) {\n          !_this6._pointerEvent || "pen" !== t.pointerType && "touch" !== t.pointerType || (_this6.touchDeltaX = t.clientX - _this6.touchStartX), _this6._handleSwipe(), "hover" === _this6._config.pause && (_this6.pause(), _this6.touchTimeout && clearTimeout(_this6.touchTimeout), _this6.touchTimeout = setTimeout(function (t) {\n            return _this6.cycle(t);\n          }, 500 + _this6._config.interval));\n        };\n\n        U.find(".carousel-item img", this._element).forEach(function (t) {\n          P.on(t, "dragstart.bs.carousel", function (t) {\n            return t.preventDefault();\n          });\n        }), this._pointerEvent ? (P.on(this._element, "pointerdown.bs.carousel", function (e) {\n          return t(e);\n        }), P.on(this._element, "pointerup.bs.carousel", function (t) {\n          return i(t);\n        }), this._element.classList.add("pointer-event")) : (P.on(this._element, "touchstart.bs.carousel", function (e) {\n          return t(e);\n        }), P.on(this._element, "touchmove.bs.carousel", function (t) {\n          return e(t);\n        }), P.on(this._element, "touchend.bs.carousel", function (t) {\n          return i(t);\n        }));\n      }\n    }, {\n      key: "_keydown",\n      value: function _keydown(t) {\n        if (/input|textarea/i.test(t.target.tagName)) return;\n        var e = G[t.key];\n        e && (t.preventDefault(), this._slide(e));\n      }\n    }, {\n      key: "_getItemIndex",\n      value: function _getItemIndex(t) {\n        return this._items = t && t.parentNode ? U.find(".carousel-item", t.parentNode) : [], this._items.indexOf(t);\n      }\n    }, {\n      key: "_getItemByOrder",\n      value: function _getItemByOrder(t, e) {\n        var i = t === K;\n        return b(this._items, e, i, this._config.wrap);\n      }\n    }, {\n      key: "_triggerSlideEvent",\n      value: function _triggerSlideEvent(t, e) {\n        var i = this._getItemIndex(t),\n            n = this._getItemIndex(U.findOne(".active.carousel-item", this._element));\n\n        return P.trigger(this._element, "slide.bs.carousel", {\n          relatedTarget: t,\n          direction: e,\n          from: n,\n          to: i\n        });\n      }\n    }, {\n      key: "_setActiveIndicatorElement",\n      value: function _setActiveIndicatorElement(t) {\n        if (this._indicatorsElement) {\n          var _e5 = U.findOne(".active", this._indicatorsElement);\n\n          _e5.classList.remove("active"), _e5.removeAttribute("aria-current");\n\n          var _i3 = U.find("[data-bs-target]", this._indicatorsElement);\n\n          for (var _e6 = 0; _e6 < _i3.length; _e6++) {\n            if (Number.parseInt(_i3[_e6].getAttribute("data-bs-slide-to"), 10) === this._getItemIndex(t)) {\n              _i3[_e6].classList.add("active"), _i3[_e6].setAttribute("aria-current", "true");\n              break;\n            }\n          }\n        }\n      }\n    }, {\n      key: "_updateInterval",\n      value: function _updateInterval() {\n        var t = this._activeElement || U.findOne(".active.carousel-item", this._element);\n        if (!t) return;\n        var e = Number.parseInt(t.getAttribute("data-bs-interval"), 10);\n        e ? (this._config.defaultInterval = this._config.defaultInterval || this._config.interval, this._config.interval = e) : this._config.interval = this._config.defaultInterval || this._config.interval;\n      }\n    }, {\n      key: "_slide",\n      value: function _slide(t, e) {\n        var _this7 = this;\n\n        var i = this._directionToOrder(t),\n            n = U.findOne(".active.carousel-item", this._element),\n            s = this._getItemIndex(n),\n            o = e || this._getItemByOrder(i, n),\n            r = this._getItemIndex(o),\n            a = Boolean(this._interval),\n            l = i === K,\n            c = l ? "carousel-item-start" : "carousel-item-end",\n            h = l ? "carousel-item-next" : "carousel-item-prev",\n            u = this._orderToDirection(i);\n\n        if (o && o.classList.contains("active")) return void (this._isSliding = !1);\n        if (this._isSliding) return;\n        if (this._triggerSlideEvent(o, u).defaultPrevented) return;\n        if (!n || !o) return;\n        this._isSliding = !0, a && this.pause(), this._setActiveIndicatorElement(o), this._activeElement = o;\n\n        var f = function f() {\n          P.trigger(_this7._element, "slid.bs.carousel", {\n            relatedTarget: o,\n            direction: u,\n            from: s,\n            to: r\n          });\n        };\n\n        if (this._element.classList.contains("slide")) {\n          o.classList.add(h), d(o), n.classList.add(c), o.classList.add(c);\n\n          var _t5 = function _t5() {\n            o.classList.remove(c, h), o.classList.add("active"), n.classList.remove("active", h, c), _this7._isSliding = !1, setTimeout(f, 0);\n          };\n\n          this._queueCallback(_t5, n, !0);\n        } else n.classList.remove("active"), o.classList.add("active"), this._isSliding = !1, f();\n\n        a && this.cycle();\n      }\n    }, {\n      key: "_directionToOrder",\n      value: function _directionToOrder(t) {\n        return [Q, Y].includes(t) ? p() ? t === Y ? X : K : t === Y ? K : X : t;\n      }\n    }, {\n      key: "_orderToDirection",\n      value: function _orderToDirection(t) {\n        return [K, X].includes(t) ? p() ? t === X ? Y : Q : t === X ? Q : Y : t;\n      }\n    }], [{\n      key: "Default",\n      get: function get() {\n        return $;\n      }\n    }, {\n      key: "NAME",\n      get: function get() {\n        return "carousel";\n      }\n    }, {\n      key: "carouselInterface",\n      value: function carouselInterface(t, e) {\n        var i = Z.getOrCreateInstance(t, e);\n        var n = i._config;\n        "object" == _typeof(e) && (n = _objectSpread(_objectSpread({}, n), e));\n        var s = "string" == typeof e ? e : n.slide;\n        if ("number" == typeof e) i.to(e);else if ("string" == typeof s) {\n          if (void 0 === i[s]) throw new TypeError("No method named \\"".concat(s, "\\""));\n          i[s]();\n        } else n.interval && n.ride && (i.pause(), i.cycle());\n      }\n    }, {\n      key: "jQueryInterface",\n      value: function jQueryInterface(t) {\n        return this.each(function () {\n          Z.carouselInterface(this, t);\n        });\n      }\n    }, {\n      key: "dataApiClickHandler",\n      value: function dataApiClickHandler(t) {\n        var e = i(this);\n        if (!e || !e.classList.contains("carousel")) return;\n\n        var n = _objectSpread(_objectSpread({}, F.getDataAttributes(e)), F.getDataAttributes(this)),\n            s = this.getAttribute("data-bs-slide-to");\n\n        s && (n.interval = !1), Z.carouselInterface(e, n), s && Z.getInstance(e).to(s), t.preventDefault();\n      }\n    }]);\n\n    return Z;\n  }(H);\n\n  P.on(document, "click.bs.carousel.data-api", "[data-bs-slide], [data-bs-slide-to]", Z.dataApiClickHandler), P.on(window, "load.bs.carousel.data-api", function () {\n    var t = U.find(\'[data-bs-ride="carousel"]\');\n\n    for (var _e7 = 0, _i4 = t.length; _e7 < _i4; _e7++) {\n      Z.carouselInterface(t[_e7], Z.getInstance(t[_e7]));\n    }\n  }), m(Z);\n  var J = {\n    toggle: !0,\n    parent: null\n  },\n      tt = {\n    toggle: "boolean",\n    parent: "(null|element)"\n  };\n\n  var et = /*#__PURE__*/function (_H4) {\n    _inherits(et, _H4);\n\n    var _super4 = _createSuper(et);\n\n    function et(t, i) {\n      var _this8;\n\n      _classCallCheck(this, et);\n\n      _this8 = _super4.call(this, t), _this8._isTransitioning = !1, _this8._config = _this8._getConfig(i), _this8._triggerArray = [];\n      var n = U.find(\'[data-bs-toggle="collapse"]\');\n\n      for (var _t6 = 0, _i5 = n.length; _t6 < _i5; _t6++) {\n        var _i6 = n[_t6],\n            _s2 = e(_i6),\n            _o3 = U.find(_s2).filter(function (t) {\n          return t === _this8._element;\n        });\n\n        null !== _s2 && _o3.length && (_this8._selector = _s2, _this8._triggerArray.push(_i6));\n      }\n\n      _this8._initializeChildren(), _this8._config.parent || _this8._addAriaAndCollapsedClass(_this8._triggerArray, _this8._isShown()), _this8._config.toggle && _this8.toggle();\n      return _this8;\n    }\n\n    _createClass(et, [{\n      key: "toggle",\n      value: function toggle() {\n        this._isShown() ? this.hide() : this.show();\n      }\n    }, {\n      key: "show",\n      value: function show() {\n        var _this9 = this;\n\n        if (this._isTransitioning || this._isShown()) return;\n        var t,\n            e = [];\n\n        if (this._config.parent) {\n          var _t7 = U.find(".collapse .collapse", this._config.parent);\n\n          e = U.find(".show, .collapsing", this._config.parent).filter(function (e) {\n            return !_t7.includes(e);\n          });\n        }\n\n        var i = U.findOne(this._selector);\n\n        if (e.length) {\n          var _n3 = e.find(function (t) {\n            return i !== t;\n          });\n\n          if (t = _n3 ? et.getInstance(_n3) : null, t && t._isTransitioning) return;\n        }\n\n        if (P.trigger(this._element, "show.bs.collapse").defaultPrevented) return;\n        e.forEach(function (e) {\n          i !== e && et.getOrCreateInstance(e, {\n            toggle: !1\n          }).hide(), t || M.set(e, "bs.collapse", null);\n        });\n\n        var n = this._getDimension();\n\n        this._element.classList.remove("collapse"), this._element.classList.add("collapsing"), this._element.style[n] = 0, this._addAriaAndCollapsedClass(this._triggerArray, !0), this._isTransitioning = !0;\n        var s = "scroll" + (n[0].toUpperCase() + n.slice(1));\n        this._queueCallback(function () {\n          _this9._isTransitioning = !1, _this9._element.classList.remove("collapsing"), _this9._element.classList.add("collapse", "show"), _this9._element.style[n] = "", P.trigger(_this9._element, "shown.bs.collapse");\n        }, this._element, !0), this._element.style[n] = this._element[s] + "px";\n      }\n    }, {\n      key: "hide",\n      value: function hide() {\n        var _this10 = this;\n\n        if (this._isTransitioning || !this._isShown()) return;\n        if (P.trigger(this._element, "hide.bs.collapse").defaultPrevented) return;\n\n        var t = this._getDimension();\n\n        this._element.style[t] = this._element.getBoundingClientRect()[t] + "px", d(this._element), this._element.classList.add("collapsing"), this._element.classList.remove("collapse", "show");\n        var e = this._triggerArray.length;\n\n        for (var _t8 = 0; _t8 < e; _t8++) {\n          var _e8 = this._triggerArray[_t8],\n              _n4 = i(_e8);\n\n          _n4 && !this._isShown(_n4) && this._addAriaAndCollapsedClass([_e8], !1);\n        }\n\n        this._isTransitioning = !0, this._element.style[t] = "", this._queueCallback(function () {\n          _this10._isTransitioning = !1, _this10._element.classList.remove("collapsing"), _this10._element.classList.add("collapse"), P.trigger(_this10._element, "hidden.bs.collapse");\n        }, this._element, !0);\n      }\n    }, {\n      key: "_isShown",\n      value: function _isShown() {\n        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._element;\n        return t.classList.contains("show");\n      }\n    }, {\n      key: "_getConfig",\n      value: function _getConfig(t) {\n        return (t = _objectSpread(_objectSpread(_objectSpread({}, J), F.getDataAttributes(this._element)), t)).toggle = Boolean(t.toggle), t.parent = o(t.parent), r("collapse", t, tt), t;\n      }\n    }, {\n      key: "_getDimension",\n      value: function _getDimension() {\n        return this._element.classList.contains("collapse-horizontal") ? "width" : "height";\n      }\n    }, {\n      key: "_initializeChildren",\n      value: function _initializeChildren() {\n        var _this11 = this;\n\n        if (!this._config.parent) return;\n        var t = U.find(".collapse .collapse", this._config.parent);\n        U.find(\'[data-bs-toggle="collapse"]\', this._config.parent).filter(function (e) {\n          return !t.includes(e);\n        }).forEach(function (t) {\n          var e = i(t);\n          e && _this11._addAriaAndCollapsedClass([t], _this11._isShown(e));\n        });\n      }\n    }, {\n      key: "_addAriaAndCollapsedClass",\n      value: function _addAriaAndCollapsedClass(t, e) {\n        t.length && t.forEach(function (t) {\n          e ? t.classList.remove("collapsed") : t.classList.add("collapsed"), t.setAttribute("aria-expanded", e);\n        });\n      }\n    }], [{\n      key: "Default",\n      get: function get() {\n        return J;\n      }\n    }, {\n      key: "NAME",\n      get: function get() {\n        return "collapse";\n      }\n    }, {\n      key: "jQueryInterface",\n      value: function jQueryInterface(t) {\n        return this.each(function () {\n          var e = {};\n          "string" == typeof t && /show|hide/.test(t) && (e.toggle = !1);\n          var i = et.getOrCreateInstance(this, e);\n\n          if ("string" == typeof t) {\n            if (void 0 === i[t]) throw new TypeError("No method named \\"".concat(t, "\\""));\n            i[t]();\n          }\n        });\n      }\n    }]);\n\n    return et;\n  }(H);\n\n  P.on(document, "click.bs.collapse.data-api", \'[data-bs-toggle="collapse"]\', function (t) {\n    ("A" === t.target.tagName || t.delegateTarget && "A" === t.delegateTarget.tagName) && t.preventDefault();\n    var i = e(this);\n    U.find(i).forEach(function (t) {\n      et.getOrCreateInstance(t, {\n        toggle: !1\n      }).toggle();\n    });\n  }), m(et);\n  var it = "top",\n      nt = "bottom",\n      st = "right",\n      ot = "left",\n      rt = [it, nt, st, ot],\n      at = rt.reduce(function (t, e) {\n    return t.concat([e + "-start", e + "-end"]);\n  }, []),\n      lt = [].concat(rt, ["auto"]).reduce(function (t, e) {\n    return t.concat([e, e + "-start", e + "-end"]);\n  }, []),\n      ct = ["beforeRead", "read", "afterRead", "beforeMain", "main", "afterMain", "beforeWrite", "write", "afterWrite"];\n\n  function ht(t) {\n    return t ? (t.nodeName || "").toLowerCase() : null;\n  }\n\n  function dt(t) {\n    if (null == t) return window;\n\n    if ("[object Window]" !== t.toString()) {\n      var e = t.ownerDocument;\n      return e && e.defaultView || window;\n    }\n\n    return t;\n  }\n\n  function ut(t) {\n    return t instanceof dt(t).Element || t instanceof Element;\n  }\n\n  function ft(t) {\n    return t instanceof dt(t).HTMLElement || t instanceof HTMLElement;\n  }\n\n  function pt(t) {\n    return "undefined" != typeof ShadowRoot && (t instanceof dt(t).ShadowRoot || t instanceof ShadowRoot);\n  }\n\n  var mt = {\n    name: "applyStyles",\n    enabled: !0,\n    phase: "write",\n    fn: function fn(t) {\n      var e = t.state;\n      Object.keys(e.elements).forEach(function (t) {\n        var i = e.styles[t] || {},\n            n = e.attributes[t] || {},\n            s = e.elements[t];\n        ft(s) && ht(s) && (Object.assign(s.style, i), Object.keys(n).forEach(function (t) {\n          var e = n[t];\n          !1 === e ? s.removeAttribute(t) : s.setAttribute(t, !0 === e ? "" : e);\n        }));\n      });\n    },\n    effect: function effect(t) {\n      var e = t.state,\n          i = {\n        popper: {\n          position: e.options.strategy,\n          left: "0",\n          top: "0",\n          margin: "0"\n        },\n        arrow: {\n          position: "absolute"\n        },\n        reference: {}\n      };\n      return Object.assign(e.elements.popper.style, i.popper), e.styles = i, e.elements.arrow && Object.assign(e.elements.arrow.style, i.arrow), function () {\n        Object.keys(e.elements).forEach(function (t) {\n          var n = e.elements[t],\n              s = e.attributes[t] || {},\n              o = Object.keys(e.styles.hasOwnProperty(t) ? e.styles[t] : i[t]).reduce(function (t, e) {\n            return t[e] = "", t;\n          }, {});\n          ft(n) && ht(n) && (Object.assign(n.style, o), Object.keys(s).forEach(function (t) {\n            n.removeAttribute(t);\n          }));\n        });\n      };\n    },\n    requires: ["computeStyles"]\n  };\n\n  function gt(t) {\n    return t.split("-")[0];\n  }\n\n  var _t = Math.round;\n\n  function bt(t, e) {\n    void 0 === e && (e = !1);\n    var i = t.getBoundingClientRect(),\n        n = 1,\n        s = 1;\n    return ft(t) && e && (n = i.width / t.offsetWidth || 1, s = i.height / t.offsetHeight || 1), {\n      width: _t(i.width / n),\n      height: _t(i.height / s),\n      top: _t(i.top / s),\n      right: _t(i.right / n),\n      bottom: _t(i.bottom / s),\n      left: _t(i.left / n),\n      x: _t(i.left / n),\n      y: _t(i.top / s)\n    };\n  }\n\n  function vt(t) {\n    var e = bt(t),\n        i = t.offsetWidth,\n        n = t.offsetHeight;\n    return Math.abs(e.width - i) <= 1 && (i = e.width), Math.abs(e.height - n) <= 1 && (n = e.height), {\n      x: t.offsetLeft,\n      y: t.offsetTop,\n      width: i,\n      height: n\n    };\n  }\n\n  function yt(t, e) {\n    var i = e.getRootNode && e.getRootNode();\n    if (t.contains(e)) return !0;\n\n    if (i && pt(i)) {\n      var n = e;\n\n      do {\n        if (n && t.isSameNode(n)) return !0;\n        n = n.parentNode || n.host;\n      } while (n);\n    }\n\n    return !1;\n  }\n\n  function wt(t) {\n    return dt(t).getComputedStyle(t);\n  }\n\n  function Et(t) {\n    return ["table", "td", "th"].indexOf(ht(t)) >= 0;\n  }\n\n  function At(t) {\n    return ((ut(t) ? t.ownerDocument : t.document) || window.document).documentElement;\n  }\n\n  function Tt(t) {\n    return "html" === ht(t) ? t : t.assignedSlot || t.parentNode || (pt(t) ? t.host : null) || At(t);\n  }\n\n  function Ot(t) {\n    return ft(t) && "fixed" !== wt(t).position ? t.offsetParent : null;\n  }\n\n  function Ct(t) {\n    for (var e = dt(t), i = Ot(t); i && Et(i) && "static" === wt(i).position;) {\n      i = Ot(i);\n    }\n\n    return i && ("html" === ht(i) || "body" === ht(i) && "static" === wt(i).position) ? e : i || function (t) {\n      var e = -1 !== navigator.userAgent.toLowerCase().indexOf("firefox");\n      if (-1 !== navigator.userAgent.indexOf("Trident") && ft(t) && "fixed" === wt(t).position) return null;\n\n      for (var i = Tt(t); ft(i) && ["html", "body"].indexOf(ht(i)) < 0;) {\n        var n = wt(i);\n        if ("none" !== n.transform || "none" !== n.perspective || "paint" === n.contain || -1 !== ["transform", "perspective"].indexOf(n.willChange) || e && "filter" === n.willChange || e && n.filter && "none" !== n.filter) return i;\n        i = i.parentNode;\n      }\n\n      return null;\n    }(t) || e;\n  }\n\n  function kt(t) {\n    return ["top", "bottom"].indexOf(t) >= 0 ? "x" : "y";\n  }\n\n  var Lt = Math.max,\n      xt = Math.min,\n      Dt = Math.round;\n\n  function St(t, e, i) {\n    return Lt(t, xt(e, i));\n  }\n\n  function Nt(t) {\n    return Object.assign({}, {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }, t);\n  }\n\n  function It(t, e) {\n    return e.reduce(function (e, i) {\n      return e[i] = t, e;\n    }, {});\n  }\n\n  var Pt = {\n    name: "arrow",\n    enabled: !0,\n    phase: "main",\n    fn: function fn(t) {\n      var e,\n          i = t.state,\n          n = t.name,\n          s = t.options,\n          o = i.elements.arrow,\n          r = i.modifiersData.popperOffsets,\n          a = gt(i.placement),\n          l = kt(a),\n          c = [ot, st].indexOf(a) >= 0 ? "height" : "width";\n\n      if (o && r) {\n        var h = function (t, e) {\n          return Nt("number" != typeof (t = "function" == typeof t ? t(Object.assign({}, e.rects, {\n            placement: e.placement\n          })) : t) ? t : It(t, rt));\n        }(s.padding, i),\n            d = vt(o),\n            u = "y" === l ? it : ot,\n            f = "y" === l ? nt : st,\n            p = i.rects.reference[c] + i.rects.reference[l] - r[l] - i.rects.popper[c],\n            m = r[l] - i.rects.reference[l],\n            g = Ct(o),\n            _ = g ? "y" === l ? g.clientHeight || 0 : g.clientWidth || 0 : 0,\n            b = p / 2 - m / 2,\n            v = h[u],\n            y = _ - d[c] - h[f],\n            w = _ / 2 - d[c] / 2 + b,\n            E = St(v, w, y),\n            A = l;\n\n        i.modifiersData[n] = ((e = {})[A] = E, e.centerOffset = E - w, e);\n      }\n    },\n    effect: function effect(t) {\n      var e = t.state,\n          i = t.options.element,\n          n = void 0 === i ? "[data-popper-arrow]" : i;\n      null != n && ("string" != typeof n || (n = e.elements.popper.querySelector(n))) && yt(e.elements.popper, n) && (e.elements.arrow = n);\n    },\n    requires: ["popperOffsets"],\n    requiresIfExists: ["preventOverflow"]\n  },\n      jt = {\n    top: "auto",\n    right: "auto",\n    bottom: "auto",\n    left: "auto"\n  };\n\n  function Mt(t) {\n    var e,\n        i = t.popper,\n        n = t.popperRect,\n        s = t.placement,\n        o = t.offsets,\n        r = t.position,\n        a = t.gpuAcceleration,\n        l = t.adaptive,\n        c = t.roundOffsets,\n        h = !0 === c ? function (t) {\n      var e = t.x,\n          i = t.y,\n          n = window.devicePixelRatio || 1;\n      return {\n        x: Dt(Dt(e * n) / n) || 0,\n        y: Dt(Dt(i * n) / n) || 0\n      };\n    }(o) : "function" == typeof c ? c(o) : o,\n        d = h.x,\n        u = void 0 === d ? 0 : d,\n        f = h.y,\n        p = void 0 === f ? 0 : f,\n        m = o.hasOwnProperty("x"),\n        g = o.hasOwnProperty("y"),\n        _ = ot,\n        b = it,\n        v = window;\n\n    if (l) {\n      var y = Ct(i),\n          w = "clientHeight",\n          E = "clientWidth";\n      y === dt(i) && "static" !== wt(y = At(i)).position && (w = "scrollHeight", E = "scrollWidth"), y = y, s === it && (b = nt, p -= y[w] - n.height, p *= a ? 1 : -1), s === ot && (_ = st, u -= y[E] - n.width, u *= a ? 1 : -1);\n    }\n\n    var A,\n        T = Object.assign({\n      position: r\n    }, l && jt);\n    return a ? Object.assign({}, T, ((A = {})[b] = g ? "0" : "", A[_] = m ? "0" : "", A.transform = (v.devicePixelRatio || 1) < 2 ? "translate(" + u + "px, " + p + "px)" : "translate3d(" + u + "px, " + p + "px, 0)", A)) : Object.assign({}, T, ((e = {})[b] = g ? p + "px" : "", e[_] = m ? u + "px" : "", e.transform = "", e));\n  }\n\n  var Ht = {\n    name: "computeStyles",\n    enabled: !0,\n    phase: "beforeWrite",\n    fn: function fn(t) {\n      var e = t.state,\n          i = t.options,\n          n = i.gpuAcceleration,\n          s = void 0 === n || n,\n          o = i.adaptive,\n          r = void 0 === o || o,\n          a = i.roundOffsets,\n          l = void 0 === a || a,\n          c = {\n        placement: gt(e.placement),\n        popper: e.elements.popper,\n        popperRect: e.rects.popper,\n        gpuAcceleration: s\n      };\n      null != e.modifiersData.popperOffsets && (e.styles.popper = Object.assign({}, e.styles.popper, Mt(Object.assign({}, c, {\n        offsets: e.modifiersData.popperOffsets,\n        position: e.options.strategy,\n        adaptive: r,\n        roundOffsets: l\n      })))), null != e.modifiersData.arrow && (e.styles.arrow = Object.assign({}, e.styles.arrow, Mt(Object.assign({}, c, {\n        offsets: e.modifiersData.arrow,\n        position: "absolute",\n        adaptive: !1,\n        roundOffsets: l\n      })))), e.attributes.popper = Object.assign({}, e.attributes.popper, {\n        "data-popper-placement": e.placement\n      });\n    },\n    data: {}\n  },\n      Bt = {\n    passive: !0\n  },\n      Rt = {\n    name: "eventListeners",\n    enabled: !0,\n    phase: "write",\n    fn: function fn() {},\n    effect: function effect(t) {\n      var e = t.state,\n          i = t.instance,\n          n = t.options,\n          s = n.scroll,\n          o = void 0 === s || s,\n          r = n.resize,\n          a = void 0 === r || r,\n          l = dt(e.elements.popper),\n          c = [].concat(e.scrollParents.reference, e.scrollParents.popper);\n      return o && c.forEach(function (t) {\n        t.addEventListener("scroll", i.update, Bt);\n      }), a && l.addEventListener("resize", i.update, Bt), function () {\n        o && c.forEach(function (t) {\n          t.removeEventListener("scroll", i.update, Bt);\n        }), a && l.removeEventListener("resize", i.update, Bt);\n      };\n    },\n    data: {}\n  },\n      Wt = {\n    left: "right",\n    right: "left",\n    bottom: "top",\n    top: "bottom"\n  };\n\n  function zt(t) {\n    return t.replace(/left|right|bottom|top/g, function (t) {\n      return Wt[t];\n    });\n  }\n\n  var qt = {\n    start: "end",\n    end: "start"\n  };\n\n  function Ft(t) {\n    return t.replace(/start|end/g, function (t) {\n      return qt[t];\n    });\n  }\n\n  function Ut(t) {\n    var e = dt(t);\n    return {\n      scrollLeft: e.pageXOffset,\n      scrollTop: e.pageYOffset\n    };\n  }\n\n  function $t(t) {\n    return bt(At(t)).left + Ut(t).scrollLeft;\n  }\n\n  function Vt(t) {\n    var e = wt(t),\n        i = e.overflow,\n        n = e.overflowX,\n        s = e.overflowY;\n    return /auto|scroll|overlay|hidden/.test(i + s + n);\n  }\n\n  function Kt(t, e) {\n    var i;\n    void 0 === e && (e = []);\n\n    var n = function t(e) {\n      return ["html", "body", "#document"].indexOf(ht(e)) >= 0 ? e.ownerDocument.body : ft(e) && Vt(e) ? e : t(Tt(e));\n    }(t),\n        s = n === (null == (i = t.ownerDocument) ? void 0 : i.body),\n        o = dt(n),\n        r = s ? [o].concat(o.visualViewport || [], Vt(n) ? n : []) : n,\n        a = e.concat(r);\n\n    return s ? a : a.concat(Kt(Tt(r)));\n  }\n\n  function Xt(t) {\n    return Object.assign({}, t, {\n      left: t.x,\n      top: t.y,\n      right: t.x + t.width,\n      bottom: t.y + t.height\n    });\n  }\n\n  function Yt(t, e) {\n    return "viewport" === e ? Xt(function (t) {\n      var e = dt(t),\n          i = At(t),\n          n = e.visualViewport,\n          s = i.clientWidth,\n          o = i.clientHeight,\n          r = 0,\n          a = 0;\n      return n && (s = n.width, o = n.height, /^((?!chrome|android).)*safari/i.test(navigator.userAgent) || (r = n.offsetLeft, a = n.offsetTop)), {\n        width: s,\n        height: o,\n        x: r + $t(t),\n        y: a\n      };\n    }(t)) : ft(e) ? function (t) {\n      var e = bt(t);\n      return e.top = e.top + t.clientTop, e.left = e.left + t.clientLeft, e.bottom = e.top + t.clientHeight, e.right = e.left + t.clientWidth, e.width = t.clientWidth, e.height = t.clientHeight, e.x = e.left, e.y = e.top, e;\n    }(e) : Xt(function (t) {\n      var e,\n          i = At(t),\n          n = Ut(t),\n          s = null == (e = t.ownerDocument) ? void 0 : e.body,\n          o = Lt(i.scrollWidth, i.clientWidth, s ? s.scrollWidth : 0, s ? s.clientWidth : 0),\n          r = Lt(i.scrollHeight, i.clientHeight, s ? s.scrollHeight : 0, s ? s.clientHeight : 0),\n          a = -n.scrollLeft + $t(t),\n          l = -n.scrollTop;\n      return "rtl" === wt(s || i).direction && (a += Lt(i.clientWidth, s ? s.clientWidth : 0) - o), {\n        width: o,\n        height: r,\n        x: a,\n        y: l\n      };\n    }(At(t)));\n  }\n\n  function Qt(t) {\n    return t.split("-")[1];\n  }\n\n  function Gt(t) {\n    var e,\n        i = t.reference,\n        n = t.element,\n        s = t.placement,\n        o = s ? gt(s) : null,\n        r = s ? Qt(s) : null,\n        a = i.x + i.width / 2 - n.width / 2,\n        l = i.y + i.height / 2 - n.height / 2;\n\n    switch (o) {\n      case it:\n        e = {\n          x: a,\n          y: i.y - n.height\n        };\n        break;\n\n      case nt:\n        e = {\n          x: a,\n          y: i.y + i.height\n        };\n        break;\n\n      case st:\n        e = {\n          x: i.x + i.width,\n          y: l\n        };\n        break;\n\n      case ot:\n        e = {\n          x: i.x - n.width,\n          y: l\n        };\n        break;\n\n      default:\n        e = {\n          x: i.x,\n          y: i.y\n        };\n    }\n\n    var c = o ? kt(o) : null;\n\n    if (null != c) {\n      var h = "y" === c ? "height" : "width";\n\n      switch (r) {\n        case "start":\n          e[c] = e[c] - (i[h] / 2 - n[h] / 2);\n          break;\n\n        case "end":\n          e[c] = e[c] + (i[h] / 2 - n[h] / 2);\n      }\n    }\n\n    return e;\n  }\n\n  function Zt(t, e) {\n    void 0 === e && (e = {});\n\n    var i = e,\n        n = i.placement,\n        s = void 0 === n ? t.placement : n,\n        o = i.boundary,\n        r = void 0 === o ? "clippingParents" : o,\n        a = i.rootBoundary,\n        l = void 0 === a ? "viewport" : a,\n        c = i.elementContext,\n        h = void 0 === c ? "popper" : c,\n        d = i.altBoundary,\n        u = void 0 !== d && d,\n        f = i.padding,\n        p = void 0 === f ? 0 : f,\n        m = Nt("number" != typeof p ? p : It(p, rt)),\n        g = "popper" === h ? "reference" : "popper",\n        _ = t.elements.reference,\n        b = t.rects.popper,\n        v = t.elements[u ? g : h],\n        y = function (t, e, i) {\n      var n = "clippingParents" === e ? function (t) {\n        var e = Kt(Tt(t)),\n            i = ["absolute", "fixed"].indexOf(wt(t).position) >= 0 && ft(t) ? Ct(t) : t;\n        return ut(i) ? e.filter(function (t) {\n          return ut(t) && yt(t, i) && "body" !== ht(t);\n        }) : [];\n      }(t) : [].concat(e),\n          s = [].concat(n, [i]),\n          o = s[0],\n          r = s.reduce(function (e, i) {\n        var n = Yt(t, i);\n        return e.top = Lt(n.top, e.top), e.right = xt(n.right, e.right), e.bottom = xt(n.bottom, e.bottom), e.left = Lt(n.left, e.left), e;\n      }, Yt(t, o));\n      return r.width = r.right - r.left, r.height = r.bottom - r.top, r.x = r.left, r.y = r.top, r;\n    }(ut(v) ? v : v.contextElement || At(t.elements.popper), r, l),\n        w = bt(_),\n        E = Gt({\n      reference: w,\n      element: b,\n      strategy: "absolute",\n      placement: s\n    }),\n        A = Xt(Object.assign({}, b, E)),\n        T = "popper" === h ? A : w,\n        O = {\n      top: y.top - T.top + m.top,\n      bottom: T.bottom - y.bottom + m.bottom,\n      left: y.left - T.left + m.left,\n      right: T.right - y.right + m.right\n    },\n        C = t.modifiersData.offset;\n\n    if ("popper" === h && C) {\n      var k = C[s];\n      Object.keys(O).forEach(function (t) {\n        var e = [st, nt].indexOf(t) >= 0 ? 1 : -1,\n            i = [it, nt].indexOf(t) >= 0 ? "y" : "x";\n        O[t] += k[i] * e;\n      });\n    }\n\n    return O;\n  }\n\n  function Jt(t, e) {\n    void 0 === e && (e = {});\n    var i = e,\n        n = i.placement,\n        s = i.boundary,\n        o = i.rootBoundary,\n        r = i.padding,\n        a = i.flipVariations,\n        l = i.allowedAutoPlacements,\n        c = void 0 === l ? lt : l,\n        h = Qt(n),\n        d = h ? a ? at : at.filter(function (t) {\n      return Qt(t) === h;\n    }) : rt,\n        u = d.filter(function (t) {\n      return c.indexOf(t) >= 0;\n    });\n    0 === u.length && (u = d);\n    var f = u.reduce(function (e, i) {\n      return e[i] = Zt(t, {\n        placement: i,\n        boundary: s,\n        rootBoundary: o,\n        padding: r\n      })[gt(i)], e;\n    }, {});\n    return Object.keys(f).sort(function (t, e) {\n      return f[t] - f[e];\n    });\n  }\n\n  var te = {\n    name: "flip",\n    enabled: !0,\n    phase: "main",\n    fn: function fn(t) {\n      var e = t.state,\n          i = t.options,\n          n = t.name;\n\n      if (!e.modifiersData[n]._skip) {\n        for (var s = i.mainAxis, o = void 0 === s || s, r = i.altAxis, a = void 0 === r || r, l = i.fallbackPlacements, c = i.padding, h = i.boundary, d = i.rootBoundary, u = i.altBoundary, f = i.flipVariations, p = void 0 === f || f, m = i.allowedAutoPlacements, g = e.options.placement, _ = gt(g), b = l || (_ !== g && p ? function (t) {\n          if ("auto" === gt(t)) return [];\n          var e = zt(t);\n          return [Ft(t), e, Ft(e)];\n        }(g) : [zt(g)]), v = [g].concat(b).reduce(function (t, i) {\n          return t.concat("auto" === gt(i) ? Jt(e, {\n            placement: i,\n            boundary: h,\n            rootBoundary: d,\n            padding: c,\n            flipVariations: p,\n            allowedAutoPlacements: m\n          }) : i);\n        }, []), y = e.rects.reference, w = e.rects.popper, E = new Map(), A = !0, T = v[0], O = 0; O < v.length; O++) {\n          var C = v[O],\n              k = gt(C),\n              L = "start" === Qt(C),\n              x = [it, nt].indexOf(k) >= 0,\n              D = x ? "width" : "height",\n              S = Zt(e, {\n            placement: C,\n            boundary: h,\n            rootBoundary: d,\n            altBoundary: u,\n            padding: c\n          }),\n              N = x ? L ? st : ot : L ? nt : it;\n          y[D] > w[D] && (N = zt(N));\n          var I = zt(N),\n              P = [];\n\n          if (o && P.push(S[k] <= 0), a && P.push(S[N] <= 0, S[I] <= 0), P.every(function (t) {\n            return t;\n          })) {\n            T = C, A = !1;\n            break;\n          }\n\n          E.set(C, P);\n        }\n\n        if (A) for (var j = function j(t) {\n          var e = v.find(function (e) {\n            var i = E.get(e);\n            if (i) return i.slice(0, t).every(function (t) {\n              return t;\n            });\n          });\n          if (e) return T = e, "break";\n        }, M = p ? 3 : 1; M > 0 && "break" !== j(M); M--) {\n          ;\n        }\n        e.placement !== T && (e.modifiersData[n]._skip = !0, e.placement = T, e.reset = !0);\n      }\n    },\n    requiresIfExists: ["offset"],\n    data: {\n      _skip: !1\n    }\n  };\n\n  function ee(t, e, i) {\n    return void 0 === i && (i = {\n      x: 0,\n      y: 0\n    }), {\n      top: t.top - e.height - i.y,\n      right: t.right - e.width + i.x,\n      bottom: t.bottom - e.height + i.y,\n      left: t.left - e.width - i.x\n    };\n  }\n\n  function ie(t) {\n    return [it, st, nt, ot].some(function (e) {\n      return t[e] >= 0;\n    });\n  }\n\n  var ne = {\n    name: "hide",\n    enabled: !0,\n    phase: "main",\n    requiresIfExists: ["preventOverflow"],\n    fn: function fn(t) {\n      var e = t.state,\n          i = t.name,\n          n = e.rects.reference,\n          s = e.rects.popper,\n          o = e.modifiersData.preventOverflow,\n          r = Zt(e, {\n        elementContext: "reference"\n      }),\n          a = Zt(e, {\n        altBoundary: !0\n      }),\n          l = ee(r, n),\n          c = ee(a, s, o),\n          h = ie(l),\n          d = ie(c);\n      e.modifiersData[i] = {\n        referenceClippingOffsets: l,\n        popperEscapeOffsets: c,\n        isReferenceHidden: h,\n        hasPopperEscaped: d\n      }, e.attributes.popper = Object.assign({}, e.attributes.popper, {\n        "data-popper-reference-hidden": h,\n        "data-popper-escaped": d\n      });\n    }\n  },\n      se = {\n    name: "offset",\n    enabled: !0,\n    phase: "main",\n    requires: ["popperOffsets"],\n    fn: function fn(t) {\n      var e = t.state,\n          i = t.options,\n          n = t.name,\n          s = i.offset,\n          o = void 0 === s ? [0, 0] : s,\n          r = lt.reduce(function (t, i) {\n        return t[i] = function (t, e, i) {\n          var n = gt(t),\n              s = [ot, it].indexOf(n) >= 0 ? -1 : 1,\n              o = "function" == typeof i ? i(Object.assign({}, e, {\n            placement: t\n          })) : i,\n              r = o[0],\n              a = o[1];\n          return r = r || 0, a = (a || 0) * s, [ot, st].indexOf(n) >= 0 ? {\n            x: a,\n            y: r\n          } : {\n            x: r,\n            y: a\n          };\n        }(i, e.rects, o), t;\n      }, {}),\n          a = r[e.placement],\n          l = a.x,\n          c = a.y;\n      null != e.modifiersData.popperOffsets && (e.modifiersData.popperOffsets.x += l, e.modifiersData.popperOffsets.y += c), e.modifiersData[n] = r;\n    }\n  },\n      oe = {\n    name: "popperOffsets",\n    enabled: !0,\n    phase: "read",\n    fn: function fn(t) {\n      var e = t.state,\n          i = t.name;\n      e.modifiersData[i] = Gt({\n        reference: e.rects.reference,\n        element: e.rects.popper,\n        strategy: "absolute",\n        placement: e.placement\n      });\n    },\n    data: {}\n  },\n      re = {\n    name: "preventOverflow",\n    enabled: !0,\n    phase: "main",\n    fn: function fn(t) {\n      var e = t.state,\n          i = t.options,\n          n = t.name,\n          s = i.mainAxis,\n          o = void 0 === s || s,\n          r = i.altAxis,\n          a = void 0 !== r && r,\n          l = i.boundary,\n          c = i.rootBoundary,\n          h = i.altBoundary,\n          d = i.padding,\n          u = i.tether,\n          f = void 0 === u || u,\n          p = i.tetherOffset,\n          m = void 0 === p ? 0 : p,\n          g = Zt(e, {\n        boundary: l,\n        rootBoundary: c,\n        padding: d,\n        altBoundary: h\n      }),\n          _ = gt(e.placement),\n          b = Qt(e.placement),\n          v = !b,\n          y = kt(_),\n          w = "x" === y ? "y" : "x",\n          E = e.modifiersData.popperOffsets,\n          A = e.rects.reference,\n          T = e.rects.popper,\n          O = "function" == typeof m ? m(Object.assign({}, e.rects, {\n        placement: e.placement\n      })) : m,\n          C = {\n        x: 0,\n        y: 0\n      };\n\n      if (E) {\n        if (o || a) {\n          var k = "y" === y ? it : ot,\n              L = "y" === y ? nt : st,\n              x = "y" === y ? "height" : "width",\n              D = E[y],\n              S = E[y] + g[k],\n              N = E[y] - g[L],\n              I = f ? -T[x] / 2 : 0,\n              P = "start" === b ? A[x] : T[x],\n              j = "start" === b ? -T[x] : -A[x],\n              M = e.elements.arrow,\n              H = f && M ? vt(M) : {\n            width: 0,\n            height: 0\n          },\n              B = e.modifiersData["arrow#persistent"] ? e.modifiersData["arrow#persistent"].padding : {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n          },\n              R = B[k],\n              W = B[L],\n              z = St(0, A[x], H[x]),\n              q = v ? A[x] / 2 - I - z - R - O : P - z - R - O,\n              F = v ? -A[x] / 2 + I + z + W + O : j + z + W + O,\n              U = e.elements.arrow && Ct(e.elements.arrow),\n              $ = U ? "y" === y ? U.clientTop || 0 : U.clientLeft || 0 : 0,\n              V = e.modifiersData.offset ? e.modifiersData.offset[e.placement][y] : 0,\n              K = E[y] + q - V - $,\n              X = E[y] + F - V;\n\n          if (o) {\n            var Y = St(f ? xt(S, K) : S, D, f ? Lt(N, X) : N);\n            E[y] = Y, C[y] = Y - D;\n          }\n\n          if (a) {\n            var Q = "x" === y ? it : ot,\n                G = "x" === y ? nt : st,\n                Z = E[w],\n                J = Z + g[Q],\n                tt = Z - g[G],\n                et = St(f ? xt(J, K) : J, Z, f ? Lt(tt, X) : tt);\n            E[w] = et, C[w] = et - Z;\n          }\n        }\n\n        e.modifiersData[n] = C;\n      }\n    },\n    requiresIfExists: ["offset"]\n  };\n\n  function ae(t, e, i) {\n    void 0 === i && (i = !1);\n\n    var n,\n        s,\n        o = ft(e),\n        r = ft(e) && function (t) {\n      var e = t.getBoundingClientRect(),\n          i = e.width / t.offsetWidth || 1,\n          n = e.height / t.offsetHeight || 1;\n      return 1 !== i || 1 !== n;\n    }(e),\n        a = At(e),\n        l = bt(t, r),\n        c = {\n      scrollLeft: 0,\n      scrollTop: 0\n    },\n        h = {\n      x: 0,\n      y: 0\n    };\n\n    return (o || !o && !i) && (("body" !== ht(e) || Vt(a)) && (c = (n = e) !== dt(n) && ft(n) ? {\n      scrollLeft: (s = n).scrollLeft,\n      scrollTop: s.scrollTop\n    } : Ut(n)), ft(e) ? ((h = bt(e, !0)).x += e.clientLeft, h.y += e.clientTop) : a && (h.x = $t(a))), {\n      x: l.left + c.scrollLeft - h.x,\n      y: l.top + c.scrollTop - h.y,\n      width: l.width,\n      height: l.height\n    };\n  }\n\n  var le = {\n    placement: "bottom",\n    modifiers: [],\n    strategy: "absolute"\n  };\n\n  function ce() {\n    for (var t = arguments.length, e = new Array(t), i = 0; i < t; i++) {\n      e[i] = arguments[i];\n    }\n\n    return !e.some(function (t) {\n      return !(t && "function" == typeof t.getBoundingClientRect);\n    });\n  }\n\n  function he(t) {\n    void 0 === t && (t = {});\n    var e = t,\n        i = e.defaultModifiers,\n        n = void 0 === i ? [] : i,\n        s = e.defaultOptions,\n        o = void 0 === s ? le : s;\n    return function (t, e, i) {\n      void 0 === i && (i = o);\n      var s,\n          r,\n          a = {\n        placement: "bottom",\n        orderedModifiers: [],\n        options: Object.assign({}, le, o),\n        modifiersData: {},\n        elements: {\n          reference: t,\n          popper: e\n        },\n        attributes: {},\n        styles: {}\n      },\n          l = [],\n          c = !1,\n          h = {\n        state: a,\n        setOptions: function setOptions(i) {\n          d(), a.options = Object.assign({}, o, a.options, i), a.scrollParents = {\n            reference: ut(t) ? Kt(t) : t.contextElement ? Kt(t.contextElement) : [],\n            popper: Kt(e)\n          };\n\n          var s,\n              r,\n              c = function (t) {\n            var e = function (t) {\n              var e = new Map(),\n                  i = new Set(),\n                  n = [];\n              return t.forEach(function (t) {\n                e.set(t.name, t);\n              }), t.forEach(function (t) {\n                i.has(t.name) || function t(s) {\n                  i.add(s.name), [].concat(s.requires || [], s.requiresIfExists || []).forEach(function (n) {\n                    if (!i.has(n)) {\n                      var s = e.get(n);\n                      s && t(s);\n                    }\n                  }), n.push(s);\n                }(t);\n              }), n;\n            }(t);\n\n            return ct.reduce(function (t, i) {\n              return t.concat(e.filter(function (t) {\n                return t.phase === i;\n              }));\n            }, []);\n          }((s = [].concat(n, a.options.modifiers), r = s.reduce(function (t, e) {\n            var i = t[e.name];\n            return t[e.name] = i ? Object.assign({}, i, e, {\n              options: Object.assign({}, i.options, e.options),\n              data: Object.assign({}, i.data, e.data)\n            }) : e, t;\n          }, {}), Object.keys(r).map(function (t) {\n            return r[t];\n          })));\n\n          return a.orderedModifiers = c.filter(function (t) {\n            return t.enabled;\n          }), a.orderedModifiers.forEach(function (t) {\n            var e = t.name,\n                i = t.options,\n                n = void 0 === i ? {} : i,\n                s = t.effect;\n\n            if ("function" == typeof s) {\n              var o = s({\n                state: a,\n                name: e,\n                instance: h,\n                options: n\n              });\n              l.push(o || function () {});\n            }\n          }), h.update();\n        },\n        forceUpdate: function forceUpdate() {\n          if (!c) {\n            var t = a.elements,\n                e = t.reference,\n                i = t.popper;\n\n            if (ce(e, i)) {\n              a.rects = {\n                reference: ae(e, Ct(i), "fixed" === a.options.strategy),\n                popper: vt(i)\n              }, a.reset = !1, a.placement = a.options.placement, a.orderedModifiers.forEach(function (t) {\n                return a.modifiersData[t.name] = Object.assign({}, t.data);\n              });\n\n              for (var n = 0; n < a.orderedModifiers.length; n++) {\n                if (!0 !== a.reset) {\n                  var s = a.orderedModifiers[n],\n                      o = s.fn,\n                      r = s.options,\n                      l = void 0 === r ? {} : r,\n                      d = s.name;\n                  "function" == typeof o && (a = o({\n                    state: a,\n                    options: l,\n                    name: d,\n                    instance: h\n                  }) || a);\n                } else a.reset = !1, n = -1;\n              }\n            }\n          }\n        },\n        update: (s = function s() {\n          return new Promise(function (t) {\n            h.forceUpdate(), t(a);\n          });\n        }, function () {\n          return r || (r = new Promise(function (t) {\n            Promise.resolve().then(function () {\n              r = void 0, t(s());\n            });\n          })), r;\n        }),\n        destroy: function destroy() {\n          d(), c = !0;\n        }\n      };\n      if (!ce(t, e)) return h;\n\n      function d() {\n        l.forEach(function (t) {\n          return t();\n        }), l = [];\n      }\n\n      return h.setOptions(i).then(function (t) {\n        !c && i.onFirstUpdate && i.onFirstUpdate(t);\n      }), h;\n    };\n  }\n\n  var de = he(),\n      ue = he({\n    defaultModifiers: [Rt, oe, Ht, mt]\n  }),\n      fe = he({\n    defaultModifiers: [Rt, oe, Ht, mt, se, te, re, Pt, ne]\n  }),\n      pe = Object.freeze({\n    __proto__: null,\n    popperGenerator: he,\n    detectOverflow: Zt,\n    createPopperBase: de,\n    createPopper: fe,\n    createPopperLite: ue,\n    top: it,\n    bottom: nt,\n    right: st,\n    left: ot,\n    auto: "auto",\n    basePlacements: rt,\n    start: "start",\n    end: "end",\n    clippingParents: "clippingParents",\n    viewport: "viewport",\n    popper: "popper",\n    reference: "reference",\n    variationPlacements: at,\n    placements: lt,\n    beforeRead: "beforeRead",\n    read: "read",\n    afterRead: "afterRead",\n    beforeMain: "beforeMain",\n    main: "main",\n    afterMain: "afterMain",\n    beforeWrite: "beforeWrite",\n    write: "write",\n    afterWrite: "afterWrite",\n    modifierPhases: ct,\n    applyStyles: mt,\n    arrow: Pt,\n    computeStyles: Ht,\n    eventListeners: Rt,\n    flip: te,\n    hide: ne,\n    offset: se,\n    popperOffsets: oe,\n    preventOverflow: re\n  });\n\n  var me = new RegExp("ArrowUp|ArrowDown|Escape"),\n      ge = p() ? "top-end" : "top-start",\n      _e = p() ? "top-start" : "top-end",\n      be = p() ? "bottom-end" : "bottom-start",\n      ve = p() ? "bottom-start" : "bottom-end",\n      ye = p() ? "left-start" : "right-start",\n      we = p() ? "right-start" : "left-start",\n      Ee = {\n    offset: [0, 2],\n    boundary: "clippingParents",\n    reference: "toggle",\n    display: "dynamic",\n    popperConfig: null,\n    autoClose: !0\n  },\n      Ae = {\n    offset: "(array|string|function)",\n    boundary: "(string|element)",\n    reference: "(string|element|object)",\n    display: "string",\n    popperConfig: "(null|object|function)",\n    autoClose: "(boolean|string)"\n  };\n\n  var Te = /*#__PURE__*/function (_H5) {\n    _inherits(Te, _H5);\n\n    var _super5 = _createSuper(Te);\n\n    function Te(t, e) {\n      var _this12;\n\n      _classCallCheck(this, Te);\n\n      _this12 = _super5.call(this, t), _this12._popper = null, _this12._config = _this12._getConfig(e), _this12._menu = _this12._getMenuElement(), _this12._inNavbar = _this12._detectNavbar();\n      return _this12;\n    }\n\n    _createClass(Te, [{\n      key: "toggle",\n      value: function toggle() {\n        return this._isShown() ? this.hide() : this.show();\n      }\n    }, {\n      key: "show",\n      value: function show() {\n        var _ref4;\n\n        if (l(this._element) || this._isShown(this._menu)) return;\n        var t = {\n          relatedTarget: this._element\n        };\n        if (P.trigger(this._element, "show.bs.dropdown", t).defaultPrevented) return;\n        var e = Te.getParentFromElement(this._element);\n        this._inNavbar ? F.setDataAttribute(this._menu, "popper", "none") : this._createPopper(e), "ontouchstart" in document.documentElement && !e.closest(".navbar-nav") && (_ref4 = []).concat.apply(_ref4, _toConsumableArray(document.body.children)).forEach(function (t) {\n          return P.on(t, "mouseover", h);\n        }), this._element.focus(), this._element.setAttribute("aria-expanded", !0), this._menu.classList.add("show"), this._element.classList.add("show"), P.trigger(this._element, "shown.bs.dropdown", t);\n      }\n    }, {\n      key: "hide",\n      value: function hide() {\n        if (l(this._element) || !this._isShown(this._menu)) return;\n        var t = {\n          relatedTarget: this._element\n        };\n\n        this._completeHide(t);\n      }\n    }, {\n      key: "dispose",\n      value: function dispose() {\n        this._popper && this._popper.destroy(), _get(_getPrototypeOf(Te.prototype), "dispose", this).call(this);\n      }\n    }, {\n      key: "update",\n      value: function update() {\n        this._inNavbar = this._detectNavbar(), this._popper && this._popper.update();\n      }\n    }, {\n      key: "_completeHide",\n      value: function _completeHide(t) {\n        var _ref5;\n\n        P.trigger(this._element, "hide.bs.dropdown", t).defaultPrevented || ("ontouchstart" in document.documentElement && (_ref5 = []).concat.apply(_ref5, _toConsumableArray(document.body.children)).forEach(function (t) {\n          return P.off(t, "mouseover", h);\n        }), this._popper && this._popper.destroy(), this._menu.classList.remove("show"), this._element.classList.remove("show"), this._element.setAttribute("aria-expanded", "false"), F.removeDataAttribute(this._menu, "popper"), P.trigger(this._element, "hidden.bs.dropdown", t));\n      }\n    }, {\n      key: "_getConfig",\n      value: function _getConfig(t) {\n        if (t = _objectSpread(_objectSpread(_objectSpread({}, this.constructor.Default), F.getDataAttributes(this._element)), t), r("dropdown", t, this.constructor.DefaultType), "object" == _typeof(t.reference) && !s(t.reference) && "function" != typeof t.reference.getBoundingClientRect) throw new TypeError("dropdown".toUpperCase() + \': Option "reference" provided type "object" without a required "getBoundingClientRect" method.\');\n        return t;\n      }\n    }, {\n      key: "_createPopper",\n      value: function _createPopper(t) {\n        if (void 0 === pe) throw new TypeError("Bootstrap\'s dropdowns require Popper (https://popper.js.org)");\n        var e = this._element;\n        "parent" === this._config.reference ? e = t : s(this._config.reference) ? e = o(this._config.reference) : "object" == _typeof(this._config.reference) && (e = this._config.reference);\n\n        var i = this._getPopperConfig(),\n            n = i.modifiers.find(function (t) {\n          return "applyStyles" === t.name && !1 === t.enabled;\n        });\n\n        this._popper = fe(e, this._menu, i), n && F.setDataAttribute(this._menu, "popper", "static");\n      }\n    }, {\n      key: "_isShown",\n      value: function _isShown() {\n        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._element;\n        return t.classList.contains("show");\n      }\n    }, {\n      key: "_getMenuElement",\n      value: function _getMenuElement() {\n        return U.next(this._element, ".dropdown-menu")[0];\n      }\n    }, {\n      key: "_getPlacement",\n      value: function _getPlacement() {\n        var t = this._element.parentNode;\n        if (t.classList.contains("dropend")) return ye;\n        if (t.classList.contains("dropstart")) return we;\n        var e = "end" === getComputedStyle(this._menu).getPropertyValue("--bs-position").trim();\n        return t.classList.contains("dropup") ? e ? _e : ge : e ? ve : be;\n      }\n    }, {\n      key: "_detectNavbar",\n      value: function _detectNavbar() {\n        return null !== this._element.closest(".navbar");\n      }\n    }, {\n      key: "_getOffset",\n      value: function _getOffset() {\n        var _this13 = this;\n\n        var t = this._config.offset;\n        return "string" == typeof t ? t.split(",").map(function (t) {\n          return Number.parseInt(t, 10);\n        }) : "function" == typeof t ? function (e) {\n          return t(e, _this13._element);\n        } : t;\n      }\n    }, {\n      key: "_getPopperConfig",\n      value: function _getPopperConfig() {\n        var t = {\n          placement: this._getPlacement(),\n          modifiers: [{\n            name: "preventOverflow",\n            options: {\n              boundary: this._config.boundary\n            }\n          }, {\n            name: "offset",\n            options: {\n              offset: this._getOffset()\n            }\n          }]\n        };\n        return "static" === this._config.display && (t.modifiers = [{\n          name: "applyStyles",\n          enabled: !1\n        }]), _objectSpread(_objectSpread({}, t), "function" == typeof this._config.popperConfig ? this._config.popperConfig(t) : this._config.popperConfig);\n      }\n    }, {\n      key: "_selectMenuItem",\n      value: function _selectMenuItem(_ref6) {\n        var t = _ref6.key,\n            e = _ref6.target;\n        var i = U.find(".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)", this._menu).filter(a);\n        i.length && b(i, e, "ArrowDown" === t, !i.includes(e)).focus();\n      }\n    }], [{\n      key: "Default",\n      get: function get() {\n        return Ee;\n      }\n    }, {\n      key: "DefaultType",\n      get: function get() {\n        return Ae;\n      }\n    }, {\n      key: "NAME",\n      get: function get() {\n        return "dropdown";\n      }\n    }, {\n      key: "jQueryInterface",\n      value: function jQueryInterface(t) {\n        return this.each(function () {\n          var e = Te.getOrCreateInstance(this, t);\n\n          if ("string" == typeof t) {\n            if (void 0 === e[t]) throw new TypeError("No method named \\"".concat(t, "\\""));\n            e[t]();\n          }\n        });\n      }\n    }, {\n      key: "clearMenus",\n      value: function clearMenus(t) {\n        if (t && (2 === t.button || "keyup" === t.type && "Tab" !== t.key)) return;\n        var e = U.find(\'[data-bs-toggle="dropdown"]\');\n\n        for (var _i7 = 0, _n5 = e.length; _i7 < _n5; _i7++) {\n          var _n6 = Te.getInstance(e[_i7]);\n\n          if (!_n6 || !1 === _n6._config.autoClose) continue;\n          if (!_n6._isShown()) continue;\n          var _s3 = {\n            relatedTarget: _n6._element\n          };\n\n          if (t) {\n            var _e9 = t.composedPath(),\n                _i8 = _e9.includes(_n6._menu);\n\n            if (_e9.includes(_n6._element) || "inside" === _n6._config.autoClose && !_i8 || "outside" === _n6._config.autoClose && _i8) continue;\n            if (_n6._menu.contains(t.target) && ("keyup" === t.type && "Tab" === t.key || /input|select|option|textarea|form/i.test(t.target.tagName))) continue;\n            "click" === t.type && (_s3.clickEvent = t);\n          }\n\n          _n6._completeHide(_s3);\n        }\n      }\n    }, {\n      key: "getParentFromElement",\n      value: function getParentFromElement(t) {\n        return i(t) || t.parentNode;\n      }\n    }, {\n      key: "dataApiKeydownHandler",\n      value: function dataApiKeydownHandler(t) {\n        if (/input|textarea/i.test(t.target.tagName) ? "Space" === t.key || "Escape" !== t.key && ("ArrowDown" !== t.key && "ArrowUp" !== t.key || t.target.closest(".dropdown-menu")) : !me.test(t.key)) return;\n        var e = this.classList.contains("show");\n        if (!e && "Escape" === t.key) return;\n        if (t.preventDefault(), t.stopPropagation(), l(this)) return;\n        var i = this.matches(\'[data-bs-toggle="dropdown"]\') ? this : U.prev(this, \'[data-bs-toggle="dropdown"]\')[0],\n            n = Te.getOrCreateInstance(i);\n        if ("Escape" !== t.key) return "ArrowUp" === t.key || "ArrowDown" === t.key ? (e || n.show(), void n._selectMenuItem(t)) : void (e && "Space" !== t.key || Te.clearMenus());\n        n.hide();\n      }\n    }]);\n\n    return Te;\n  }(H);\n\n  P.on(document, "keydown.bs.dropdown.data-api", \'[data-bs-toggle="dropdown"]\', Te.dataApiKeydownHandler), P.on(document, "keydown.bs.dropdown.data-api", ".dropdown-menu", Te.dataApiKeydownHandler), P.on(document, "click.bs.dropdown.data-api", Te.clearMenus), P.on(document, "keyup.bs.dropdown.data-api", Te.clearMenus), P.on(document, "click.bs.dropdown.data-api", \'[data-bs-toggle="dropdown"]\', function (t) {\n    t.preventDefault(), Te.getOrCreateInstance(this).toggle();\n  }), m(Te);\n\n  var Oe = /*#__PURE__*/function () {\n    function Oe() {\n      _classCallCheck(this, Oe);\n\n      this._element = document.body;\n    }\n\n    _createClass(Oe, [{\n      key: "getWidth",\n      value: function getWidth() {\n        var t = document.documentElement.clientWidth;\n        return Math.abs(window.innerWidth - t);\n      }\n    }, {\n      key: "hide",\n      value: function hide() {\n        var t = this.getWidth();\n        this._disableOverFlow(), this._setElementAttributes(this._element, "paddingRight", function (e) {\n          return e + t;\n        }), this._setElementAttributes(".fixed-top, .fixed-bottom, .is-fixed, .sticky-top", "paddingRight", function (e) {\n          return e + t;\n        }), this._setElementAttributes(".sticky-top", "marginRight", function (e) {\n          return e - t;\n        });\n      }\n    }, {\n      key: "_disableOverFlow",\n      value: function _disableOverFlow() {\n        this._saveInitialAttribute(this._element, "overflow"), this._element.style.overflow = "hidden";\n      }\n    }, {\n      key: "_setElementAttributes",\n      value: function _setElementAttributes(t, e, i) {\n        var _this14 = this;\n\n        var n = this.getWidth();\n\n        this._applyManipulationCallback(t, function (t) {\n          if (t !== _this14._element && window.innerWidth > t.clientWidth + n) return;\n\n          _this14._saveInitialAttribute(t, e);\n\n          var s = window.getComputedStyle(t)[e];\n          t.style[e] = i(Number.parseFloat(s)) + "px";\n        });\n      }\n    }, {\n      key: "reset",\n      value: function reset() {\n        this._resetElementAttributes(this._element, "overflow"), this._resetElementAttributes(this._element, "paddingRight"), this._resetElementAttributes(".fixed-top, .fixed-bottom, .is-fixed, .sticky-top", "paddingRight"), this._resetElementAttributes(".sticky-top", "marginRight");\n      }\n    }, {\n      key: "_saveInitialAttribute",\n      value: function _saveInitialAttribute(t, e) {\n        var i = t.style[e];\n        i && F.setDataAttribute(t, e, i);\n      }\n    }, {\n      key: "_resetElementAttributes",\n      value: function _resetElementAttributes(t, e) {\n        this._applyManipulationCallback(t, function (t) {\n          var i = F.getDataAttribute(t, e);\n          void 0 === i ? t.style.removeProperty(e) : (F.removeDataAttribute(t, e), t.style[e] = i);\n        });\n      }\n    }, {\n      key: "_applyManipulationCallback",\n      value: function _applyManipulationCallback(t, e) {\n        s(t) ? e(t) : U.find(t, this._element).forEach(e);\n      }\n    }, {\n      key: "isOverflowing",\n      value: function isOverflowing() {\n        return this.getWidth() > 0;\n      }\n    }]);\n\n    return Oe;\n  }();\n\n  var Ce = {\n    className: "modal-backdrop",\n    isVisible: !0,\n    isAnimated: !1,\n    rootElement: "body",\n    clickCallback: null\n  },\n      ke = {\n    className: "string",\n    isVisible: "boolean",\n    isAnimated: "boolean",\n    rootElement: "(element|string)",\n    clickCallback: "(function|null)"\n  };\n\n  var Le = /*#__PURE__*/function () {\n    function Le(t) {\n      _classCallCheck(this, Le);\n\n      this._config = this._getConfig(t), this._isAppended = !1, this._element = null;\n    }\n\n    _createClass(Le, [{\n      key: "show",\n      value: function show(t) {\n        this._config.isVisible ? (this._append(), this._config.isAnimated && d(this._getElement()), this._getElement().classList.add("show"), this._emulateAnimation(function () {\n          g(t);\n        })) : g(t);\n      }\n    }, {\n      key: "hide",\n      value: function hide(t) {\n        var _this15 = this;\n\n        this._config.isVisible ? (this._getElement().classList.remove("show"), this._emulateAnimation(function () {\n          _this15.dispose(), g(t);\n        })) : g(t);\n      }\n    }, {\n      key: "_getElement",\n      value: function _getElement() {\n        if (!this._element) {\n          var _t9 = document.createElement("div");\n\n          _t9.className = this._config.className, this._config.isAnimated && _t9.classList.add("fade"), this._element = _t9;\n        }\n\n        return this._element;\n      }\n    }, {\n      key: "_getConfig",\n      value: function _getConfig(t) {\n        return (t = _objectSpread(_objectSpread({}, Ce), "object" == _typeof(t) ? t : {})).rootElement = o(t.rootElement), r("backdrop", t, ke), t;\n      }\n    }, {\n      key: "_append",\n      value: function _append() {\n        var _this16 = this;\n\n        this._isAppended || (this._config.rootElement.append(this._getElement()), P.on(this._getElement(), "mousedown.bs.backdrop", function () {\n          g(_this16._config.clickCallback);\n        }), this._isAppended = !0);\n      }\n    }, {\n      key: "dispose",\n      value: function dispose() {\n        this._isAppended && (P.off(this._element, "mousedown.bs.backdrop"), this._element.remove(), this._isAppended = !1);\n      }\n    }, {\n      key: "_emulateAnimation",\n      value: function _emulateAnimation(t) {\n        _(t, this._getElement(), this._config.isAnimated);\n      }\n    }]);\n\n    return Le;\n  }();\n\n  var xe = {\n    trapElement: null,\n    autofocus: !0\n  },\n      De = {\n    trapElement: "element",\n    autofocus: "boolean"\n  };\n\n  var Se = /*#__PURE__*/function () {\n    function Se(t) {\n      _classCallCheck(this, Se);\n\n      this._config = this._getConfig(t), this._isActive = !1, this._lastTabNavDirection = null;\n    }\n\n    _createClass(Se, [{\n      key: "activate",\n      value: function activate() {\n        var _this17 = this;\n\n        var _this$_config = this._config,\n            t = _this$_config.trapElement,\n            e = _this$_config.autofocus;\n        this._isActive || (e && t.focus(), P.off(document, ".bs.focustrap"), P.on(document, "focusin.bs.focustrap", function (t) {\n          return _this17._handleFocusin(t);\n        }), P.on(document, "keydown.tab.bs.focustrap", function (t) {\n          return _this17._handleKeydown(t);\n        }), this._isActive = !0);\n      }\n    }, {\n      key: "deactivate",\n      value: function deactivate() {\n        this._isActive && (this._isActive = !1, P.off(document, ".bs.focustrap"));\n      }\n    }, {\n      key: "_handleFocusin",\n      value: function _handleFocusin(t) {\n        var e = t.target,\n            i = this._config.trapElement;\n        if (e === document || e === i || i.contains(e)) return;\n        var n = U.focusableChildren(i);\n        0 === n.length ? i.focus() : "backward" === this._lastTabNavDirection ? n[n.length - 1].focus() : n[0].focus();\n      }\n    }, {\n      key: "_handleKeydown",\n      value: function _handleKeydown(t) {\n        "Tab" === t.key && (this._lastTabNavDirection = t.shiftKey ? "backward" : "forward");\n      }\n    }, {\n      key: "_getConfig",\n      value: function _getConfig(t) {\n        return t = _objectSpread(_objectSpread({}, xe), "object" == _typeof(t) ? t : {}), r("focustrap", t, De), t;\n      }\n    }]);\n\n    return Se;\n  }();\n\n  var Ne = {\n    backdrop: !0,\n    keyboard: !0,\n    focus: !0\n  },\n      Ie = {\n    backdrop: "(boolean|string)",\n    keyboard: "boolean",\n    focus: "boolean"\n  };\n\n  var Pe = /*#__PURE__*/function (_H6) {\n    _inherits(Pe, _H6);\n\n    var _super6 = _createSuper(Pe);\n\n    function Pe(t, e) {\n      var _this18;\n\n      _classCallCheck(this, Pe);\n\n      _this18 = _super6.call(this, t), _this18._config = _this18._getConfig(e), _this18._dialog = U.findOne(".modal-dialog", _this18._element), _this18._backdrop = _this18._initializeBackDrop(), _this18._focustrap = _this18._initializeFocusTrap(), _this18._isShown = !1, _this18._ignoreBackdropClick = !1, _this18._isTransitioning = !1, _this18._scrollBar = new Oe();\n      return _this18;\n    }\n\n    _createClass(Pe, [{\n      key: "toggle",\n      value: function toggle(t) {\n        return this._isShown ? this.hide() : this.show(t);\n      }\n    }, {\n      key: "show",\n      value: function show(t) {\n        var _this19 = this;\n\n        this._isShown || this._isTransitioning || P.trigger(this._element, "show.bs.modal", {\n          relatedTarget: t\n        }).defaultPrevented || (this._isShown = !0, this._isAnimated() && (this._isTransitioning = !0), this._scrollBar.hide(), document.body.classList.add("modal-open"), this._adjustDialog(), this._setEscapeEvent(), this._setResizeEvent(), P.on(this._dialog, "mousedown.dismiss.bs.modal", function () {\n          P.one(_this19._element, "mouseup.dismiss.bs.modal", function (t) {\n            t.target === _this19._element && (_this19._ignoreBackdropClick = !0);\n          });\n        }), this._showBackdrop(function () {\n          return _this19._showElement(t);\n        }));\n      }\n    }, {\n      key: "hide",\n      value: function hide() {\n        var _this20 = this;\n\n        if (!this._isShown || this._isTransitioning) return;\n        if (P.trigger(this._element, "hide.bs.modal").defaultPrevented) return;\n        this._isShown = !1;\n\n        var t = this._isAnimated();\n\n        t && (this._isTransitioning = !0), this._setEscapeEvent(), this._setResizeEvent(), this._focustrap.deactivate(), this._element.classList.remove("show"), P.off(this._element, "click.dismiss.bs.modal"), P.off(this._dialog, "mousedown.dismiss.bs.modal"), this._queueCallback(function () {\n          return _this20._hideModal();\n        }, this._element, t);\n      }\n    }, {\n      key: "dispose",\n      value: function dispose() {\n        [window, this._dialog].forEach(function (t) {\n          return P.off(t, ".bs.modal");\n        }), this._backdrop.dispose(), this._focustrap.deactivate(), _get(_getPrototypeOf(Pe.prototype), "dispose", this).call(this);\n      }\n    }, {\n      key: "handleUpdate",\n      value: function handleUpdate() {\n        this._adjustDialog();\n      }\n    }, {\n      key: "_initializeBackDrop",\n      value: function _initializeBackDrop() {\n        return new Le({\n          isVisible: Boolean(this._config.backdrop),\n          isAnimated: this._isAnimated()\n        });\n      }\n    }, {\n      key: "_initializeFocusTrap",\n      value: function _initializeFocusTrap() {\n        return new Se({\n          trapElement: this._element\n        });\n      }\n    }, {\n      key: "_getConfig",\n      value: function _getConfig(t) {\n        return t = _objectSpread(_objectSpread(_objectSpread({}, Ne), F.getDataAttributes(this._element)), "object" == _typeof(t) ? t : {}), r("modal", t, Ie), t;\n      }\n    }, {\n      key: "_showElement",\n      value: function _showElement(t) {\n        var _this21 = this;\n\n        var e = this._isAnimated(),\n            i = U.findOne(".modal-body", this._dialog);\n\n        this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE || document.body.append(this._element), this._element.style.display = "block", this._element.removeAttribute("aria-hidden"), this._element.setAttribute("aria-modal", !0), this._element.setAttribute("role", "dialog"), this._element.scrollTop = 0, i && (i.scrollTop = 0), e && d(this._element), this._element.classList.add("show"), this._queueCallback(function () {\n          _this21._config.focus && _this21._focustrap.activate(), _this21._isTransitioning = !1, P.trigger(_this21._element, "shown.bs.modal", {\n            relatedTarget: t\n          });\n        }, this._dialog, e);\n      }\n    }, {\n      key: "_setEscapeEvent",\n      value: function _setEscapeEvent() {\n        var _this22 = this;\n\n        this._isShown ? P.on(this._element, "keydown.dismiss.bs.modal", function (t) {\n          _this22._config.keyboard && "Escape" === t.key ? (t.preventDefault(), _this22.hide()) : _this22._config.keyboard || "Escape" !== t.key || _this22._triggerBackdropTransition();\n        }) : P.off(this._element, "keydown.dismiss.bs.modal");\n      }\n    }, {\n      key: "_setResizeEvent",\n      value: function _setResizeEvent() {\n        var _this23 = this;\n\n        this._isShown ? P.on(window, "resize.bs.modal", function () {\n          return _this23._adjustDialog();\n        }) : P.off(window, "resize.bs.modal");\n      }\n    }, {\n      key: "_hideModal",\n      value: function _hideModal() {\n        var _this24 = this;\n\n        this._element.style.display = "none", this._element.setAttribute("aria-hidden", !0), this._element.removeAttribute("aria-modal"), this._element.removeAttribute("role"), this._isTransitioning = !1, this._backdrop.hide(function () {\n          document.body.classList.remove("modal-open"), _this24._resetAdjustments(), _this24._scrollBar.reset(), P.trigger(_this24._element, "hidden.bs.modal");\n        });\n      }\n    }, {\n      key: "_showBackdrop",\n      value: function _showBackdrop(t) {\n        var _this25 = this;\n\n        P.on(this._element, "click.dismiss.bs.modal", function (t) {\n          _this25._ignoreBackdropClick ? _this25._ignoreBackdropClick = !1 : t.target === t.currentTarget && (!0 === _this25._config.backdrop ? _this25.hide() : "static" === _this25._config.backdrop && _this25._triggerBackdropTransition());\n        }), this._backdrop.show(t);\n      }\n    }, {\n      key: "_isAnimated",\n      value: function _isAnimated() {\n        return this._element.classList.contains("fade");\n      }\n    }, {\n      key: "_triggerBackdropTransition",\n      value: function _triggerBackdropTransition() {\n        var _this26 = this;\n\n        if (P.trigger(this._element, "hidePrevented.bs.modal").defaultPrevented) return;\n        var _this$_element = this._element,\n            t = _this$_element.classList,\n            e = _this$_element.scrollHeight,\n            i = _this$_element.style,\n            n = e > document.documentElement.clientHeight;\n        !n && "hidden" === i.overflowY || t.contains("modal-static") || (n || (i.overflowY = "hidden"), t.add("modal-static"), this._queueCallback(function () {\n          t.remove("modal-static"), n || _this26._queueCallback(function () {\n            i.overflowY = "";\n          }, _this26._dialog);\n        }, this._dialog), this._element.focus());\n      }\n    }, {\n      key: "_adjustDialog",\n      value: function _adjustDialog() {\n        var t = this._element.scrollHeight > document.documentElement.clientHeight,\n            e = this._scrollBar.getWidth(),\n            i = e > 0;\n\n        (!i && t && !p() || i && !t && p()) && (this._element.style.paddingLeft = e + "px"), (i && !t && !p() || !i && t && p()) && (this._element.style.paddingRight = e + "px");\n      }\n    }, {\n      key: "_resetAdjustments",\n      value: function _resetAdjustments() {\n        this._element.style.paddingLeft = "", this._element.style.paddingRight = "";\n      }\n    }], [{\n      key: "Default",\n      get: function get() {\n        return Ne;\n      }\n    }, {\n      key: "NAME",\n      get: function get() {\n        return "modal";\n      }\n    }, {\n      key: "jQueryInterface",\n      value: function jQueryInterface(t, e) {\n        return this.each(function () {\n          var i = Pe.getOrCreateInstance(this, t);\n\n          if ("string" == typeof t) {\n            if (void 0 === i[t]) throw new TypeError("No method named \\"".concat(t, "\\""));\n            i[t](e);\n          }\n        });\n      }\n    }]);\n\n    return Pe;\n  }(H);\n\n  P.on(document, "click.bs.modal.data-api", \'[data-bs-toggle="modal"]\', function (t) {\n    var _this27 = this;\n\n    var e = i(this);\n    ["A", "AREA"].includes(this.tagName) && t.preventDefault(), P.one(e, "show.bs.modal", function (t) {\n      t.defaultPrevented || P.one(e, "hidden.bs.modal", function () {\n        a(_this27) && _this27.focus();\n      });\n    }), Pe.getOrCreateInstance(e).toggle(this);\n  }), B(Pe), m(Pe);\n  var je = {\n    backdrop: !0,\n    keyboard: !0,\n    scroll: !1\n  },\n      Me = {\n    backdrop: "boolean",\n    keyboard: "boolean",\n    scroll: "boolean"\n  };\n\n  var He = /*#__PURE__*/function (_H7) {\n    _inherits(He, _H7);\n\n    var _super7 = _createSuper(He);\n\n    function He(t, e) {\n      var _this28;\n\n      _classCallCheck(this, He);\n\n      _this28 = _super7.call(this, t), _this28._config = _this28._getConfig(e), _this28._isShown = !1, _this28._backdrop = _this28._initializeBackDrop(), _this28._focustrap = _this28._initializeFocusTrap(), _this28._addEventListeners();\n      return _this28;\n    }\n\n    _createClass(He, [{\n      key: "toggle",\n      value: function toggle(t) {\n        return this._isShown ? this.hide() : this.show(t);\n      }\n    }, {\n      key: "show",\n      value: function show(t) {\n        var _this29 = this;\n\n        this._isShown || P.trigger(this._element, "show.bs.offcanvas", {\n          relatedTarget: t\n        }).defaultPrevented || (this._isShown = !0, this._element.style.visibility = "visible", this._backdrop.show(), this._config.scroll || new Oe().hide(), this._element.removeAttribute("aria-hidden"), this._element.setAttribute("aria-modal", !0), this._element.setAttribute("role", "dialog"), this._element.classList.add("show"), this._queueCallback(function () {\n          _this29._config.scroll || _this29._focustrap.activate(), P.trigger(_this29._element, "shown.bs.offcanvas", {\n            relatedTarget: t\n          });\n        }, this._element, !0));\n      }\n    }, {\n      key: "hide",\n      value: function hide() {\n        var _this30 = this;\n\n        this._isShown && (P.trigger(this._element, "hide.bs.offcanvas").defaultPrevented || (this._focustrap.deactivate(), this._element.blur(), this._isShown = !1, this._element.classList.remove("show"), this._backdrop.hide(), this._queueCallback(function () {\n          _this30._element.setAttribute("aria-hidden", !0), _this30._element.removeAttribute("aria-modal"), _this30._element.removeAttribute("role"), _this30._element.style.visibility = "hidden", _this30._config.scroll || new Oe().reset(), P.trigger(_this30._element, "hidden.bs.offcanvas");\n        }, this._element, !0)));\n      }\n    }, {\n      key: "dispose",\n      value: function dispose() {\n        this._backdrop.dispose(), this._focustrap.deactivate(), _get(_getPrototypeOf(He.prototype), "dispose", this).call(this);\n      }\n    }, {\n      key: "_getConfig",\n      value: function _getConfig(t) {\n        return t = _objectSpread(_objectSpread(_objectSpread({}, je), F.getDataAttributes(this._element)), "object" == _typeof(t) ? t : {}), r("offcanvas", t, Me), t;\n      }\n    }, {\n      key: "_initializeBackDrop",\n      value: function _initializeBackDrop() {\n        var _this31 = this;\n\n        return new Le({\n          className: "offcanvas-backdrop",\n          isVisible: this._config.backdrop,\n          isAnimated: !0,\n          rootElement: this._element.parentNode,\n          clickCallback: function clickCallback() {\n            return _this31.hide();\n          }\n        });\n      }\n    }, {\n      key: "_initializeFocusTrap",\n      value: function _initializeFocusTrap() {\n        return new Se({\n          trapElement: this._element\n        });\n      }\n    }, {\n      key: "_addEventListeners",\n      value: function _addEventListeners() {\n        var _this32 = this;\n\n        P.on(this._element, "keydown.dismiss.bs.offcanvas", function (t) {\n          _this32._config.keyboard && "Escape" === t.key && _this32.hide();\n        });\n      }\n    }], [{\n      key: "NAME",\n      get: function get() {\n        return "offcanvas";\n      }\n    }, {\n      key: "Default",\n      get: function get() {\n        return je;\n      }\n    }, {\n      key: "jQueryInterface",\n      value: function jQueryInterface(t) {\n        return this.each(function () {\n          var e = He.getOrCreateInstance(this, t);\n\n          if ("string" == typeof t) {\n            if (void 0 === e[t] || t.startsWith("_") || "constructor" === t) throw new TypeError("No method named \\"".concat(t, "\\""));\n            e[t](this);\n          }\n        });\n      }\n    }]);\n\n    return He;\n  }(H);\n\n  P.on(document, "click.bs.offcanvas.data-api", \'[data-bs-toggle="offcanvas"]\', function (t) {\n    var _this33 = this;\n\n    var e = i(this);\n    if (["A", "AREA"].includes(this.tagName) && t.preventDefault(), l(this)) return;\n    P.one(e, "hidden.bs.offcanvas", function () {\n      a(_this33) && _this33.focus();\n    });\n    var n = U.findOne(".offcanvas.show");\n    n && n !== e && He.getInstance(n).hide(), He.getOrCreateInstance(e).toggle(this);\n  }), P.on(window, "load.bs.offcanvas.data-api", function () {\n    return U.find(".offcanvas.show").forEach(function (t) {\n      return He.getOrCreateInstance(t).show();\n    });\n  }), B(He), m(He);\n\n  var Be = new Set(["background", "cite", "href", "itemtype", "longdesc", "poster", "src", "xlink:href"]),\n      Re = /^(?:(?:https?|mailto|ftp|tel|file):|[^#&/:?]*(?:[#/?]|$))/i,\n      We = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[\\d+/a-z]+=*$/i,\n      ze = function ze(t, e) {\n    var i = t.nodeName.toLowerCase();\n    if (e.includes(i)) return !Be.has(i) || Boolean(Re.test(t.nodeValue) || We.test(t.nodeValue));\n    var n = e.filter(function (t) {\n      return t instanceof RegExp;\n    });\n\n    for (var _t10 = 0, _e10 = n.length; _t10 < _e10; _t10++) {\n      if (n[_t10].test(i)) return !0;\n    }\n\n    return !1;\n  };\n\n  function qe(t, e, i) {\n    var _ref7;\n\n    if (!t.length) return t;\n    if (i && "function" == typeof i) return i(t);\n\n    var n = new window.DOMParser().parseFromString(t, "text/html"),\n        s = Object.keys(e),\n        o = (_ref7 = []).concat.apply(_ref7, _toConsumableArray(n.body.querySelectorAll("*")));\n\n    var _loop = function _loop(_t11, _i9) {\n      var _ref8;\n\n      var i = o[_t11],\n          n = i.nodeName.toLowerCase();\n\n      if (!s.includes(n)) {\n        i.remove();\n        return "continue";\n      }\n\n      var r = (_ref8 = []).concat.apply(_ref8, _toConsumableArray(i.attributes)),\n          a = [].concat(e["*"] || [], e[n] || []);\n\n      r.forEach(function (t) {\n        ze(t, a) || i.removeAttribute(t.nodeName);\n      });\n    };\n\n    for (var _t11 = 0, _i9 = o.length; _t11 < _i9; _t11++) {\n      var _ret = _loop(_t11, _i9);\n\n      if (_ret === "continue") continue;\n    }\n\n    return n.body.innerHTML;\n  }\n\n  var Fe = new Set(["sanitize", "allowList", "sanitizeFn"]),\n      Ue = {\n    animation: "boolean",\n    template: "string",\n    title: "(string|element|function)",\n    trigger: "string",\n    delay: "(number|object)",\n    html: "boolean",\n    selector: "(string|boolean)",\n    placement: "(string|function)",\n    offset: "(array|string|function)",\n    container: "(string|element|boolean)",\n    fallbackPlacements: "array",\n    boundary: "(string|element)",\n    customClass: "(string|function)",\n    sanitize: "boolean",\n    sanitizeFn: "(null|function)",\n    allowList: "object",\n    popperConfig: "(null|object|function)"\n  },\n      $e = {\n    AUTO: "auto",\n    TOP: "top",\n    RIGHT: p() ? "left" : "right",\n    BOTTOM: "bottom",\n    LEFT: p() ? "right" : "left"\n  },\n      Ve = {\n    animation: !0,\n    template: \'<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>\',\n    trigger: "hover focus",\n    title: "",\n    delay: 0,\n    html: !1,\n    selector: !1,\n    placement: "top",\n    offset: [0, 0],\n    container: !1,\n    fallbackPlacements: ["top", "right", "bottom", "left"],\n    boundary: "clippingParents",\n    customClass: "",\n    sanitize: !0,\n    sanitizeFn: null,\n    allowList: {\n      "*": ["class", "dir", "id", "lang", "role", /^aria-[\\w-]*$/i],\n      a: ["target", "href", "title", "rel"],\n      area: [],\n      b: [],\n      br: [],\n      col: [],\n      code: [],\n      div: [],\n      em: [],\n      hr: [],\n      h1: [],\n      h2: [],\n      h3: [],\n      h4: [],\n      h5: [],\n      h6: [],\n      i: [],\n      img: ["src", "srcset", "alt", "title", "width", "height"],\n      li: [],\n      ol: [],\n      p: [],\n      pre: [],\n      s: [],\n      small: [],\n      span: [],\n      sub: [],\n      sup: [],\n      strong: [],\n      u: [],\n      ul: []\n    },\n    popperConfig: null\n  },\n      Ke = {\n    HIDE: "hide.bs.tooltip",\n    HIDDEN: "hidden.bs.tooltip",\n    SHOW: "show.bs.tooltip",\n    SHOWN: "shown.bs.tooltip",\n    INSERTED: "inserted.bs.tooltip",\n    CLICK: "click.bs.tooltip",\n    FOCUSIN: "focusin.bs.tooltip",\n    FOCUSOUT: "focusout.bs.tooltip",\n    MOUSEENTER: "mouseenter.bs.tooltip",\n    MOUSELEAVE: "mouseleave.bs.tooltip"\n  };\n\n  var Xe = /*#__PURE__*/function (_H8) {\n    _inherits(Xe, _H8);\n\n    var _super8 = _createSuper(Xe);\n\n    function Xe(t, e) {\n      var _this34;\n\n      _classCallCheck(this, Xe);\n\n      if (void 0 === pe) throw new TypeError("Bootstrap\'s tooltips require Popper (https://popper.js.org)");\n      _this34 = _super8.call(this, t), _this34._isEnabled = !0, _this34._timeout = 0, _this34._hoverState = "", _this34._activeTrigger = {}, _this34._popper = null, _this34._config = _this34._getConfig(e), _this34.tip = null, _this34._setListeners();\n      return _this34;\n    }\n\n    _createClass(Xe, [{\n      key: "enable",\n      value: function enable() {\n        this._isEnabled = !0;\n      }\n    }, {\n      key: "disable",\n      value: function disable() {\n        this._isEnabled = !1;\n      }\n    }, {\n      key: "toggleEnabled",\n      value: function toggleEnabled() {\n        this._isEnabled = !this._isEnabled;\n      }\n    }, {\n      key: "toggle",\n      value: function toggle(t) {\n        if (this._isEnabled) if (t) {\n          var _e11 = this._initializeOnDelegatedTarget(t);\n\n          _e11._activeTrigger.click = !_e11._activeTrigger.click, _e11._isWithActiveTrigger() ? _e11._enter(null, _e11) : _e11._leave(null, _e11);\n        } else {\n          if (this.getTipElement().classList.contains("show")) return void this._leave(null, this);\n\n          this._enter(null, this);\n        }\n      }\n    }, {\n      key: "dispose",\n      value: function dispose() {\n        clearTimeout(this._timeout), P.off(this._element.closest(".modal"), "hide.bs.modal", this._hideModalHandler), this.tip && this.tip.remove(), this._popper && this._popper.destroy(), _get(_getPrototypeOf(Xe.prototype), "dispose", this).call(this);\n      }\n    }, {\n      key: "show",\n      value: function show() {\n        var _n$classList,\n            _ref9,\n            _this35 = this;\n\n        if ("none" === this._element.style.display) throw new Error("Please use show on visible elements");\n        if (!this.isWithContent() || !this._isEnabled) return;\n        var t = P.trigger(this._element, this.constructor.Event.SHOW),\n            e = c(this._element),\n            i = null === e ? this._element.ownerDocument.documentElement.contains(this._element) : e.contains(this._element);\n        if (t.defaultPrevented || !i) return;\n\n        var n = this.getTipElement(),\n            s = function (t) {\n          do {\n            t += Math.floor(1e6 * Math.random());\n          } while (document.getElementById(t));\n\n          return t;\n        }(this.constructor.NAME);\n\n        n.setAttribute("id", s), this._element.setAttribute("aria-describedby", s), this._config.animation && n.classList.add("fade");\n\n        var o = "function" == typeof this._config.placement ? this._config.placement.call(this, n, this._element) : this._config.placement,\n            r = this._getAttachment(o);\n\n        this._addAttachmentClass(r);\n\n        var a = this._config.container;\n        M.set(n, this.constructor.DATA_KEY, this), this._element.ownerDocument.documentElement.contains(this.tip) || (a.append(n), P.trigger(this._element, this.constructor.Event.INSERTED)), this._popper ? this._popper.update() : this._popper = fe(this._element, n, this._getPopperConfig(r)), n.classList.add("show");\n\n        var l = this._resolvePossibleFunction(this._config.customClass);\n\n        l && (_n$classList = n.classList).add.apply(_n$classList, _toConsumableArray(l.split(" "))), "ontouchstart" in document.documentElement && (_ref9 = []).concat.apply(_ref9, _toConsumableArray(document.body.children)).forEach(function (t) {\n          P.on(t, "mouseover", h);\n        });\n        var d = this.tip.classList.contains("fade");\n\n        this._queueCallback(function () {\n          var t = _this35._hoverState;\n          _this35._hoverState = null, P.trigger(_this35._element, _this35.constructor.Event.SHOWN), "out" === t && _this35._leave(null, _this35);\n        }, this.tip, d);\n      }\n    }, {\n      key: "hide",\n      value: function hide() {\n        var _ref10,\n            _this36 = this;\n\n        if (!this._popper) return;\n        var t = this.getTipElement();\n        if (P.trigger(this._element, this.constructor.Event.HIDE).defaultPrevented) return;\n        t.classList.remove("show"), "ontouchstart" in document.documentElement && (_ref10 = []).concat.apply(_ref10, _toConsumableArray(document.body.children)).forEach(function (t) {\n          return P.off(t, "mouseover", h);\n        }), this._activeTrigger.click = !1, this._activeTrigger.focus = !1, this._activeTrigger.hover = !1;\n        var e = this.tip.classList.contains("fade");\n        this._queueCallback(function () {\n          _this36._isWithActiveTrigger() || ("show" !== _this36._hoverState && t.remove(), _this36._cleanTipClass(), _this36._element.removeAttribute("aria-describedby"), P.trigger(_this36._element, _this36.constructor.Event.HIDDEN), _this36._popper && (_this36._popper.destroy(), _this36._popper = null));\n        }, this.tip, e), this._hoverState = "";\n      }\n    }, {\n      key: "update",\n      value: function update() {\n        null !== this._popper && this._popper.update();\n      }\n    }, {\n      key: "isWithContent",\n      value: function isWithContent() {\n        return Boolean(this.getTitle());\n      }\n    }, {\n      key: "getTipElement",\n      value: function getTipElement() {\n        if (this.tip) return this.tip;\n        var t = document.createElement("div");\n        t.innerHTML = this._config.template;\n        var e = t.children[0];\n        return this.setContent(e), e.classList.remove("fade", "show"), this.tip = e, this.tip;\n      }\n    }, {\n      key: "setContent",\n      value: function setContent(t) {\n        this._sanitizeAndSetContent(t, this.getTitle(), ".tooltip-inner");\n      }\n    }, {\n      key: "_sanitizeAndSetContent",\n      value: function _sanitizeAndSetContent(t, e, i) {\n        var n = U.findOne(i, t);\n        e || !n ? this.setElementContent(n, e) : n.remove();\n      }\n    }, {\n      key: "setElementContent",\n      value: function setElementContent(t, e) {\n        if (null !== t) return s(e) ? (e = o(e), void (this._config.html ? e.parentNode !== t && (t.innerHTML = "", t.append(e)) : t.textContent = e.textContent)) : void (this._config.html ? (this._config.sanitize && (e = qe(e, this._config.allowList, this._config.sanitizeFn)), t.innerHTML = e) : t.textContent = e);\n      }\n    }, {\n      key: "getTitle",\n      value: function getTitle() {\n        var t = this._element.getAttribute("data-bs-original-title") || this._config.title;\n\n        return this._resolvePossibleFunction(t);\n      }\n    }, {\n      key: "updateAttachment",\n      value: function updateAttachment(t) {\n        return "right" === t ? "end" : "left" === t ? "start" : t;\n      }\n    }, {\n      key: "_initializeOnDelegatedTarget",\n      value: function _initializeOnDelegatedTarget(t, e) {\n        return e || this.constructor.getOrCreateInstance(t.delegateTarget, this._getDelegateConfig());\n      }\n    }, {\n      key: "_getOffset",\n      value: function _getOffset() {\n        var _this37 = this;\n\n        var t = this._config.offset;\n        return "string" == typeof t ? t.split(",").map(function (t) {\n          return Number.parseInt(t, 10);\n        }) : "function" == typeof t ? function (e) {\n          return t(e, _this37._element);\n        } : t;\n      }\n    }, {\n      key: "_resolvePossibleFunction",\n      value: function _resolvePossibleFunction(t) {\n        return "function" == typeof t ? t.call(this._element) : t;\n      }\n    }, {\n      key: "_getPopperConfig",\n      value: function _getPopperConfig(t) {\n        var _this38 = this;\n\n        var e = {\n          placement: t,\n          modifiers: [{\n            name: "flip",\n            options: {\n              fallbackPlacements: this._config.fallbackPlacements\n            }\n          }, {\n            name: "offset",\n            options: {\n              offset: this._getOffset()\n            }\n          }, {\n            name: "preventOverflow",\n            options: {\n              boundary: this._config.boundary\n            }\n          }, {\n            name: "arrow",\n            options: {\n              element: ".".concat(this.constructor.NAME, "-arrow")\n            }\n          }, {\n            name: "onChange",\n            enabled: !0,\n            phase: "afterWrite",\n            fn: function fn(t) {\n              return _this38._handlePopperPlacementChange(t);\n            }\n          }],\n          onFirstUpdate: function onFirstUpdate(t) {\n            t.options.placement !== t.placement && _this38._handlePopperPlacementChange(t);\n          }\n        };\n        return _objectSpread(_objectSpread({}, e), "function" == typeof this._config.popperConfig ? this._config.popperConfig(e) : this._config.popperConfig);\n      }\n    }, {\n      key: "_addAttachmentClass",\n      value: function _addAttachmentClass(t) {\n        this.getTipElement().classList.add("".concat(this._getBasicClassPrefix(), "-").concat(this.updateAttachment(t)));\n      }\n    }, {\n      key: "_getAttachment",\n      value: function _getAttachment(t) {\n        return $e[t.toUpperCase()];\n      }\n    }, {\n      key: "_setListeners",\n      value: function _setListeners() {\n        var _this39 = this;\n\n        this._config.trigger.split(" ").forEach(function (t) {\n          if ("click" === t) P.on(_this39._element, _this39.constructor.Event.CLICK, _this39._config.selector, function (t) {\n            return _this39.toggle(t);\n          });else if ("manual" !== t) {\n            var _e12 = "hover" === t ? _this39.constructor.Event.MOUSEENTER : _this39.constructor.Event.FOCUSIN,\n                _i10 = "hover" === t ? _this39.constructor.Event.MOUSELEAVE : _this39.constructor.Event.FOCUSOUT;\n\n            P.on(_this39._element, _e12, _this39._config.selector, function (t) {\n              return _this39._enter(t);\n            }), P.on(_this39._element, _i10, _this39._config.selector, function (t) {\n              return _this39._leave(t);\n            });\n          }\n        }), this._hideModalHandler = function () {\n          _this39._element && _this39.hide();\n        }, P.on(this._element.closest(".modal"), "hide.bs.modal", this._hideModalHandler), this._config.selector ? this._config = _objectSpread(_objectSpread({}, this._config), {}, {\n          trigger: "manual",\n          selector: ""\n        }) : this._fixTitle();\n      }\n    }, {\n      key: "_fixTitle",\n      value: function _fixTitle() {\n        var t = this._element.getAttribute("title"),\n            e = _typeof(this._element.getAttribute("data-bs-original-title"));\n\n        (t || "string" !== e) && (this._element.setAttribute("data-bs-original-title", t || ""), !t || this._element.getAttribute("aria-label") || this._element.textContent || this._element.setAttribute("aria-label", t), this._element.setAttribute("title", ""));\n      }\n    }, {\n      key: "_enter",\n      value: function _enter(t, e) {\n        e = this._initializeOnDelegatedTarget(t, e), t && (e._activeTrigger["focusin" === t.type ? "focus" : "hover"] = !0), e.getTipElement().classList.contains("show") || "show" === e._hoverState ? e._hoverState = "show" : (clearTimeout(e._timeout), e._hoverState = "show", e._config.delay && e._config.delay.show ? e._timeout = setTimeout(function () {\n          "show" === e._hoverState && e.show();\n        }, e._config.delay.show) : e.show());\n      }\n    }, {\n      key: "_leave",\n      value: function _leave(t, e) {\n        e = this._initializeOnDelegatedTarget(t, e), t && (e._activeTrigger["focusout" === t.type ? "focus" : "hover"] = e._element.contains(t.relatedTarget)), e._isWithActiveTrigger() || (clearTimeout(e._timeout), e._hoverState = "out", e._config.delay && e._config.delay.hide ? e._timeout = setTimeout(function () {\n          "out" === e._hoverState && e.hide();\n        }, e._config.delay.hide) : e.hide());\n      }\n    }, {\n      key: "_isWithActiveTrigger",\n      value: function _isWithActiveTrigger() {\n        for (var _t12 in this._activeTrigger) {\n          if (this._activeTrigger[_t12]) return !0;\n        }\n\n        return !1;\n      }\n    }, {\n      key: "_getConfig",\n      value: function _getConfig(t) {\n        var e = F.getDataAttributes(this._element);\n        return Object.keys(e).forEach(function (t) {\n          Fe.has(t) && delete e[t];\n        }), (t = _objectSpread(_objectSpread(_objectSpread({}, this.constructor.Default), e), "object" == _typeof(t) && t ? t : {})).container = !1 === t.container ? document.body : o(t.container), "number" == typeof t.delay && (t.delay = {\n          show: t.delay,\n          hide: t.delay\n        }), "number" == typeof t.title && (t.title = t.title.toString()), "number" == typeof t.content && (t.content = t.content.toString()), r("tooltip", t, this.constructor.DefaultType), t.sanitize && (t.template = qe(t.template, t.allowList, t.sanitizeFn)), t;\n      }\n    }, {\n      key: "_getDelegateConfig",\n      value: function _getDelegateConfig() {\n        var t = {};\n\n        for (var _e13 in this._config) {\n          this.constructor.Default[_e13] !== this._config[_e13] && (t[_e13] = this._config[_e13]);\n        }\n\n        return t;\n      }\n    }, {\n      key: "_cleanTipClass",\n      value: function _cleanTipClass() {\n        var t = this.getTipElement(),\n            e = new RegExp("(^|\\\\s)".concat(this._getBasicClassPrefix(), "\\\\S+"), "g"),\n            i = t.getAttribute("class").match(e);\n        null !== i && i.length > 0 && i.map(function (t) {\n          return t.trim();\n        }).forEach(function (e) {\n          return t.classList.remove(e);\n        });\n      }\n    }, {\n      key: "_getBasicClassPrefix",\n      value: function _getBasicClassPrefix() {\n        return "bs-tooltip";\n      }\n    }, {\n      key: "_handlePopperPlacementChange",\n      value: function _handlePopperPlacementChange(t) {\n        var e = t.state;\n        e && (this.tip = e.elements.popper, this._cleanTipClass(), this._addAttachmentClass(this._getAttachment(e.placement)));\n      }\n    }], [{\n      key: "Default",\n      get: function get() {\n        return Ve;\n      }\n    }, {\n      key: "NAME",\n      get: function get() {\n        return "tooltip";\n      }\n    }, {\n      key: "Event",\n      get: function get() {\n        return Ke;\n      }\n    }, {\n      key: "DefaultType",\n      get: function get() {\n        return Ue;\n      }\n    }, {\n      key: "jQueryInterface",\n      value: function jQueryInterface(t) {\n        return this.each(function () {\n          var e = Xe.getOrCreateInstance(this, t);\n\n          if ("string" == typeof t) {\n            if (void 0 === e[t]) throw new TypeError("No method named \\"".concat(t, "\\""));\n            e[t]();\n          }\n        });\n      }\n    }]);\n\n    return Xe;\n  }(H);\n\n  m(Xe);\n\n  var Ye = _objectSpread(_objectSpread({}, Xe.Default), {}, {\n    placement: "right",\n    offset: [0, 8],\n    trigger: "click",\n    content: "",\n    template: \'<div class="popover" role="tooltip"><div class="popover-arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>\'\n  }),\n      Qe = _objectSpread(_objectSpread({}, Xe.DefaultType), {}, {\n    content: "(string|element|function)"\n  }),\n      Ge = {\n    HIDE: "hide.bs.popover",\n    HIDDEN: "hidden.bs.popover",\n    SHOW: "show.bs.popover",\n    SHOWN: "shown.bs.popover",\n    INSERTED: "inserted.bs.popover",\n    CLICK: "click.bs.popover",\n    FOCUSIN: "focusin.bs.popover",\n    FOCUSOUT: "focusout.bs.popover",\n    MOUSEENTER: "mouseenter.bs.popover",\n    MOUSELEAVE: "mouseleave.bs.popover"\n  };\n\n  var Ze = /*#__PURE__*/function (_Xe) {\n    _inherits(Ze, _Xe);\n\n    var _super9 = _createSuper(Ze);\n\n    function Ze() {\n      _classCallCheck(this, Ze);\n\n      return _super9.apply(this, arguments);\n    }\n\n    _createClass(Ze, [{\n      key: "isWithContent",\n      value: function isWithContent() {\n        return this.getTitle() || this._getContent();\n      }\n    }, {\n      key: "setContent",\n      value: function setContent(t) {\n        this._sanitizeAndSetContent(t, this.getTitle(), ".popover-header"), this._sanitizeAndSetContent(t, this._getContent(), ".popover-body");\n      }\n    }, {\n      key: "_getContent",\n      value: function _getContent() {\n        return this._resolvePossibleFunction(this._config.content);\n      }\n    }, {\n      key: "_getBasicClassPrefix",\n      value: function _getBasicClassPrefix() {\n        return "bs-popover";\n      }\n    }], [{\n      key: "Default",\n      get: function get() {\n        return Ye;\n      }\n    }, {\n      key: "NAME",\n      get: function get() {\n        return "popover";\n      }\n    }, {\n      key: "Event",\n      get: function get() {\n        return Ge;\n      }\n    }, {\n      key: "DefaultType",\n      get: function get() {\n        return Qe;\n      }\n    }, {\n      key: "jQueryInterface",\n      value: function jQueryInterface(t) {\n        return this.each(function () {\n          var e = Ze.getOrCreateInstance(this, t);\n\n          if ("string" == typeof t) {\n            if (void 0 === e[t]) throw new TypeError("No method named \\"".concat(t, "\\""));\n            e[t]();\n          }\n        });\n      }\n    }]);\n\n    return Ze;\n  }(Xe);\n\n  m(Ze);\n  var Je = {\n    offset: 10,\n    method: "auto",\n    target: ""\n  },\n      ti = {\n    offset: "number",\n    method: "string",\n    target: "(string|element)"\n  },\n      ei = ".nav-link, .list-group-item, .dropdown-item";\n\n  var ii = /*#__PURE__*/function (_H9) {\n    _inherits(ii, _H9);\n\n    var _super10 = _createSuper(ii);\n\n    function ii(t, e) {\n      var _this40;\n\n      _classCallCheck(this, ii);\n\n      _this40 = _super10.call(this, t), _this40._scrollElement = "BODY" === _this40._element.tagName ? window : _this40._element, _this40._config = _this40._getConfig(e), _this40._offsets = [], _this40._targets = [], _this40._activeTarget = null, _this40._scrollHeight = 0, P.on(_this40._scrollElement, "scroll.bs.scrollspy", function () {\n        return _this40._process();\n      }), _this40.refresh(), _this40._process();\n      return _this40;\n    }\n\n    _createClass(ii, [{\n      key: "refresh",\n      value: function refresh() {\n        var _this41 = this;\n\n        var t = this._scrollElement === this._scrollElement.window ? "offset" : "position",\n            i = "auto" === this._config.method ? t : this._config.method,\n            n = "position" === i ? this._getScrollTop() : 0;\n        this._offsets = [], this._targets = [], this._scrollHeight = this._getScrollHeight(), U.find(ei, this._config.target).map(function (t) {\n          var s = e(t),\n              o = s ? U.findOne(s) : null;\n\n          if (o) {\n            var _t13 = o.getBoundingClientRect();\n\n            if (_t13.width || _t13.height) return [F[i](o).top + n, s];\n          }\n\n          return null;\n        }).filter(function (t) {\n          return t;\n        }).sort(function (t, e) {\n          return t[0] - e[0];\n        }).forEach(function (t) {\n          _this41._offsets.push(t[0]), _this41._targets.push(t[1]);\n        });\n      }\n    }, {\n      key: "dispose",\n      value: function dispose() {\n        P.off(this._scrollElement, ".bs.scrollspy"), _get(_getPrototypeOf(ii.prototype), "dispose", this).call(this);\n      }\n    }, {\n      key: "_getConfig",\n      value: function _getConfig(t) {\n        return (t = _objectSpread(_objectSpread(_objectSpread({}, Je), F.getDataAttributes(this._element)), "object" == _typeof(t) && t ? t : {})).target = o(t.target) || document.documentElement, r("scrollspy", t, ti), t;\n      }\n    }, {\n      key: "_getScrollTop",\n      value: function _getScrollTop() {\n        return this._scrollElement === window ? this._scrollElement.pageYOffset : this._scrollElement.scrollTop;\n      }\n    }, {\n      key: "_getScrollHeight",\n      value: function _getScrollHeight() {\n        return this._scrollElement.scrollHeight || Math.max(document.body.scrollHeight, document.documentElement.scrollHeight);\n      }\n    }, {\n      key: "_getOffsetHeight",\n      value: function _getOffsetHeight() {\n        return this._scrollElement === window ? window.innerHeight : this._scrollElement.getBoundingClientRect().height;\n      }\n    }, {\n      key: "_process",\n      value: function _process() {\n        var t = this._getScrollTop() + this._config.offset,\n            e = this._getScrollHeight(),\n            i = this._config.offset + e - this._getOffsetHeight();\n\n        if (this._scrollHeight !== e && this.refresh(), t >= i) {\n          var _t14 = this._targets[this._targets.length - 1];\n          this._activeTarget !== _t14 && this._activate(_t14);\n        } else {\n          if (this._activeTarget && t < this._offsets[0] && this._offsets[0] > 0) return this._activeTarget = null, void this._clear();\n\n          for (var _e14 = this._offsets.length; _e14--;) {\n            this._activeTarget !== this._targets[_e14] && t >= this._offsets[_e14] && (void 0 === this._offsets[_e14 + 1] || t < this._offsets[_e14 + 1]) && this._activate(this._targets[_e14]);\n          }\n        }\n      }\n    }, {\n      key: "_activate",\n      value: function _activate(t) {\n        this._activeTarget = t, this._clear();\n        var e = ei.split(",").map(function (e) {\n          return "".concat(e, "[data-bs-target=\\"").concat(t, "\\"],").concat(e, "[href=\\"").concat(t, "\\"]");\n        }),\n            i = U.findOne(e.join(","), this._config.target);\n        i.classList.add("active"), i.classList.contains("dropdown-item") ? U.findOne(".dropdown-toggle", i.closest(".dropdown")).classList.add("active") : U.parents(i, ".nav, .list-group").forEach(function (t) {\n          U.prev(t, ".nav-link, .list-group-item").forEach(function (t) {\n            return t.classList.add("active");\n          }), U.prev(t, ".nav-item").forEach(function (t) {\n            U.children(t, ".nav-link").forEach(function (t) {\n              return t.classList.add("active");\n            });\n          });\n        }), P.trigger(this._scrollElement, "activate.bs.scrollspy", {\n          relatedTarget: t\n        });\n      }\n    }, {\n      key: "_clear",\n      value: function _clear() {\n        U.find(ei, this._config.target).filter(function (t) {\n          return t.classList.contains("active");\n        }).forEach(function (t) {\n          return t.classList.remove("active");\n        });\n      }\n    }], [{\n      key: "Default",\n      get: function get() {\n        return Je;\n      }\n    }, {\n      key: "NAME",\n      get: function get() {\n        return "scrollspy";\n      }\n    }, {\n      key: "jQueryInterface",\n      value: function jQueryInterface(t) {\n        return this.each(function () {\n          var e = ii.getOrCreateInstance(this, t);\n\n          if ("string" == typeof t) {\n            if (void 0 === e[t]) throw new TypeError("No method named \\"".concat(t, "\\""));\n            e[t]();\n          }\n        });\n      }\n    }]);\n\n    return ii;\n  }(H);\n\n  P.on(window, "load.bs.scrollspy.data-api", function () {\n    U.find(\'[data-bs-spy="scroll"]\').forEach(function (t) {\n      return new ii(t);\n    });\n  }), m(ii);\n\n  var ni = /*#__PURE__*/function (_H10) {\n    _inherits(ni, _H10);\n\n    var _super11 = _createSuper(ni);\n\n    function ni() {\n      _classCallCheck(this, ni);\n\n      return _super11.apply(this, arguments);\n    }\n\n    _createClass(ni, [{\n      key: "show",\n      value: function show() {\n        var _this42 = this;\n\n        if (this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE && this._element.classList.contains("active")) return;\n        var t;\n\n        var e = i(this._element),\n            n = this._element.closest(".nav, .list-group");\n\n        if (n) {\n          var _e15 = "UL" === n.nodeName || "OL" === n.nodeName ? ":scope > li > .active" : ".active";\n\n          t = U.find(_e15, n), t = t[t.length - 1];\n        }\n\n        var s = t ? P.trigger(t, "hide.bs.tab", {\n          relatedTarget: this._element\n        }) : null;\n        if (P.trigger(this._element, "show.bs.tab", {\n          relatedTarget: t\n        }).defaultPrevented || null !== s && s.defaultPrevented) return;\n\n        this._activate(this._element, n);\n\n        var o = function o() {\n          P.trigger(t, "hidden.bs.tab", {\n            relatedTarget: _this42._element\n          }), P.trigger(_this42._element, "shown.bs.tab", {\n            relatedTarget: t\n          });\n        };\n\n        e ? this._activate(e, e.parentNode, o) : o();\n      }\n    }, {\n      key: "_activate",\n      value: function _activate(t, e, i) {\n        var _this43 = this;\n\n        var n = (!e || "UL" !== e.nodeName && "OL" !== e.nodeName ? U.children(e, ".active") : U.find(":scope > li > .active", e))[0],\n            s = i && n && n.classList.contains("fade"),\n            o = function o() {\n          return _this43._transitionComplete(t, n, i);\n        };\n\n        n && s ? (n.classList.remove("show"), this._queueCallback(o, t, !0)) : o();\n      }\n    }, {\n      key: "_transitionComplete",\n      value: function _transitionComplete(t, e, i) {\n        if (e) {\n          e.classList.remove("active");\n\n          var _t15 = U.findOne(":scope > .dropdown-menu .active", e.parentNode);\n\n          _t15 && _t15.classList.remove("active"), "tab" === e.getAttribute("role") && e.setAttribute("aria-selected", !1);\n        }\n\n        t.classList.add("active"), "tab" === t.getAttribute("role") && t.setAttribute("aria-selected", !0), d(t), t.classList.contains("fade") && t.classList.add("show");\n        var n = t.parentNode;\n\n        if (n && "LI" === n.nodeName && (n = n.parentNode), n && n.classList.contains("dropdown-menu")) {\n          var _e16 = t.closest(".dropdown");\n\n          _e16 && U.find(".dropdown-toggle", _e16).forEach(function (t) {\n            return t.classList.add("active");\n          }), t.setAttribute("aria-expanded", !0);\n        }\n\n        i && i();\n      }\n    }], [{\n      key: "NAME",\n      get: function get() {\n        return "tab";\n      }\n    }, {\n      key: "jQueryInterface",\n      value: function jQueryInterface(t) {\n        return this.each(function () {\n          var e = ni.getOrCreateInstance(this);\n\n          if ("string" == typeof t) {\n            if (void 0 === e[t]) throw new TypeError("No method named \\"".concat(t, "\\""));\n            e[t]();\n          }\n        });\n      }\n    }]);\n\n    return ni;\n  }(H);\n\n  P.on(document, "click.bs.tab.data-api", \'[data-bs-toggle="tab"], [data-bs-toggle="pill"], [data-bs-toggle="list"]\', function (t) {\n    ["A", "AREA"].includes(this.tagName) && t.preventDefault(), l(this) || ni.getOrCreateInstance(this).show();\n  }), m(ni);\n  var si = {\n    animation: "boolean",\n    autohide: "boolean",\n    delay: "number"\n  },\n      oi = {\n    animation: !0,\n    autohide: !0,\n    delay: 5e3\n  };\n\n  var ri = /*#__PURE__*/function (_H11) {\n    _inherits(ri, _H11);\n\n    var _super12 = _createSuper(ri);\n\n    function ri(t, e) {\n      var _this44;\n\n      _classCallCheck(this, ri);\n\n      _this44 = _super12.call(this, t), _this44._config = _this44._getConfig(e), _this44._timeout = null, _this44._hasMouseInteraction = !1, _this44._hasKeyboardInteraction = !1, _this44._setListeners();\n      return _this44;\n    }\n\n    _createClass(ri, [{\n      key: "show",\n      value: function show() {\n        var _this45 = this;\n\n        P.trigger(this._element, "show.bs.toast").defaultPrevented || (this._clearTimeout(), this._config.animation && this._element.classList.add("fade"), this._element.classList.remove("hide"), d(this._element), this._element.classList.add("show"), this._element.classList.add("showing"), this._queueCallback(function () {\n          _this45._element.classList.remove("showing"), P.trigger(_this45._element, "shown.bs.toast"), _this45._maybeScheduleHide();\n        }, this._element, this._config.animation));\n      }\n    }, {\n      key: "hide",\n      value: function hide() {\n        var _this46 = this;\n\n        this._element.classList.contains("show") && (P.trigger(this._element, "hide.bs.toast").defaultPrevented || (this._element.classList.add("showing"), this._queueCallback(function () {\n          _this46._element.classList.add("hide"), _this46._element.classList.remove("showing"), _this46._element.classList.remove("show"), P.trigger(_this46._element, "hidden.bs.toast");\n        }, this._element, this._config.animation)));\n      }\n    }, {\n      key: "dispose",\n      value: function dispose() {\n        this._clearTimeout(), this._element.classList.contains("show") && this._element.classList.remove("show"), _get(_getPrototypeOf(ri.prototype), "dispose", this).call(this);\n      }\n    }, {\n      key: "_getConfig",\n      value: function _getConfig(t) {\n        return t = _objectSpread(_objectSpread(_objectSpread({}, oi), F.getDataAttributes(this._element)), "object" == _typeof(t) && t ? t : {}), r("toast", t, this.constructor.DefaultType), t;\n      }\n    }, {\n      key: "_maybeScheduleHide",\n      value: function _maybeScheduleHide() {\n        var _this47 = this;\n\n        this._config.autohide && (this._hasMouseInteraction || this._hasKeyboardInteraction || (this._timeout = setTimeout(function () {\n          _this47.hide();\n        }, this._config.delay)));\n      }\n    }, {\n      key: "_onInteraction",\n      value: function _onInteraction(t, e) {\n        switch (t.type) {\n          case "mouseover":\n          case "mouseout":\n            this._hasMouseInteraction = e;\n            break;\n\n          case "focusin":\n          case "focusout":\n            this._hasKeyboardInteraction = e;\n        }\n\n        if (e) return void this._clearTimeout();\n        var i = t.relatedTarget;\n        this._element === i || this._element.contains(i) || this._maybeScheduleHide();\n      }\n    }, {\n      key: "_setListeners",\n      value: function _setListeners() {\n        var _this48 = this;\n\n        P.on(this._element, "mouseover.bs.toast", function (t) {\n          return _this48._onInteraction(t, !0);\n        }), P.on(this._element, "mouseout.bs.toast", function (t) {\n          return _this48._onInteraction(t, !1);\n        }), P.on(this._element, "focusin.bs.toast", function (t) {\n          return _this48._onInteraction(t, !0);\n        }), P.on(this._element, "focusout.bs.toast", function (t) {\n          return _this48._onInteraction(t, !1);\n        });\n      }\n    }, {\n      key: "_clearTimeout",\n      value: function _clearTimeout() {\n        clearTimeout(this._timeout), this._timeout = null;\n      }\n    }], [{\n      key: "DefaultType",\n      get: function get() {\n        return si;\n      }\n    }, {\n      key: "Default",\n      get: function get() {\n        return oi;\n      }\n    }, {\n      key: "NAME",\n      get: function get() {\n        return "toast";\n      }\n    }, {\n      key: "jQueryInterface",\n      value: function jQueryInterface(t) {\n        return this.each(function () {\n          var e = ri.getOrCreateInstance(this, t);\n\n          if ("string" == typeof t) {\n            if (void 0 === e[t]) throw new TypeError("No method named \\"".concat(t, "\\""));\n            e[t](this);\n          }\n        });\n      }\n    }]);\n\n    return ri;\n  }(H);\n\n  return B(ri), m(ri), {\n    Alert: R,\n    Button: W,\n    Carousel: Z,\n    Collapse: et,\n    Dropdown: Te,\n    Modal: Pe,\n    Offcanvas: He,\n    Popover: Ze,\n    ScrollSpy: ii,\n    Tab: ni,\n    Toast: ri,\n    Tooltip: Xe\n  };\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///72\n')},929:module=>{"use strict";eval('\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\n\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item);\n\n      if (item[2]) {\n        return "@media ".concat(item[2], " {").concat(content, "}");\n      }\n\n      return content;\n    }).join("");\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === "string") {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, ""]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = "".concat(mediaQuery, " and ").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTI5LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBVUMsc0JBQVYsRUFBa0M7QUFDakQsTUFBSUMsSUFBSSxHQUFHLEVBQVgsQ0FEaUQsQ0FDbEM7O0FBRWZBLEVBQUFBLElBQUksQ0FBQ0MsUUFBTCxHQUFnQixTQUFTQSxRQUFULEdBQW9CO0FBQ2xDLFdBQU8sS0FBS0MsR0FBTCxDQUFTLFVBQVVDLElBQVYsRUFBZ0I7QUFDOUIsVUFBSUMsT0FBTyxHQUFHTCxzQkFBc0IsQ0FBQ0ksSUFBRCxDQUFwQzs7QUFFQSxVQUFJQSxJQUFJLENBQUMsQ0FBRCxDQUFSLEVBQWE7QUFDWCxlQUFPLFVBQVVFLE1BQVYsQ0FBaUJGLElBQUksQ0FBQyxDQUFELENBQXJCLEVBQTBCLElBQTFCLEVBQWdDRSxNQUFoQyxDQUF1Q0QsT0FBdkMsRUFBZ0QsR0FBaEQsQ0FBUDtBQUNEOztBQUVELGFBQU9BLE9BQVA7QUFDRCxLQVJNLEVBUUpFLElBUkksQ0FRQyxFQVJELENBQVA7QUFTRCxHQVZELENBSGlELENBYTlDO0FBQ0g7OztBQUdBTixFQUFBQSxJQUFJLENBQUNPLENBQUwsR0FBUyxVQUFVQyxPQUFWLEVBQW1CQyxVQUFuQixFQUErQkMsTUFBL0IsRUFBdUM7QUFDOUMsUUFBSSxPQUFPRixPQUFQLEtBQW1CLFFBQXZCLEVBQWlDO0FBQy9CO0FBQ0FBLE1BQUFBLE9BQU8sR0FBRyxDQUFDLENBQUMsSUFBRCxFQUFPQSxPQUFQLEVBQWdCLEVBQWhCLENBQUQsQ0FBVjtBQUNEOztBQUVELFFBQUlHLHNCQUFzQixHQUFHLEVBQTdCOztBQUVBLFFBQUlELE1BQUosRUFBWTtBQUNWLFdBQUssSUFBSUgsQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBRyxLQUFLSyxNQUF6QixFQUFpQ0wsQ0FBQyxFQUFsQyxFQUFzQztBQUNwQztBQUNBLFlBQUlNLEVBQUUsR0FBRyxLQUFLTixDQUFMLEVBQVEsQ0FBUixDQUFUOztBQUVBLFlBQUlNLEVBQUUsSUFBSSxJQUFWLEVBQWdCO0FBQ2RGLFVBQUFBLHNCQUFzQixDQUFDRSxFQUFELENBQXRCLEdBQTZCLElBQTdCO0FBQ0Q7QUFDRjtBQUNGOztBQUVELFNBQUssSUFBSUMsRUFBRSxHQUFHLENBQWQsRUFBaUJBLEVBQUUsR0FBR04sT0FBTyxDQUFDSSxNQUE5QixFQUFzQ0UsRUFBRSxFQUF4QyxFQUE0QztBQUMxQyxVQUFJWCxJQUFJLEdBQUcsR0FBR0UsTUFBSCxDQUFVRyxPQUFPLENBQUNNLEVBQUQsQ0FBakIsQ0FBWDs7QUFFQSxVQUFJSixNQUFNLElBQUlDLHNCQUFzQixDQUFDUixJQUFJLENBQUMsQ0FBRCxDQUFMLENBQXBDLEVBQStDO0FBQzdDO0FBQ0E7QUFDRDs7QUFFRCxVQUFJTSxVQUFKLEVBQWdCO0FBQ2QsWUFBSSxDQUFDTixJQUFJLENBQUMsQ0FBRCxDQUFULEVBQWM7QUFDWkEsVUFBQUEsSUFBSSxDQUFDLENBQUQsQ0FBSixHQUFVTSxVQUFWO0FBQ0QsU0FGRCxNQUVPO0FBQ0xOLFVBQUFBLElBQUksQ0FBQyxDQUFELENBQUosR0FBVSxHQUFHRSxNQUFILENBQVVJLFVBQVYsRUFBc0IsT0FBdEIsRUFBK0JKLE1BQS9CLENBQXNDRixJQUFJLENBQUMsQ0FBRCxDQUExQyxDQUFWO0FBQ0Q7QUFDRjs7QUFFREgsTUFBQUEsSUFBSSxDQUFDZSxJQUFMLENBQVVaLElBQVY7QUFDRDtBQUNGLEdBckNEOztBQXVDQSxTQUFPSCxJQUFQO0FBQ0QsQ0F6REQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90aGVtZWFsLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcz8yNGZiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xuLy8gY3NzIGJhc2UgY29kZSwgaW5qZWN0ZWQgYnkgdGhlIGNzcy1sb2FkZXJcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107IC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblxuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIHJldHVybiBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoY29udGVudCwgXCJ9XCIpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9OyAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuXG5cbiAgbGlzdC5pID0gZnVuY3Rpb24gKG1vZHVsZXMsIG1lZGlhUXVlcnksIGRlZHVwZSkge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCBcIlwiXV07XG4gICAgfVxuXG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblxuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcbiAgICAgICAgdmFyIGlkID0gdGhpc1tpXVswXTtcblxuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBtb2R1bGVzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfaV0pO1xuXG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnRpbnVlXG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAobWVkaWFRdWVyeSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWFRdWVyeTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzJdID0gXCJcIi5jb25jYXQobWVkaWFRdWVyeSwgXCIgYW5kIFwiKS5jb25jYXQoaXRlbVsyXSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gbGlzdDtcbn07Il0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJjb25jYXQiLCJqb2luIiwiaSIsIm1vZHVsZXMiLCJtZWRpYVF1ZXJ5IiwiZGVkdXBlIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImxlbmd0aCIsImlkIiwiX2kiLCJwdXNoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///929\n')},202:module=>{"use strict";eval('\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === "string") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === "Object" && o.constructor) n = o.constructor.name;\n  if (n === "Map" || n === "Set") return Array.from(o);\n  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i["return"] != null) _i["return"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = function cssWithMappingToString(item) {\n  var _item = _slicedToArray(item, 4),\n      content = _item[1],\n      cssMapping = _item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (typeof btoa === "function") {\n    // eslint-disable-next-line no-undef\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);\n    var sourceMapping = "/*# ".concat(data, " */");\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return "/*# sourceURL=".concat(cssMapping.sourceRoot || "").concat(source, " */");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join("\\n");\n  }\n\n  return [content].join("\\n");\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///202\n')},662:module=>{"use strict";eval('\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    // eslint-disable-next-line no-param-reassign\n    options = {};\n  }\n\n  if (!url) {\n    return url;\n  } // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n\n\n  url = String(url.__esModule ? url["default"] : url); // If url is already wrapped in quotes, remove them\n\n  if (/^[\'"].*[\'"]$/.test(url)) {\n    // eslint-disable-next-line no-param-reassign\n    url = url.slice(1, -1);\n  }\n\n  if (options.hash) {\n    // eslint-disable-next-line no-param-reassign\n    url += options.hash;\n  } // Should url be wrapped?\n  // See https://drafts.csswg.org/css-values-3/#urls\n\n\n  if (/["\'() \\t\\n]|(%20)/.test(url) || options.needQuotes) {\n    return "\\"".concat(url.replace(/"/g, \'\\\\"\').replace(/\\n/g, "\\\\n"), "\\"");\n  }\n\n  return url;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjYyLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViQSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBVUMsR0FBVixFQUFlQyxPQUFmLEVBQXdCO0FBQ3ZDLE1BQUksQ0FBQ0EsT0FBTCxFQUFjO0FBQ1o7QUFDQUEsSUFBQUEsT0FBTyxHQUFHLEVBQVY7QUFDRDs7QUFFRCxNQUFJLENBQUNELEdBQUwsRUFBVTtBQUNSLFdBQU9BLEdBQVA7QUFDRCxHQVJzQyxDQVFyQzs7O0FBR0ZBLEVBQUFBLEdBQUcsR0FBR0UsTUFBTSxDQUFDRixHQUFHLENBQUNHLFVBQUosR0FBaUJILEdBQUcsV0FBcEIsR0FBK0JBLEdBQWhDLENBQVosQ0FYdUMsQ0FXVzs7QUFFbEQsTUFBSSxlQUFlSSxJQUFmLENBQW9CSixHQUFwQixDQUFKLEVBQThCO0FBQzVCO0FBQ0FBLElBQUFBLEdBQUcsR0FBR0EsR0FBRyxDQUFDSyxLQUFKLENBQVUsQ0FBVixFQUFhLENBQUMsQ0FBZCxDQUFOO0FBQ0Q7O0FBRUQsTUFBSUosT0FBTyxDQUFDSyxJQUFaLEVBQWtCO0FBQ2hCO0FBQ0FOLElBQUFBLEdBQUcsSUFBSUMsT0FBTyxDQUFDSyxJQUFmO0FBQ0QsR0FyQnNDLENBcUJyQztBQUNGOzs7QUFHQSxNQUFJLG9CQUFvQkYsSUFBcEIsQ0FBeUJKLEdBQXpCLEtBQWlDQyxPQUFPLENBQUNNLFVBQTdDLEVBQXlEO0FBQ3ZELFdBQU8sS0FBS0MsTUFBTCxDQUFZUixHQUFHLENBQUNTLE9BQUosQ0FBWSxJQUFaLEVBQWtCLEtBQWxCLEVBQXlCQSxPQUF6QixDQUFpQyxLQUFqQyxFQUF3QyxLQUF4QyxDQUFaLEVBQTRELElBQTVELENBQVA7QUFDRDs7QUFFRCxTQUFPVCxHQUFQO0FBQ0QsQ0E5QkQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90aGVtZWFsLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2dldFVybC5qcz8xZGU1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh1cmwsIG9wdGlvbnMpIHtcbiAgaWYgKCFvcHRpb25zKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG5cbiAgaWYgKCF1cmwpIHtcbiAgICByZXR1cm4gdXJsO1xuICB9IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlcnNjb3JlLWRhbmdsZSwgbm8tcGFyYW0tcmVhc3NpZ25cblxuXG4gIHVybCA9IFN0cmluZyh1cmwuX19lc01vZHVsZSA/IHVybC5kZWZhdWx0IDogdXJsKTsgLy8gSWYgdXJsIGlzIGFscmVhZHkgd3JhcHBlZCBpbiBxdW90ZXMsIHJlbW92ZSB0aGVtXG5cbiAgaWYgKC9eWydcIl0uKlsnXCJdJC8udGVzdCh1cmwpKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgdXJsID0gdXJsLnNsaWNlKDEsIC0xKTtcbiAgfVxuXG4gIGlmIChvcHRpb25zLmhhc2gpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICB1cmwgKz0gb3B0aW9ucy5oYXNoO1xuICB9IC8vIFNob3VsZCB1cmwgYmUgd3JhcHBlZD9cbiAgLy8gU2VlIGh0dHBzOi8vZHJhZnRzLmNzc3dnLm9yZy9jc3MtdmFsdWVzLTMvI3VybHNcblxuXG4gIGlmICgvW1wiJygpIFxcdFxcbl18KCUyMCkvLnRlc3QodXJsKSB8fCBvcHRpb25zLm5lZWRRdW90ZXMpIHtcbiAgICByZXR1cm4gXCJcXFwiXCIuY29uY2F0KHVybC5yZXBsYWNlKC9cIi9nLCAnXFxcXFwiJykucmVwbGFjZSgvXFxuL2csIFwiXFxcXG5cIiksIFwiXFxcIlwiKTtcbiAgfVxuXG4gIHJldHVybiB1cmw7XG59OyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwidXJsIiwib3B0aW9ucyIsIlN0cmluZyIsIl9fZXNNb2R1bGUiLCJ0ZXN0Iiwic2xpY2UiLCJoYXNoIiwibmVlZFF1b3RlcyIsImNvbmNhdCIsInJlcGxhY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///662\n')},634:function(module,exports,__webpack_require__){eval('/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\n/*!\n * jQuery JavaScript Library v3.6.0\n * https://jquery.com/\n *\n * Includes Sizzle.js\n * https://sizzlejs.com/\n *\n * Copyright OpenJS Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2021-03-02T17:08Z\n */\n(function (global, factory) {\n  "use strict";\n\n  if (( false ? 0 : _typeof(module)) === "object" && _typeof(module.exports) === "object") {\n    // For CommonJS and CommonJS-like environments where a proper `window`\n    // is present, execute the factory and get jQuery.\n    // For environments that do not have a `window` with a `document`\n    // (such as Node.js), expose a factory as module.exports.\n    // This accentuates the need for the creation of a real `window`.\n    // e.g. var jQuery = require("jquery")(window);\n    // See ticket #14549 for more info.\n    module.exports = global.document ? factory(global, true) : function (w) {\n      if (!w.document) {\n        throw new Error("jQuery requires a window with a document");\n      }\n\n      return factory(w);\n    };\n  } else {\n    factory(global);\n  } // Pass this if window is not defined yet\n\n})(typeof window !== "undefined" ? window : this, function (window, noGlobal) {\n  // Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\n  // throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\n  // arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\n  // enough that all such attempts are guarded in a try block.\n  "use strict";\n\n  var arr = [];\n  var getProto = Object.getPrototypeOf;\n  var _slice = arr.slice;\n  var flat = arr.flat ? function (array) {\n    return arr.flat.call(array);\n  } : function (array) {\n    return arr.concat.apply([], array);\n  };\n  var push = arr.push;\n  var indexOf = arr.indexOf;\n  var class2type = {};\n  var toString = class2type.toString;\n  var hasOwn = class2type.hasOwnProperty;\n  var fnToString = hasOwn.toString;\n  var ObjectFunctionString = fnToString.call(Object);\n  var support = {};\n\n  var isFunction = function isFunction(obj) {\n    // Support: Chrome <=57, Firefox <=52\n    // In some browsers, typeof returns "function" for HTML <object> elements\n    // (i.e., `typeof document.createElement( "object" ) === "function"`).\n    // We don\'t want to classify *any* DOM node as a function.\n    // Support: QtWeb <=3.8.5, WebKit <=534.34, wkhtmltopdf tool <=0.12.5\n    // Plus for old WebKit, typeof returns "function" for HTML collections\n    // (e.g., `typeof document.getElementsByTagName("div") === "function"`). (gh-4756)\n    return typeof obj === "function" && typeof obj.nodeType !== "number" && typeof obj.item !== "function";\n  };\n\n  var isWindow = function isWindow(obj) {\n    return obj != null && obj === obj.window;\n  };\n\n  var document = window.document;\n  var preservedScriptAttributes = {\n    type: true,\n    src: true,\n    nonce: true,\n    noModule: true\n  };\n\n  function DOMEval(code, node, doc) {\n    doc = doc || document;\n    var i,\n        val,\n        script = doc.createElement("script");\n    script.text = code;\n\n    if (node) {\n      for (i in preservedScriptAttributes) {\n        // Support: Firefox 64+, Edge 18+\n        // Some browsers don\'t support the "nonce" property on scripts.\n        // On the other hand, just using `getAttribute` is not enough as\n        // the `nonce` attribute is reset to an empty string whenever it\n        // becomes browsing-context connected.\n        // See https://github.com/whatwg/html/issues/2369\n        // See https://html.spec.whatwg.org/#nonce-attributes\n        // The `node.getAttribute` check was added for the sake of\n        // `jQuery.globalEval` so that it can fake a nonce-containing node\n        // via an object.\n        val = node[i] || node.getAttribute && node.getAttribute(i);\n\n        if (val) {\n          script.setAttribute(i, val);\n        }\n      }\n    }\n\n    doc.head.appendChild(script).parentNode.removeChild(script);\n  }\n\n  function toType(obj) {\n    if (obj == null) {\n      return obj + "";\n    } // Support: Android <=2.3 only (functionish RegExp)\n\n\n    return _typeof(obj) === "object" || typeof obj === "function" ? class2type[toString.call(obj)] || "object" : _typeof(obj);\n  }\n  /* global Symbol */\n  // Defining this global in .eslintrc.json would create a danger of using the global\n  // unguarded in another place, it seems safer to define global only for this module\n\n\n  var version = "3.6.0",\n      // Define a local copy of jQuery\n  jQuery = function jQuery(selector, context) {\n    // The jQuery object is actually just the init constructor \'enhanced\'\n    // Need init if jQuery is called (just allow error to be thrown if not included)\n    return new jQuery.fn.init(selector, context);\n  };\n\n  jQuery.fn = jQuery.prototype = {\n    // The current version of jQuery being used\n    jquery: version,\n    constructor: jQuery,\n    // The default length of a jQuery object is 0\n    length: 0,\n    toArray: function toArray() {\n      return _slice.call(this);\n    },\n    // Get the Nth element in the matched element set OR\n    // Get the whole matched element set as a clean array\n    get: function get(num) {\n      // Return all the elements in a clean array\n      if (num == null) {\n        return _slice.call(this);\n      } // Return just the one element from the set\n\n\n      return num < 0 ? this[num + this.length] : this[num];\n    },\n    // Take an array of elements and push it onto the stack\n    // (returning the new matched element set)\n    pushStack: function pushStack(elems) {\n      // Build a new jQuery matched element set\n      var ret = jQuery.merge(this.constructor(), elems); // Add the old object onto the stack (as a reference)\n\n      ret.prevObject = this; // Return the newly-formed element set\n\n      return ret;\n    },\n    // Execute a callback for every element in the matched set.\n    each: function each(callback) {\n      return jQuery.each(this, callback);\n    },\n    map: function map(callback) {\n      return this.pushStack(jQuery.map(this, function (elem, i) {\n        return callback.call(elem, i, elem);\n      }));\n    },\n    slice: function slice() {\n      return this.pushStack(_slice.apply(this, arguments));\n    },\n    first: function first() {\n      return this.eq(0);\n    },\n    last: function last() {\n      return this.eq(-1);\n    },\n    even: function even() {\n      return this.pushStack(jQuery.grep(this, function (_elem, i) {\n        return (i + 1) % 2;\n      }));\n    },\n    odd: function odd() {\n      return this.pushStack(jQuery.grep(this, function (_elem, i) {\n        return i % 2;\n      }));\n    },\n    eq: function eq(i) {\n      var len = this.length,\n          j = +i + (i < 0 ? len : 0);\n      return this.pushStack(j >= 0 && j < len ? [this[j]] : []);\n    },\n    end: function end() {\n      return this.prevObject || this.constructor();\n    },\n    // For internal use only.\n    // Behaves like an Array\'s method, not like a jQuery method.\n    push: push,\n    sort: arr.sort,\n    splice: arr.splice\n  };\n\n  jQuery.extend = jQuery.fn.extend = function () {\n    var options,\n        name,\n        src,\n        copy,\n        copyIsArray,\n        clone,\n        target = arguments[0] || {},\n        i = 1,\n        length = arguments.length,\n        deep = false; // Handle a deep copy situation\n\n    if (typeof target === "boolean") {\n      deep = target; // Skip the boolean and the target\n\n      target = arguments[i] || {};\n      i++;\n    } // Handle case when target is a string or something (possible in deep copy)\n\n\n    if (_typeof(target) !== "object" && !isFunction(target)) {\n      target = {};\n    } // Extend jQuery itself if only one argument is passed\n\n\n    if (i === length) {\n      target = this;\n      i--;\n    }\n\n    for (; i < length; i++) {\n      // Only deal with non-null/undefined values\n      if ((options = arguments[i]) != null) {\n        // Extend the base object\n        for (name in options) {\n          copy = options[name]; // Prevent Object.prototype pollution\n          // Prevent never-ending loop\n\n          if (name === "__proto__" || target === copy) {\n            continue;\n          } // Recurse if we\'re merging plain objects or arrays\n\n\n          if (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {\n            src = target[name]; // Ensure proper type for the source value\n\n            if (copyIsArray && !Array.isArray(src)) {\n              clone = [];\n            } else if (!copyIsArray && !jQuery.isPlainObject(src)) {\n              clone = {};\n            } else {\n              clone = src;\n            }\n\n            copyIsArray = false; // Never move original objects, clone them\n\n            target[name] = jQuery.extend(deep, clone, copy); // Don\'t bring in undefined values\n          } else if (copy !== undefined) {\n            target[name] = copy;\n          }\n        }\n      }\n    } // Return the modified object\n\n\n    return target;\n  };\n\n  jQuery.extend({\n    // Unique for each copy of jQuery on the page\n    expando: "jQuery" + (version + Math.random()).replace(/\\D/g, ""),\n    // Assume jQuery is ready without the ready module\n    isReady: true,\n    error: function error(msg) {\n      throw new Error(msg);\n    },\n    noop: function noop() {},\n    isPlainObject: function isPlainObject(obj) {\n      var proto, Ctor; // Detect obvious negatives\n      // Use toString instead of jQuery.type to catch host objects\n\n      if (!obj || toString.call(obj) !== "[object Object]") {\n        return false;\n      }\n\n      proto = getProto(obj); // Objects with no prototype (e.g., `Object.create( null )`) are plain\n\n      if (!proto) {\n        return true;\n      } // Objects with prototype are plain iff they were constructed by a global Object function\n\n\n      Ctor = hasOwn.call(proto, "constructor") && proto.constructor;\n      return typeof Ctor === "function" && fnToString.call(Ctor) === ObjectFunctionString;\n    },\n    isEmptyObject: function isEmptyObject(obj) {\n      var name;\n\n      for (name in obj) {\n        return false;\n      }\n\n      return true;\n    },\n    // Evaluates a script in a provided context; falls back to the global one\n    // if not specified.\n    globalEval: function globalEval(code, options, doc) {\n      DOMEval(code, {\n        nonce: options && options.nonce\n      }, doc);\n    },\n    each: function each(obj, callback) {\n      var length,\n          i = 0;\n\n      if (isArrayLike(obj)) {\n        length = obj.length;\n\n        for (; i < length; i++) {\n          if (callback.call(obj[i], i, obj[i]) === false) {\n            break;\n          }\n        }\n      } else {\n        for (i in obj) {\n          if (callback.call(obj[i], i, obj[i]) === false) {\n            break;\n          }\n        }\n      }\n\n      return obj;\n    },\n    // results is for internal usage only\n    makeArray: function makeArray(arr, results) {\n      var ret = results || [];\n\n      if (arr != null) {\n        if (isArrayLike(Object(arr))) {\n          jQuery.merge(ret, typeof arr === "string" ? [arr] : arr);\n        } else {\n          push.call(ret, arr);\n        }\n      }\n\n      return ret;\n    },\n    inArray: function inArray(elem, arr, i) {\n      return arr == null ? -1 : indexOf.call(arr, elem, i);\n    },\n    // Support: Android <=4.0 only, PhantomJS 1 only\n    // push.apply(_, arraylike) throws on ancient WebKit\n    merge: function merge(first, second) {\n      var len = +second.length,\n          j = 0,\n          i = first.length;\n\n      for (; j < len; j++) {\n        first[i++] = second[j];\n      }\n\n      first.length = i;\n      return first;\n    },\n    grep: function grep(elems, callback, invert) {\n      var callbackInverse,\n          matches = [],\n          i = 0,\n          length = elems.length,\n          callbackExpect = !invert; // Go through the array, only saving the items\n      // that pass the validator function\n\n      for (; i < length; i++) {\n        callbackInverse = !callback(elems[i], i);\n\n        if (callbackInverse !== callbackExpect) {\n          matches.push(elems[i]);\n        }\n      }\n\n      return matches;\n    },\n    // arg is for internal usage only\n    map: function map(elems, callback, arg) {\n      var length,\n          value,\n          i = 0,\n          ret = []; // Go through the array, translating each of the items to their new values\n\n      if (isArrayLike(elems)) {\n        length = elems.length;\n\n        for (; i < length; i++) {\n          value = callback(elems[i], i, arg);\n\n          if (value != null) {\n            ret.push(value);\n          }\n        } // Go through every key on the object,\n\n      } else {\n        for (i in elems) {\n          value = callback(elems[i], i, arg);\n\n          if (value != null) {\n            ret.push(value);\n          }\n        }\n      } // Flatten any nested arrays\n\n\n      return flat(ret);\n    },\n    // A global GUID counter for objects\n    guid: 1,\n    // jQuery.support is not used in Core but other projects attach their\n    // properties to it so it needs to exist.\n    support: support\n  });\n\n  if (typeof Symbol === "function") {\n    jQuery.fn[Symbol.iterator] = arr[Symbol.iterator];\n  } // Populate the class2type map\n\n\n  jQuery.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function (_i, name) {\n    class2type["[object " + name + "]"] = name.toLowerCase();\n  });\n\n  function isArrayLike(obj) {\n    // Support: real iOS 8.2 only (not reproducible in simulator)\n    // `in` check used to prevent JIT error (gh-2145)\n    // hasOwn isn\'t used here due to false negatives\n    // regarding Nodelist length in IE\n    var length = !!obj && "length" in obj && obj.length,\n        type = toType(obj);\n\n    if (isFunction(obj) || isWindow(obj)) {\n      return false;\n    }\n\n    return type === "array" || length === 0 || typeof length === "number" && length > 0 && length - 1 in obj;\n  }\n\n  var Sizzle =\n  /*!\n   * Sizzle CSS Selector Engine v2.3.6\n   * https://sizzlejs.com/\n   *\n   * Copyright JS Foundation and other contributors\n   * Released under the MIT license\n   * https://js.foundation/\n   *\n   * Date: 2021-02-16\n   */\n  function (window) {\n    var i,\n        support,\n        Expr,\n        getText,\n        isXML,\n        tokenize,\n        compile,\n        select,\n        outermostContext,\n        sortInput,\n        hasDuplicate,\n        // Local document vars\n    setDocument,\n        document,\n        docElem,\n        documentIsHTML,\n        rbuggyQSA,\n        rbuggyMatches,\n        matches,\n        contains,\n        // Instance-specific data\n    expando = "sizzle" + 1 * new Date(),\n        preferredDoc = window.document,\n        dirruns = 0,\n        done = 0,\n        classCache = createCache(),\n        tokenCache = createCache(),\n        compilerCache = createCache(),\n        nonnativeSelectorCache = createCache(),\n        sortOrder = function sortOrder(a, b) {\n      if (a === b) {\n        hasDuplicate = true;\n      }\n\n      return 0;\n    },\n        // Instance methods\n    hasOwn = {}.hasOwnProperty,\n        arr = [],\n        pop = arr.pop,\n        pushNative = arr.push,\n        push = arr.push,\n        slice = arr.slice,\n        // Use a stripped-down indexOf as it\'s faster than native\n    // https://jsperf.com/thor-indexof-vs-for/5\n    indexOf = function indexOf(list, elem) {\n      var i = 0,\n          len = list.length;\n\n      for (; i < len; i++) {\n        if (list[i] === elem) {\n          return i;\n        }\n      }\n\n      return -1;\n    },\n        booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|" + "ismap|loop|multiple|open|readonly|required|scoped",\n        // Regular expressions\n    // http://www.w3.org/TR/css3-selectors/#whitespace\n    whitespace = "[\\\\x20\\\\t\\\\r\\\\n\\\\f]",\n        // https://www.w3.org/TR/css-syntax-3/#ident-token-diagram\n    identifier = "(?:\\\\\\\\[\\\\da-fA-F]{1,6}" + whitespace + "?|\\\\\\\\[^\\\\r\\\\n\\\\f]|[\\\\w-]|[^\\0-\\\\x7f])+",\n        // Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n    attributes = "\\\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace + // Operator (capture 2)\n    "*([*^$|!~]?=)" + whitespace + // "Attribute values must be CSS identifiers [capture 5]\n    // or strings [capture 3 or capture 4]"\n    "*(?:\'((?:\\\\\\\\.|[^\\\\\\\\\'])*)\'|\\"((?:\\\\\\\\.|[^\\\\\\\\\\"])*)\\"|(" + identifier + "))|)" + whitespace + "*\\\\]",\n        pseudos = ":(" + identifier + ")(?:\\\\((" + // To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n    // 1. quoted (capture 3; capture 4 or capture 5)\n    "(\'((?:\\\\\\\\.|[^\\\\\\\\\'])*)\'|\\"((?:\\\\\\\\.|[^\\\\\\\\\\"])*)\\")|" + // 2. simple (capture 6)\n    "((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|" + attributes + ")*)|" + // 3. anything else (capture 2)\n    ".*" + ")\\\\)|)",\n        // Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n    rwhitespace = new RegExp(whitespace + "+", "g"),\n        rtrim = new RegExp("^" + whitespace + "+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)" + whitespace + "+$", "g"),\n        rcomma = new RegExp("^" + whitespace + "*," + whitespace + "*"),\n        rcombinators = new RegExp("^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*"),\n        rdescend = new RegExp(whitespace + "|>"),\n        rpseudo = new RegExp(pseudos),\n        ridentifier = new RegExp("^" + identifier + "$"),\n        matchExpr = {\n      "ID": new RegExp("^#(" + identifier + ")"),\n      "CLASS": new RegExp("^\\\\.(" + identifier + ")"),\n      "TAG": new RegExp("^(" + identifier + "|[*])"),\n      "ATTR": new RegExp("^" + attributes),\n      "PSEUDO": new RegExp("^" + pseudos),\n      "CHILD": new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(" + whitespace + "*(even|odd|(([+-]|)(\\\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace + "*(\\\\d+)|))" + whitespace + "*\\\\)|)", "i"),\n      "bool": new RegExp("^(?:" + booleans + ")$", "i"),\n      // For use in libraries implementing .is()\n      // We use this for POS matching in `select`\n      "needsContext": new RegExp("^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(" + whitespace + "*((?:-\\\\d)?\\\\d*)" + whitespace + "*\\\\)|)(?=[^-]|$)", "i")\n    },\n        rhtml = /HTML$/i,\n        rinputs = /^(?:input|select|textarea|button)$/i,\n        rheader = /^h\\d$/i,\n        rnative = /^[^{]+\\{\\s*\\[native \\w/,\n        // Easily-parseable/retrievable ID or TAG or CLASS selectors\n    rquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n        rsibling = /[+~]/,\n        // CSS escapes\n    // http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n    runescape = new RegExp("\\\\\\\\[\\\\da-fA-F]{1,6}" + whitespace + "?|\\\\\\\\([^\\\\r\\\\n\\\\f])", "g"),\n        funescape = function funescape(escape, nonHex) {\n      var high = "0x" + escape.slice(1) - 0x10000;\n      return nonHex ? // Strip the backslash prefix from a non-hex escape sequence\n      nonHex : // Replace a hexadecimal escape sequence with the encoded Unicode code point\n      // Support: IE <=11+\n      // For values outside the Basic Multilingual Plane (BMP), manually construct a\n      // surrogate pair\n      high < 0 ? String.fromCharCode(high + 0x10000) : String.fromCharCode(high >> 10 | 0xD800, high & 0x3FF | 0xDC00);\n    },\n        // CSS string/identifier serialization\n    // https://drafts.csswg.org/cssom/#common-serializing-idioms\n    rcssescape = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,\n        fcssescape = function fcssescape(ch, asCodePoint) {\n      if (asCodePoint) {\n        // U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n        if (ch === "\\0") {\n          return "\\uFFFD";\n        } // Control characters and (dependent upon position) numbers get escaped as code points\n\n\n        return ch.slice(0, -1) + "\\\\" + ch.charCodeAt(ch.length - 1).toString(16) + " ";\n      } // Other potentially-special ASCII characters get backslash-escaped\n\n\n      return "\\\\" + ch;\n    },\n        // Used for iframes\n    // See setDocument()\n    // Removing the function wrapper causes a "Permission Denied"\n    // error in IE\n    unloadHandler = function unloadHandler() {\n      setDocument();\n    },\n        inDisabledFieldset = addCombinator(function (elem) {\n      return elem.disabled === true && elem.nodeName.toLowerCase() === "fieldset";\n    }, {\n      dir: "parentNode",\n      next: "legend"\n    }); // Optimize for push.apply( _, NodeList )\n\n\n    try {\n      push.apply(arr = slice.call(preferredDoc.childNodes), preferredDoc.childNodes); // Support: Android<4.0\n      // Detect silently failing push.apply\n      // eslint-disable-next-line no-unused-expressions\n\n      arr[preferredDoc.childNodes.length].nodeType;\n    } catch (e) {\n      push = {\n        apply: arr.length ? // Leverage slice if possible\n        function (target, els) {\n          pushNative.apply(target, slice.call(els));\n        } : // Support: IE<9\n        // Otherwise append directly\n        function (target, els) {\n          var j = target.length,\n              i = 0; // Can\'t trust NodeList.length\n\n          while (target[j++] = els[i++]) {}\n\n          target.length = j - 1;\n        }\n      };\n    }\n\n    function Sizzle(selector, context, results, seed) {\n      var m,\n          i,\n          elem,\n          nid,\n          match,\n          groups,\n          newSelector,\n          newContext = context && context.ownerDocument,\n          // nodeType defaults to 9, since context defaults to document\n      nodeType = context ? context.nodeType : 9;\n      results = results || []; // Return early from calls with invalid selector or context\n\n      if (typeof selector !== "string" || !selector || nodeType !== 1 && nodeType !== 9 && nodeType !== 11) {\n        return results;\n      } // Try to shortcut find operations (as opposed to filters) in HTML documents\n\n\n      if (!seed) {\n        setDocument(context);\n        context = context || document;\n\n        if (documentIsHTML) {\n          // If the selector is sufficiently simple, try using a "get*By*" DOM method\n          // (excepting DocumentFragment context, where the methods don\'t exist)\n          if (nodeType !== 11 && (match = rquickExpr.exec(selector))) {\n            // ID selector\n            if (m = match[1]) {\n              // Document context\n              if (nodeType === 9) {\n                if (elem = context.getElementById(m)) {\n                  // Support: IE, Opera, Webkit\n                  // TODO: identify versions\n                  // getElementById can match elements by name instead of ID\n                  if (elem.id === m) {\n                    results.push(elem);\n                    return results;\n                  }\n                } else {\n                  return results;\n                } // Element context\n\n              } else {\n                // Support: IE, Opera, Webkit\n                // TODO: identify versions\n                // getElementById can match elements by name instead of ID\n                if (newContext && (elem = newContext.getElementById(m)) && contains(context, elem) && elem.id === m) {\n                  results.push(elem);\n                  return results;\n                }\n              } // Type selector\n\n            } else if (match[2]) {\n              push.apply(results, context.getElementsByTagName(selector));\n              return results; // Class selector\n            } else if ((m = match[3]) && support.getElementsByClassName && context.getElementsByClassName) {\n              push.apply(results, context.getElementsByClassName(m));\n              return results;\n            }\n          } // Take advantage of querySelectorAll\n\n\n          if (support.qsa && !nonnativeSelectorCache[selector + " "] && (!rbuggyQSA || !rbuggyQSA.test(selector)) && (nodeType !== 1 || context.nodeName.toLowerCase() !== "object")) {\n            newSelector = selector;\n            newContext = context; // qSA considers elements outside a scoping root when evaluating child or\n            // descendant combinators, which is not what we want.\n            // In such cases, we work around the behavior by prefixing every selector in the\n            // list with an ID selector referencing the scope context.\n            // The technique has to be used as well when a leading combinator is used\n            // as such selectors are not recognized by querySelectorAll.\n            // Thanks to Andrew Dupont for this technique.\n\n            if (nodeType === 1 && (rdescend.test(selector) || rcombinators.test(selector))) {\n              // Expand context for sibling selectors\n              newContext = rsibling.test(selector) && testContext(context.parentNode) || context; // We can use :scope instead of the ID hack if the browser\n              // supports it & if we\'re not changing the context.\n\n              if (newContext !== context || !support.scope) {\n                // Capture the context ID, setting it first if necessary\n                if (nid = context.getAttribute("id")) {\n                  nid = nid.replace(rcssescape, fcssescape);\n                } else {\n                  context.setAttribute("id", nid = expando);\n                }\n              } // Prefix every selector in the list\n\n\n              groups = tokenize(selector);\n              i = groups.length;\n\n              while (i--) {\n                groups[i] = (nid ? "#" + nid : ":scope") + " " + toSelector(groups[i]);\n              }\n\n              newSelector = groups.join(",");\n            }\n\n            try {\n              push.apply(results, newContext.querySelectorAll(newSelector));\n              return results;\n            } catch (qsaError) {\n              nonnativeSelectorCache(selector, true);\n            } finally {\n              if (nid === expando) {\n                context.removeAttribute("id");\n              }\n            }\n          }\n        }\n      } // All others\n\n\n      return select(selector.replace(rtrim, "$1"), context, results, seed);\n    }\n    /**\n     * Create key-value caches of limited size\n     * @returns {function(string, object)} Returns the Object data after storing it on itself with\n     *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n     *\tdeleting the oldest entry\n     */\n\n\n    function createCache() {\n      var keys = [];\n\n      function cache(key, value) {\n        // Use (key + " ") to avoid collision with native prototype properties (see Issue #157)\n        if (keys.push(key + " ") > Expr.cacheLength) {\n          // Only keep the most recent entries\n          delete cache[keys.shift()];\n        }\n\n        return cache[key + " "] = value;\n      }\n\n      return cache;\n    }\n    /**\n     * Mark a function for special use by Sizzle\n     * @param {Function} fn The function to mark\n     */\n\n\n    function markFunction(fn) {\n      fn[expando] = true;\n      return fn;\n    }\n    /**\n     * Support testing using an element\n     * @param {Function} fn Passed the created element and returns a boolean result\n     */\n\n\n    function assert(fn) {\n      var el = document.createElement("fieldset");\n\n      try {\n        return !!fn(el);\n      } catch (e) {\n        return false;\n      } finally {\n        // Remove from its parent by default\n        if (el.parentNode) {\n          el.parentNode.removeChild(el);\n        } // release memory in IE\n\n\n        el = null;\n      }\n    }\n    /**\n     * Adds the same handler for all of the specified attrs\n     * @param {String} attrs Pipe-separated list of attributes\n     * @param {Function} handler The method that will be applied\n     */\n\n\n    function addHandle(attrs, handler) {\n      var arr = attrs.split("|"),\n          i = arr.length;\n\n      while (i--) {\n        Expr.attrHandle[arr[i]] = handler;\n      }\n    }\n    /**\n     * Checks document order of two siblings\n     * @param {Element} a\n     * @param {Element} b\n     * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n     */\n\n\n    function siblingCheck(a, b) {\n      var cur = b && a,\n          diff = cur && a.nodeType === 1 && b.nodeType === 1 && a.sourceIndex - b.sourceIndex; // Use IE sourceIndex if available on both nodes\n\n      if (diff) {\n        return diff;\n      } // Check if b follows a\n\n\n      if (cur) {\n        while (cur = cur.nextSibling) {\n          if (cur === b) {\n            return -1;\n          }\n        }\n      }\n\n      return a ? 1 : -1;\n    }\n    /**\n     * Returns a function to use in pseudos for input types\n     * @param {String} type\n     */\n\n\n    function createInputPseudo(type) {\n      return function (elem) {\n        var name = elem.nodeName.toLowerCase();\n        return name === "input" && elem.type === type;\n      };\n    }\n    /**\n     * Returns a function to use in pseudos for buttons\n     * @param {String} type\n     */\n\n\n    function createButtonPseudo(type) {\n      return function (elem) {\n        var name = elem.nodeName.toLowerCase();\n        return (name === "input" || name === "button") && elem.type === type;\n      };\n    }\n    /**\n     * Returns a function to use in pseudos for :enabled/:disabled\n     * @param {Boolean} disabled true for :disabled; false for :enabled\n     */\n\n\n    function createDisabledPseudo(disabled) {\n      // Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\n      return function (elem) {\n        // Only certain elements can match :enabled or :disabled\n        // https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\n        // https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\n        if ("form" in elem) {\n          // Check for inherited disabledness on relevant non-disabled elements:\n          // * listed form-associated elements in a disabled fieldset\n          //   https://html.spec.whatwg.org/multipage/forms.html#category-listed\n          //   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\n          // * option elements in a disabled optgroup\n          //   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\n          // All such elements have a "form" property.\n          if (elem.parentNode && elem.disabled === false) {\n            // Option elements defer to a parent optgroup if present\n            if ("label" in elem) {\n              if ("label" in elem.parentNode) {\n                return elem.parentNode.disabled === disabled;\n              } else {\n                return elem.disabled === disabled;\n              }\n            } // Support: IE 6 - 11\n            // Use the isDisabled shortcut property to check for disabled fieldset ancestors\n\n\n            return elem.isDisabled === disabled || // Where there is no isDisabled, check manually\n\n            /* jshint -W018 */\n            elem.isDisabled !== !disabled && inDisabledFieldset(elem) === disabled;\n          }\n\n          return elem.disabled === disabled; // Try to winnow out elements that can\'t be disabled before trusting the disabled property.\n          // Some victims get caught in our net (label, legend, menu, track), but it shouldn\'t\n          // even exist on them, let alone have a boolean value.\n        } else if ("label" in elem) {\n          return elem.disabled === disabled;\n        } // Remaining elements are neither :enabled nor :disabled\n\n\n        return false;\n      };\n    }\n    /**\n     * Returns a function to use in pseudos for positionals\n     * @param {Function} fn\n     */\n\n\n    function createPositionalPseudo(fn) {\n      return markFunction(function (argument) {\n        argument = +argument;\n        return markFunction(function (seed, matches) {\n          var j,\n              matchIndexes = fn([], seed.length, argument),\n              i = matchIndexes.length; // Match elements found at the specified indexes\n\n          while (i--) {\n            if (seed[j = matchIndexes[i]]) {\n              seed[j] = !(matches[j] = seed[j]);\n            }\n          }\n        });\n      });\n    }\n    /**\n     * Checks a node for validity as a Sizzle context\n     * @param {Element|Object=} context\n     * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n     */\n\n\n    function testContext(context) {\n      return context && typeof context.getElementsByTagName !== "undefined" && context;\n    } // Expose support vars for convenience\n\n\n    support = Sizzle.support = {};\n    /**\n     * Detects XML nodes\n     * @param {Element|Object} elem An element or a document\n     * @returns {Boolean} True iff elem is a non-HTML XML node\n     */\n\n    isXML = Sizzle.isXML = function (elem) {\n      var namespace = elem && elem.namespaceURI,\n          docElem = elem && (elem.ownerDocument || elem).documentElement; // Support: IE <=8\n      // Assume HTML when documentElement doesn\'t yet exist, such as inside loading iframes\n      // https://bugs.jquery.com/ticket/4833\n\n      return !rhtml.test(namespace || docElem && docElem.nodeName || "HTML");\n    };\n    /**\n     * Sets document-related variables once based on the current document\n     * @param {Element|Object} [doc] An element or document object to use to set the document\n     * @returns {Object} Returns the current document\n     */\n\n\n    setDocument = Sizzle.setDocument = function (node) {\n      var hasCompare,\n          subWindow,\n          doc = node ? node.ownerDocument || node : preferredDoc; // Return early if doc is invalid or already selected\n      // Support: IE 11+, Edge 17 - 18+\n      // IE/Edge sometimes throw a "Permission denied" error when strict-comparing\n      // two documents; shallow comparisons work.\n      // eslint-disable-next-line eqeqeq\n\n      if (doc == document || doc.nodeType !== 9 || !doc.documentElement) {\n        return document;\n      } // Update global variables\n\n\n      document = doc;\n      docElem = document.documentElement;\n      documentIsHTML = !isXML(document); // Support: IE 9 - 11+, Edge 12 - 18+\n      // Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)\n      // Support: IE 11+, Edge 17 - 18+\n      // IE/Edge sometimes throw a "Permission denied" error when strict-comparing\n      // two documents; shallow comparisons work.\n      // eslint-disable-next-line eqeqeq\n\n      if (preferredDoc != document && (subWindow = document.defaultView) && subWindow.top !== subWindow) {\n        // Support: IE 11, Edge\n        if (subWindow.addEventListener) {\n          subWindow.addEventListener("unload", unloadHandler, false); // Support: IE 9 - 10 only\n        } else if (subWindow.attachEvent) {\n          subWindow.attachEvent("onunload", unloadHandler);\n        }\n      } // Support: IE 8 - 11+, Edge 12 - 18+, Chrome <=16 - 25 only, Firefox <=3.6 - 31 only,\n      // Safari 4 - 5 only, Opera <=11.6 - 12.x only\n      // IE/Edge & older browsers don\'t support the :scope pseudo-class.\n      // Support: Safari 6.0 only\n      // Safari 6.0 supports :scope but it\'s an alias of :root there.\n\n\n      support.scope = assert(function (el) {\n        docElem.appendChild(el).appendChild(document.createElement("div"));\n        return typeof el.querySelectorAll !== "undefined" && !el.querySelectorAll(":scope fieldset div").length;\n      });\n      /* Attributes\n      ---------------------------------------------------------------------- */\n      // Support: IE<8\n      // Verify that getAttribute really returns attributes and not properties\n      // (excepting IE8 booleans)\n\n      support.attributes = assert(function (el) {\n        el.className = "i";\n        return !el.getAttribute("className");\n      });\n      /* getElement(s)By*\n      ---------------------------------------------------------------------- */\n      // Check if getElementsByTagName("*") returns only elements\n\n      support.getElementsByTagName = assert(function (el) {\n        el.appendChild(document.createComment(""));\n        return !el.getElementsByTagName("*").length;\n      }); // Support: IE<9\n\n      support.getElementsByClassName = rnative.test(document.getElementsByClassName); // Support: IE<10\n      // Check if getElementById returns elements by name\n      // The broken getElementById methods don\'t pick up programmatically-set names,\n      // so use a roundabout getElementsByName test\n\n      support.getById = assert(function (el) {\n        docElem.appendChild(el).id = expando;\n        return !document.getElementsByName || !document.getElementsByName(expando).length;\n      }); // ID filter and find\n\n      if (support.getById) {\n        Expr.filter["ID"] = function (id) {\n          var attrId = id.replace(runescape, funescape);\n          return function (elem) {\n            return elem.getAttribute("id") === attrId;\n          };\n        };\n\n        Expr.find["ID"] = function (id, context) {\n          if (typeof context.getElementById !== "undefined" && documentIsHTML) {\n            var elem = context.getElementById(id);\n            return elem ? [elem] : [];\n          }\n        };\n      } else {\n        Expr.filter["ID"] = function (id) {\n          var attrId = id.replace(runescape, funescape);\n          return function (elem) {\n            var node = typeof elem.getAttributeNode !== "undefined" && elem.getAttributeNode("id");\n            return node && node.value === attrId;\n          };\n        }; // Support: IE 6 - 7 only\n        // getElementById is not reliable as a find shortcut\n\n\n        Expr.find["ID"] = function (id, context) {\n          if (typeof context.getElementById !== "undefined" && documentIsHTML) {\n            var node,\n                i,\n                elems,\n                elem = context.getElementById(id);\n\n            if (elem) {\n              // Verify the id attribute\n              node = elem.getAttributeNode("id");\n\n              if (node && node.value === id) {\n                return [elem];\n              } // Fall back on getElementsByName\n\n\n              elems = context.getElementsByName(id);\n              i = 0;\n\n              while (elem = elems[i++]) {\n                node = elem.getAttributeNode("id");\n\n                if (node && node.value === id) {\n                  return [elem];\n                }\n              }\n            }\n\n            return [];\n          }\n        };\n      } // Tag\n\n\n      Expr.find["TAG"] = support.getElementsByTagName ? function (tag, context) {\n        if (typeof context.getElementsByTagName !== "undefined") {\n          return context.getElementsByTagName(tag); // DocumentFragment nodes don\'t have gEBTN\n        } else if (support.qsa) {\n          return context.querySelectorAll(tag);\n        }\n      } : function (tag, context) {\n        var elem,\n            tmp = [],\n            i = 0,\n            // By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n        results = context.getElementsByTagName(tag); // Filter out possible comments\n\n        if (tag === "*") {\n          while (elem = results[i++]) {\n            if (elem.nodeType === 1) {\n              tmp.push(elem);\n            }\n          }\n\n          return tmp;\n        }\n\n        return results;\n      }; // Class\n\n      Expr.find["CLASS"] = support.getElementsByClassName && function (className, context) {\n        if (typeof context.getElementsByClassName !== "undefined" && documentIsHTML) {\n          return context.getElementsByClassName(className);\n        }\n      };\n      /* QSA/matchesSelector\n      ---------------------------------------------------------------------- */\n      // QSA and matchesSelector support\n      // matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\n\n      rbuggyMatches = []; // qSa(:focus) reports false when true (Chrome 21)\n      // We allow this because of a bug in IE8/9 that throws an error\n      // whenever `document.activeElement` is accessed on an iframe\n      // So, we allow :focus to pass through QSA all the time to avoid the IE error\n      // See https://bugs.jquery.com/ticket/13378\n\n      rbuggyQSA = [];\n\n      if (support.qsa = rnative.test(document.querySelectorAll)) {\n        // Build QSA regex\n        // Regex strategy adopted from Diego Perini\n        assert(function (el) {\n          var input; // Select is set to empty string on purpose\n          // This is to test IE\'s treatment of not explicitly\n          // setting a boolean content attribute,\n          // since its presence should be enough\n          // https://bugs.jquery.com/ticket/12359\n\n          docElem.appendChild(el).innerHTML = "<a id=\'" + expando + "\'></a>" + "<select id=\'" + expando + "-\\r\\\\\' msallowcapture=\'\'>" + "<option selected=\'\'></option></select>"; // Support: IE8, Opera 11-12.16\n          // Nothing should be selected when empty strings follow ^= or $= or *=\n          // The test attribute must be unknown in Opera but "safe" for WinRT\n          // https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\n          if (el.querySelectorAll("[msallowcapture^=\'\']").length) {\n            rbuggyQSA.push("[*^$]=" + whitespace + "*(?:\'\'|\\"\\")");\n          } // Support: IE8\n          // Boolean attributes and "value" are not treated correctly\n\n\n          if (!el.querySelectorAll("[selected]").length) {\n            rbuggyQSA.push("\\\\[" + whitespace + "*(?:value|" + booleans + ")");\n          } // Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n\n\n          if (!el.querySelectorAll("[id~=" + expando + "-]").length) {\n            rbuggyQSA.push("~=");\n          } // Support: IE 11+, Edge 15 - 18+\n          // IE 11/Edge don\'t find elements on a `[name=\'\']` query in some cases.\n          // Adding a temporary attribute to the document before the selection works\n          // around the issue.\n          // Interestingly, IE 10 & older don\'t seem to have the issue.\n\n\n          input = document.createElement("input");\n          input.setAttribute("name", "");\n          el.appendChild(input);\n\n          if (!el.querySelectorAll("[name=\'\']").length) {\n            rbuggyQSA.push("\\\\[" + whitespace + "*name" + whitespace + "*=" + whitespace + "*(?:\'\'|\\"\\")");\n          } // Webkit/Opera - :checked should return selected option elements\n          // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n          // IE8 throws error here and will not see later tests\n\n\n          if (!el.querySelectorAll(":checked").length) {\n            rbuggyQSA.push(":checked");\n          } // Support: Safari 8+, iOS 8+\n          // https://bugs.webkit.org/show_bug.cgi?id=136851\n          // In-page `selector#id sibling-combinator selector` fails\n\n\n          if (!el.querySelectorAll("a#" + expando + "+*").length) {\n            rbuggyQSA.push(".#.+[+~]");\n          } // Support: Firefox <=3.6 - 5 only\n          // Old Firefox doesn\'t throw on a badly-escaped identifier.\n\n\n          el.querySelectorAll("\\\\\\f");\n          rbuggyQSA.push("[\\\\r\\\\n\\\\f]");\n        });\n        assert(function (el) {\n          el.innerHTML = "<a href=\'\' disabled=\'disabled\'></a>" + "<select disabled=\'disabled\'><option/></select>"; // Support: Windows 8 Native Apps\n          // The type and name attributes are restricted during .innerHTML assignment\n\n          var input = document.createElement("input");\n          input.setAttribute("type", "hidden");\n          el.appendChild(input).setAttribute("name", "D"); // Support: IE8\n          // Enforce case-sensitivity of name attribute\n\n          if (el.querySelectorAll("[name=d]").length) {\n            rbuggyQSA.push("name" + whitespace + "*[*^$|!~]?=");\n          } // FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n          // IE8 throws error here and will not see later tests\n\n\n          if (el.querySelectorAll(":enabled").length !== 2) {\n            rbuggyQSA.push(":enabled", ":disabled");\n          } // Support: IE9-11+\n          // IE\'s :disabled selector does not pick up the children of disabled fieldsets\n\n\n          docElem.appendChild(el).disabled = true;\n\n          if (el.querySelectorAll(":disabled").length !== 2) {\n            rbuggyQSA.push(":enabled", ":disabled");\n          } // Support: Opera 10 - 11 only\n          // Opera 10-11 does not throw on post-comma invalid pseudos\n\n\n          el.querySelectorAll("*,:x");\n          rbuggyQSA.push(",.*:");\n        });\n      }\n\n      if (support.matchesSelector = rnative.test(matches = docElem.matches || docElem.webkitMatchesSelector || docElem.mozMatchesSelector || docElem.oMatchesSelector || docElem.msMatchesSelector)) {\n        assert(function (el) {\n          // Check to see if it\'s possible to do matchesSelector\n          // on a disconnected node (IE 9)\n          support.disconnectedMatch = matches.call(el, "*"); // This should fail with an exception\n          // Gecko does not error, returns false instead\n\n          matches.call(el, "[s!=\'\']:x");\n          rbuggyMatches.push("!=", pseudos);\n        });\n      }\n\n      rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join("|"));\n      rbuggyMatches = rbuggyMatches.length && new RegExp(rbuggyMatches.join("|"));\n      /* Contains\n      ---------------------------------------------------------------------- */\n\n      hasCompare = rnative.test(docElem.compareDocumentPosition); // Element contains another\n      // Purposefully self-exclusive\n      // As in, an element does not contain itself\n\n      contains = hasCompare || rnative.test(docElem.contains) ? function (a, b) {\n        var adown = a.nodeType === 9 ? a.documentElement : a,\n            bup = b && b.parentNode;\n        return a === bup || !!(bup && bup.nodeType === 1 && (adown.contains ? adown.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16));\n      } : function (a, b) {\n        if (b) {\n          while (b = b.parentNode) {\n            if (b === a) {\n              return true;\n            }\n          }\n        }\n\n        return false;\n      };\n      /* Sorting\n      ---------------------------------------------------------------------- */\n      // Document order sorting\n\n      sortOrder = hasCompare ? function (a, b) {\n        // Flag for duplicate removal\n        if (a === b) {\n          hasDuplicate = true;\n          return 0;\n        } // Sort on method existence if only one input has compareDocumentPosition\n\n\n        var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\n        if (compare) {\n          return compare;\n        } // Calculate position if both inputs belong to the same document\n        // Support: IE 11+, Edge 17 - 18+\n        // IE/Edge sometimes throw a "Permission denied" error when strict-comparing\n        // two documents; shallow comparisons work.\n        // eslint-disable-next-line eqeqeq\n\n\n        compare = (a.ownerDocument || a) == (b.ownerDocument || b) ? a.compareDocumentPosition(b) : // Otherwise we know they are disconnected\n        1; // Disconnected nodes\n\n        if (compare & 1 || !support.sortDetached && b.compareDocumentPosition(a) === compare) {\n          // Choose the first element that is related to our preferred document\n          // Support: IE 11+, Edge 17 - 18+\n          // IE/Edge sometimes throw a "Permission denied" error when strict-comparing\n          // two documents; shallow comparisons work.\n          // eslint-disable-next-line eqeqeq\n          if (a == document || a.ownerDocument == preferredDoc && contains(preferredDoc, a)) {\n            return -1;\n          } // Support: IE 11+, Edge 17 - 18+\n          // IE/Edge sometimes throw a "Permission denied" error when strict-comparing\n          // two documents; shallow comparisons work.\n          // eslint-disable-next-line eqeqeq\n\n\n          if (b == document || b.ownerDocument == preferredDoc && contains(preferredDoc, b)) {\n            return 1;\n          } // Maintain original order\n\n\n          return sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0;\n        }\n\n        return compare & 4 ? -1 : 1;\n      } : function (a, b) {\n        // Exit early if the nodes are identical\n        if (a === b) {\n          hasDuplicate = true;\n          return 0;\n        }\n\n        var cur,\n            i = 0,\n            aup = a.parentNode,\n            bup = b.parentNode,\n            ap = [a],\n            bp = [b]; // Parentless nodes are either documents or disconnected\n\n        if (!aup || !bup) {\n          // Support: IE 11+, Edge 17 - 18+\n          // IE/Edge sometimes throw a "Permission denied" error when strict-comparing\n          // two documents; shallow comparisons work.\n\n          /* eslint-disable eqeqeq */\n          return a == document ? -1 : b == document ? 1 :\n          /* eslint-enable eqeqeq */\n          aup ? -1 : bup ? 1 : sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0; // If the nodes are siblings, we can do a quick check\n        } else if (aup === bup) {\n          return siblingCheck(a, b);\n        } // Otherwise we need full lists of their ancestors for comparison\n\n\n        cur = a;\n\n        while (cur = cur.parentNode) {\n          ap.unshift(cur);\n        }\n\n        cur = b;\n\n        while (cur = cur.parentNode) {\n          bp.unshift(cur);\n        } // Walk down the tree looking for a discrepancy\n\n\n        while (ap[i] === bp[i]) {\n          i++;\n        }\n\n        return i ? // Do a sibling check if the nodes have a common ancestor\n        siblingCheck(ap[i], bp[i]) : // Otherwise nodes in our document sort first\n        // Support: IE 11+, Edge 17 - 18+\n        // IE/Edge sometimes throw a "Permission denied" error when strict-comparing\n        // two documents; shallow comparisons work.\n\n        /* eslint-disable eqeqeq */\n        ap[i] == preferredDoc ? -1 : bp[i] == preferredDoc ? 1 :\n        /* eslint-enable eqeqeq */\n        0;\n      };\n      return document;\n    };\n\n    Sizzle.matches = function (expr, elements) {\n      return Sizzle(expr, null, null, elements);\n    };\n\n    Sizzle.matchesSelector = function (elem, expr) {\n      setDocument(elem);\n\n      if (support.matchesSelector && documentIsHTML && !nonnativeSelectorCache[expr + " "] && (!rbuggyMatches || !rbuggyMatches.test(expr)) && (!rbuggyQSA || !rbuggyQSA.test(expr))) {\n        try {\n          var ret = matches.call(elem, expr); // IE 9\'s matchesSelector returns false on disconnected nodes\n\n          if (ret || support.disconnectedMatch || // As well, disconnected nodes are said to be in a document\n          // fragment in IE 9\n          elem.document && elem.document.nodeType !== 11) {\n            return ret;\n          }\n        } catch (e) {\n          nonnativeSelectorCache(expr, true);\n        }\n      }\n\n      return Sizzle(expr, document, null, [elem]).length > 0;\n    };\n\n    Sizzle.contains = function (context, elem) {\n      // Set document vars if needed\n      // Support: IE 11+, Edge 17 - 18+\n      // IE/Edge sometimes throw a "Permission denied" error when strict-comparing\n      // two documents; shallow comparisons work.\n      // eslint-disable-next-line eqeqeq\n      if ((context.ownerDocument || context) != document) {\n        setDocument(context);\n      }\n\n      return contains(context, elem);\n    };\n\n    Sizzle.attr = function (elem, name) {\n      // Set document vars if needed\n      // Support: IE 11+, Edge 17 - 18+\n      // IE/Edge sometimes throw a "Permission denied" error when strict-comparing\n      // two documents; shallow comparisons work.\n      // eslint-disable-next-line eqeqeq\n      if ((elem.ownerDocument || elem) != document) {\n        setDocument(elem);\n      }\n\n      var fn = Expr.attrHandle[name.toLowerCase()],\n          // Don\'t get fooled by Object.prototype properties (jQuery #13807)\n      val = fn && hasOwn.call(Expr.attrHandle, name.toLowerCase()) ? fn(elem, name, !documentIsHTML) : undefined;\n      return val !== undefined ? val : support.attributes || !documentIsHTML ? elem.getAttribute(name) : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;\n    };\n\n    Sizzle.escape = function (sel) {\n      return (sel + "").replace(rcssescape, fcssescape);\n    };\n\n    Sizzle.error = function (msg) {\n      throw new Error("Syntax error, unrecognized expression: " + msg);\n    };\n    /**\n     * Document sorting and removing duplicates\n     * @param {ArrayLike} results\n     */\n\n\n    Sizzle.uniqueSort = function (results) {\n      var elem,\n          duplicates = [],\n          j = 0,\n          i = 0; // Unless we *know* we can detect duplicates, assume their presence\n\n      hasDuplicate = !support.detectDuplicates;\n      sortInput = !support.sortStable && results.slice(0);\n      results.sort(sortOrder);\n\n      if (hasDuplicate) {\n        while (elem = results[i++]) {\n          if (elem === results[i]) {\n            j = duplicates.push(i);\n          }\n        }\n\n        while (j--) {\n          results.splice(duplicates[j], 1);\n        }\n      } // Clear input after sorting to release objects\n      // See https://github.com/jquery/sizzle/pull/225\n\n\n      sortInput = null;\n      return results;\n    };\n    /**\n     * Utility function for retrieving the text value of an array of DOM nodes\n     * @param {Array|Element} elem\n     */\n\n\n    getText = Sizzle.getText = function (elem) {\n      var node,\n          ret = "",\n          i = 0,\n          nodeType = elem.nodeType;\n\n      if (!nodeType) {\n        // If no nodeType, this is expected to be an array\n        while (node = elem[i++]) {\n          // Do not traverse comment nodes\n          ret += getText(node);\n        }\n      } else if (nodeType === 1 || nodeType === 9 || nodeType === 11) {\n        // Use textContent for elements\n        // innerText usage removed for consistency of new lines (jQuery #11153)\n        if (typeof elem.textContent === "string") {\n          return elem.textContent;\n        } else {\n          // Traverse its children\n          for (elem = elem.firstChild; elem; elem = elem.nextSibling) {\n            ret += getText(elem);\n          }\n        }\n      } else if (nodeType === 3 || nodeType === 4) {\n        return elem.nodeValue;\n      } // Do not include comment or processing instruction nodes\n\n\n      return ret;\n    };\n\n    Expr = Sizzle.selectors = {\n      // Can be adjusted by the user\n      cacheLength: 50,\n      createPseudo: markFunction,\n      match: matchExpr,\n      attrHandle: {},\n      find: {},\n      relative: {\n        ">": {\n          dir: "parentNode",\n          first: true\n        },\n        " ": {\n          dir: "parentNode"\n        },\n        "+": {\n          dir: "previousSibling",\n          first: true\n        },\n        "~": {\n          dir: "previousSibling"\n        }\n      },\n      preFilter: {\n        "ATTR": function ATTR(match) {\n          match[1] = match[1].replace(runescape, funescape); // Move the given value to match[3] whether quoted or unquoted\n\n          match[3] = (match[3] || match[4] || match[5] || "").replace(runescape, funescape);\n\n          if (match[2] === "~=") {\n            match[3] = " " + match[3] + " ";\n          }\n\n          return match.slice(0, 4);\n        },\n        "CHILD": function CHILD(match) {\n          /* matches from matchExpr["CHILD"]\n          \t1 type (only|nth|...)\n          \t2 what (child|of-type)\n          \t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n          \t4 xn-component of xn+y argument ([+-]?\\d*n|)\n          \t5 sign of xn-component\n          \t6 x of xn-component\n          \t7 sign of y-component\n          \t8 y of y-component\n          */\n          match[1] = match[1].toLowerCase();\n\n          if (match[1].slice(0, 3) === "nth") {\n            // nth-* requires argument\n            if (!match[3]) {\n              Sizzle.error(match[0]);\n            } // numeric x and y parameters for Expr.filter.CHILD\n            // remember that false/true cast respectively to 0/1\n\n\n            match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * (match[3] === "even" || match[3] === "odd"));\n            match[5] = +(match[7] + match[8] || match[3] === "odd"); // other types prohibit arguments\n          } else if (match[3]) {\n            Sizzle.error(match[0]);\n          }\n\n          return match;\n        },\n        "PSEUDO": function PSEUDO(match) {\n          var excess,\n              unquoted = !match[6] && match[2];\n\n          if (matchExpr["CHILD"].test(match[0])) {\n            return null;\n          } // Accept quoted arguments as-is\n\n\n          if (match[3]) {\n            match[2] = match[4] || match[5] || ""; // Strip excess characters from unquoted arguments\n          } else if (unquoted && rpseudo.test(unquoted) && (excess = tokenize(unquoted, true)) && (excess = unquoted.indexOf(")", unquoted.length - excess) - unquoted.length)) {\n            // excess is a negative index\n            match[0] = match[0].slice(0, excess);\n            match[2] = unquoted.slice(0, excess);\n          } // Return only captures needed by the pseudo filter method (type and argument)\n\n\n          return match.slice(0, 3);\n        }\n      },\n      filter: {\n        "TAG": function TAG(nodeNameSelector) {\n          var nodeName = nodeNameSelector.replace(runescape, funescape).toLowerCase();\n          return nodeNameSelector === "*" ? function () {\n            return true;\n          } : function (elem) {\n            return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n          };\n        },\n        "CLASS": function CLASS(className) {\n          var pattern = classCache[className + " "];\n          return pattern || (pattern = new RegExp("(^|" + whitespace + ")" + className + "(" + whitespace + "|$)")) && classCache(className, function (elem) {\n            return pattern.test(typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "");\n          });\n        },\n        "ATTR": function ATTR(name, operator, check) {\n          return function (elem) {\n            var result = Sizzle.attr(elem, name);\n\n            if (result == null) {\n              return operator === "!=";\n            }\n\n            if (!operator) {\n              return true;\n            }\n\n            result += "";\n            /* eslint-disable max-len */\n\n            return operator === "=" ? result === check : operator === "!=" ? result !== check : operator === "^=" ? check && result.indexOf(check) === 0 : operator === "*=" ? check && result.indexOf(check) > -1 : operator === "$=" ? check && result.slice(-check.length) === check : operator === "~=" ? (" " + result.replace(rwhitespace, " ") + " ").indexOf(check) > -1 : operator === "|=" ? result === check || result.slice(0, check.length + 1) === check + "-" : false;\n            /* eslint-enable max-len */\n          };\n        },\n        "CHILD": function CHILD(type, what, _argument, first, last) {\n          var simple = type.slice(0, 3) !== "nth",\n              forward = type.slice(-4) !== "last",\n              ofType = what === "of-type";\n          return first === 1 && last === 0 ? // Shortcut for :nth-*(n)\n          function (elem) {\n            return !!elem.parentNode;\n          } : function (elem, _context, xml) {\n            var cache,\n                uniqueCache,\n                outerCache,\n                node,\n                nodeIndex,\n                start,\n                dir = simple !== forward ? "nextSibling" : "previousSibling",\n                parent = elem.parentNode,\n                name = ofType && elem.nodeName.toLowerCase(),\n                useCache = !xml && !ofType,\n                diff = false;\n\n            if (parent) {\n              // :(first|last|only)-(child|of-type)\n              if (simple) {\n                while (dir) {\n                  node = elem;\n\n                  while (node = node[dir]) {\n                    if (ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) {\n                      return false;\n                    }\n                  } // Reverse direction for :only-* (if we haven\'t yet done so)\n\n\n                  start = dir = type === "only" && !start && "nextSibling";\n                }\n\n                return true;\n              }\n\n              start = [forward ? parent.firstChild : parent.lastChild]; // non-xml :nth-child(...) stores cache data on `parent`\n\n              if (forward && useCache) {\n                // Seek `elem` from a previously-cached index\n                // ...in a gzip-friendly way\n                node = parent;\n                outerCache = node[expando] || (node[expando] = {}); // Support: IE <9 only\n                // Defend against cloned attroperties (jQuery gh-1709)\n\n                uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});\n                cache = uniqueCache[type] || [];\n                nodeIndex = cache[0] === dirruns && cache[1];\n                diff = nodeIndex && cache[2];\n                node = nodeIndex && parent.childNodes[nodeIndex];\n\n                while (node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) {\n                  // When found, cache indexes on `parent` and break\n                  if (node.nodeType === 1 && ++diff && node === elem) {\n                    uniqueCache[type] = [dirruns, nodeIndex, diff];\n                    break;\n                  }\n                }\n              } else {\n                // Use previously-cached element index if available\n                if (useCache) {\n                  // ...in a gzip-friendly way\n                  node = elem;\n                  outerCache = node[expando] || (node[expando] = {}); // Support: IE <9 only\n                  // Defend against cloned attroperties (jQuery gh-1709)\n\n                  uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});\n                  cache = uniqueCache[type] || [];\n                  nodeIndex = cache[0] === dirruns && cache[1];\n                  diff = nodeIndex;\n                } // xml :nth-child(...)\n                // or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\n\n                if (diff === false) {\n                  // Use the same loop as above to seek `elem` from the start\n                  while (node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) {\n                    if ((ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) && ++diff) {\n                      // Cache the index of each encountered element\n                      if (useCache) {\n                        outerCache = node[expando] || (node[expando] = {}); // Support: IE <9 only\n                        // Defend against cloned attroperties (jQuery gh-1709)\n\n                        uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});\n                        uniqueCache[type] = [dirruns, diff];\n                      }\n\n                      if (node === elem) {\n                        break;\n                      }\n                    }\n                  }\n                }\n              } // Incorporate the offset, then check against cycle size\n\n\n              diff -= last;\n              return diff === first || diff % first === 0 && diff / first >= 0;\n            }\n          };\n        },\n        "PSEUDO": function PSEUDO(pseudo, argument) {\n          // pseudo-class names are case-insensitive\n          // http://www.w3.org/TR/selectors/#pseudo-classes\n          // Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n          // Remember that setFilters inherits from pseudos\n          var args,\n              fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || Sizzle.error("unsupported pseudo: " + pseudo); // The user may use createPseudo to indicate that\n          // arguments are needed to create the filter function\n          // just as Sizzle does\n\n          if (fn[expando]) {\n            return fn(argument);\n          } // But maintain support for old signatures\n\n\n          if (fn.length > 1) {\n            args = [pseudo, pseudo, "", argument];\n            return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ? markFunction(function (seed, matches) {\n              var idx,\n                  matched = fn(seed, argument),\n                  i = matched.length;\n\n              while (i--) {\n                idx = indexOf(seed, matched[i]);\n                seed[idx] = !(matches[idx] = matched[i]);\n              }\n            }) : function (elem) {\n              return fn(elem, 0, args);\n            };\n          }\n\n          return fn;\n        }\n      },\n      pseudos: {\n        // Potentially complex pseudos\n        "not": markFunction(function (selector) {\n          // Trim the selector passed to compile\n          // to avoid treating leading and trailing\n          // spaces as combinators\n          var input = [],\n              results = [],\n              matcher = compile(selector.replace(rtrim, "$1"));\n          return matcher[expando] ? markFunction(function (seed, matches, _context, xml) {\n            var elem,\n                unmatched = matcher(seed, null, xml, []),\n                i = seed.length; // Match elements unmatched by `matcher`\n\n            while (i--) {\n              if (elem = unmatched[i]) {\n                seed[i] = !(matches[i] = elem);\n              }\n            }\n          }) : function (elem, _context, xml) {\n            input[0] = elem;\n            matcher(input, null, xml, results); // Don\'t keep the element (issue #299)\n\n            input[0] = null;\n            return !results.pop();\n          };\n        }),\n        "has": markFunction(function (selector) {\n          return function (elem) {\n            return Sizzle(selector, elem).length > 0;\n          };\n        }),\n        "contains": markFunction(function (text) {\n          text = text.replace(runescape, funescape);\n          return function (elem) {\n            return (elem.textContent || getText(elem)).indexOf(text) > -1;\n          };\n        }),\n        // "Whether an element is represented by a :lang() selector\n        // is based solely on the element\'s language value\n        // being equal to the identifier C,\n        // or beginning with the identifier C immediately followed by "-".\n        // The matching of C against the element\'s language value is performed case-insensitively.\n        // The identifier C does not have to be a valid language name."\n        // http://www.w3.org/TR/selectors/#lang-pseudo\n        "lang": markFunction(function (lang) {\n          // lang value must be a valid identifier\n          if (!ridentifier.test(lang || "")) {\n            Sizzle.error("unsupported lang: " + lang);\n          }\n\n          lang = lang.replace(runescape, funescape).toLowerCase();\n          return function (elem) {\n            var elemLang;\n\n            do {\n              if (elemLang = documentIsHTML ? elem.lang : elem.getAttribute("xml:lang") || elem.getAttribute("lang")) {\n                elemLang = elemLang.toLowerCase();\n                return elemLang === lang || elemLang.indexOf(lang + "-") === 0;\n              }\n            } while ((elem = elem.parentNode) && elem.nodeType === 1);\n\n            return false;\n          };\n        }),\n        // Miscellaneous\n        "target": function target(elem) {\n          var hash = window.location && window.location.hash;\n          return hash && hash.slice(1) === elem.id;\n        },\n        "root": function root(elem) {\n          return elem === docElem;\n        },\n        "focus": function focus(elem) {\n          return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n        },\n        // Boolean properties\n        "enabled": createDisabledPseudo(false),\n        "disabled": createDisabledPseudo(true),\n        "checked": function checked(elem) {\n          // In CSS3, :checked should return both checked and selected elements\n          // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n          var nodeName = elem.nodeName.toLowerCase();\n          return nodeName === "input" && !!elem.checked || nodeName === "option" && !!elem.selected;\n        },\n        "selected": function selected(elem) {\n          // Accessing this property makes selected-by-default\n          // options in Safari work properly\n          if (elem.parentNode) {\n            // eslint-disable-next-line no-unused-expressions\n            elem.parentNode.selectedIndex;\n          }\n\n          return elem.selected === true;\n        },\n        // Contents\n        "empty": function empty(elem) {\n          // http://www.w3.org/TR/selectors/#empty-pseudo\n          // :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n          //   but not by others (comment: 8; processing instruction: 7; etc.)\n          // nodeType < 6 works because attributes (2) do not appear as children\n          for (elem = elem.firstChild; elem; elem = elem.nextSibling) {\n            if (elem.nodeType < 6) {\n              return false;\n            }\n          }\n\n          return true;\n        },\n        "parent": function parent(elem) {\n          return !Expr.pseudos["empty"](elem);\n        },\n        // Element/input types\n        "header": function header(elem) {\n          return rheader.test(elem.nodeName);\n        },\n        "input": function input(elem) {\n          return rinputs.test(elem.nodeName);\n        },\n        "button": function button(elem) {\n          var name = elem.nodeName.toLowerCase();\n          return name === "input" && elem.type === "button" || name === "button";\n        },\n        "text": function text(elem) {\n          var attr;\n          return elem.nodeName.toLowerCase() === "input" && elem.type === "text" && ((attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text");\n        },\n        // Position-in-collection\n        "first": createPositionalPseudo(function () {\n          return [0];\n        }),\n        "last": createPositionalPseudo(function (_matchIndexes, length) {\n          return [length - 1];\n        }),\n        "eq": createPositionalPseudo(function (_matchIndexes, length, argument) {\n          return [argument < 0 ? argument + length : argument];\n        }),\n        "even": createPositionalPseudo(function (matchIndexes, length) {\n          var i = 0;\n\n          for (; i < length; i += 2) {\n            matchIndexes.push(i);\n          }\n\n          return matchIndexes;\n        }),\n        "odd": createPositionalPseudo(function (matchIndexes, length) {\n          var i = 1;\n\n          for (; i < length; i += 2) {\n            matchIndexes.push(i);\n          }\n\n          return matchIndexes;\n        }),\n        "lt": createPositionalPseudo(function (matchIndexes, length, argument) {\n          var i = argument < 0 ? argument + length : argument > length ? length : argument;\n\n          for (; --i >= 0;) {\n            matchIndexes.push(i);\n          }\n\n          return matchIndexes;\n        }),\n        "gt": createPositionalPseudo(function (matchIndexes, length, argument) {\n          var i = argument < 0 ? argument + length : argument;\n\n          for (; ++i < length;) {\n            matchIndexes.push(i);\n          }\n\n          return matchIndexes;\n        })\n      }\n    };\n    Expr.pseudos["nth"] = Expr.pseudos["eq"]; // Add button/input type pseudos\n\n    for (i in {\n      radio: true,\n      checkbox: true,\n      file: true,\n      password: true,\n      image: true\n    }) {\n      Expr.pseudos[i] = createInputPseudo(i);\n    }\n\n    for (i in {\n      submit: true,\n      reset: true\n    }) {\n      Expr.pseudos[i] = createButtonPseudo(i);\n    } // Easy API for creating new setFilters\n\n\n    function setFilters() {}\n\n    setFilters.prototype = Expr.filters = Expr.pseudos;\n    Expr.setFilters = new setFilters();\n\n    tokenize = Sizzle.tokenize = function (selector, parseOnly) {\n      var matched,\n          match,\n          tokens,\n          type,\n          soFar,\n          groups,\n          preFilters,\n          cached = tokenCache[selector + " "];\n\n      if (cached) {\n        return parseOnly ? 0 : cached.slice(0);\n      }\n\n      soFar = selector;\n      groups = [];\n      preFilters = Expr.preFilter;\n\n      while (soFar) {\n        // Comma and first run\n        if (!matched || (match = rcomma.exec(soFar))) {\n          if (match) {\n            // Don\'t consume trailing commas as valid\n            soFar = soFar.slice(match[0].length) || soFar;\n          }\n\n          groups.push(tokens = []);\n        }\n\n        matched = false; // Combinators\n\n        if (match = rcombinators.exec(soFar)) {\n          matched = match.shift();\n          tokens.push({\n            value: matched,\n            // Cast descendant combinators to space\n            type: match[0].replace(rtrim, " ")\n          });\n          soFar = soFar.slice(matched.length);\n        } // Filters\n\n\n        for (type in Expr.filter) {\n          if ((match = matchExpr[type].exec(soFar)) && (!preFilters[type] || (match = preFilters[type](match)))) {\n            matched = match.shift();\n            tokens.push({\n              value: matched,\n              type: type,\n              matches: match\n            });\n            soFar = soFar.slice(matched.length);\n          }\n        }\n\n        if (!matched) {\n          break;\n        }\n      } // Return the length of the invalid excess\n      // if we\'re just parsing\n      // Otherwise, throw an error or return tokens\n\n\n      return parseOnly ? soFar.length : soFar ? Sizzle.error(selector) : // Cache the tokens\n      tokenCache(selector, groups).slice(0);\n    };\n\n    function toSelector(tokens) {\n      var i = 0,\n          len = tokens.length,\n          selector = "";\n\n      for (; i < len; i++) {\n        selector += tokens[i].value;\n      }\n\n      return selector;\n    }\n\n    function addCombinator(matcher, combinator, base) {\n      var dir = combinator.dir,\n          skip = combinator.next,\n          key = skip || dir,\n          checkNonElements = base && key === "parentNode",\n          doneName = done++;\n      return combinator.first ? // Check against closest ancestor/preceding element\n      function (elem, context, xml) {\n        while (elem = elem[dir]) {\n          if (elem.nodeType === 1 || checkNonElements) {\n            return matcher(elem, context, xml);\n          }\n        }\n\n        return false;\n      } : // Check against all ancestor/preceding elements\n      function (elem, context, xml) {\n        var oldCache,\n            uniqueCache,\n            outerCache,\n            newCache = [dirruns, doneName]; // We can\'t set arbitrary data on XML nodes, so they don\'t benefit from combinator caching\n\n        if (xml) {\n          while (elem = elem[dir]) {\n            if (elem.nodeType === 1 || checkNonElements) {\n              if (matcher(elem, context, xml)) {\n                return true;\n              }\n            }\n          }\n        } else {\n          while (elem = elem[dir]) {\n            if (elem.nodeType === 1 || checkNonElements) {\n              outerCache = elem[expando] || (elem[expando] = {}); // Support: IE <9 only\n              // Defend against cloned attroperties (jQuery gh-1709)\n\n              uniqueCache = outerCache[elem.uniqueID] || (outerCache[elem.uniqueID] = {});\n\n              if (skip && skip === elem.nodeName.toLowerCase()) {\n                elem = elem[dir] || elem;\n              } else if ((oldCache = uniqueCache[key]) && oldCache[0] === dirruns && oldCache[1] === doneName) {\n                // Assign to newCache so results back-propagate to previous elements\n                return newCache[2] = oldCache[2];\n              } else {\n                // Reuse newcache so results back-propagate to previous elements\n                uniqueCache[key] = newCache; // A match means we\'re done; a fail means we have to keep checking\n\n                if (newCache[2] = matcher(elem, context, xml)) {\n                  return true;\n                }\n              }\n            }\n          }\n        }\n\n        return false;\n      };\n    }\n\n    function elementMatcher(matchers) {\n      return matchers.length > 1 ? function (elem, context, xml) {\n        var i = matchers.length;\n\n        while (i--) {\n          if (!matchers[i](elem, context, xml)) {\n            return false;\n          }\n        }\n\n        return true;\n      } : matchers[0];\n    }\n\n    function multipleContexts(selector, contexts, results) {\n      var i = 0,\n          len = contexts.length;\n\n      for (; i < len; i++) {\n        Sizzle(selector, contexts[i], results);\n      }\n\n      return results;\n    }\n\n    function condense(unmatched, map, filter, context, xml) {\n      var elem,\n          newUnmatched = [],\n          i = 0,\n          len = unmatched.length,\n          mapped = map != null;\n\n      for (; i < len; i++) {\n        if (elem = unmatched[i]) {\n          if (!filter || filter(elem, context, xml)) {\n            newUnmatched.push(elem);\n\n            if (mapped) {\n              map.push(i);\n            }\n          }\n        }\n      }\n\n      return newUnmatched;\n    }\n\n    function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {\n      if (postFilter && !postFilter[expando]) {\n        postFilter = setMatcher(postFilter);\n      }\n\n      if (postFinder && !postFinder[expando]) {\n        postFinder = setMatcher(postFinder, postSelector);\n      }\n\n      return markFunction(function (seed, results, context, xml) {\n        var temp,\n            i,\n            elem,\n            preMap = [],\n            postMap = [],\n            preexisting = results.length,\n            // Get initial elements from seed or context\n        elems = seed || multipleContexts(selector || "*", context.nodeType ? [context] : context, []),\n            // Prefilter to get matcher input, preserving a map for seed-results synchronization\n        matcherIn = preFilter && (seed || !selector) ? condense(elems, preMap, preFilter, context, xml) : elems,\n            matcherOut = matcher ? // If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n        postFinder || (seed ? preFilter : preexisting || postFilter) ? // ...intermediate processing is necessary\n        [] : // ...otherwise use results directly\n        results : matcherIn; // Find primary matches\n\n        if (matcher) {\n          matcher(matcherIn, matcherOut, context, xml);\n        } // Apply postFilter\n\n\n        if (postFilter) {\n          temp = condense(matcherOut, postMap);\n          postFilter(temp, [], context, xml); // Un-match failing elements by moving them back to matcherIn\n\n          i = temp.length;\n\n          while (i--) {\n            if (elem = temp[i]) {\n              matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem);\n            }\n          }\n        }\n\n        if (seed) {\n          if (postFinder || preFilter) {\n            if (postFinder) {\n              // Get the final matcherOut by condensing this intermediate into postFinder contexts\n              temp = [];\n              i = matcherOut.length;\n\n              while (i--) {\n                if (elem = matcherOut[i]) {\n                  // Restore matcherIn since elem is not yet a final match\n                  temp.push(matcherIn[i] = elem);\n                }\n              }\n\n              postFinder(null, matcherOut = [], temp, xml);\n            } // Move matched elements from seed to results to keep them synchronized\n\n\n            i = matcherOut.length;\n\n            while (i--) {\n              if ((elem = matcherOut[i]) && (temp = postFinder ? indexOf(seed, elem) : preMap[i]) > -1) {\n                seed[temp] = !(results[temp] = elem);\n              }\n            }\n          } // Add elements to results, through postFinder if defined\n\n        } else {\n          matcherOut = condense(matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut);\n\n          if (postFinder) {\n            postFinder(null, results, matcherOut, xml);\n          } else {\n            push.apply(results, matcherOut);\n          }\n        }\n      });\n    }\n\n    function matcherFromTokens(tokens) {\n      var checkContext,\n          matcher,\n          j,\n          len = tokens.length,\n          leadingRelative = Expr.relative[tokens[0].type],\n          implicitRelative = leadingRelative || Expr.relative[" "],\n          i = leadingRelative ? 1 : 0,\n          // The foundational matcher ensures that elements are reachable from top-level context(s)\n      matchContext = addCombinator(function (elem) {\n        return elem === checkContext;\n      }, implicitRelative, true),\n          matchAnyContext = addCombinator(function (elem) {\n        return indexOf(checkContext, elem) > -1;\n      }, implicitRelative, true),\n          matchers = [function (elem, context, xml) {\n        var ret = !leadingRelative && (xml || context !== outermostContext) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml)); // Avoid hanging onto element (issue #299)\n\n        checkContext = null;\n        return ret;\n      }];\n\n      for (; i < len; i++) {\n        if (matcher = Expr.relative[tokens[i].type]) {\n          matchers = [addCombinator(elementMatcher(matchers), matcher)];\n        } else {\n          matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches); // Return special upon seeing a positional matcher\n\n          if (matcher[expando]) {\n            // Find the next relative operator (if any) for proper handling\n            j = ++i;\n\n            for (; j < len; j++) {\n              if (Expr.relative[tokens[j].type]) {\n                break;\n              }\n            }\n\n            return setMatcher(i > 1 && elementMatcher(matchers), i > 1 && toSelector( // If the preceding token was a descendant combinator, insert an implicit any-element `*`\n            tokens.slice(0, i - 1).concat({\n              value: tokens[i - 2].type === " " ? "*" : ""\n            })).replace(rtrim, "$1"), matcher, i < j && matcherFromTokens(tokens.slice(i, j)), j < len && matcherFromTokens(tokens = tokens.slice(j)), j < len && toSelector(tokens));\n          }\n\n          matchers.push(matcher);\n        }\n      }\n\n      return elementMatcher(matchers);\n    }\n\n    function matcherFromGroupMatchers(elementMatchers, setMatchers) {\n      var bySet = setMatchers.length > 0,\n          byElement = elementMatchers.length > 0,\n          superMatcher = function superMatcher(seed, context, xml, results, outermost) {\n        var elem,\n            j,\n            matcher,\n            matchedCount = 0,\n            i = "0",\n            unmatched = seed && [],\n            setMatched = [],\n            contextBackup = outermostContext,\n            // We must always have either seed elements or outermost context\n        elems = seed || byElement && Expr.find["TAG"]("*", outermost),\n            // Use integer dirruns iff this is the outermost matcher\n        dirrunsUnique = dirruns += contextBackup == null ? 1 : Math.random() || 0.1,\n            len = elems.length;\n\n        if (outermost) {\n          // Support: IE 11+, Edge 17 - 18+\n          // IE/Edge sometimes throw a "Permission denied" error when strict-comparing\n          // two documents; shallow comparisons work.\n          // eslint-disable-next-line eqeqeq\n          outermostContext = context == document || context || outermost;\n        } // Add elements passing elementMatchers directly to results\n        // Support: IE<9, Safari\n        // Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id\n\n\n        for (; i !== len && (elem = elems[i]) != null; i++) {\n          if (byElement && elem) {\n            j = 0; // Support: IE 11+, Edge 17 - 18+\n            // IE/Edge sometimes throw a "Permission denied" error when strict-comparing\n            // two documents; shallow comparisons work.\n            // eslint-disable-next-line eqeqeq\n\n            if (!context && elem.ownerDocument != document) {\n              setDocument(elem);\n              xml = !documentIsHTML;\n            }\n\n            while (matcher = elementMatchers[j++]) {\n              if (matcher(elem, context || document, xml)) {\n                results.push(elem);\n                break;\n              }\n            }\n\n            if (outermost) {\n              dirruns = dirrunsUnique;\n            }\n          } // Track unmatched elements for set filters\n\n\n          if (bySet) {\n            // They will have gone through all possible matchers\n            if (elem = !matcher && elem) {\n              matchedCount--;\n            } // Lengthen the array for every element, matched or not\n\n\n            if (seed) {\n              unmatched.push(elem);\n            }\n          }\n        } // `i` is now the count of elements visited above, and adding it to `matchedCount`\n        // makes the latter nonnegative.\n\n\n        matchedCount += i; // Apply set filters to unmatched elements\n        // NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n        // equals `i`), unless we didn\'t visit _any_ elements in the above loop because we have\n        // no element matchers and no seed.\n        // Incrementing an initially-string "0" `i` allows `i` to remain a string only in that\n        // case, which will result in a "00" `matchedCount` that differs from `i` but is also\n        // numerically zero.\n\n        if (bySet && i !== matchedCount) {\n          j = 0;\n\n          while (matcher = setMatchers[j++]) {\n            matcher(unmatched, setMatched, context, xml);\n          }\n\n          if (seed) {\n            // Reintegrate element matches to eliminate the need for sorting\n            if (matchedCount > 0) {\n              while (i--) {\n                if (!(unmatched[i] || setMatched[i])) {\n                  setMatched[i] = pop.call(results);\n                }\n              }\n            } // Discard index placeholder values to get only actual matches\n\n\n            setMatched = condense(setMatched);\n          } // Add matches to results\n\n\n          push.apply(results, setMatched); // Seedless set matches succeeding multiple successful matchers stipulate sorting\n\n          if (outermost && !seed && setMatched.length > 0 && matchedCount + setMatchers.length > 1) {\n            Sizzle.uniqueSort(results);\n          }\n        } // Override manipulation of globals by nested matchers\n\n\n        if (outermost) {\n          dirruns = dirrunsUnique;\n          outermostContext = contextBackup;\n        }\n\n        return unmatched;\n      };\n\n      return bySet ? markFunction(superMatcher) : superMatcher;\n    }\n\n    compile = Sizzle.compile = function (selector, match\n    /* Internal Use Only */\n    ) {\n      var i,\n          setMatchers = [],\n          elementMatchers = [],\n          cached = compilerCache[selector + " "];\n\n      if (!cached) {\n        // Generate a function of recursive functions that can be used to check each element\n        if (!match) {\n          match = tokenize(selector);\n        }\n\n        i = match.length;\n\n        while (i--) {\n          cached = matcherFromTokens(match[i]);\n\n          if (cached[expando]) {\n            setMatchers.push(cached);\n          } else {\n            elementMatchers.push(cached);\n          }\n        } // Cache the compiled function\n\n\n        cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers)); // Save selector and tokenization\n\n        cached.selector = selector;\n      }\n\n      return cached;\n    };\n    /**\n     * A low-level selection function that works with Sizzle\'s compiled\n     *  selector functions\n     * @param {String|Function} selector A selector or a pre-compiled\n     *  selector function built with Sizzle.compile\n     * @param {Element} context\n     * @param {Array} [results]\n     * @param {Array} [seed] A set of elements to match against\n     */\n\n\n    select = Sizzle.select = function (selector, context, results, seed) {\n      var i,\n          tokens,\n          token,\n          type,\n          find,\n          compiled = typeof selector === "function" && selector,\n          match = !seed && tokenize(selector = compiled.selector || selector);\n      results = results || []; // Try to minimize operations if there is only one selector in the list and no seed\n      // (the latter of which guarantees us context)\n\n      if (match.length === 1) {\n        // Reduce context if the leading compound selector is an ID\n        tokens = match[0] = match[0].slice(0);\n\n        if (tokens.length > 2 && (token = tokens[0]).type === "ID" && context.nodeType === 9 && documentIsHTML && Expr.relative[tokens[1].type]) {\n          context = (Expr.find["ID"](token.matches[0].replace(runescape, funescape), context) || [])[0];\n\n          if (!context) {\n            return results; // Precompiled matchers will still verify ancestry, so step up a level\n          } else if (compiled) {\n            context = context.parentNode;\n          }\n\n          selector = selector.slice(tokens.shift().value.length);\n        } // Fetch a seed set for right-to-left matching\n\n\n        i = matchExpr["needsContext"].test(selector) ? 0 : tokens.length;\n\n        while (i--) {\n          token = tokens[i]; // Abort if we hit a combinator\n\n          if (Expr.relative[type = token.type]) {\n            break;\n          }\n\n          if (find = Expr.find[type]) {\n            // Search, expanding context for leading sibling combinators\n            if (seed = find(token.matches[0].replace(runescape, funescape), rsibling.test(tokens[0].type) && testContext(context.parentNode) || context)) {\n              // If seed is empty or no tokens remain, we can return early\n              tokens.splice(i, 1);\n              selector = seed.length && toSelector(tokens);\n\n              if (!selector) {\n                push.apply(results, seed);\n                return results;\n              }\n\n              break;\n            }\n          }\n        }\n      } // Compile and execute a filtering function if one is not provided\n      // Provide `match` to avoid retokenization if we modified the selector above\n\n\n      (compiled || compile(selector, match))(seed, context, !documentIsHTML, results, !context || rsibling.test(selector) && testContext(context.parentNode) || context);\n      return results;\n    }; // One-time assignments\n    // Sort stability\n\n\n    support.sortStable = expando.split("").sort(sortOrder).join("") === expando; // Support: Chrome 14-35+\n    // Always assume duplicates if they aren\'t passed to the comparison function\n\n    support.detectDuplicates = !!hasDuplicate; // Initialize against the default document\n\n    setDocument(); // Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n    // Detached nodes confoundingly follow *each other*\n\n    support.sortDetached = assert(function (el) {\n      // Should return 1, but returns 4 (following)\n      return el.compareDocumentPosition(document.createElement("fieldset")) & 1;\n    }); // Support: IE<8\n    // Prevent attribute/property "interpolation"\n    // https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\n\n    if (!assert(function (el) {\n      el.innerHTML = "<a href=\'#\'></a>";\n      return el.firstChild.getAttribute("href") === "#";\n    })) {\n      addHandle("type|href|height|width", function (elem, name, isXML) {\n        if (!isXML) {\n          return elem.getAttribute(name, name.toLowerCase() === "type" ? 1 : 2);\n        }\n      });\n    } // Support: IE<9\n    // Use defaultValue in place of getAttribute("value")\n\n\n    if (!support.attributes || !assert(function (el) {\n      el.innerHTML = "<input/>";\n      el.firstChild.setAttribute("value", "");\n      return el.firstChild.getAttribute("value") === "";\n    })) {\n      addHandle("value", function (elem, _name, isXML) {\n        if (!isXML && elem.nodeName.toLowerCase() === "input") {\n          return elem.defaultValue;\n        }\n      });\n    } // Support: IE<9\n    // Use getAttributeNode to fetch booleans when getAttribute lies\n\n\n    if (!assert(function (el) {\n      return el.getAttribute("disabled") == null;\n    })) {\n      addHandle(booleans, function (elem, name, isXML) {\n        var val;\n\n        if (!isXML) {\n          return elem[name] === true ? name.toLowerCase() : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;\n        }\n      });\n    }\n\n    return Sizzle;\n  }(window);\n\n  jQuery.find = Sizzle;\n  jQuery.expr = Sizzle.selectors; // Deprecated\n\n  jQuery.expr[":"] = jQuery.expr.pseudos;\n  jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\n  jQuery.text = Sizzle.getText;\n  jQuery.isXMLDoc = Sizzle.isXML;\n  jQuery.contains = Sizzle.contains;\n  jQuery.escapeSelector = Sizzle.escape;\n\n  var dir = function dir(elem, _dir, until) {\n    var matched = [],\n        truncate = until !== undefined;\n\n    while ((elem = elem[_dir]) && elem.nodeType !== 9) {\n      if (elem.nodeType === 1) {\n        if (truncate && jQuery(elem).is(until)) {\n          break;\n        }\n\n        matched.push(elem);\n      }\n    }\n\n    return matched;\n  };\n\n  var _siblings = function siblings(n, elem) {\n    var matched = [];\n\n    for (; n; n = n.nextSibling) {\n      if (n.nodeType === 1 && n !== elem) {\n        matched.push(n);\n      }\n    }\n\n    return matched;\n  };\n\n  var rneedsContext = jQuery.expr.match.needsContext;\n\n  function nodeName(elem, name) {\n    return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n  }\n\n  var rsingleTag = /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i; // Implement the identical functionality for filter and not\n\n  function winnow(elements, qualifier, not) {\n    if (isFunction(qualifier)) {\n      return jQuery.grep(elements, function (elem, i) {\n        return !!qualifier.call(elem, i, elem) !== not;\n      });\n    } // Single element\n\n\n    if (qualifier.nodeType) {\n      return jQuery.grep(elements, function (elem) {\n        return elem === qualifier !== not;\n      });\n    } // Arraylike of elements (jQuery, arguments, Array)\n\n\n    if (typeof qualifier !== "string") {\n      return jQuery.grep(elements, function (elem) {\n        return indexOf.call(qualifier, elem) > -1 !== not;\n      });\n    } // Filtered directly for both simple and complex selectors\n\n\n    return jQuery.filter(qualifier, elements, not);\n  }\n\n  jQuery.filter = function (expr, elems, not) {\n    var elem = elems[0];\n\n    if (not) {\n      expr = ":not(" + expr + ")";\n    }\n\n    if (elems.length === 1 && elem.nodeType === 1) {\n      return jQuery.find.matchesSelector(elem, expr) ? [elem] : [];\n    }\n\n    return jQuery.find.matches(expr, jQuery.grep(elems, function (elem) {\n      return elem.nodeType === 1;\n    }));\n  };\n\n  jQuery.fn.extend({\n    find: function find(selector) {\n      var i,\n          ret,\n          len = this.length,\n          self = this;\n\n      if (typeof selector !== "string") {\n        return this.pushStack(jQuery(selector).filter(function () {\n          for (i = 0; i < len; i++) {\n            if (jQuery.contains(self[i], this)) {\n              return true;\n            }\n          }\n        }));\n      }\n\n      ret = this.pushStack([]);\n\n      for (i = 0; i < len; i++) {\n        jQuery.find(selector, self[i], ret);\n      }\n\n      return len > 1 ? jQuery.uniqueSort(ret) : ret;\n    },\n    filter: function filter(selector) {\n      return this.pushStack(winnow(this, selector || [], false));\n    },\n    not: function not(selector) {\n      return this.pushStack(winnow(this, selector || [], true));\n    },\n    is: function is(selector) {\n      return !!winnow(this, // If this is a positional/relative selector, check membership in the returned set\n      // so $("p:first").is("p:last") won\'t return true for a doc with two "p".\n      typeof selector === "string" && rneedsContext.test(selector) ? jQuery(selector) : selector || [], false).length;\n    }\n  }); // Initialize a jQuery object\n  // A central reference to the root jQuery(document)\n\n  var rootjQuery,\n      // A simple way to check for HTML strings\n  // Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n  // Strict HTML recognition (#11290: must start with <)\n  // Shortcut simple #id case for speed\n  rquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/,\n      init = jQuery.fn.init = function (selector, context, root) {\n    var match, elem; // HANDLE: $(""), $(null), $(undefined), $(false)\n\n    if (!selector) {\n      return this;\n    } // Method init() accepts an alternate rootjQuery\n    // so migrate can support jQuery.sub (gh-2101)\n\n\n    root = root || rootjQuery; // Handle HTML strings\n\n    if (typeof selector === "string") {\n      if (selector[0] === "<" && selector[selector.length - 1] === ">" && selector.length >= 3) {\n        // Assume that strings that start and end with <> are HTML and skip the regex check\n        match = [null, selector, null];\n      } else {\n        match = rquickExpr.exec(selector);\n      } // Match html or make sure no context is specified for #id\n\n\n      if (match && (match[1] || !context)) {\n        // HANDLE: $(html) -> $(array)\n        if (match[1]) {\n          context = context instanceof jQuery ? context[0] : context; // Option to run scripts is true for back-compat\n          // Intentionally let the error be thrown if parseHTML is not present\n\n          jQuery.merge(this, jQuery.parseHTML(match[1], context && context.nodeType ? context.ownerDocument || context : document, true)); // HANDLE: $(html, props)\n\n          if (rsingleTag.test(match[1]) && jQuery.isPlainObject(context)) {\n            for (match in context) {\n              // Properties of context are called as methods if possible\n              if (isFunction(this[match])) {\n                this[match](context[match]); // ...and otherwise set as attributes\n              } else {\n                this.attr(match, context[match]);\n              }\n            }\n          }\n\n          return this; // HANDLE: $(#id)\n        } else {\n          elem = document.getElementById(match[2]);\n\n          if (elem) {\n            // Inject the element directly into the jQuery object\n            this[0] = elem;\n            this.length = 1;\n          }\n\n          return this;\n        } // HANDLE: $(expr, $(...))\n\n      } else if (!context || context.jquery) {\n        return (context || root).find(selector); // HANDLE: $(expr, context)\n        // (which is just equivalent to: $(context).find(expr)\n      } else {\n        return this.constructor(context).find(selector);\n      } // HANDLE: $(DOMElement)\n\n    } else if (selector.nodeType) {\n      this[0] = selector;\n      this.length = 1;\n      return this; // HANDLE: $(function)\n      // Shortcut for document ready\n    } else if (isFunction(selector)) {\n      return root.ready !== undefined ? root.ready(selector) : // Execute immediately if ready is not present\n      selector(jQuery);\n    }\n\n    return jQuery.makeArray(selector, this);\n  }; // Give the init function the jQuery prototype for later instantiation\n\n\n  init.prototype = jQuery.fn; // Initialize central reference\n\n  rootjQuery = jQuery(document);\n  var rparentsprev = /^(?:parents|prev(?:Until|All))/,\n      // Methods guaranteed to produce a unique set when starting from a unique set\n  guaranteedUnique = {\n    children: true,\n    contents: true,\n    next: true,\n    prev: true\n  };\n  jQuery.fn.extend({\n    has: function has(target) {\n      var targets = jQuery(target, this),\n          l = targets.length;\n      return this.filter(function () {\n        var i = 0;\n\n        for (; i < l; i++) {\n          if (jQuery.contains(this, targets[i])) {\n            return true;\n          }\n        }\n      });\n    },\n    closest: function closest(selectors, context) {\n      var cur,\n          i = 0,\n          l = this.length,\n          matched = [],\n          targets = typeof selectors !== "string" && jQuery(selectors); // Positional selectors never match, since there\'s no _selection_ context\n\n      if (!rneedsContext.test(selectors)) {\n        for (; i < l; i++) {\n          for (cur = this[i]; cur && cur !== context; cur = cur.parentNode) {\n            // Always skip document fragments\n            if (cur.nodeType < 11 && (targets ? targets.index(cur) > -1 : // Don\'t pass non-elements to Sizzle\n            cur.nodeType === 1 && jQuery.find.matchesSelector(cur, selectors))) {\n              matched.push(cur);\n              break;\n            }\n          }\n        }\n      }\n\n      return this.pushStack(matched.length > 1 ? jQuery.uniqueSort(matched) : matched);\n    },\n    // Determine the position of an element within the set\n    index: function index(elem) {\n      // No argument, return index in parent\n      if (!elem) {\n        return this[0] && this[0].parentNode ? this.first().prevAll().length : -1;\n      } // Index in selector\n\n\n      if (typeof elem === "string") {\n        return indexOf.call(jQuery(elem), this[0]);\n      } // Locate the position of the desired element\n\n\n      return indexOf.call(this, // If it receives a jQuery object, the first element is used\n      elem.jquery ? elem[0] : elem);\n    },\n    add: function add(selector, context) {\n      return this.pushStack(jQuery.uniqueSort(jQuery.merge(this.get(), jQuery(selector, context))));\n    },\n    addBack: function addBack(selector) {\n      return this.add(selector == null ? this.prevObject : this.prevObject.filter(selector));\n    }\n  });\n\n  function sibling(cur, dir) {\n    while ((cur = cur[dir]) && cur.nodeType !== 1) {}\n\n    return cur;\n  }\n\n  jQuery.each({\n    parent: function parent(elem) {\n      var parent = elem.parentNode;\n      return parent && parent.nodeType !== 11 ? parent : null;\n    },\n    parents: function parents(elem) {\n      return dir(elem, "parentNode");\n    },\n    parentsUntil: function parentsUntil(elem, _i, until) {\n      return dir(elem, "parentNode", until);\n    },\n    next: function next(elem) {\n      return sibling(elem, "nextSibling");\n    },\n    prev: function prev(elem) {\n      return sibling(elem, "previousSibling");\n    },\n    nextAll: function nextAll(elem) {\n      return dir(elem, "nextSibling");\n    },\n    prevAll: function prevAll(elem) {\n      return dir(elem, "previousSibling");\n    },\n    nextUntil: function nextUntil(elem, _i, until) {\n      return dir(elem, "nextSibling", until);\n    },\n    prevUntil: function prevUntil(elem, _i, until) {\n      return dir(elem, "previousSibling", until);\n    },\n    siblings: function siblings(elem) {\n      return _siblings((elem.parentNode || {}).firstChild, elem);\n    },\n    children: function children(elem) {\n      return _siblings(elem.firstChild);\n    },\n    contents: function contents(elem) {\n      if (elem.contentDocument != null && // Support: IE 11+\n      // <object> elements with no `data` attribute has an object\n      // `contentDocument` with a `null` prototype.\n      getProto(elem.contentDocument)) {\n        return elem.contentDocument;\n      } // Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only\n      // Treat the template element as a regular one in browsers that\n      // don\'t support it.\n\n\n      if (nodeName(elem, "template")) {\n        elem = elem.content || elem;\n      }\n\n      return jQuery.merge([], elem.childNodes);\n    }\n  }, function (name, fn) {\n    jQuery.fn[name] = function (until, selector) {\n      var matched = jQuery.map(this, fn, until);\n\n      if (name.slice(-5) !== "Until") {\n        selector = until;\n      }\n\n      if (selector && typeof selector === "string") {\n        matched = jQuery.filter(selector, matched);\n      }\n\n      if (this.length > 1) {\n        // Remove duplicates\n        if (!guaranteedUnique[name]) {\n          jQuery.uniqueSort(matched);\n        } // Reverse order for parents* and prev-derivatives\n\n\n        if (rparentsprev.test(name)) {\n          matched.reverse();\n        }\n      }\n\n      return this.pushStack(matched);\n    };\n  });\n  var rnothtmlwhite = /[^\\x20\\t\\r\\n\\f]+/g; // Convert String-formatted options into Object-formatted ones\n\n  function createOptions(options) {\n    var object = {};\n    jQuery.each(options.match(rnothtmlwhite) || [], function (_, flag) {\n      object[flag] = true;\n    });\n    return object;\n  }\n  /*\n   * Create a callback list using the following parameters:\n   *\n   *\toptions: an optional list of space-separated options that will change how\n   *\t\t\tthe callback list behaves or a more traditional option object\n   *\n   * By default a callback list will act like an event callback list and can be\n   * "fired" multiple times.\n   *\n   * Possible options:\n   *\n   *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n   *\n   *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n   *\t\t\t\t\tafter the list has been fired right away with the latest "memorized"\n   *\t\t\t\t\tvalues (like a Deferred)\n   *\n   *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n   *\n   *\tstopOnFalse:\tinterrupt callings when a callback returns false\n   *\n   */\n\n\n  jQuery.Callbacks = function (options) {\n    // Convert options from String-formatted to Object-formatted if needed\n    // (we check in cache first)\n    options = typeof options === "string" ? createOptions(options) : jQuery.extend({}, options);\n\n    var // Flag to know if list is currently firing\n    firing,\n        // Last fire value for non-forgettable lists\n    memory,\n        // Flag to know if list was already fired\n    _fired,\n        // Flag to prevent firing\n    _locked,\n        // Actual callback list\n    list = [],\n        // Queue of execution data for repeatable lists\n    queue = [],\n        // Index of currently firing callback (modified by add/remove as needed)\n    firingIndex = -1,\n        // Fire callbacks\n    fire = function fire() {\n      // Enforce single-firing\n      _locked = _locked || options.once; // Execute callbacks for all pending executions,\n      // respecting firingIndex overrides and runtime changes\n\n      _fired = firing = true;\n\n      for (; queue.length; firingIndex = -1) {\n        memory = queue.shift();\n\n        while (++firingIndex < list.length) {\n          // Run callback and check for early termination\n          if (list[firingIndex].apply(memory[0], memory[1]) === false && options.stopOnFalse) {\n            // Jump to end and forget the data so .add doesn\'t re-fire\n            firingIndex = list.length;\n            memory = false;\n          }\n        }\n      } // Forget the data if we\'re done with it\n\n\n      if (!options.memory) {\n        memory = false;\n      }\n\n      firing = false; // Clean up if we\'re done firing for good\n\n      if (_locked) {\n        // Keep an empty list if we have data for future add calls\n        if (memory) {\n          list = []; // Otherwise, this object is spent\n        } else {\n          list = "";\n        }\n      }\n    },\n        // Actual Callbacks object\n    self = {\n      // Add a callback or a collection of callbacks to the list\n      add: function add() {\n        if (list) {\n          // If we have memory from a past run, we should fire after adding\n          if (memory && !firing) {\n            firingIndex = list.length - 1;\n            queue.push(memory);\n          }\n\n          (function add(args) {\n            jQuery.each(args, function (_, arg) {\n              if (isFunction(arg)) {\n                if (!options.unique || !self.has(arg)) {\n                  list.push(arg);\n                }\n              } else if (arg && arg.length && toType(arg) !== "string") {\n                // Inspect recursively\n                add(arg);\n              }\n            });\n          })(arguments);\n\n          if (memory && !firing) {\n            fire();\n          }\n        }\n\n        return this;\n      },\n      // Remove a callback from the list\n      remove: function remove() {\n        jQuery.each(arguments, function (_, arg) {\n          var index;\n\n          while ((index = jQuery.inArray(arg, list, index)) > -1) {\n            list.splice(index, 1); // Handle firing indexes\n\n            if (index <= firingIndex) {\n              firingIndex--;\n            }\n          }\n        });\n        return this;\n      },\n      // Check if a given callback is in the list.\n      // If no argument is given, return whether or not list has callbacks attached.\n      has: function has(fn) {\n        return fn ? jQuery.inArray(fn, list) > -1 : list.length > 0;\n      },\n      // Remove all callbacks from the list\n      empty: function empty() {\n        if (list) {\n          list = [];\n        }\n\n        return this;\n      },\n      // Disable .fire and .add\n      // Abort any current/pending executions\n      // Clear all callbacks and values\n      disable: function disable() {\n        _locked = queue = [];\n        list = memory = "";\n        return this;\n      },\n      disabled: function disabled() {\n        return !list;\n      },\n      // Disable .fire\n      // Also disable .add unless we have memory (since it would have no effect)\n      // Abort any pending executions\n      lock: function lock() {\n        _locked = queue = [];\n\n        if (!memory && !firing) {\n          list = memory = "";\n        }\n\n        return this;\n      },\n      locked: function locked() {\n        return !!_locked;\n      },\n      // Call all callbacks with the given context and arguments\n      fireWith: function fireWith(context, args) {\n        if (!_locked) {\n          args = args || [];\n          args = [context, args.slice ? args.slice() : args];\n          queue.push(args);\n\n          if (!firing) {\n            fire();\n          }\n        }\n\n        return this;\n      },\n      // Call all the callbacks with the given arguments\n      fire: function fire() {\n        self.fireWith(this, arguments);\n        return this;\n      },\n      // To know if the callbacks have already been called at least once\n      fired: function fired() {\n        return !!_fired;\n      }\n    };\n\n    return self;\n  };\n\n  function Identity(v) {\n    return v;\n  }\n\n  function Thrower(ex) {\n    throw ex;\n  }\n\n  function adoptValue(value, resolve, reject, noValue) {\n    var method;\n\n    try {\n      // Check for promise aspect first to privilege synchronous behavior\n      if (value && isFunction(method = value.promise)) {\n        method.call(value).done(resolve).fail(reject); // Other thenables\n      } else if (value && isFunction(method = value.then)) {\n        method.call(value, resolve, reject); // Other non-thenables\n      } else {\n        // Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:\n        // * false: [ value ].slice( 0 ) => resolve( value )\n        // * true: [ value ].slice( 1 ) => resolve()\n        resolve.apply(undefined, [value].slice(noValue));\n      } // For Promises/A+, convert exceptions into rejections\n      // Since jQuery.when doesn\'t unwrap thenables, we can skip the extra checks appearing in\n      // Deferred#then to conditionally suppress rejection.\n\n    } catch (value) {\n      // Support: Android 4.0 only\n      // Strict mode functions invoked without .call/.apply get global-object context\n      reject.apply(undefined, [value]);\n    }\n  }\n\n  jQuery.extend({\n    Deferred: function Deferred(func) {\n      var tuples = [// action, add listener, callbacks,\n      // ... .then handlers, argument index, [final state]\n      ["notify", "progress", jQuery.Callbacks("memory"), jQuery.Callbacks("memory"), 2], ["resolve", "done", jQuery.Callbacks("once memory"), jQuery.Callbacks("once memory"), 0, "resolved"], ["reject", "fail", jQuery.Callbacks("once memory"), jQuery.Callbacks("once memory"), 1, "rejected"]],\n          _state = "pending",\n          _promise = {\n        state: function state() {\n          return _state;\n        },\n        always: function always() {\n          deferred.done(arguments).fail(arguments);\n          return this;\n        },\n        "catch": function _catch(fn) {\n          return _promise.then(null, fn);\n        },\n        // Keep pipe for back-compat\n        pipe: function pipe() {\n          var fns = arguments;\n          return jQuery.Deferred(function (newDefer) {\n            jQuery.each(tuples, function (_i, tuple) {\n              // Map tuples (progress, done, fail) to arguments (done, fail, progress)\n              var fn = isFunction(fns[tuple[4]]) && fns[tuple[4]]; // deferred.progress(function() { bind to newDefer or newDefer.notify })\n              // deferred.done(function() { bind to newDefer or newDefer.resolve })\n              // deferred.fail(function() { bind to newDefer or newDefer.reject })\n\n              deferred[tuple[1]](function () {\n                var returned = fn && fn.apply(this, arguments);\n\n                if (returned && isFunction(returned.promise)) {\n                  returned.promise().progress(newDefer.notify).done(newDefer.resolve).fail(newDefer.reject);\n                } else {\n                  newDefer[tuple[0] + "With"](this, fn ? [returned] : arguments);\n                }\n              });\n            });\n            fns = null;\n          }).promise();\n        },\n        then: function then(onFulfilled, onRejected, onProgress) {\n          var maxDepth = 0;\n\n          function resolve(depth, deferred, handler, special) {\n            return function () {\n              var that = this,\n                  args = arguments,\n                  mightThrow = function mightThrow() {\n                var returned, then; // Support: Promises/A+ section 2.3.3.3.3\n                // https://promisesaplus.com/#point-59\n                // Ignore double-resolution attempts\n\n                if (depth < maxDepth) {\n                  return;\n                }\n\n                returned = handler.apply(that, args); // Support: Promises/A+ section 2.3.1\n                // https://promisesaplus.com/#point-48\n\n                if (returned === deferred.promise()) {\n                  throw new TypeError("Thenable self-resolution");\n                } // Support: Promises/A+ sections 2.3.3.1, 3.5\n                // https://promisesaplus.com/#point-54\n                // https://promisesaplus.com/#point-75\n                // Retrieve `then` only once\n\n\n                then = returned && (_typeof(returned) === "object" || typeof returned === "function") && returned.then; // Handle a returned thenable\n\n                if (isFunction(then)) {\n                  // Special processors (notify) just wait for resolution\n                  if (special) {\n                    then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special)); // Normal processors (resolve) also hook into progress\n                  } else {\n                    // ...and disregard older resolution values\n                    maxDepth++;\n                    then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special), resolve(maxDepth, deferred, Identity, deferred.notifyWith));\n                  } // Handle all other returned values\n\n                } else {\n                  // Only substitute handlers pass on context\n                  // and multiple values (non-spec behavior)\n                  if (handler !== Identity) {\n                    that = undefined;\n                    args = [returned];\n                  } // Process the value(s)\n                  // Default process is resolve\n\n\n                  (special || deferred.resolveWith)(that, args);\n                }\n              },\n                  // Only normal processors (resolve) catch and reject exceptions\n              process = special ? mightThrow : function () {\n                try {\n                  mightThrow();\n                } catch (e) {\n                  if (jQuery.Deferred.exceptionHook) {\n                    jQuery.Deferred.exceptionHook(e, process.stackTrace);\n                  } // Support: Promises/A+ section 2.3.3.3.4.1\n                  // https://promisesaplus.com/#point-61\n                  // Ignore post-resolution exceptions\n\n\n                  if (depth + 1 >= maxDepth) {\n                    // Only substitute handlers pass on context\n                    // and multiple values (non-spec behavior)\n                    if (handler !== Thrower) {\n                      that = undefined;\n                      args = [e];\n                    }\n\n                    deferred.rejectWith(that, args);\n                  }\n                }\n              }; // Support: Promises/A+ section 2.3.3.3.1\n              // https://promisesaplus.com/#point-57\n              // Re-resolve promises immediately to dodge false rejection from\n              // subsequent errors\n\n\n              if (depth) {\n                process();\n              } else {\n                // Call an optional hook to record the stack, in case of exception\n                // since it\'s otherwise lost when execution goes async\n                if (jQuery.Deferred.getStackHook) {\n                  process.stackTrace = jQuery.Deferred.getStackHook();\n                }\n\n                window.setTimeout(process);\n              }\n            };\n          }\n\n          return jQuery.Deferred(function (newDefer) {\n            // progress_handlers.add( ... )\n            tuples[0][3].add(resolve(0, newDefer, isFunction(onProgress) ? onProgress : Identity, newDefer.notifyWith)); // fulfilled_handlers.add( ... )\n\n            tuples[1][3].add(resolve(0, newDefer, isFunction(onFulfilled) ? onFulfilled : Identity)); // rejected_handlers.add( ... )\n\n            tuples[2][3].add(resolve(0, newDefer, isFunction(onRejected) ? onRejected : Thrower));\n          }).promise();\n        },\n        // Get a promise for this deferred\n        // If obj is provided, the promise aspect is added to the object\n        promise: function promise(obj) {\n          return obj != null ? jQuery.extend(obj, _promise) : _promise;\n        }\n      },\n          deferred = {}; // Add list-specific methods\n\n      jQuery.each(tuples, function (i, tuple) {\n        var list = tuple[2],\n            stateString = tuple[5]; // promise.progress = list.add\n        // promise.done = list.add\n        // promise.fail = list.add\n\n        _promise[tuple[1]] = list.add; // Handle state\n\n        if (stateString) {\n          list.add(function () {\n            // state = "resolved" (i.e., fulfilled)\n            // state = "rejected"\n            _state = stateString;\n          }, // rejected_callbacks.disable\n          // fulfilled_callbacks.disable\n          tuples[3 - i][2].disable, // rejected_handlers.disable\n          // fulfilled_handlers.disable\n          tuples[3 - i][3].disable, // progress_callbacks.lock\n          tuples[0][2].lock, // progress_handlers.lock\n          tuples[0][3].lock);\n        } // progress_handlers.fire\n        // fulfilled_handlers.fire\n        // rejected_handlers.fire\n\n\n        list.add(tuple[3].fire); // deferred.notify = function() { deferred.notifyWith(...) }\n        // deferred.resolve = function() { deferred.resolveWith(...) }\n        // deferred.reject = function() { deferred.rejectWith(...) }\n\n        deferred[tuple[0]] = function () {\n          deferred[tuple[0] + "With"](this === deferred ? undefined : this, arguments);\n          return this;\n        }; // deferred.notifyWith = list.fireWith\n        // deferred.resolveWith = list.fireWith\n        // deferred.rejectWith = list.fireWith\n\n\n        deferred[tuple[0] + "With"] = list.fireWith;\n      }); // Make the deferred a promise\n\n      _promise.promise(deferred); // Call given func if any\n\n\n      if (func) {\n        func.call(deferred, deferred);\n      } // All done!\n\n\n      return deferred;\n    },\n    // Deferred helper\n    when: function when(singleValue) {\n      var // count of uncompleted subordinates\n      remaining = arguments.length,\n          // count of unprocessed arguments\n      i = remaining,\n          // subordinate fulfillment data\n      resolveContexts = Array(i),\n          resolveValues = _slice.call(arguments),\n          // the primary Deferred\n      primary = jQuery.Deferred(),\n          // subordinate callback factory\n      updateFunc = function updateFunc(i) {\n        return function (value) {\n          resolveContexts[i] = this;\n          resolveValues[i] = arguments.length > 1 ? _slice.call(arguments) : value;\n\n          if (! --remaining) {\n            primary.resolveWith(resolveContexts, resolveValues);\n          }\n        };\n      }; // Single- and empty arguments are adopted like Promise.resolve\n\n\n      if (remaining <= 1) {\n        adoptValue(singleValue, primary.done(updateFunc(i)).resolve, primary.reject, !remaining); // Use .then() to unwrap secondary thenables (cf. gh-3000)\n\n        if (primary.state() === "pending" || isFunction(resolveValues[i] && resolveValues[i].then)) {\n          return primary.then();\n        }\n      } // Multiple arguments are aggregated like Promise.all array elements\n\n\n      while (i--) {\n        adoptValue(resolveValues[i], updateFunc(i), primary.reject);\n      }\n\n      return primary.promise();\n    }\n  }); // These usually indicate a programmer mistake during development,\n  // warn about them ASAP rather than swallowing them by default.\n\n  var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\n\n  jQuery.Deferred.exceptionHook = function (error, stack) {\n    // Support: IE 8 - 9 only\n    // Console exists when dev tools are open, which can happen at any time\n    if (window.console && window.console.warn && error && rerrorNames.test(error.name)) {\n      window.console.warn("jQuery.Deferred exception: " + error.message, error.stack, stack);\n    }\n  };\n\n  jQuery.readyException = function (error) {\n    window.setTimeout(function () {\n      throw error;\n    });\n  }; // The deferred used on DOM ready\n\n\n  var readyList = jQuery.Deferred();\n\n  jQuery.fn.ready = function (fn) {\n    readyList.then(fn) // Wrap jQuery.readyException in a function so that the lookup\n    // happens at the time of error handling instead of callback\n    // registration.\n    ["catch"](function (error) {\n      jQuery.readyException(error);\n    });\n    return this;\n  };\n\n  jQuery.extend({\n    // Is the DOM ready to be used? Set to true once it occurs.\n    isReady: false,\n    // A counter to track how many items to wait for before\n    // the ready event fires. See #6781\n    readyWait: 1,\n    // Handle when the DOM is ready\n    ready: function ready(wait) {\n      // Abort if there are pending holds or we\'re already ready\n      if (wait === true ? --jQuery.readyWait : jQuery.isReady) {\n        return;\n      } // Remember that the DOM is ready\n\n\n      jQuery.isReady = true; // If a normal DOM Ready event fired, decrement, and wait if need be\n\n      if (wait !== true && --jQuery.readyWait > 0) {\n        return;\n      } // If there are functions bound, to execute\n\n\n      readyList.resolveWith(document, [jQuery]);\n    }\n  });\n  jQuery.ready.then = readyList.then; // The ready event handler and self cleanup method\n\n  function completed() {\n    document.removeEventListener("DOMContentLoaded", completed);\n    window.removeEventListener("load", completed);\n    jQuery.ready();\n  } // Catch cases where $(document).ready() is called\n  // after the browser event has already occurred.\n  // Support: IE <=9 - 10 only\n  // Older IE sometimes signals "interactive" too soon\n\n\n  if (document.readyState === "complete" || document.readyState !== "loading" && !document.documentElement.doScroll) {\n    // Handle it asynchronously to allow scripts the opportunity to delay ready\n    window.setTimeout(jQuery.ready);\n  } else {\n    // Use the handy event callback\n    document.addEventListener("DOMContentLoaded", completed); // A fallback to window.onload, that will always work\n\n    window.addEventListener("load", completed);\n  } // Multifunctional method to get and set values of a collection\n  // The value/s can optionally be executed if it\'s a function\n\n\n  var access = function access(elems, fn, key, value, chainable, emptyGet, raw) {\n    var i = 0,\n        len = elems.length,\n        bulk = key == null; // Sets many values\n\n    if (toType(key) === "object") {\n      chainable = true;\n\n      for (i in key) {\n        access(elems, fn, i, key[i], true, emptyGet, raw);\n      } // Sets one value\n\n    } else if (value !== undefined) {\n      chainable = true;\n\n      if (!isFunction(value)) {\n        raw = true;\n      }\n\n      if (bulk) {\n        // Bulk operations run against the entire set\n        if (raw) {\n          fn.call(elems, value);\n          fn = null; // ...except when executing function values\n        } else {\n          bulk = fn;\n\n          fn = function fn(elem, _key, value) {\n            return bulk.call(jQuery(elem), value);\n          };\n        }\n      }\n\n      if (fn) {\n        for (; i < len; i++) {\n          fn(elems[i], key, raw ? value : value.call(elems[i], i, fn(elems[i], key)));\n        }\n      }\n    }\n\n    if (chainable) {\n      return elems;\n    } // Gets\n\n\n    if (bulk) {\n      return fn.call(elems);\n    }\n\n    return len ? fn(elems[0], key) : emptyGet;\n  }; // Matches dashed string for camelizing\n\n\n  var rmsPrefix = /^-ms-/,\n      rdashAlpha = /-([a-z])/g; // Used by camelCase as callback to replace()\n\n  function fcamelCase(_all, letter) {\n    return letter.toUpperCase();\n  } // Convert dashed to camelCase; used by the css and data modules\n  // Support: IE <=9 - 11, Edge 12 - 15\n  // Microsoft forgot to hump their vendor prefix (#9572)\n\n\n  function camelCase(string) {\n    return string.replace(rmsPrefix, "ms-").replace(rdashAlpha, fcamelCase);\n  }\n\n  var acceptData = function acceptData(owner) {\n    // Accepts only:\n    //  - Node\n    //    - Node.ELEMENT_NODE\n    //    - Node.DOCUMENT_NODE\n    //  - Object\n    //    - Any\n    return owner.nodeType === 1 || owner.nodeType === 9 || !+owner.nodeType;\n  };\n\n  function Data() {\n    this.expando = jQuery.expando + Data.uid++;\n  }\n\n  Data.uid = 1;\n  Data.prototype = {\n    cache: function cache(owner) {\n      // Check if the owner object already has a cache\n      var value = owner[this.expando]; // If not, create one\n\n      if (!value) {\n        value = {}; // We can accept data for non-element nodes in modern browsers,\n        // but we should not, see #8335.\n        // Always return an empty object.\n\n        if (acceptData(owner)) {\n          // If it is a node unlikely to be stringify-ed or looped over\n          // use plain assignment\n          if (owner.nodeType) {\n            owner[this.expando] = value; // Otherwise secure it in a non-enumerable property\n            // configurable must be true to allow the property to be\n            // deleted when data is removed\n          } else {\n            Object.defineProperty(owner, this.expando, {\n              value: value,\n              configurable: true\n            });\n          }\n        }\n      }\n\n      return value;\n    },\n    set: function set(owner, data, value) {\n      var prop,\n          cache = this.cache(owner); // Handle: [ owner, key, value ] args\n      // Always use camelCase key (gh-2257)\n\n      if (typeof data === "string") {\n        cache[camelCase(data)] = value; // Handle: [ owner, { properties } ] args\n      } else {\n        // Copy the properties one-by-one to the cache object\n        for (prop in data) {\n          cache[camelCase(prop)] = data[prop];\n        }\n      }\n\n      return cache;\n    },\n    get: function get(owner, key) {\n      return key === undefined ? this.cache(owner) : // Always use camelCase key (gh-2257)\n      owner[this.expando] && owner[this.expando][camelCase(key)];\n    },\n    access: function access(owner, key, value) {\n      // In cases where either:\n      //\n      //   1. No key was specified\n      //   2. A string key was specified, but no value provided\n      //\n      // Take the "read" path and allow the get method to determine\n      // which value to return, respectively either:\n      //\n      //   1. The entire cache object\n      //   2. The data stored at the key\n      //\n      if (key === undefined || key && typeof key === "string" && value === undefined) {\n        return this.get(owner, key);\n      } // When the key is not a string, or both a key and value\n      // are specified, set or extend (existing objects) with either:\n      //\n      //   1. An object of properties\n      //   2. A key and value\n      //\n\n\n      this.set(owner, key, value); // Since the "set" path can have two possible entry points\n      // return the expected data based on which path was taken[*]\n\n      return value !== undefined ? value : key;\n    },\n    remove: function remove(owner, key) {\n      var i,\n          cache = owner[this.expando];\n\n      if (cache === undefined) {\n        return;\n      }\n\n      if (key !== undefined) {\n        // Support array or space separated string of keys\n        if (Array.isArray(key)) {\n          // If key is an array of keys...\n          // We always set camelCase keys, so remove that.\n          key = key.map(camelCase);\n        } else {\n          key = camelCase(key); // If a key with the spaces exists, use it.\n          // Otherwise, create an array by matching non-whitespace\n\n          key = key in cache ? [key] : key.match(rnothtmlwhite) || [];\n        }\n\n        i = key.length;\n\n        while (i--) {\n          delete cache[key[i]];\n        }\n      } // Remove the expando if there\'s no more data\n\n\n      if (key === undefined || jQuery.isEmptyObject(cache)) {\n        // Support: Chrome <=35 - 45\n        // Webkit & Blink performance suffers when deleting properties\n        // from DOM nodes, so set to undefined instead\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\n        if (owner.nodeType) {\n          owner[this.expando] = undefined;\n        } else {\n          delete owner[this.expando];\n        }\n      }\n    },\n    hasData: function hasData(owner) {\n      var cache = owner[this.expando];\n      return cache !== undefined && !jQuery.isEmptyObject(cache);\n    }\n  };\n  var dataPriv = new Data();\n  var dataUser = new Data(); //\tImplementation Summary\n  //\n  //\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n  //\t2. Improve the module\'s maintainability by reducing the storage\n  //\t\tpaths to a single mechanism.\n  //\t3. Use the same single mechanism to support "private" and "user" data.\n  //\t4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)\n  //\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n  //\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\n  var rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n      rmultiDash = /[A-Z]/g;\n\n  function getData(data) {\n    if (data === "true") {\n      return true;\n    }\n\n    if (data === "false") {\n      return false;\n    }\n\n    if (data === "null") {\n      return null;\n    } // Only convert to a number if it doesn\'t change the string\n\n\n    if (data === +data + "") {\n      return +data;\n    }\n\n    if (rbrace.test(data)) {\n      return JSON.parse(data);\n    }\n\n    return data;\n  }\n\n  function dataAttr(elem, key, data) {\n    var name; // If nothing was found internally, try to fetch any\n    // data from the HTML5 data-* attribute\n\n    if (data === undefined && elem.nodeType === 1) {\n      name = "data-" + key.replace(rmultiDash, "-$&").toLowerCase();\n      data = elem.getAttribute(name);\n\n      if (typeof data === "string") {\n        try {\n          data = getData(data);\n        } catch (e) {} // Make sure we set the data so it isn\'t changed later\n\n\n        dataUser.set(elem, key, data);\n      } else {\n        data = undefined;\n      }\n    }\n\n    return data;\n  }\n\n  jQuery.extend({\n    hasData: function hasData(elem) {\n      return dataUser.hasData(elem) || dataPriv.hasData(elem);\n    },\n    data: function data(elem, name, _data) {\n      return dataUser.access(elem, name, _data);\n    },\n    removeData: function removeData(elem, name) {\n      dataUser.remove(elem, name);\n    },\n    // TODO: Now that all calls to _data and _removeData have been replaced\n    // with direct calls to dataPriv methods, these can be deprecated.\n    _data: function _data(elem, name, data) {\n      return dataPriv.access(elem, name, data);\n    },\n    _removeData: function _removeData(elem, name) {\n      dataPriv.remove(elem, name);\n    }\n  });\n  jQuery.fn.extend({\n    data: function data(key, value) {\n      var i,\n          name,\n          data,\n          elem = this[0],\n          attrs = elem && elem.attributes; // Gets all values\n\n      if (key === undefined) {\n        if (this.length) {\n          data = dataUser.get(elem);\n\n          if (elem.nodeType === 1 && !dataPriv.get(elem, "hasDataAttrs")) {\n            i = attrs.length;\n\n            while (i--) {\n              // Support: IE 11 only\n              // The attrs elements can be null (#14894)\n              if (attrs[i]) {\n                name = attrs[i].name;\n\n                if (name.indexOf("data-") === 0) {\n                  name = camelCase(name.slice(5));\n                  dataAttr(elem, name, data[name]);\n                }\n              }\n            }\n\n            dataPriv.set(elem, "hasDataAttrs", true);\n          }\n        }\n\n        return data;\n      } // Sets multiple values\n\n\n      if (_typeof(key) === "object") {\n        return this.each(function () {\n          dataUser.set(this, key);\n        });\n      }\n\n      return access(this, function (value) {\n        var data; // The calling jQuery object (element matches) is not empty\n        // (and therefore has an element appears at this[ 0 ]) and the\n        // `value` parameter was not undefined. An empty jQuery object\n        // will result in `undefined` for elem = this[ 0 ] which will\n        // throw an exception if an attempt to read a data cache is made.\n\n        if (elem && value === undefined) {\n          // Attempt to get data from the cache\n          // The key will always be camelCased in Data\n          data = dataUser.get(elem, key);\n\n          if (data !== undefined) {\n            return data;\n          } // Attempt to "discover" the data in\n          // HTML5 custom data-* attrs\n\n\n          data = dataAttr(elem, key);\n\n          if (data !== undefined) {\n            return data;\n          } // We tried really hard, but the data doesn\'t exist.\n\n\n          return;\n        } // Set the data...\n\n\n        this.each(function () {\n          // We always store the camelCased key\n          dataUser.set(this, key, value);\n        });\n      }, null, value, arguments.length > 1, null, true);\n    },\n    removeData: function removeData(key) {\n      return this.each(function () {\n        dataUser.remove(this, key);\n      });\n    }\n  });\n  jQuery.extend({\n    queue: function queue(elem, type, data) {\n      var queue;\n\n      if (elem) {\n        type = (type || "fx") + "queue";\n        queue = dataPriv.get(elem, type); // Speed up dequeue by getting out quickly if this is just a lookup\n\n        if (data) {\n          if (!queue || Array.isArray(data)) {\n            queue = dataPriv.access(elem, type, jQuery.makeArray(data));\n          } else {\n            queue.push(data);\n          }\n        }\n\n        return queue || [];\n      }\n    },\n    dequeue: function dequeue(elem, type) {\n      type = type || "fx";\n\n      var queue = jQuery.queue(elem, type),\n          startLength = queue.length,\n          fn = queue.shift(),\n          hooks = jQuery._queueHooks(elem, type),\n          next = function next() {\n        jQuery.dequeue(elem, type);\n      }; // If the fx queue is dequeued, always remove the progress sentinel\n\n\n      if (fn === "inprogress") {\n        fn = queue.shift();\n        startLength--;\n      }\n\n      if (fn) {\n        // Add a progress sentinel to prevent the fx queue from being\n        // automatically dequeued\n        if (type === "fx") {\n          queue.unshift("inprogress");\n        } // Clear up the last queue stop function\n\n\n        delete hooks.stop;\n        fn.call(elem, next, hooks);\n      }\n\n      if (!startLength && hooks) {\n        hooks.empty.fire();\n      }\n    },\n    // Not public - generate a queueHooks object, or return the current one\n    _queueHooks: function _queueHooks(elem, type) {\n      var key = type + "queueHooks";\n      return dataPriv.get(elem, key) || dataPriv.access(elem, key, {\n        empty: jQuery.Callbacks("once memory").add(function () {\n          dataPriv.remove(elem, [type + "queue", key]);\n        })\n      });\n    }\n  });\n  jQuery.fn.extend({\n    queue: function queue(type, data) {\n      var setter = 2;\n\n      if (typeof type !== "string") {\n        data = type;\n        type = "fx";\n        setter--;\n      }\n\n      if (arguments.length < setter) {\n        return jQuery.queue(this[0], type);\n      }\n\n      return data === undefined ? this : this.each(function () {\n        var queue = jQuery.queue(this, type, data); // Ensure a hooks for this queue\n\n        jQuery._queueHooks(this, type);\n\n        if (type === "fx" && queue[0] !== "inprogress") {\n          jQuery.dequeue(this, type);\n        }\n      });\n    },\n    dequeue: function dequeue(type) {\n      return this.each(function () {\n        jQuery.dequeue(this, type);\n      });\n    },\n    clearQueue: function clearQueue(type) {\n      return this.queue(type || "fx", []);\n    },\n    // Get a promise resolved when queues of a certain type\n    // are emptied (fx is the type by default)\n    promise: function promise(type, obj) {\n      var tmp,\n          count = 1,\n          defer = jQuery.Deferred(),\n          elements = this,\n          i = this.length,\n          resolve = function resolve() {\n        if (! --count) {\n          defer.resolveWith(elements, [elements]);\n        }\n      };\n\n      if (typeof type !== "string") {\n        obj = type;\n        type = undefined;\n      }\n\n      type = type || "fx";\n\n      while (i--) {\n        tmp = dataPriv.get(elements[i], type + "queueHooks");\n\n        if (tmp && tmp.empty) {\n          count++;\n          tmp.empty.add(resolve);\n        }\n      }\n\n      resolve();\n      return defer.promise(obj);\n    }\n  });\n  var pnum = /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source;\n  var rcssNum = new RegExp("^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i");\n  var cssExpand = ["Top", "Right", "Bottom", "Left"];\n  var documentElement = document.documentElement;\n\n  var isAttached = function isAttached(elem) {\n    return jQuery.contains(elem.ownerDocument, elem);\n  },\n      composed = {\n    composed: true\n  }; // Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only\n  // Check attachment across shadow DOM boundaries when possible (gh-3504)\n  // Support: iOS 10.0-10.2 only\n  // Early iOS 10 versions support `attachShadow` but not `getRootNode`,\n  // leading to errors. We need to check for `getRootNode`.\n\n\n  if (documentElement.getRootNode) {\n    isAttached = function isAttached(elem) {\n      return jQuery.contains(elem.ownerDocument, elem) || elem.getRootNode(composed) === elem.ownerDocument;\n    };\n  }\n\n  var isHiddenWithinTree = function isHiddenWithinTree(elem, el) {\n    // isHiddenWithinTree might be called from jQuery#filter function;\n    // in that case, element will be second argument\n    elem = el || elem; // Inline style trumps all\n\n    return elem.style.display === "none" || elem.style.display === "" && // Otherwise, check computed style\n    // Support: Firefox <=43 - 45\n    // Disconnected elements can have computed display: none, so first confirm that elem is\n    // in the document.\n    isAttached(elem) && jQuery.css(elem, "display") === "none";\n  };\n\n  function adjustCSS(elem, prop, valueParts, tween) {\n    var adjusted,\n        scale,\n        maxIterations = 20,\n        currentValue = tween ? function () {\n      return tween.cur();\n    } : function () {\n      return jQuery.css(elem, prop, "");\n    },\n        initial = currentValue(),\n        unit = valueParts && valueParts[3] || (jQuery.cssNumber[prop] ? "" : "px"),\n        // Starting value computation is required for potential unit mismatches\n    initialInUnit = elem.nodeType && (jQuery.cssNumber[prop] || unit !== "px" && +initial) && rcssNum.exec(jQuery.css(elem, prop));\n\n    if (initialInUnit && initialInUnit[3] !== unit) {\n      // Support: Firefox <=54\n      // Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)\n      initial = initial / 2; // Trust units reported by jQuery.css\n\n      unit = unit || initialInUnit[3]; // Iteratively approximate from a nonzero starting point\n\n      initialInUnit = +initial || 1;\n\n      while (maxIterations--) {\n        // Evaluate and update our best guess (doubling guesses that zero out).\n        // Finish if the scale equals or crosses 1 (making the old*new product non-positive).\n        jQuery.style(elem, prop, initialInUnit + unit);\n\n        if ((1 - scale) * (1 - (scale = currentValue() / initial || 0.5)) <= 0) {\n          maxIterations = 0;\n        }\n\n        initialInUnit = initialInUnit / scale;\n      }\n\n      initialInUnit = initialInUnit * 2;\n      jQuery.style(elem, prop, initialInUnit + unit); // Make sure we update the tween properties later on\n\n      valueParts = valueParts || [];\n    }\n\n    if (valueParts) {\n      initialInUnit = +initialInUnit || +initial || 0; // Apply relative offset (+=/-=) if specified\n\n      adjusted = valueParts[1] ? initialInUnit + (valueParts[1] + 1) * valueParts[2] : +valueParts[2];\n\n      if (tween) {\n        tween.unit = unit;\n        tween.start = initialInUnit;\n        tween.end = adjusted;\n      }\n    }\n\n    return adjusted;\n  }\n\n  var defaultDisplayMap = {};\n\n  function getDefaultDisplay(elem) {\n    var temp,\n        doc = elem.ownerDocument,\n        nodeName = elem.nodeName,\n        display = defaultDisplayMap[nodeName];\n\n    if (display) {\n      return display;\n    }\n\n    temp = doc.body.appendChild(doc.createElement(nodeName));\n    display = jQuery.css(temp, "display");\n    temp.parentNode.removeChild(temp);\n\n    if (display === "none") {\n      display = "block";\n    }\n\n    defaultDisplayMap[nodeName] = display;\n    return display;\n  }\n\n  function showHide(elements, show) {\n    var display,\n        elem,\n        values = [],\n        index = 0,\n        length = elements.length; // Determine new display value for elements that need to change\n\n    for (; index < length; index++) {\n      elem = elements[index];\n\n      if (!elem.style) {\n        continue;\n      }\n\n      display = elem.style.display;\n\n      if (show) {\n        // Since we force visibility upon cascade-hidden elements, an immediate (and slow)\n        // check is required in this first loop unless we have a nonempty display value (either\n        // inline or about-to-be-restored)\n        if (display === "none") {\n          values[index] = dataPriv.get(elem, "display") || null;\n\n          if (!values[index]) {\n            elem.style.display = "";\n          }\n        }\n\n        if (elem.style.display === "" && isHiddenWithinTree(elem)) {\n          values[index] = getDefaultDisplay(elem);\n        }\n      } else {\n        if (display !== "none") {\n          values[index] = "none"; // Remember what we\'re overwriting\n\n          dataPriv.set(elem, "display", display);\n        }\n      }\n    } // Set the display of the elements in a second loop to avoid constant reflow\n\n\n    for (index = 0; index < length; index++) {\n      if (values[index] != null) {\n        elements[index].style.display = values[index];\n      }\n    }\n\n    return elements;\n  }\n\n  jQuery.fn.extend({\n    show: function show() {\n      return showHide(this, true);\n    },\n    hide: function hide() {\n      return showHide(this);\n    },\n    toggle: function toggle(state) {\n      if (typeof state === "boolean") {\n        return state ? this.show() : this.hide();\n      }\n\n      return this.each(function () {\n        if (isHiddenWithinTree(this)) {\n          jQuery(this).show();\n        } else {\n          jQuery(this).hide();\n        }\n      });\n    }\n  });\n  var rcheckableType = /^(?:checkbox|radio)$/i;\n  var rtagName = /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)/i;\n  var rscriptType = /^$|^module$|\\/(?:java|ecma)script/i;\n\n  (function () {\n    var fragment = document.createDocumentFragment(),\n        div = fragment.appendChild(document.createElement("div")),\n        input = document.createElement("input"); // Support: Android 4.0 - 4.3 only\n    // Check state lost if the name is set (#11217)\n    // Support: Windows Web Apps (WWA)\n    // `name` and `type` must use .setAttribute for WWA (#14901)\n\n    input.setAttribute("type", "radio");\n    input.setAttribute("checked", "checked");\n    input.setAttribute("name", "t");\n    div.appendChild(input); // Support: Android <=4.1 only\n    // Older WebKit doesn\'t clone checked state correctly in fragments\n\n    support.checkClone = div.cloneNode(true).cloneNode(true).lastChild.checked; // Support: IE <=11 only\n    // Make sure textarea (and checkbox) defaultValue is properly cloned\n\n    div.innerHTML = "<textarea>x</textarea>";\n    support.noCloneChecked = !!div.cloneNode(true).lastChild.defaultValue; // Support: IE <=9 only\n    // IE <=9 replaces <option> tags with their contents when inserted outside of\n    // the select element.\n\n    div.innerHTML = "<option></option>";\n    support.option = !!div.lastChild;\n  })(); // We have to close these tags to support XHTML (#13200)\n\n\n  var wrapMap = {\n    // XHTML parsers do not magically insert elements in the\n    // same way that tag soup parsers do. So we cannot shorten\n    // this by omitting <tbody> or other required elements.\n    thead: [1, "<table>", "</table>"],\n    col: [2, "<table><colgroup>", "</colgroup></table>"],\n    tr: [2, "<table><tbody>", "</tbody></table>"],\n    td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],\n    _default: [0, "", ""]\n  };\n  wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\n  wrapMap.th = wrapMap.td; // Support: IE <=9 only\n\n  if (!support.option) {\n    wrapMap.optgroup = wrapMap.option = [1, "<select multiple=\'multiple\'>", "</select>"];\n  }\n\n  function getAll(context, tag) {\n    // Support: IE <=9 - 11 only\n    // Use typeof to avoid zero-argument method invocation on host objects (#15151)\n    var ret;\n\n    if (typeof context.getElementsByTagName !== "undefined") {\n      ret = context.getElementsByTagName(tag || "*");\n    } else if (typeof context.querySelectorAll !== "undefined") {\n      ret = context.querySelectorAll(tag || "*");\n    } else {\n      ret = [];\n    }\n\n    if (tag === undefined || tag && nodeName(context, tag)) {\n      return jQuery.merge([context], ret);\n    }\n\n    return ret;\n  } // Mark scripts as having already been evaluated\n\n\n  function setGlobalEval(elems, refElements) {\n    var i = 0,\n        l = elems.length;\n\n    for (; i < l; i++) {\n      dataPriv.set(elems[i], "globalEval", !refElements || dataPriv.get(refElements[i], "globalEval"));\n    }\n  }\n\n  var rhtml = /<|&#?\\w+;/;\n\n  function buildFragment(elems, context, scripts, selection, ignored) {\n    var elem,\n        tmp,\n        tag,\n        wrap,\n        attached,\n        j,\n        fragment = context.createDocumentFragment(),\n        nodes = [],\n        i = 0,\n        l = elems.length;\n\n    for (; i < l; i++) {\n      elem = elems[i];\n\n      if (elem || elem === 0) {\n        // Add nodes directly\n        if (toType(elem) === "object") {\n          // Support: Android <=4.0 only, PhantomJS 1 only\n          // push.apply(_, arraylike) throws on ancient WebKit\n          jQuery.merge(nodes, elem.nodeType ? [elem] : elem); // Convert non-html into a text node\n        } else if (!rhtml.test(elem)) {\n          nodes.push(context.createTextNode(elem)); // Convert html into DOM nodes\n        } else {\n          tmp = tmp || fragment.appendChild(context.createElement("div")); // Deserialize a standard representation\n\n          tag = (rtagName.exec(elem) || ["", ""])[1].toLowerCase();\n          wrap = wrapMap[tag] || wrapMap._default;\n          tmp.innerHTML = wrap[1] + jQuery.htmlPrefilter(elem) + wrap[2]; // Descend through wrappers to the right content\n\n          j = wrap[0];\n\n          while (j--) {\n            tmp = tmp.lastChild;\n          } // Support: Android <=4.0 only, PhantomJS 1 only\n          // push.apply(_, arraylike) throws on ancient WebKit\n\n\n          jQuery.merge(nodes, tmp.childNodes); // Remember the top-level container\n\n          tmp = fragment.firstChild; // Ensure the created nodes are orphaned (#12392)\n\n          tmp.textContent = "";\n        }\n      }\n    } // Remove wrapper from fragment\n\n\n    fragment.textContent = "";\n    i = 0;\n\n    while (elem = nodes[i++]) {\n      // Skip elements already in the context collection (trac-4087)\n      if (selection && jQuery.inArray(elem, selection) > -1) {\n        if (ignored) {\n          ignored.push(elem);\n        }\n\n        continue;\n      }\n\n      attached = isAttached(elem); // Append to fragment\n\n      tmp = getAll(fragment.appendChild(elem), "script"); // Preserve script evaluation history\n\n      if (attached) {\n        setGlobalEval(tmp);\n      } // Capture executables\n\n\n      if (scripts) {\n        j = 0;\n\n        while (elem = tmp[j++]) {\n          if (rscriptType.test(elem.type || "")) {\n            scripts.push(elem);\n          }\n        }\n      }\n    }\n\n    return fragment;\n  }\n\n  var rtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  } // Support: IE <=9 - 11+\n  // focus() and blur() are asynchronous, except when they are no-op.\n  // So expect focus to be synchronous when the element is already active,\n  // and blur to be synchronous when the element is not already active.\n  // (focus and blur are always synchronous in other supported browsers,\n  // this just defines when we can count on it).\n\n\n  function expectSync(elem, type) {\n    return elem === safeActiveElement() === (type === "focus");\n  } // Support: IE <=9 only\n  // Accessing document.activeElement can throw unexpectedly\n  // https://bugs.jquery.com/ticket/13393\n\n\n  function safeActiveElement() {\n    try {\n      return document.activeElement;\n    } catch (err) {}\n  }\n\n  function _on(elem, types, selector, data, fn, one) {\n    var origFn, type; // Types can be a map of types/handlers\n\n    if (_typeof(types) === "object") {\n      // ( types-Object, selector, data )\n      if (typeof selector !== "string") {\n        // ( types-Object, data )\n        data = data || selector;\n        selector = undefined;\n      }\n\n      for (type in types) {\n        _on(elem, type, selector, data, types[type], one);\n      }\n\n      return elem;\n    }\n\n    if (data == null && fn == null) {\n      // ( types, fn )\n      fn = selector;\n      data = selector = undefined;\n    } else if (fn == null) {\n      if (typeof selector === "string") {\n        // ( types, selector, fn )\n        fn = data;\n        data = undefined;\n      } else {\n        // ( types, data, fn )\n        fn = data;\n        data = selector;\n        selector = undefined;\n      }\n    }\n\n    if (fn === false) {\n      fn = returnFalse;\n    } else if (!fn) {\n      return elem;\n    }\n\n    if (one === 1) {\n      origFn = fn;\n\n      fn = function fn(event) {\n        // Can use an empty set, since event contains the info\n        jQuery().off(event);\n        return origFn.apply(this, arguments);\n      }; // Use same guid so caller can remove using origFn\n\n\n      fn.guid = origFn.guid || (origFn.guid = jQuery.guid++);\n    }\n\n    return elem.each(function () {\n      jQuery.event.add(this, types, fn, data, selector);\n    });\n  }\n  /*\n   * Helper functions for managing events -- not part of the public interface.\n   * Props to Dean Edwards\' addEvent library for many of the ideas.\n   */\n\n\n  jQuery.event = {\n    global: {},\n    add: function add(elem, types, handler, data, selector) {\n      var handleObjIn,\n          eventHandle,\n          tmp,\n          events,\n          t,\n          handleObj,\n          special,\n          handlers,\n          type,\n          namespaces,\n          origType,\n          elemData = dataPriv.get(elem); // Only attach events to objects that accept data\n\n      if (!acceptData(elem)) {\n        return;\n      } // Caller can pass in an object of custom data in lieu of the handler\n\n\n      if (handler.handler) {\n        handleObjIn = handler;\n        handler = handleObjIn.handler;\n        selector = handleObjIn.selector;\n      } // Ensure that invalid selectors throw exceptions at attach time\n      // Evaluate against documentElement in case elem is a non-element node (e.g., document)\n\n\n      if (selector) {\n        jQuery.find.matchesSelector(documentElement, selector);\n      } // Make sure that the handler has a unique ID, used to find/remove it later\n\n\n      if (!handler.guid) {\n        handler.guid = jQuery.guid++;\n      } // Init the element\'s event structure and main handler, if this is the first\n\n\n      if (!(events = elemData.events)) {\n        events = elemData.events = Object.create(null);\n      }\n\n      if (!(eventHandle = elemData.handle)) {\n        eventHandle = elemData.handle = function (e) {\n          // Discard the second event of a jQuery.event.trigger() and\n          // when an event is called after a page has unloaded\n          return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ? jQuery.event.dispatch.apply(elem, arguments) : undefined;\n        };\n      } // Handle multiple events separated by a space\n\n\n      types = (types || "").match(rnothtmlwhite) || [""];\n      t = types.length;\n\n      while (t--) {\n        tmp = rtypenamespace.exec(types[t]) || [];\n        type = origType = tmp[1];\n        namespaces = (tmp[2] || "").split(".").sort(); // There *must* be a type, no attaching namespace-only handlers\n\n        if (!type) {\n          continue;\n        } // If event changes its type, use the special event handlers for the changed type\n\n\n        special = jQuery.event.special[type] || {}; // If selector defined, determine special event api type, otherwise given type\n\n        type = (selector ? special.delegateType : special.bindType) || type; // Update special based on newly reset type\n\n        special = jQuery.event.special[type] || {}; // handleObj is passed to all event handlers\n\n        handleObj = jQuery.extend({\n          type: type,\n          origType: origType,\n          data: data,\n          handler: handler,\n          guid: handler.guid,\n          selector: selector,\n          needsContext: selector && jQuery.expr.match.needsContext.test(selector),\n          namespace: namespaces.join(".")\n        }, handleObjIn); // Init the event handler queue if we\'re the first\n\n        if (!(handlers = events[type])) {\n          handlers = events[type] = [];\n          handlers.delegateCount = 0; // Only use addEventListener if the special events handler returns false\n\n          if (!special.setup || special.setup.call(elem, data, namespaces, eventHandle) === false) {\n            if (elem.addEventListener) {\n              elem.addEventListener(type, eventHandle);\n            }\n          }\n        }\n\n        if (special.add) {\n          special.add.call(elem, handleObj);\n\n          if (!handleObj.handler.guid) {\n            handleObj.handler.guid = handler.guid;\n          }\n        } // Add to the element\'s handler list, delegates in front\n\n\n        if (selector) {\n          handlers.splice(handlers.delegateCount++, 0, handleObj);\n        } else {\n          handlers.push(handleObj);\n        } // Keep track of which events have ever been used, for event optimization\n\n\n        jQuery.event.global[type] = true;\n      }\n    },\n    // Detach an event or set of events from an element\n    remove: function remove(elem, types, handler, selector, mappedTypes) {\n      var j,\n          origCount,\n          tmp,\n          events,\n          t,\n          handleObj,\n          special,\n          handlers,\n          type,\n          namespaces,\n          origType,\n          elemData = dataPriv.hasData(elem) && dataPriv.get(elem);\n\n      if (!elemData || !(events = elemData.events)) {\n        return;\n      } // Once for each type.namespace in types; type may be omitted\n\n\n      types = (types || "").match(rnothtmlwhite) || [""];\n      t = types.length;\n\n      while (t--) {\n        tmp = rtypenamespace.exec(types[t]) || [];\n        type = origType = tmp[1];\n        namespaces = (tmp[2] || "").split(".").sort(); // Unbind all events (on this namespace, if provided) for the element\n\n        if (!type) {\n          for (type in events) {\n            jQuery.event.remove(elem, type + types[t], handler, selector, true);\n          }\n\n          continue;\n        }\n\n        special = jQuery.event.special[type] || {};\n        type = (selector ? special.delegateType : special.bindType) || type;\n        handlers = events[type] || [];\n        tmp = tmp[2] && new RegExp("(^|\\\\.)" + namespaces.join("\\\\.(?:.*\\\\.|)") + "(\\\\.|$)"); // Remove matching events\n\n        origCount = j = handlers.length;\n\n        while (j--) {\n          handleObj = handlers[j];\n\n          if ((mappedTypes || origType === handleObj.origType) && (!handler || handler.guid === handleObj.guid) && (!tmp || tmp.test(handleObj.namespace)) && (!selector || selector === handleObj.selector || selector === "**" && handleObj.selector)) {\n            handlers.splice(j, 1);\n\n            if (handleObj.selector) {\n              handlers.delegateCount--;\n            }\n\n            if (special.remove) {\n              special.remove.call(elem, handleObj);\n            }\n          }\n        } // Remove generic event handler if we removed something and no more handlers exist\n        // (avoids potential for endless recursion during removal of special event handlers)\n\n\n        if (origCount && !handlers.length) {\n          if (!special.teardown || special.teardown.call(elem, namespaces, elemData.handle) === false) {\n            jQuery.removeEvent(elem, type, elemData.handle);\n          }\n\n          delete events[type];\n        }\n      } // Remove data and the expando if it\'s no longer used\n\n\n      if (jQuery.isEmptyObject(events)) {\n        dataPriv.remove(elem, "handle events");\n      }\n    },\n    dispatch: function dispatch(nativeEvent) {\n      var i,\n          j,\n          ret,\n          matched,\n          handleObj,\n          handlerQueue,\n          args = new Array(arguments.length),\n          // Make a writable jQuery.Event from the native event object\n      event = jQuery.event.fix(nativeEvent),\n          handlers = (dataPriv.get(this, "events") || Object.create(null))[event.type] || [],\n          special = jQuery.event.special[event.type] || {}; // Use the fix-ed jQuery.Event rather than the (read-only) native event\n\n      args[0] = event;\n\n      for (i = 1; i < arguments.length; i++) {\n        args[i] = arguments[i];\n      }\n\n      event.delegateTarget = this; // Call the preDispatch hook for the mapped type, and let it bail if desired\n\n      if (special.preDispatch && special.preDispatch.call(this, event) === false) {\n        return;\n      } // Determine handlers\n\n\n      handlerQueue = jQuery.event.handlers.call(this, event, handlers); // Run delegates first; they may want to stop propagation beneath us\n\n      i = 0;\n\n      while ((matched = handlerQueue[i++]) && !event.isPropagationStopped()) {\n        event.currentTarget = matched.elem;\n        j = 0;\n\n        while ((handleObj = matched.handlers[j++]) && !event.isImmediatePropagationStopped()) {\n          // If the event is namespaced, then each handler is only invoked if it is\n          // specially universal or its namespaces are a superset of the event\'s.\n          if (!event.rnamespace || handleObj.namespace === false || event.rnamespace.test(handleObj.namespace)) {\n            event.handleObj = handleObj;\n            event.data = handleObj.data;\n            ret = ((jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args);\n\n            if (ret !== undefined) {\n              if ((event.result = ret) === false) {\n                event.preventDefault();\n                event.stopPropagation();\n              }\n            }\n          }\n        }\n      } // Call the postDispatch hook for the mapped type\n\n\n      if (special.postDispatch) {\n        special.postDispatch.call(this, event);\n      }\n\n      return event.result;\n    },\n    handlers: function handlers(event, _handlers) {\n      var i,\n          handleObj,\n          sel,\n          matchedHandlers,\n          matchedSelectors,\n          handlerQueue = [],\n          delegateCount = _handlers.delegateCount,\n          cur = event.target; // Find delegate handlers\n\n      if (delegateCount && // Support: IE <=9\n      // Black-hole SVG <use> instance trees (trac-13180)\n      cur.nodeType && // Support: Firefox <=42\n      // Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\n      // https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\n      // Support: IE 11 only\n      // ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)\n      !(event.type === "click" && event.button >= 1)) {\n        for (; cur !== this; cur = cur.parentNode || this) {\n          // Don\'t check non-elements (#13208)\n          // Don\'t process clicks on disabled elements (#6911, #8165, #11382, #11764)\n          if (cur.nodeType === 1 && !(event.type === "click" && cur.disabled === true)) {\n            matchedHandlers = [];\n            matchedSelectors = {};\n\n            for (i = 0; i < delegateCount; i++) {\n              handleObj = _handlers[i]; // Don\'t conflict with Object.prototype properties (#13203)\n\n              sel = handleObj.selector + " ";\n\n              if (matchedSelectors[sel] === undefined) {\n                matchedSelectors[sel] = handleObj.needsContext ? jQuery(sel, this).index(cur) > -1 : jQuery.find(sel, this, null, [cur]).length;\n              }\n\n              if (matchedSelectors[sel]) {\n                matchedHandlers.push(handleObj);\n              }\n            }\n\n            if (matchedHandlers.length) {\n              handlerQueue.push({\n                elem: cur,\n                handlers: matchedHandlers\n              });\n            }\n          }\n        }\n      } // Add the remaining (directly-bound) handlers\n\n\n      cur = this;\n\n      if (delegateCount < _handlers.length) {\n        handlerQueue.push({\n          elem: cur,\n          handlers: _handlers.slice(delegateCount)\n        });\n      }\n\n      return handlerQueue;\n    },\n    addProp: function addProp(name, hook) {\n      Object.defineProperty(jQuery.Event.prototype, name, {\n        enumerable: true,\n        configurable: true,\n        get: isFunction(hook) ? function () {\n          if (this.originalEvent) {\n            return hook(this.originalEvent);\n          }\n        } : function () {\n          if (this.originalEvent) {\n            return this.originalEvent[name];\n          }\n        },\n        set: function set(value) {\n          Object.defineProperty(this, name, {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: value\n          });\n        }\n      });\n    },\n    fix: function fix(originalEvent) {\n      return originalEvent[jQuery.expando] ? originalEvent : new jQuery.Event(originalEvent);\n    },\n    special: {\n      load: {\n        // Prevent triggered image.load events from bubbling to window.load\n        noBubble: true\n      },\n      click: {\n        // Utilize native event to ensure correct state for checkable inputs\n        setup: function setup(data) {\n          // For mutual compressibility with _default, replace `this` access with a local var.\n          // `|| data` is dead code meant only to preserve the variable through minification.\n          var el = this || data; // Claim the first handler\n\n          if (rcheckableType.test(el.type) && el.click && nodeName(el, "input")) {\n            // dataPriv.set( el, "click", ... )\n            leverageNative(el, "click", returnTrue);\n          } // Return false to allow normal processing in the caller\n\n\n          return false;\n        },\n        trigger: function trigger(data) {\n          // For mutual compressibility with _default, replace `this` access with a local var.\n          // `|| data` is dead code meant only to preserve the variable through minification.\n          var el = this || data; // Force setup before triggering a click\n\n          if (rcheckableType.test(el.type) && el.click && nodeName(el, "input")) {\n            leverageNative(el, "click");\n          } // Return non-false to allow normal event-path propagation\n\n\n          return true;\n        },\n        // For cross-browser consistency, suppress native .click() on links\n        // Also prevent it if we\'re currently inside a leveraged native-event stack\n        _default: function _default(event) {\n          var target = event.target;\n          return rcheckableType.test(target.type) && target.click && nodeName(target, "input") && dataPriv.get(target, "click") || nodeName(target, "a");\n        }\n      },\n      beforeunload: {\n        postDispatch: function postDispatch(event) {\n          // Support: Firefox 20+\n          // Firefox doesn\'t alert if the returnValue field is not set.\n          if (event.result !== undefined && event.originalEvent) {\n            event.originalEvent.returnValue = event.result;\n          }\n        }\n      }\n    }\n  }; // Ensure the presence of an event listener that handles manually-triggered\n  // synthetic events by interrupting progress until reinvoked in response to\n  // *native* events that it fires directly, ensuring that state changes have\n  // already occurred before other listeners are invoked.\n\n  function leverageNative(el, type, expectSync) {\n    // Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add\n    if (!expectSync) {\n      if (dataPriv.get(el, type) === undefined) {\n        jQuery.event.add(el, type, returnTrue);\n      }\n\n      return;\n    } // Register the controller as a special universal handler for all event namespaces\n\n\n    dataPriv.set(el, type, false);\n    jQuery.event.add(el, type, {\n      namespace: false,\n      handler: function handler(event) {\n        var notAsync,\n            result,\n            saved = dataPriv.get(this, type);\n\n        if (event.isTrigger & 1 && this[type]) {\n          // Interrupt processing of the outer synthetic .trigger()ed event\n          // Saved data should be false in such cases, but might be a leftover capture object\n          // from an async native handler (gh-4350)\n          if (!saved.length) {\n            // Store arguments for use when handling the inner native event\n            // There will always be at least one argument (an event object), so this array\n            // will not be confused with a leftover capture object.\n            saved = _slice.call(arguments);\n            dataPriv.set(this, type, saved); // Trigger the native event and capture its result\n            // Support: IE <=9 - 11+\n            // focus() and blur() are asynchronous\n\n            notAsync = expectSync(this, type);\n            this[type]();\n            result = dataPriv.get(this, type);\n\n            if (saved !== result || notAsync) {\n              dataPriv.set(this, type, false);\n            } else {\n              result = {};\n            }\n\n            if (saved !== result) {\n              // Cancel the outer synthetic event\n              event.stopImmediatePropagation();\n              event.preventDefault(); // Support: Chrome 86+\n              // In Chrome, if an element having a focusout handler is blurred by\n              // clicking outside of it, it invokes the handler synchronously. If\n              // that handler calls `.remove()` on the element, the data is cleared,\n              // leaving `result` undefined. We need to guard against this.\n\n              return result && result.value;\n            } // If this is an inner synthetic event for an event with a bubbling surrogate\n            // (focus or blur), assume that the surrogate already propagated from triggering the\n            // native event and prevent that from happening again here.\n            // This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the\n            // bubbling surrogate propagates *after* the non-bubbling base), but that seems\n            // less bad than duplication.\n\n          } else if ((jQuery.event.special[type] || {}).delegateType) {\n            event.stopPropagation();\n          } // If this is a native event triggered above, everything is now in order\n          // Fire an inner synthetic event with the original arguments\n\n        } else if (saved.length) {\n          // ...and capture the result\n          dataPriv.set(this, type, {\n            value: jQuery.event.trigger( // Support: IE <=9 - 11+\n            // Extend with the prototype to reset the above stopImmediatePropagation()\n            jQuery.extend(saved[0], jQuery.Event.prototype), saved.slice(1), this)\n          }); // Abort handling of the native event\n\n          event.stopImmediatePropagation();\n        }\n      }\n    });\n  }\n\n  jQuery.removeEvent = function (elem, type, handle) {\n    // This "if" is needed for plain objects\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, handle);\n    }\n  };\n\n  jQuery.Event = function (src, props) {\n    // Allow instantiation without the \'new\' keyword\n    if (!(this instanceof jQuery.Event)) {\n      return new jQuery.Event(src, props);\n    } // Event object\n\n\n    if (src && src.type) {\n      this.originalEvent = src;\n      this.type = src.type; // Events bubbling up the document may have been marked as prevented\n      // by a handler lower down the tree; reflect the correct value.\n\n      this.isDefaultPrevented = src.defaultPrevented || src.defaultPrevented === undefined && // Support: Android <=2.3 only\n      src.returnValue === false ? returnTrue : returnFalse; // Create target properties\n      // Support: Safari <=6 - 7 only\n      // Target should not be a text node (#504, #13143)\n\n      this.target = src.target && src.target.nodeType === 3 ? src.target.parentNode : src.target;\n      this.currentTarget = src.currentTarget;\n      this.relatedTarget = src.relatedTarget; // Event type\n    } else {\n      this.type = src;\n    } // Put explicitly provided properties onto the event object\n\n\n    if (props) {\n      jQuery.extend(this, props);\n    } // Create a timestamp if incoming event doesn\'t have one\n\n\n    this.timeStamp = src && src.timeStamp || Date.now(); // Mark it as fixed\n\n    this[jQuery.expando] = true;\n  }; // jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n  // https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\n\n\n  jQuery.Event.prototype = {\n    constructor: jQuery.Event,\n    isDefaultPrevented: returnFalse,\n    isPropagationStopped: returnFalse,\n    isImmediatePropagationStopped: returnFalse,\n    isSimulated: false,\n    preventDefault: function preventDefault() {\n      var e = this.originalEvent;\n      this.isDefaultPrevented = returnTrue;\n\n      if (e && !this.isSimulated) {\n        e.preventDefault();\n      }\n    },\n    stopPropagation: function stopPropagation() {\n      var e = this.originalEvent;\n      this.isPropagationStopped = returnTrue;\n\n      if (e && !this.isSimulated) {\n        e.stopPropagation();\n      }\n    },\n    stopImmediatePropagation: function stopImmediatePropagation() {\n      var e = this.originalEvent;\n      this.isImmediatePropagationStopped = returnTrue;\n\n      if (e && !this.isSimulated) {\n        e.stopImmediatePropagation();\n      }\n\n      this.stopPropagation();\n    }\n  }; // Includes all common event props including KeyEvent and MouseEvent specific props\n\n  jQuery.each({\n    altKey: true,\n    bubbles: true,\n    cancelable: true,\n    changedTouches: true,\n    ctrlKey: true,\n    detail: true,\n    eventPhase: true,\n    metaKey: true,\n    pageX: true,\n    pageY: true,\n    shiftKey: true,\n    view: true,\n    "char": true,\n    code: true,\n    charCode: true,\n    key: true,\n    keyCode: true,\n    button: true,\n    buttons: true,\n    clientX: true,\n    clientY: true,\n    offsetX: true,\n    offsetY: true,\n    pointerId: true,\n    pointerType: true,\n    screenX: true,\n    screenY: true,\n    targetTouches: true,\n    toElement: true,\n    touches: true,\n    which: true\n  }, jQuery.event.addProp);\n  jQuery.each({\n    focus: "focusin",\n    blur: "focusout"\n  }, function (type, delegateType) {\n    jQuery.event.special[type] = {\n      // Utilize native event if possible so blur/focus sequence is correct\n      setup: function setup() {\n        // Claim the first handler\n        // dataPriv.set( this, "focus", ... )\n        // dataPriv.set( this, "blur", ... )\n        leverageNative(this, type, expectSync); // Return false to allow normal processing in the caller\n\n        return false;\n      },\n      trigger: function trigger() {\n        // Force setup before trigger\n        leverageNative(this, type); // Return non-false to allow normal event-path propagation\n\n        return true;\n      },\n      // Suppress native focus or blur as it\'s already being fired\n      // in leverageNative.\n      _default: function _default() {\n        return true;\n      },\n      delegateType: delegateType\n    };\n  }); // Create mouseenter/leave events using mouseover/out and event-time checks\n  // so that event delegation works in jQuery.\n  // Do the same for pointerenter/pointerleave and pointerover/pointerout\n  //\n  // Support: Safari 7 only\n  // Safari sends mouseenter too often; see:\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=470258\n  // for the description of the bug (it existed in older Chrome versions as well).\n\n  jQuery.each({\n    mouseenter: "mouseover",\n    mouseleave: "mouseout",\n    pointerenter: "pointerover",\n    pointerleave: "pointerout"\n  }, function (orig, fix) {\n    jQuery.event.special[orig] = {\n      delegateType: fix,\n      bindType: fix,\n      handle: function handle(event) {\n        var ret,\n            target = this,\n            related = event.relatedTarget,\n            handleObj = event.handleObj; // For mouseenter/leave call the handler if related is outside the target.\n        // NB: No relatedTarget if the mouse left/entered the browser window\n\n        if (!related || related !== target && !jQuery.contains(target, related)) {\n          event.type = handleObj.origType;\n          ret = handleObj.handler.apply(this, arguments);\n          event.type = fix;\n        }\n\n        return ret;\n      }\n    };\n  });\n  jQuery.fn.extend({\n    on: function on(types, selector, data, fn) {\n      return _on(this, types, selector, data, fn);\n    },\n    one: function one(types, selector, data, fn) {\n      return _on(this, types, selector, data, fn, 1);\n    },\n    off: function off(types, selector, fn) {\n      var handleObj, type;\n\n      if (types && types.preventDefault && types.handleObj) {\n        // ( event )  dispatched jQuery.Event\n        handleObj = types.handleObj;\n        jQuery(types.delegateTarget).off(handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType, handleObj.selector, handleObj.handler);\n        return this;\n      }\n\n      if (_typeof(types) === "object") {\n        // ( types-object [, selector] )\n        for (type in types) {\n          this.off(type, selector, types[type]);\n        }\n\n        return this;\n      }\n\n      if (selector === false || typeof selector === "function") {\n        // ( types [, fn] )\n        fn = selector;\n        selector = undefined;\n      }\n\n      if (fn === false) {\n        fn = returnFalse;\n      }\n\n      return this.each(function () {\n        jQuery.event.remove(this, types, fn, selector);\n      });\n    }\n  });\n  var // Support: IE <=10 - 11, Edge 12 - 13 only\n  // In IE/Edge using regex groups here causes severe slowdowns.\n  // See https://connect.microsoft.com/IE/feedback/details/1736512/\n  rnoInnerhtml = /<script|<style|<link/i,\n      // checked="checked" or checked\n  rchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n      rcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g; // Prefer a tbody over its parent table for containing new rows\n\n  function manipulationTarget(elem, content) {\n    if (nodeName(elem, "table") && nodeName(content.nodeType !== 11 ? content : content.firstChild, "tr")) {\n      return jQuery(elem).children("tbody")[0] || elem;\n    }\n\n    return elem;\n  } // Replace/restore the type attribute of script elements for safe DOM manipulation\n\n\n  function disableScript(elem) {\n    elem.type = (elem.getAttribute("type") !== null) + "/" + elem.type;\n    return elem;\n  }\n\n  function restoreScript(elem) {\n    if ((elem.type || "").slice(0, 5) === "true/") {\n      elem.type = elem.type.slice(5);\n    } else {\n      elem.removeAttribute("type");\n    }\n\n    return elem;\n  }\n\n  function cloneCopyEvent(src, dest) {\n    var i, l, type, pdataOld, udataOld, udataCur, events;\n\n    if (dest.nodeType !== 1) {\n      return;\n    } // 1. Copy private data: events, handlers, etc.\n\n\n    if (dataPriv.hasData(src)) {\n      pdataOld = dataPriv.get(src);\n      events = pdataOld.events;\n\n      if (events) {\n        dataPriv.remove(dest, "handle events");\n\n        for (type in events) {\n          for (i = 0, l = events[type].length; i < l; i++) {\n            jQuery.event.add(dest, type, events[type][i]);\n          }\n        }\n      }\n    } // 2. Copy user data\n\n\n    if (dataUser.hasData(src)) {\n      udataOld = dataUser.access(src);\n      udataCur = jQuery.extend({}, udataOld);\n      dataUser.set(dest, udataCur);\n    }\n  } // Fix IE bugs, see support tests\n\n\n  function fixInput(src, dest) {\n    var nodeName = dest.nodeName.toLowerCase(); // Fails to persist the checked state of a cloned checkbox or radio button.\n\n    if (nodeName === "input" && rcheckableType.test(src.type)) {\n      dest.checked = src.checked; // Fails to return the selected option to the default selected state when cloning options\n    } else if (nodeName === "input" || nodeName === "textarea") {\n      dest.defaultValue = src.defaultValue;\n    }\n  }\n\n  function domManip(collection, args, callback, ignored) {\n    // Flatten any nested arrays\n    args = flat(args);\n    var fragment,\n        first,\n        scripts,\n        hasScripts,\n        node,\n        doc,\n        i = 0,\n        l = collection.length,\n        iNoClone = l - 1,\n        value = args[0],\n        valueIsFunction = isFunction(value); // We can\'t cloneNode fragments that contain checked, in WebKit\n\n    if (valueIsFunction || l > 1 && typeof value === "string" && !support.checkClone && rchecked.test(value)) {\n      return collection.each(function (index) {\n        var self = collection.eq(index);\n\n        if (valueIsFunction) {\n          args[0] = value.call(this, index, self.html());\n        }\n\n        domManip(self, args, callback, ignored);\n      });\n    }\n\n    if (l) {\n      fragment = buildFragment(args, collection[0].ownerDocument, false, collection, ignored);\n      first = fragment.firstChild;\n\n      if (fragment.childNodes.length === 1) {\n        fragment = first;\n      } // Require either new content or an interest in ignored elements to invoke the callback\n\n\n      if (first || ignored) {\n        scripts = jQuery.map(getAll(fragment, "script"), disableScript);\n        hasScripts = scripts.length; // Use the original fragment for the last item\n        // instead of the first because it can end up\n        // being emptied incorrectly in certain situations (#8070).\n\n        for (; i < l; i++) {\n          node = fragment;\n\n          if (i !== iNoClone) {\n            node = jQuery.clone(node, true, true); // Keep references to cloned scripts for later restoration\n\n            if (hasScripts) {\n              // Support: Android <=4.0 only, PhantomJS 1 only\n              // push.apply(_, arraylike) throws on ancient WebKit\n              jQuery.merge(scripts, getAll(node, "script"));\n            }\n          }\n\n          callback.call(collection[i], node, i);\n        }\n\n        if (hasScripts) {\n          doc = scripts[scripts.length - 1].ownerDocument; // Reenable scripts\n\n          jQuery.map(scripts, restoreScript); // Evaluate executable scripts on first document insertion\n\n          for (i = 0; i < hasScripts; i++) {\n            node = scripts[i];\n\n            if (rscriptType.test(node.type || "") && !dataPriv.access(node, "globalEval") && jQuery.contains(doc, node)) {\n              if (node.src && (node.type || "").toLowerCase() !== "module") {\n                // Optional AJAX dependency, but won\'t run scripts if not present\n                if (jQuery._evalUrl && !node.noModule) {\n                  jQuery._evalUrl(node.src, {\n                    nonce: node.nonce || node.getAttribute("nonce")\n                  }, doc);\n                }\n              } else {\n                DOMEval(node.textContent.replace(rcleanScript, ""), node, doc);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return collection;\n  }\n\n  function _remove(elem, selector, keepData) {\n    var node,\n        nodes = selector ? jQuery.filter(selector, elem) : elem,\n        i = 0;\n\n    for (; (node = nodes[i]) != null; i++) {\n      if (!keepData && node.nodeType === 1) {\n        jQuery.cleanData(getAll(node));\n      }\n\n      if (node.parentNode) {\n        if (keepData && isAttached(node)) {\n          setGlobalEval(getAll(node, "script"));\n        }\n\n        node.parentNode.removeChild(node);\n      }\n    }\n\n    return elem;\n  }\n\n  jQuery.extend({\n    htmlPrefilter: function htmlPrefilter(html) {\n      return html;\n    },\n    clone: function clone(elem, dataAndEvents, deepDataAndEvents) {\n      var i,\n          l,\n          srcElements,\n          destElements,\n          clone = elem.cloneNode(true),\n          inPage = isAttached(elem); // Fix IE cloning issues\n\n      if (!support.noCloneChecked && (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem)) {\n        // We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2\n        destElements = getAll(clone);\n        srcElements = getAll(elem);\n\n        for (i = 0, l = srcElements.length; i < l; i++) {\n          fixInput(srcElements[i], destElements[i]);\n        }\n      } // Copy the events from the original to the clone\n\n\n      if (dataAndEvents) {\n        if (deepDataAndEvents) {\n          srcElements = srcElements || getAll(elem);\n          destElements = destElements || getAll(clone);\n\n          for (i = 0, l = srcElements.length; i < l; i++) {\n            cloneCopyEvent(srcElements[i], destElements[i]);\n          }\n        } else {\n          cloneCopyEvent(elem, clone);\n        }\n      } // Preserve script evaluation history\n\n\n      destElements = getAll(clone, "script");\n\n      if (destElements.length > 0) {\n        setGlobalEval(destElements, !inPage && getAll(elem, "script"));\n      } // Return the cloned set\n\n\n      return clone;\n    },\n    cleanData: function cleanData(elems) {\n      var data,\n          elem,\n          type,\n          special = jQuery.event.special,\n          i = 0;\n\n      for (; (elem = elems[i]) !== undefined; i++) {\n        if (acceptData(elem)) {\n          if (data = elem[dataPriv.expando]) {\n            if (data.events) {\n              for (type in data.events) {\n                if (special[type]) {\n                  jQuery.event.remove(elem, type); // This is a shortcut to avoid jQuery.event.remove\'s overhead\n                } else {\n                  jQuery.removeEvent(elem, type, data.handle);\n                }\n              }\n            } // Support: Chrome <=35 - 45+\n            // Assign undefined instead of using delete, see Data#remove\n\n\n            elem[dataPriv.expando] = undefined;\n          }\n\n          if (elem[dataUser.expando]) {\n            // Support: Chrome <=35 - 45+\n            // Assign undefined instead of using delete, see Data#remove\n            elem[dataUser.expando] = undefined;\n          }\n        }\n      }\n    }\n  });\n  jQuery.fn.extend({\n    detach: function detach(selector) {\n      return _remove(this, selector, true);\n    },\n    remove: function remove(selector) {\n      return _remove(this, selector);\n    },\n    text: function text(value) {\n      return access(this, function (value) {\n        return value === undefined ? jQuery.text(this) : this.empty().each(function () {\n          if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n            this.textContent = value;\n          }\n        });\n      }, null, value, arguments.length);\n    },\n    append: function append() {\n      return domManip(this, arguments, function (elem) {\n        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n          var target = manipulationTarget(this, elem);\n          target.appendChild(elem);\n        }\n      });\n    },\n    prepend: function prepend() {\n      return domManip(this, arguments, function (elem) {\n        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n          var target = manipulationTarget(this, elem);\n          target.insertBefore(elem, target.firstChild);\n        }\n      });\n    },\n    before: function before() {\n      return domManip(this, arguments, function (elem) {\n        if (this.parentNode) {\n          this.parentNode.insertBefore(elem, this);\n        }\n      });\n    },\n    after: function after() {\n      return domManip(this, arguments, function (elem) {\n        if (this.parentNode) {\n          this.parentNode.insertBefore(elem, this.nextSibling);\n        }\n      });\n    },\n    empty: function empty() {\n      var elem,\n          i = 0;\n\n      for (; (elem = this[i]) != null; i++) {\n        if (elem.nodeType === 1) {\n          // Prevent memory leaks\n          jQuery.cleanData(getAll(elem, false)); // Remove any remaining nodes\n\n          elem.textContent = "";\n        }\n      }\n\n      return this;\n    },\n    clone: function clone(dataAndEvents, deepDataAndEvents) {\n      dataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n      deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n      return this.map(function () {\n        return jQuery.clone(this, dataAndEvents, deepDataAndEvents);\n      });\n    },\n    html: function html(value) {\n      return access(this, function (value) {\n        var elem = this[0] || {},\n            i = 0,\n            l = this.length;\n\n        if (value === undefined && elem.nodeType === 1) {\n          return elem.innerHTML;\n        } // See if we can take a shortcut and just use innerHTML\n\n\n        if (typeof value === "string" && !rnoInnerhtml.test(value) && !wrapMap[(rtagName.exec(value) || ["", ""])[1].toLowerCase()]) {\n          value = jQuery.htmlPrefilter(value);\n\n          try {\n            for (; i < l; i++) {\n              elem = this[i] || {}; // Remove element nodes and prevent memory leaks\n\n              if (elem.nodeType === 1) {\n                jQuery.cleanData(getAll(elem, false));\n                elem.innerHTML = value;\n              }\n            }\n\n            elem = 0; // If using innerHTML throws an exception, use the fallback method\n          } catch (e) {}\n        }\n\n        if (elem) {\n          this.empty().append(value);\n        }\n      }, null, value, arguments.length);\n    },\n    replaceWith: function replaceWith() {\n      var ignored = []; // Make the changes, replacing each non-ignored context element with the new content\n\n      return domManip(this, arguments, function (elem) {\n        var parent = this.parentNode;\n\n        if (jQuery.inArray(this, ignored) < 0) {\n          jQuery.cleanData(getAll(this));\n\n          if (parent) {\n            parent.replaceChild(elem, this);\n          }\n        } // Force callback invocation\n\n      }, ignored);\n    }\n  });\n  jQuery.each({\n    appendTo: "append",\n    prependTo: "prepend",\n    insertBefore: "before",\n    insertAfter: "after",\n    replaceAll: "replaceWith"\n  }, function (name, original) {\n    jQuery.fn[name] = function (selector) {\n      var elems,\n          ret = [],\n          insert = jQuery(selector),\n          last = insert.length - 1,\n          i = 0;\n\n      for (; i <= last; i++) {\n        elems = i === last ? this : this.clone(true);\n        jQuery(insert[i])[original](elems); // Support: Android <=4.0 only, PhantomJS 1 only\n        // .get() because push.apply(_, arraylike) throws on ancient WebKit\n\n        push.apply(ret, elems.get());\n      }\n\n      return this.pushStack(ret);\n    };\n  });\n  var rnumnonpx = new RegExp("^(" + pnum + ")(?!px)[a-z%]+$", "i");\n\n  var getStyles = function getStyles(elem) {\n    // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n    // IE throws on elements created in popups\n    // FF meanwhile throws on frame elements through "defaultView.getComputedStyle"\n    var view = elem.ownerDocument.defaultView;\n\n    if (!view || !view.opener) {\n      view = window;\n    }\n\n    return view.getComputedStyle(elem);\n  };\n\n  var swap = function swap(elem, options, callback) {\n    var ret,\n        name,\n        old = {}; // Remember the old values, and insert the new ones\n\n    for (name in options) {\n      old[name] = elem.style[name];\n      elem.style[name] = options[name];\n    }\n\n    ret = callback.call(elem); // Revert the old values\n\n    for (name in options) {\n      elem.style[name] = old[name];\n    }\n\n    return ret;\n  };\n\n  var rboxStyle = new RegExp(cssExpand.join("|"), "i");\n\n  (function () {\n    // Executing both pixelPosition & boxSizingReliable tests require only one layout\n    // so they\'re executed at the same time to save the second computation.\n    function computeStyleTests() {\n      // This is a singleton, we need to execute it only once\n      if (!div) {\n        return;\n      }\n\n      container.style.cssText = "position:absolute;left:-11111px;width:60px;" + "margin-top:1px;padding:0;border:0";\n      div.style.cssText = "position:relative;display:block;box-sizing:border-box;overflow:scroll;" + "margin:auto;border:1px;padding:1px;" + "width:60%;top:1%";\n      documentElement.appendChild(container).appendChild(div);\n      var divStyle = window.getComputedStyle(div);\n      pixelPositionVal = divStyle.top !== "1%"; // Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\n\n      reliableMarginLeftVal = roundPixelMeasures(divStyle.marginLeft) === 12; // Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3\n      // Some styles come back with percentage values, even though they shouldn\'t\n\n      div.style.right = "60%";\n      pixelBoxStylesVal = roundPixelMeasures(divStyle.right) === 36; // Support: IE 9 - 11 only\n      // Detect misreporting of content dimensions for box-sizing:border-box elements\n\n      boxSizingReliableVal = roundPixelMeasures(divStyle.width) === 36; // Support: IE 9 only\n      // Detect overflow:scroll screwiness (gh-3699)\n      // Support: Chrome <=64\n      // Don\'t get tricked when zoom affects offsetWidth (gh-4029)\n\n      div.style.position = "absolute";\n      scrollboxSizeVal = roundPixelMeasures(div.offsetWidth / 3) === 12;\n      documentElement.removeChild(container); // Nullify the div so it wouldn\'t be stored in the memory and\n      // it will also be a sign that checks already performed\n\n      div = null;\n    }\n\n    function roundPixelMeasures(measure) {\n      return Math.round(parseFloat(measure));\n    }\n\n    var pixelPositionVal,\n        boxSizingReliableVal,\n        scrollboxSizeVal,\n        pixelBoxStylesVal,\n        reliableTrDimensionsVal,\n        reliableMarginLeftVal,\n        container = document.createElement("div"),\n        div = document.createElement("div"); // Finish early in limited (non-browser) environments\n\n    if (!div.style) {\n      return;\n    } // Support: IE <=9 - 11 only\n    // Style of cloned element affects source element cloned (#8908)\n\n\n    div.style.backgroundClip = "content-box";\n    div.cloneNode(true).style.backgroundClip = "";\n    support.clearCloneStyle = div.style.backgroundClip === "content-box";\n    jQuery.extend(support, {\n      boxSizingReliable: function boxSizingReliable() {\n        computeStyleTests();\n        return boxSizingReliableVal;\n      },\n      pixelBoxStyles: function pixelBoxStyles() {\n        computeStyleTests();\n        return pixelBoxStylesVal;\n      },\n      pixelPosition: function pixelPosition() {\n        computeStyleTests();\n        return pixelPositionVal;\n      },\n      reliableMarginLeft: function reliableMarginLeft() {\n        computeStyleTests();\n        return reliableMarginLeftVal;\n      },\n      scrollboxSize: function scrollboxSize() {\n        computeStyleTests();\n        return scrollboxSizeVal;\n      },\n      // Support: IE 9 - 11+, Edge 15 - 18+\n      // IE/Edge misreport `getComputedStyle` of table rows with width/height\n      // set in CSS while `offset*` properties report correct values.\n      // Behavior in IE 9 is more subtle than in newer versions & it passes\n      // some versions of this test; make sure not to make it pass there!\n      //\n      // Support: Firefox 70+\n      // Only Firefox includes border widths\n      // in computed dimensions. (gh-4529)\n      reliableTrDimensions: function reliableTrDimensions() {\n        var table, tr, trChild, trStyle;\n\n        if (reliableTrDimensionsVal == null) {\n          table = document.createElement("table");\n          tr = document.createElement("tr");\n          trChild = document.createElement("div");\n          table.style.cssText = "position:absolute;left:-11111px;border-collapse:separate";\n          tr.style.cssText = "border:1px solid"; // Support: Chrome 86+\n          // Height set through cssText does not get applied.\n          // Computed height then comes back as 0.\n\n          tr.style.height = "1px";\n          trChild.style.height = "9px"; // Support: Android 8 Chrome 86+\n          // In our bodyBackground.html iframe,\n          // display for all div elements is set to "inline",\n          // which causes a problem only in Android 8 Chrome 86.\n          // Ensuring the div is display: block\n          // gets around this issue.\n\n          trChild.style.display = "block";\n          documentElement.appendChild(table).appendChild(tr).appendChild(trChild);\n          trStyle = window.getComputedStyle(tr);\n          reliableTrDimensionsVal = parseInt(trStyle.height, 10) + parseInt(trStyle.borderTopWidth, 10) + parseInt(trStyle.borderBottomWidth, 10) === tr.offsetHeight;\n          documentElement.removeChild(table);\n        }\n\n        return reliableTrDimensionsVal;\n      }\n    });\n  })();\n\n  function curCSS(elem, name, computed) {\n    var width,\n        minWidth,\n        maxWidth,\n        ret,\n        // Support: Firefox 51+\n    // Retrieving style before computed somehow\n    // fixes an issue with getting wrong values\n    // on detached elements\n    style = elem.style;\n    computed = computed || getStyles(elem); // getPropertyValue is needed for:\n    //   .css(\'filter\') (IE 9 only, #12537)\n    //   .css(\'--customProperty) (#3144)\n\n    if (computed) {\n      ret = computed.getPropertyValue(name) || computed[name];\n\n      if (ret === "" && !isAttached(elem)) {\n        ret = jQuery.style(elem, name);\n      } // A tribute to the "awesome hack by Dean Edwards"\n      // Android Browser returns percentage for some values,\n      // but width seems to be reliably pixels.\n      // This is against the CSSOM draft spec:\n      // https://drafts.csswg.org/cssom/#resolved-values\n\n\n      if (!support.pixelBoxStyles() && rnumnonpx.test(ret) && rboxStyle.test(name)) {\n        // Remember the original values\n        width = style.width;\n        minWidth = style.minWidth;\n        maxWidth = style.maxWidth; // Put in the new values to get a computed value out\n\n        style.minWidth = style.maxWidth = style.width = ret;\n        ret = computed.width; // Revert the changed values\n\n        style.width = width;\n        style.minWidth = minWidth;\n        style.maxWidth = maxWidth;\n      }\n    }\n\n    return ret !== undefined ? // Support: IE <=9 - 11 only\n    // IE returns zIndex value as an integer.\n    ret + "" : ret;\n  }\n\n  function addGetHookIf(conditionFn, hookFn) {\n    // Define the hook, we\'ll check on the first run if it\'s really needed.\n    return {\n      get: function get() {\n        if (conditionFn()) {\n          // Hook not needed (or it\'s not possible to use it due\n          // to missing dependency), remove it.\n          delete this.get;\n          return;\n        } // Hook needed; redefine it so that the support test is not executed again.\n\n\n        return (this.get = hookFn).apply(this, arguments);\n      }\n    };\n  }\n\n  var cssPrefixes = ["Webkit", "Moz", "ms"],\n      emptyStyle = document.createElement("div").style,\n      vendorProps = {}; // Return a vendor-prefixed property or undefined\n\n  function vendorPropName(name) {\n    // Check for vendor prefixed names\n    var capName = name[0].toUpperCase() + name.slice(1),\n        i = cssPrefixes.length;\n\n    while (i--) {\n      name = cssPrefixes[i] + capName;\n\n      if (name in emptyStyle) {\n        return name;\n      }\n    }\n  } // Return a potentially-mapped jQuery.cssProps or vendor prefixed property\n\n\n  function finalPropName(name) {\n    var _final = jQuery.cssProps[name] || vendorProps[name];\n\n    if (_final) {\n      return _final;\n    }\n\n    if (name in emptyStyle) {\n      return name;\n    }\n\n    return vendorProps[name] = vendorPropName(name) || name;\n  }\n\n  var // Swappable if display is none or starts with table\n  // except "table", "table-cell", or "table-caption"\n  // See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n  rdisplayswap = /^(none|table(?!-c[ea]).+)/,\n      rcustomProp = /^--/,\n      cssShow = {\n    position: "absolute",\n    visibility: "hidden",\n    display: "block"\n  },\n      cssNormalTransform = {\n    letterSpacing: "0",\n    fontWeight: "400"\n  };\n\n  function setPositiveNumber(_elem, value, subtract) {\n    // Any relative (+/-) values have already been\n    // normalized at this point\n    var matches = rcssNum.exec(value);\n    return matches ? // Guard against undefined "subtract", e.g., when used as in cssHooks\n    Math.max(0, matches[2] - (subtract || 0)) + (matches[3] || "px") : value;\n  }\n\n  function boxModelAdjustment(elem, dimension, box, isBorderBox, styles, computedVal) {\n    var i = dimension === "width" ? 1 : 0,\n        extra = 0,\n        delta = 0; // Adjustment may not be necessary\n\n    if (box === (isBorderBox ? "border" : "content")) {\n      return 0;\n    }\n\n    for (; i < 4; i += 2) {\n      // Both box models exclude margin\n      if (box === "margin") {\n        delta += jQuery.css(elem, box + cssExpand[i], true, styles);\n      } // If we get here with a content-box, we\'re seeking "padding" or "border" or "margin"\n\n\n      if (!isBorderBox) {\n        // Add padding\n        delta += jQuery.css(elem, "padding" + cssExpand[i], true, styles); // For "border" or "margin", add border\n\n        if (box !== "padding") {\n          delta += jQuery.css(elem, "border" + cssExpand[i] + "Width", true, styles); // But still keep track of it otherwise\n        } else {\n          extra += jQuery.css(elem, "border" + cssExpand[i] + "Width", true, styles);\n        } // If we get here with a border-box (content + padding + border), we\'re seeking "content" or\n        // "padding" or "margin"\n\n      } else {\n        // For "content", subtract padding\n        if (box === "content") {\n          delta -= jQuery.css(elem, "padding" + cssExpand[i], true, styles);\n        } // For "content" or "padding", subtract border\n\n\n        if (box !== "margin") {\n          delta -= jQuery.css(elem, "border" + cssExpand[i] + "Width", true, styles);\n        }\n      }\n    } // Account for positive content-box scroll gutter when requested by providing computedVal\n\n\n    if (!isBorderBox && computedVal >= 0) {\n      // offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border\n      // Assuming integer scroll gutter, subtract the rest and round down\n      delta += Math.max(0, Math.ceil(elem["offset" + dimension[0].toUpperCase() + dimension.slice(1)] - computedVal - delta - extra - 0.5 // If offsetWidth/offsetHeight is unknown, then we can\'t determine content-box scroll gutter\n      // Use an explicit zero to avoid NaN (gh-3964)\n      )) || 0;\n    }\n\n    return delta;\n  }\n\n  function getWidthOrHeight(elem, dimension, extra) {\n    // Start with computed style\n    var styles = getStyles(elem),\n        // To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).\n    // Fake content-box until we know it\'s needed to know the true value.\n    boxSizingNeeded = !support.boxSizingReliable() || extra,\n        isBorderBox = boxSizingNeeded && jQuery.css(elem, "boxSizing", false, styles) === "border-box",\n        valueIsBorderBox = isBorderBox,\n        val = curCSS(elem, dimension, styles),\n        offsetProp = "offset" + dimension[0].toUpperCase() + dimension.slice(1); // Support: Firefox <=54\n    // Return a confounding non-pixel value or feign ignorance, as appropriate.\n\n    if (rnumnonpx.test(val)) {\n      if (!extra) {\n        return val;\n      }\n\n      val = "auto";\n    } // Support: IE 9 - 11 only\n    // Use offsetWidth/offsetHeight for when box sizing is unreliable.\n    // In those cases, the computed value can be trusted to be border-box.\n\n\n    if ((!support.boxSizingReliable() && isBorderBox || // Support: IE 10 - 11+, Edge 15 - 18+\n    // IE/Edge misreport `getComputedStyle` of table rows with width/height\n    // set in CSS while `offset*` properties report correct values.\n    // Interestingly, in some cases IE 9 doesn\'t suffer from this issue.\n    !support.reliableTrDimensions() && nodeName(elem, "tr") || // Fall back to offsetWidth/offsetHeight when value is "auto"\n    // This happens for inline elements with no explicit setting (gh-3571)\n    val === "auto" || // Support: Android <=4.1 - 4.3 only\n    // Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)\n    !parseFloat(val) && jQuery.css(elem, "display", false, styles) === "inline") && // Make sure the element is visible & connected\n    elem.getClientRects().length) {\n      isBorderBox = jQuery.css(elem, "boxSizing", false, styles) === "border-box"; // Where available, offsetWidth/offsetHeight approximate border box dimensions.\n      // Where not available (e.g., SVG), assume unreliable box-sizing and interpret the\n      // retrieved value as a content box dimension.\n\n      valueIsBorderBox = offsetProp in elem;\n\n      if (valueIsBorderBox) {\n        val = elem[offsetProp];\n      }\n    } // Normalize "" and auto\n\n\n    val = parseFloat(val) || 0; // Adjust for the element\'s box model\n\n    return val + boxModelAdjustment(elem, dimension, extra || (isBorderBox ? "border" : "content"), valueIsBorderBox, styles, // Provide the current computed size to request scroll gutter calculation (gh-3589)\n    val) + "px";\n  }\n\n  jQuery.extend({\n    // Add in style property hooks for overriding the default\n    // behavior of getting and setting a style property\n    cssHooks: {\n      opacity: {\n        get: function get(elem, computed) {\n          if (computed) {\n            // We should always get a number back from opacity\n            var ret = curCSS(elem, "opacity");\n            return ret === "" ? "1" : ret;\n          }\n        }\n      }\n    },\n    // Don\'t automatically add "px" to these possibly-unitless properties\n    cssNumber: {\n      "animationIterationCount": true,\n      "columnCount": true,\n      "fillOpacity": true,\n      "flexGrow": true,\n      "flexShrink": true,\n      "fontWeight": true,\n      "gridArea": true,\n      "gridColumn": true,\n      "gridColumnEnd": true,\n      "gridColumnStart": true,\n      "gridRow": true,\n      "gridRowEnd": true,\n      "gridRowStart": true,\n      "lineHeight": true,\n      "opacity": true,\n      "order": true,\n      "orphans": true,\n      "widows": true,\n      "zIndex": true,\n      "zoom": true\n    },\n    // Add in properties whose names you wish to fix before\n    // setting or getting the value\n    cssProps: {},\n    // Get and set the style property on a DOM Node\n    style: function style(elem, name, value, extra) {\n      // Don\'t set styles on text and comment nodes\n      if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) {\n        return;\n      } // Make sure that we\'re working with the right name\n\n\n      var ret,\n          type,\n          hooks,\n          origName = camelCase(name),\n          isCustomProp = rcustomProp.test(name),\n          style = elem.style; // Make sure that we\'re working with the right name. We don\'t\n      // want to query the value if it is a CSS custom property\n      // since they are user-defined.\n\n      if (!isCustomProp) {\n        name = finalPropName(origName);\n      } // Gets hook for the prefixed version, then unprefixed version\n\n\n      hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName]; // Check if we\'re setting a value\n\n      if (value !== undefined) {\n        type = _typeof(value); // Convert "+=" or "-=" to relative numbers (#7345)\n\n        if (type === "string" && (ret = rcssNum.exec(value)) && ret[1]) {\n          value = adjustCSS(elem, name, ret); // Fixes bug #9237\n\n          type = "number";\n        } // Make sure that null and NaN values aren\'t set (#7116)\n\n\n        if (value == null || value !== value) {\n          return;\n        } // If a number was passed in, add the unit (except for certain CSS properties)\n        // The isCustomProp check can be removed in jQuery 4.0 when we only auto-append\n        // "px" to a few hardcoded values.\n\n\n        if (type === "number" && !isCustomProp) {\n          value += ret && ret[3] || (jQuery.cssNumber[origName] ? "" : "px");\n        } // background-* props affect original clone\'s values\n\n\n        if (!support.clearCloneStyle && value === "" && name.indexOf("background") === 0) {\n          style[name] = "inherit";\n        } // If a hook was provided, use that value, otherwise just set the specified value\n\n\n        if (!hooks || !("set" in hooks) || (value = hooks.set(elem, value, extra)) !== undefined) {\n          if (isCustomProp) {\n            style.setProperty(name, value);\n          } else {\n            style[name] = value;\n          }\n        }\n      } else {\n        // If a hook was provided get the non-computed value from there\n        if (hooks && "get" in hooks && (ret = hooks.get(elem, false, extra)) !== undefined) {\n          return ret;\n        } // Otherwise just get the value from the style object\n\n\n        return style[name];\n      }\n    },\n    css: function css(elem, name, extra, styles) {\n      var val,\n          num,\n          hooks,\n          origName = camelCase(name),\n          isCustomProp = rcustomProp.test(name); // Make sure that we\'re working with the right name. We don\'t\n      // want to modify the value if it is a CSS custom property\n      // since they are user-defined.\n\n      if (!isCustomProp) {\n        name = finalPropName(origName);\n      } // Try prefixed name followed by the unprefixed name\n\n\n      hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName]; // If a hook was provided get the computed value from there\n\n      if (hooks && "get" in hooks) {\n        val = hooks.get(elem, true, extra);\n      } // Otherwise, if a way to get the computed value exists, use that\n\n\n      if (val === undefined) {\n        val = curCSS(elem, name, styles);\n      } // Convert "normal" to computed value\n\n\n      if (val === "normal" && name in cssNormalTransform) {\n        val = cssNormalTransform[name];\n      } // Make numeric if forced or a qualifier was provided and val looks numeric\n\n\n      if (extra === "" || extra) {\n        num = parseFloat(val);\n        return extra === true || isFinite(num) ? num || 0 : val;\n      }\n\n      return val;\n    }\n  });\n  jQuery.each(["height", "width"], function (_i, dimension) {\n    jQuery.cssHooks[dimension] = {\n      get: function get(elem, computed, extra) {\n        if (computed) {\n          // Certain elements can have dimension info if we invisibly show them\n          // but it must have a current display style that would benefit\n          return rdisplayswap.test(jQuery.css(elem, "display")) && (!elem.getClientRects().length || !elem.getBoundingClientRect().width) ? swap(elem, cssShow, function () {\n            return getWidthOrHeight(elem, dimension, extra);\n          }) : getWidthOrHeight(elem, dimension, extra);\n        }\n      },\n      set: function set(elem, value, extra) {\n        var matches,\n            styles = getStyles(elem),\n            // Only read styles.position if the test has a chance to fail\n        // to avoid forcing a reflow.\n        scrollboxSizeBuggy = !support.scrollboxSize() && styles.position === "absolute",\n            // To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)\n        boxSizingNeeded = scrollboxSizeBuggy || extra,\n            isBorderBox = boxSizingNeeded && jQuery.css(elem, "boxSizing", false, styles) === "border-box",\n            subtract = extra ? boxModelAdjustment(elem, dimension, extra, isBorderBox, styles) : 0; // Account for unreliable border-box dimensions by comparing offset* to computed and\n        // faking a content-box to get border and padding (gh-3699)\n\n        if (isBorderBox && scrollboxSizeBuggy) {\n          subtract -= Math.ceil(elem["offset" + dimension[0].toUpperCase() + dimension.slice(1)] - parseFloat(styles[dimension]) - boxModelAdjustment(elem, dimension, "border", false, styles) - 0.5);\n        } // Convert to pixels if value adjustment is needed\n\n\n        if (subtract && (matches = rcssNum.exec(value)) && (matches[3] || "px") !== "px") {\n          elem.style[dimension] = value;\n          value = jQuery.css(elem, dimension);\n        }\n\n        return setPositiveNumber(elem, value, subtract);\n      }\n    };\n  });\n  jQuery.cssHooks.marginLeft = addGetHookIf(support.reliableMarginLeft, function (elem, computed) {\n    if (computed) {\n      return (parseFloat(curCSS(elem, "marginLeft")) || elem.getBoundingClientRect().left - swap(elem, {\n        marginLeft: 0\n      }, function () {\n        return elem.getBoundingClientRect().left;\n      })) + "px";\n    }\n  }); // These hooks are used by animate to expand properties\n\n  jQuery.each({\n    margin: "",\n    padding: "",\n    border: "Width"\n  }, function (prefix, suffix) {\n    jQuery.cssHooks[prefix + suffix] = {\n      expand: function expand(value) {\n        var i = 0,\n            expanded = {},\n            // Assumes a single number if not a string\n        parts = typeof value === "string" ? value.split(" ") : [value];\n\n        for (; i < 4; i++) {\n          expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0];\n        }\n\n        return expanded;\n      }\n    };\n\n    if (prefix !== "margin") {\n      jQuery.cssHooks[prefix + suffix].set = setPositiveNumber;\n    }\n  });\n  jQuery.fn.extend({\n    css: function css(name, value) {\n      return access(this, function (elem, name, value) {\n        var styles,\n            len,\n            map = {},\n            i = 0;\n\n        if (Array.isArray(name)) {\n          styles = getStyles(elem);\n          len = name.length;\n\n          for (; i < len; i++) {\n            map[name[i]] = jQuery.css(elem, name[i], false, styles);\n          }\n\n          return map;\n        }\n\n        return value !== undefined ? jQuery.style(elem, name, value) : jQuery.css(elem, name);\n      }, name, value, arguments.length > 1);\n    }\n  });\n\n  function Tween(elem, options, prop, end, easing) {\n    return new Tween.prototype.init(elem, options, prop, end, easing);\n  }\n\n  jQuery.Tween = Tween;\n  Tween.prototype = {\n    constructor: Tween,\n    init: function init(elem, options, prop, end, easing, unit) {\n      this.elem = elem;\n      this.prop = prop;\n      this.easing = easing || jQuery.easing._default;\n      this.options = options;\n      this.start = this.now = this.cur();\n      this.end = end;\n      this.unit = unit || (jQuery.cssNumber[prop] ? "" : "px");\n    },\n    cur: function cur() {\n      var hooks = Tween.propHooks[this.prop];\n      return hooks && hooks.get ? hooks.get(this) : Tween.propHooks._default.get(this);\n    },\n    run: function run(percent) {\n      var eased,\n          hooks = Tween.propHooks[this.prop];\n\n      if (this.options.duration) {\n        this.pos = eased = jQuery.easing[this.easing](percent, this.options.duration * percent, 0, 1, this.options.duration);\n      } else {\n        this.pos = eased = percent;\n      }\n\n      this.now = (this.end - this.start) * eased + this.start;\n\n      if (this.options.step) {\n        this.options.step.call(this.elem, this.now, this);\n      }\n\n      if (hooks && hooks.set) {\n        hooks.set(this);\n      } else {\n        Tween.propHooks._default.set(this);\n      }\n\n      return this;\n    }\n  };\n  Tween.prototype.init.prototype = Tween.prototype;\n  Tween.propHooks = {\n    _default: {\n      get: function get(tween) {\n        var result; // Use a property on the element directly when it is not a DOM element,\n        // or when there is no matching style property that exists.\n\n        if (tween.elem.nodeType !== 1 || tween.elem[tween.prop] != null && tween.elem.style[tween.prop] == null) {\n          return tween.elem[tween.prop];\n        } // Passing an empty string as a 3rd parameter to .css will automatically\n        // attempt a parseFloat and fallback to a string if the parse fails.\n        // Simple values such as "10px" are parsed to Float;\n        // complex values such as "rotate(1rad)" are returned as-is.\n\n\n        result = jQuery.css(tween.elem, tween.prop, ""); // Empty strings, null, undefined and "auto" are converted to 0.\n\n        return !result || result === "auto" ? 0 : result;\n      },\n      set: function set(tween) {\n        // Use step hook for back compat.\n        // Use cssHook if its there.\n        // Use .style if available and use plain properties where available.\n        if (jQuery.fx.step[tween.prop]) {\n          jQuery.fx.step[tween.prop](tween);\n        } else if (tween.elem.nodeType === 1 && (jQuery.cssHooks[tween.prop] || tween.elem.style[finalPropName(tween.prop)] != null)) {\n          jQuery.style(tween.elem, tween.prop, tween.now + tween.unit);\n        } else {\n          tween.elem[tween.prop] = tween.now;\n        }\n      }\n    }\n  }; // Support: IE <=9 only\n  // Panic based approach to setting things on disconnected nodes\n\n  Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n    set: function set(tween) {\n      if (tween.elem.nodeType && tween.elem.parentNode) {\n        tween.elem[tween.prop] = tween.now;\n      }\n    }\n  };\n  jQuery.easing = {\n    linear: function linear(p) {\n      return p;\n    },\n    swing: function swing(p) {\n      return 0.5 - Math.cos(p * Math.PI) / 2;\n    },\n    _default: "swing"\n  };\n  jQuery.fx = Tween.prototype.init; // Back compat <1.8 extension point\n\n  jQuery.fx.step = {};\n  var fxNow,\n      inProgress,\n      rfxtypes = /^(?:toggle|show|hide)$/,\n      rrun = /queueHooks$/;\n\n  function schedule() {\n    if (inProgress) {\n      if (document.hidden === false && window.requestAnimationFrame) {\n        window.requestAnimationFrame(schedule);\n      } else {\n        window.setTimeout(schedule, jQuery.fx.interval);\n      }\n\n      jQuery.fx.tick();\n    }\n  } // Animations created synchronously will run synchronously\n\n\n  function createFxNow() {\n    window.setTimeout(function () {\n      fxNow = undefined;\n    });\n    return fxNow = Date.now();\n  } // Generate parameters to create a standard animation\n\n\n  function genFx(type, includeWidth) {\n    var which,\n        i = 0,\n        attrs = {\n      height: type\n    }; // If we include width, step value is 1 to do all cssExpand values,\n    // otherwise step value is 2 to skip over Left and Right\n\n    includeWidth = includeWidth ? 1 : 0;\n\n    for (; i < 4; i += 2 - includeWidth) {\n      which = cssExpand[i];\n      attrs["margin" + which] = attrs["padding" + which] = type;\n    }\n\n    if (includeWidth) {\n      attrs.opacity = attrs.width = type;\n    }\n\n    return attrs;\n  }\n\n  function createTween(value, prop, animation) {\n    var tween,\n        collection = (Animation.tweeners[prop] || []).concat(Animation.tweeners["*"]),\n        index = 0,\n        length = collection.length;\n\n    for (; index < length; index++) {\n      if (tween = collection[index].call(animation, prop, value)) {\n        // We\'re done with this property\n        return tween;\n      }\n    }\n  }\n\n  function defaultPrefilter(elem, props, opts) {\n    var prop,\n        value,\n        toggle,\n        hooks,\n        oldfire,\n        propTween,\n        restoreDisplay,\n        display,\n        isBox = "width" in props || "height" in props,\n        anim = this,\n        orig = {},\n        style = elem.style,\n        hidden = elem.nodeType && isHiddenWithinTree(elem),\n        dataShow = dataPriv.get(elem, "fxshow"); // Queue-skipping animations hijack the fx hooks\n\n    if (!opts.queue) {\n      hooks = jQuery._queueHooks(elem, "fx");\n\n      if (hooks.unqueued == null) {\n        hooks.unqueued = 0;\n        oldfire = hooks.empty.fire;\n\n        hooks.empty.fire = function () {\n          if (!hooks.unqueued) {\n            oldfire();\n          }\n        };\n      }\n\n      hooks.unqueued++;\n      anim.always(function () {\n        // Ensure the complete handler is called before this completes\n        anim.always(function () {\n          hooks.unqueued--;\n\n          if (!jQuery.queue(elem, "fx").length) {\n            hooks.empty.fire();\n          }\n        });\n      });\n    } // Detect show/hide animations\n\n\n    for (prop in props) {\n      value = props[prop];\n\n      if (rfxtypes.test(value)) {\n        delete props[prop];\n        toggle = toggle || value === "toggle";\n\n        if (value === (hidden ? "hide" : "show")) {\n          // Pretend to be hidden if this is a "show" and\n          // there is still data from a stopped show/hide\n          if (value === "show" && dataShow && dataShow[prop] !== undefined) {\n            hidden = true; // Ignore all other no-op show/hide data\n          } else {\n            continue;\n          }\n        }\n\n        orig[prop] = dataShow && dataShow[prop] || jQuery.style(elem, prop);\n      }\n    } // Bail out if this is a no-op like .hide().hide()\n\n\n    propTween = !jQuery.isEmptyObject(props);\n\n    if (!propTween && jQuery.isEmptyObject(orig)) {\n      return;\n    } // Restrict "overflow" and "display" styles during box animations\n\n\n    if (isBox && elem.nodeType === 1) {\n      // Support: IE <=9 - 11, Edge 12 - 15\n      // Record all 3 overflow attributes because IE does not infer the shorthand\n      // from identically-valued overflowX and overflowY and Edge just mirrors\n      // the overflowX value there.\n      opts.overflow = [style.overflow, style.overflowX, style.overflowY]; // Identify a display type, preferring old show/hide data over the CSS cascade\n\n      restoreDisplay = dataShow && dataShow.display;\n\n      if (restoreDisplay == null) {\n        restoreDisplay = dataPriv.get(elem, "display");\n      }\n\n      display = jQuery.css(elem, "display");\n\n      if (display === "none") {\n        if (restoreDisplay) {\n          display = restoreDisplay;\n        } else {\n          // Get nonempty value(s) by temporarily forcing visibility\n          showHide([elem], true);\n          restoreDisplay = elem.style.display || restoreDisplay;\n          display = jQuery.css(elem, "display");\n          showHide([elem]);\n        }\n      } // Animate inline elements as inline-block\n\n\n      if (display === "inline" || display === "inline-block" && restoreDisplay != null) {\n        if (jQuery.css(elem, "float") === "none") {\n          // Restore the original display value at the end of pure show/hide animations\n          if (!propTween) {\n            anim.done(function () {\n              style.display = restoreDisplay;\n            });\n\n            if (restoreDisplay == null) {\n              display = style.display;\n              restoreDisplay = display === "none" ? "" : display;\n            }\n          }\n\n          style.display = "inline-block";\n        }\n      }\n    }\n\n    if (opts.overflow) {\n      style.overflow = "hidden";\n      anim.always(function () {\n        style.overflow = opts.overflow[0];\n        style.overflowX = opts.overflow[1];\n        style.overflowY = opts.overflow[2];\n      });\n    } // Implement show/hide animations\n\n\n    propTween = false;\n\n    for (prop in orig) {\n      // General show/hide setup for this element animation\n      if (!propTween) {\n        if (dataShow) {\n          if ("hidden" in dataShow) {\n            hidden = dataShow.hidden;\n          }\n        } else {\n          dataShow = dataPriv.access(elem, "fxshow", {\n            display: restoreDisplay\n          });\n        } // Store hidden/visible for toggle so `.stop().toggle()` "reverses"\n\n\n        if (toggle) {\n          dataShow.hidden = !hidden;\n        } // Show elements before animating them\n\n\n        if (hidden) {\n          showHide([elem], true);\n        }\n        /* eslint-disable no-loop-func */\n\n\n        anim.done(function () {\n          /* eslint-enable no-loop-func */\n          // The final step of a "hide" animation is actually hiding the element\n          if (!hidden) {\n            showHide([elem]);\n          }\n\n          dataPriv.remove(elem, "fxshow");\n\n          for (prop in orig) {\n            jQuery.style(elem, prop, orig[prop]);\n          }\n        });\n      } // Per-property setup\n\n\n      propTween = createTween(hidden ? dataShow[prop] : 0, prop, anim);\n\n      if (!(prop in dataShow)) {\n        dataShow[prop] = propTween.start;\n\n        if (hidden) {\n          propTween.end = propTween.start;\n          propTween.start = 0;\n        }\n      }\n    }\n  }\n\n  function propFilter(props, specialEasing) {\n    var index, name, easing, value, hooks; // camelCase, specialEasing and expand cssHook pass\n\n    for (index in props) {\n      name = camelCase(index);\n      easing = specialEasing[name];\n      value = props[index];\n\n      if (Array.isArray(value)) {\n        easing = value[1];\n        value = props[index] = value[0];\n      }\n\n      if (index !== name) {\n        props[name] = value;\n        delete props[index];\n      }\n\n      hooks = jQuery.cssHooks[name];\n\n      if (hooks && "expand" in hooks) {\n        value = hooks.expand(value);\n        delete props[name]; // Not quite $.extend, this won\'t overwrite existing keys.\n        // Reusing \'index\' because we have the correct "name"\n\n        for (index in value) {\n          if (!(index in props)) {\n            props[index] = value[index];\n            specialEasing[index] = easing;\n          }\n        }\n      } else {\n        specialEasing[name] = easing;\n      }\n    }\n  }\n\n  function Animation(elem, properties, options) {\n    var result,\n        stopped,\n        index = 0,\n        length = Animation.prefilters.length,\n        deferred = jQuery.Deferred().always(function () {\n      // Don\'t match elem in the :animated selector\n      delete tick.elem;\n    }),\n        tick = function tick() {\n      if (stopped) {\n        return false;\n      }\n\n      var currentTime = fxNow || createFxNow(),\n          remaining = Math.max(0, animation.startTime + animation.duration - currentTime),\n          // Support: Android 2.3 only\n      // Archaic crash bug won\'t allow us to use `1 - ( 0.5 || 0 )` (#12497)\n      temp = remaining / animation.duration || 0,\n          percent = 1 - temp,\n          index = 0,\n          length = animation.tweens.length;\n\n      for (; index < length; index++) {\n        animation.tweens[index].run(percent);\n      }\n\n      deferred.notifyWith(elem, [animation, percent, remaining]); // If there\'s more to do, yield\n\n      if (percent < 1 && length) {\n        return remaining;\n      } // If this was an empty animation, synthesize a final progress notification\n\n\n      if (!length) {\n        deferred.notifyWith(elem, [animation, 1, 0]);\n      } // Resolve the animation and report its conclusion\n\n\n      deferred.resolveWith(elem, [animation]);\n      return false;\n    },\n        animation = deferred.promise({\n      elem: elem,\n      props: jQuery.extend({}, properties),\n      opts: jQuery.extend(true, {\n        specialEasing: {},\n        easing: jQuery.easing._default\n      }, options),\n      originalProperties: properties,\n      originalOptions: options,\n      startTime: fxNow || createFxNow(),\n      duration: options.duration,\n      tweens: [],\n      createTween: function createTween(prop, end) {\n        var tween = jQuery.Tween(elem, animation.opts, prop, end, animation.opts.specialEasing[prop] || animation.opts.easing);\n        animation.tweens.push(tween);\n        return tween;\n      },\n      stop: function stop(gotoEnd) {\n        var index = 0,\n            // If we are going to the end, we want to run all the tweens\n        // otherwise we skip this part\n        length = gotoEnd ? animation.tweens.length : 0;\n\n        if (stopped) {\n          return this;\n        }\n\n        stopped = true;\n\n        for (; index < length; index++) {\n          animation.tweens[index].run(1);\n        } // Resolve when we played the last frame; otherwise, reject\n\n\n        if (gotoEnd) {\n          deferred.notifyWith(elem, [animation, 1, 0]);\n          deferred.resolveWith(elem, [animation, gotoEnd]);\n        } else {\n          deferred.rejectWith(elem, [animation, gotoEnd]);\n        }\n\n        return this;\n      }\n    }),\n        props = animation.props;\n\n    propFilter(props, animation.opts.specialEasing);\n\n    for (; index < length; index++) {\n      result = Animation.prefilters[index].call(animation, elem, props, animation.opts);\n\n      if (result) {\n        if (isFunction(result.stop)) {\n          jQuery._queueHooks(animation.elem, animation.opts.queue).stop = result.stop.bind(result);\n        }\n\n        return result;\n      }\n    }\n\n    jQuery.map(props, createTween, animation);\n\n    if (isFunction(animation.opts.start)) {\n      animation.opts.start.call(elem, animation);\n    } // Attach callbacks from options\n\n\n    animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always);\n    jQuery.fx.timer(jQuery.extend(tick, {\n      elem: elem,\n      anim: animation,\n      queue: animation.opts.queue\n    }));\n    return animation;\n  }\n\n  jQuery.Animation = jQuery.extend(Animation, {\n    tweeners: {\n      "*": [function (prop, value) {\n        var tween = this.createTween(prop, value);\n        adjustCSS(tween.elem, prop, rcssNum.exec(value), tween);\n        return tween;\n      }]\n    },\n    tweener: function tweener(props, callback) {\n      if (isFunction(props)) {\n        callback = props;\n        props = ["*"];\n      } else {\n        props = props.match(rnothtmlwhite);\n      }\n\n      var prop,\n          index = 0,\n          length = props.length;\n\n      for (; index < length; index++) {\n        prop = props[index];\n        Animation.tweeners[prop] = Animation.tweeners[prop] || [];\n        Animation.tweeners[prop].unshift(callback);\n      }\n    },\n    prefilters: [defaultPrefilter],\n    prefilter: function prefilter(callback, prepend) {\n      if (prepend) {\n        Animation.prefilters.unshift(callback);\n      } else {\n        Animation.prefilters.push(callback);\n      }\n    }\n  });\n\n  jQuery.speed = function (speed, easing, fn) {\n    var opt = speed && _typeof(speed) === "object" ? jQuery.extend({}, speed) : {\n      complete: fn || !fn && easing || isFunction(speed) && speed,\n      duration: speed,\n      easing: fn && easing || easing && !isFunction(easing) && easing\n    }; // Go to the end state if fx are off\n\n    if (jQuery.fx.off) {\n      opt.duration = 0;\n    } else {\n      if (typeof opt.duration !== "number") {\n        if (opt.duration in jQuery.fx.speeds) {\n          opt.duration = jQuery.fx.speeds[opt.duration];\n        } else {\n          opt.duration = jQuery.fx.speeds._default;\n        }\n      }\n    } // Normalize opt.queue - true/undefined/null -> "fx"\n\n\n    if (opt.queue == null || opt.queue === true) {\n      opt.queue = "fx";\n    } // Queueing\n\n\n    opt.old = opt.complete;\n\n    opt.complete = function () {\n      if (isFunction(opt.old)) {\n        opt.old.call(this);\n      }\n\n      if (opt.queue) {\n        jQuery.dequeue(this, opt.queue);\n      }\n    };\n\n    return opt;\n  };\n\n  jQuery.fn.extend({\n    fadeTo: function fadeTo(speed, to, easing, callback) {\n      // Show any hidden elements after setting opacity to 0\n      return this.filter(isHiddenWithinTree).css("opacity", 0).show() // Animate to the value specified\n      .end().animate({\n        opacity: to\n      }, speed, easing, callback);\n    },\n    animate: function animate(prop, speed, easing, callback) {\n      var empty = jQuery.isEmptyObject(prop),\n          optall = jQuery.speed(speed, easing, callback),\n          doAnimation = function doAnimation() {\n        // Operate on a copy of prop so per-property easing won\'t be lost\n        var anim = Animation(this, jQuery.extend({}, prop), optall); // Empty animations, or finishing resolves immediately\n\n        if (empty || dataPriv.get(this, "finish")) {\n          anim.stop(true);\n        }\n      };\n\n      doAnimation.finish = doAnimation;\n      return empty || optall.queue === false ? this.each(doAnimation) : this.queue(optall.queue, doAnimation);\n    },\n    stop: function stop(type, clearQueue, gotoEnd) {\n      var stopQueue = function stopQueue(hooks) {\n        var stop = hooks.stop;\n        delete hooks.stop;\n        stop(gotoEnd);\n      };\n\n      if (typeof type !== "string") {\n        gotoEnd = clearQueue;\n        clearQueue = type;\n        type = undefined;\n      }\n\n      if (clearQueue) {\n        this.queue(type || "fx", []);\n      }\n\n      return this.each(function () {\n        var dequeue = true,\n            index = type != null && type + "queueHooks",\n            timers = jQuery.timers,\n            data = dataPriv.get(this);\n\n        if (index) {\n          if (data[index] && data[index].stop) {\n            stopQueue(data[index]);\n          }\n        } else {\n          for (index in data) {\n            if (data[index] && data[index].stop && rrun.test(index)) {\n              stopQueue(data[index]);\n            }\n          }\n        }\n\n        for (index = timers.length; index--;) {\n          if (timers[index].elem === this && (type == null || timers[index].queue === type)) {\n            timers[index].anim.stop(gotoEnd);\n            dequeue = false;\n            timers.splice(index, 1);\n          }\n        } // Start the next in the queue if the last step wasn\'t forced.\n        // Timers currently will call their complete callbacks, which\n        // will dequeue but only if they were gotoEnd.\n\n\n        if (dequeue || !gotoEnd) {\n          jQuery.dequeue(this, type);\n        }\n      });\n    },\n    finish: function finish(type) {\n      if (type !== false) {\n        type = type || "fx";\n      }\n\n      return this.each(function () {\n        var index,\n            data = dataPriv.get(this),\n            queue = data[type + "queue"],\n            hooks = data[type + "queueHooks"],\n            timers = jQuery.timers,\n            length = queue ? queue.length : 0; // Enable finishing flag on private data\n\n        data.finish = true; // Empty the queue first\n\n        jQuery.queue(this, type, []);\n\n        if (hooks && hooks.stop) {\n          hooks.stop.call(this, true);\n        } // Look for any active animations, and finish them\n\n\n        for (index = timers.length; index--;) {\n          if (timers[index].elem === this && timers[index].queue === type) {\n            timers[index].anim.stop(true);\n            timers.splice(index, 1);\n          }\n        } // Look for any animations in the old queue and finish them\n\n\n        for (index = 0; index < length; index++) {\n          if (queue[index] && queue[index].finish) {\n            queue[index].finish.call(this);\n          }\n        } // Turn off finishing flag\n\n\n        delete data.finish;\n      });\n    }\n  });\n  jQuery.each(["toggle", "show", "hide"], function (_i, name) {\n    var cssFn = jQuery.fn[name];\n\n    jQuery.fn[name] = function (speed, easing, callback) {\n      return speed == null || typeof speed === "boolean" ? cssFn.apply(this, arguments) : this.animate(genFx(name, true), speed, easing, callback);\n    };\n  }); // Generate shortcuts for custom animations\n\n  jQuery.each({\n    slideDown: genFx("show"),\n    slideUp: genFx("hide"),\n    slideToggle: genFx("toggle"),\n    fadeIn: {\n      opacity: "show"\n    },\n    fadeOut: {\n      opacity: "hide"\n    },\n    fadeToggle: {\n      opacity: "toggle"\n    }\n  }, function (name, props) {\n    jQuery.fn[name] = function (speed, easing, callback) {\n      return this.animate(props, speed, easing, callback);\n    };\n  });\n  jQuery.timers = [];\n\n  jQuery.fx.tick = function () {\n    var timer,\n        i = 0,\n        timers = jQuery.timers;\n    fxNow = Date.now();\n\n    for (; i < timers.length; i++) {\n      timer = timers[i]; // Run the timer and safely remove it when done (allowing for external removal)\n\n      if (!timer() && timers[i] === timer) {\n        timers.splice(i--, 1);\n      }\n    }\n\n    if (!timers.length) {\n      jQuery.fx.stop();\n    }\n\n    fxNow = undefined;\n  };\n\n  jQuery.fx.timer = function (timer) {\n    jQuery.timers.push(timer);\n    jQuery.fx.start();\n  };\n\n  jQuery.fx.interval = 13;\n\n  jQuery.fx.start = function () {\n    if (inProgress) {\n      return;\n    }\n\n    inProgress = true;\n    schedule();\n  };\n\n  jQuery.fx.stop = function () {\n    inProgress = null;\n  };\n\n  jQuery.fx.speeds = {\n    slow: 600,\n    fast: 200,\n    // Default speed\n    _default: 400\n  }; // Based off of the plugin by Clint Helfers, with permission.\n  // https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\n\n  jQuery.fn.delay = function (time, type) {\n    time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;\n    type = type || "fx";\n    return this.queue(type, function (next, hooks) {\n      var timeout = window.setTimeout(next, time);\n\n      hooks.stop = function () {\n        window.clearTimeout(timeout);\n      };\n    });\n  };\n\n  (function () {\n    var input = document.createElement("input"),\n        select = document.createElement("select"),\n        opt = select.appendChild(document.createElement("option"));\n    input.type = "checkbox"; // Support: Android <=4.3 only\n    // Default value for a checkbox should be "on"\n\n    support.checkOn = input.value !== ""; // Support: IE <=11 only\n    // Must access selectedIndex to make default options select\n\n    support.optSelected = opt.selected; // Support: IE <=11 only\n    // An input loses its value after becoming a radio\n\n    input = document.createElement("input");\n    input.value = "t";\n    input.type = "radio";\n    support.radioValue = input.value === "t";\n  })();\n\n  var boolHook,\n      attrHandle = jQuery.expr.attrHandle;\n  jQuery.fn.extend({\n    attr: function attr(name, value) {\n      return access(this, jQuery.attr, name, value, arguments.length > 1);\n    },\n    removeAttr: function removeAttr(name) {\n      return this.each(function () {\n        jQuery.removeAttr(this, name);\n      });\n    }\n  });\n  jQuery.extend({\n    attr: function attr(elem, name, value) {\n      var ret,\n          hooks,\n          nType = elem.nodeType; // Don\'t get/set attributes on text, comment and attribute nodes\n\n      if (nType === 3 || nType === 8 || nType === 2) {\n        return;\n      } // Fallback to prop when attributes are not supported\n\n\n      if (typeof elem.getAttribute === "undefined") {\n        return jQuery.prop(elem, name, value);\n      } // Attribute hooks are determined by the lowercase version\n      // Grab necessary hook if one is defined\n\n\n      if (nType !== 1 || !jQuery.isXMLDoc(elem)) {\n        hooks = jQuery.attrHooks[name.toLowerCase()] || (jQuery.expr.match.bool.test(name) ? boolHook : undefined);\n      }\n\n      if (value !== undefined) {\n        if (value === null) {\n          jQuery.removeAttr(elem, name);\n          return;\n        }\n\n        if (hooks && "set" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {\n          return ret;\n        }\n\n        elem.setAttribute(name, value + "");\n        return value;\n      }\n\n      if (hooks && "get" in hooks && (ret = hooks.get(elem, name)) !== null) {\n        return ret;\n      }\n\n      ret = jQuery.find.attr(elem, name); // Non-existent attributes return null, we normalize to undefined\n\n      return ret == null ? undefined : ret;\n    },\n    attrHooks: {\n      type: {\n        set: function set(elem, value) {\n          if (!support.radioValue && value === "radio" && nodeName(elem, "input")) {\n            var val = elem.value;\n            elem.setAttribute("type", value);\n\n            if (val) {\n              elem.value = val;\n            }\n\n            return value;\n          }\n        }\n      }\n    },\n    removeAttr: function removeAttr(elem, value) {\n      var name,\n          i = 0,\n          // Attribute names can contain non-HTML whitespace characters\n      // https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n      attrNames = value && value.match(rnothtmlwhite);\n\n      if (attrNames && elem.nodeType === 1) {\n        while (name = attrNames[i++]) {\n          elem.removeAttribute(name);\n        }\n      }\n    }\n  }); // Hooks for boolean attributes\n\n  boolHook = {\n    set: function set(elem, value, name) {\n      if (value === false) {\n        // Remove boolean attributes when set to false\n        jQuery.removeAttr(elem, name);\n      } else {\n        elem.setAttribute(name, name);\n      }\n\n      return name;\n    }\n  };\n  jQuery.each(jQuery.expr.match.bool.source.match(/\\w+/g), function (_i, name) {\n    var getter = attrHandle[name] || jQuery.find.attr;\n\n    attrHandle[name] = function (elem, name, isXML) {\n      var ret,\n          handle,\n          lowercaseName = name.toLowerCase();\n\n      if (!isXML) {\n        // Avoid an infinite loop by temporarily removing this function from the getter\n        handle = attrHandle[lowercaseName];\n        attrHandle[lowercaseName] = ret;\n        ret = getter(elem, name, isXML) != null ? lowercaseName : null;\n        attrHandle[lowercaseName] = handle;\n      }\n\n      return ret;\n    };\n  });\n  var rfocusable = /^(?:input|select|textarea|button)$/i,\n      rclickable = /^(?:a|area)$/i;\n  jQuery.fn.extend({\n    prop: function prop(name, value) {\n      return access(this, jQuery.prop, name, value, arguments.length > 1);\n    },\n    removeProp: function removeProp(name) {\n      return this.each(function () {\n        delete this[jQuery.propFix[name] || name];\n      });\n    }\n  });\n  jQuery.extend({\n    prop: function prop(elem, name, value) {\n      var ret,\n          hooks,\n          nType = elem.nodeType; // Don\'t get/set properties on text, comment and attribute nodes\n\n      if (nType === 3 || nType === 8 || nType === 2) {\n        return;\n      }\n\n      if (nType !== 1 || !jQuery.isXMLDoc(elem)) {\n        // Fix name and attach hooks\n        name = jQuery.propFix[name] || name;\n        hooks = jQuery.propHooks[name];\n      }\n\n      if (value !== undefined) {\n        if (hooks && "set" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {\n          return ret;\n        }\n\n        return elem[name] = value;\n      }\n\n      if (hooks && "get" in hooks && (ret = hooks.get(elem, name)) !== null) {\n        return ret;\n      }\n\n      return elem[name];\n    },\n    propHooks: {\n      tabIndex: {\n        get: function get(elem) {\n          // Support: IE <=9 - 11 only\n          // elem.tabIndex doesn\'t always return the\n          // correct value when it hasn\'t been explicitly set\n          // https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n          // Use proper attribute retrieval(#12072)\n          var tabindex = jQuery.find.attr(elem, "tabindex");\n\n          if (tabindex) {\n            return parseInt(tabindex, 10);\n          }\n\n          if (rfocusable.test(elem.nodeName) || rclickable.test(elem.nodeName) && elem.href) {\n            return 0;\n          }\n\n          return -1;\n        }\n      }\n    },\n    propFix: {\n      "for": "htmlFor",\n      "class": "className"\n    }\n  }); // Support: IE <=11 only\n  // Accessing the selectedIndex property\n  // forces the browser to respect setting selected\n  // on the option\n  // The getter ensures a default option is selected\n  // when in an optgroup\n  // eslint rule "no-unused-expressions" is disabled for this code\n  // since it considers such accessions noop\n\n  if (!support.optSelected) {\n    jQuery.propHooks.selected = {\n      get: function get(elem) {\n        /* eslint no-unused-expressions: "off" */\n        var parent = elem.parentNode;\n\n        if (parent && parent.parentNode) {\n          parent.parentNode.selectedIndex;\n        }\n\n        return null;\n      },\n      set: function set(elem) {\n        /* eslint no-unused-expressions: "off" */\n        var parent = elem.parentNode;\n\n        if (parent) {\n          parent.selectedIndex;\n\n          if (parent.parentNode) {\n            parent.parentNode.selectedIndex;\n          }\n        }\n      }\n    };\n  }\n\n  jQuery.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function () {\n    jQuery.propFix[this.toLowerCase()] = this;\n  }); // Strip and collapse whitespace according to HTML spec\n  // https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace\n\n  function stripAndCollapse(value) {\n    var tokens = value.match(rnothtmlwhite) || [];\n    return tokens.join(" ");\n  }\n\n  function getClass(elem) {\n    return elem.getAttribute && elem.getAttribute("class") || "";\n  }\n\n  function classesToArray(value) {\n    if (Array.isArray(value)) {\n      return value;\n    }\n\n    if (typeof value === "string") {\n      return value.match(rnothtmlwhite) || [];\n    }\n\n    return [];\n  }\n\n  jQuery.fn.extend({\n    addClass: function addClass(value) {\n      var classes,\n          elem,\n          cur,\n          curValue,\n          clazz,\n          j,\n          finalValue,\n          i = 0;\n\n      if (isFunction(value)) {\n        return this.each(function (j) {\n          jQuery(this).addClass(value.call(this, j, getClass(this)));\n        });\n      }\n\n      classes = classesToArray(value);\n\n      if (classes.length) {\n        while (elem = this[i++]) {\n          curValue = getClass(elem);\n          cur = elem.nodeType === 1 && " " + stripAndCollapse(curValue) + " ";\n\n          if (cur) {\n            j = 0;\n\n            while (clazz = classes[j++]) {\n              if (cur.indexOf(" " + clazz + " ") < 0) {\n                cur += clazz + " ";\n              }\n            } // Only assign if different to avoid unneeded rendering.\n\n\n            finalValue = stripAndCollapse(cur);\n\n            if (curValue !== finalValue) {\n              elem.setAttribute("class", finalValue);\n            }\n          }\n        }\n      }\n\n      return this;\n    },\n    removeClass: function removeClass(value) {\n      var classes,\n          elem,\n          cur,\n          curValue,\n          clazz,\n          j,\n          finalValue,\n          i = 0;\n\n      if (isFunction(value)) {\n        return this.each(function (j) {\n          jQuery(this).removeClass(value.call(this, j, getClass(this)));\n        });\n      }\n\n      if (!arguments.length) {\n        return this.attr("class", "");\n      }\n\n      classes = classesToArray(value);\n\n      if (classes.length) {\n        while (elem = this[i++]) {\n          curValue = getClass(elem); // This expression is here for better compressibility (see addClass)\n\n          cur = elem.nodeType === 1 && " " + stripAndCollapse(curValue) + " ";\n\n          if (cur) {\n            j = 0;\n\n            while (clazz = classes[j++]) {\n              // Remove *all* instances\n              while (cur.indexOf(" " + clazz + " ") > -1) {\n                cur = cur.replace(" " + clazz + " ", " ");\n              }\n            } // Only assign if different to avoid unneeded rendering.\n\n\n            finalValue = stripAndCollapse(cur);\n\n            if (curValue !== finalValue) {\n              elem.setAttribute("class", finalValue);\n            }\n          }\n        }\n      }\n\n      return this;\n    },\n    toggleClass: function toggleClass(value, stateVal) {\n      var type = _typeof(value),\n          isValidValue = type === "string" || Array.isArray(value);\n\n      if (typeof stateVal === "boolean" && isValidValue) {\n        return stateVal ? this.addClass(value) : this.removeClass(value);\n      }\n\n      if (isFunction(value)) {\n        return this.each(function (i) {\n          jQuery(this).toggleClass(value.call(this, i, getClass(this), stateVal), stateVal);\n        });\n      }\n\n      return this.each(function () {\n        var className, i, self, classNames;\n\n        if (isValidValue) {\n          // Toggle individual class names\n          i = 0;\n          self = jQuery(this);\n          classNames = classesToArray(value);\n\n          while (className = classNames[i++]) {\n            // Check each className given, space separated list\n            if (self.hasClass(className)) {\n              self.removeClass(className);\n            } else {\n              self.addClass(className);\n            }\n          } // Toggle whole class name\n\n        } else if (value === undefined || type === "boolean") {\n          className = getClass(this);\n\n          if (className) {\n            // Store className if set\n            dataPriv.set(this, "__className__", className);\n          } // If the element has a class name or if we\'re passed `false`,\n          // then remove the whole classname (if there was one, the above saved it).\n          // Otherwise bring back whatever was previously saved (if anything),\n          // falling back to the empty string if nothing was stored.\n\n\n          if (this.setAttribute) {\n            this.setAttribute("class", className || value === false ? "" : dataPriv.get(this, "__className__") || "");\n          }\n        }\n      });\n    },\n    hasClass: function hasClass(selector) {\n      var className,\n          elem,\n          i = 0;\n      className = " " + selector + " ";\n\n      while (elem = this[i++]) {\n        if (elem.nodeType === 1 && (" " + stripAndCollapse(getClass(elem)) + " ").indexOf(className) > -1) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  });\n  var rreturn = /\\r/g;\n  jQuery.fn.extend({\n    val: function val(value) {\n      var hooks,\n          ret,\n          valueIsFunction,\n          elem = this[0];\n\n      if (!arguments.length) {\n        if (elem) {\n          hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()];\n\n          if (hooks && "get" in hooks && (ret = hooks.get(elem, "value")) !== undefined) {\n            return ret;\n          }\n\n          ret = elem.value; // Handle most common string cases\n\n          if (typeof ret === "string") {\n            return ret.replace(rreturn, "");\n          } // Handle cases where value is null/undef or number\n\n\n          return ret == null ? "" : ret;\n        }\n\n        return;\n      }\n\n      valueIsFunction = isFunction(value);\n      return this.each(function (i) {\n        var val;\n\n        if (this.nodeType !== 1) {\n          return;\n        }\n\n        if (valueIsFunction) {\n          val = value.call(this, i, jQuery(this).val());\n        } else {\n          val = value;\n        } // Treat null/undefined as ""; convert numbers to string\n\n\n        if (val == null) {\n          val = "";\n        } else if (typeof val === "number") {\n          val += "";\n        } else if (Array.isArray(val)) {\n          val = jQuery.map(val, function (value) {\n            return value == null ? "" : value + "";\n          });\n        }\n\n        hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()]; // If set returns undefined, fall back to normal setting\n\n        if (!hooks || !("set" in hooks) || hooks.set(this, val, "value") === undefined) {\n          this.value = val;\n        }\n      });\n    }\n  });\n  jQuery.extend({\n    valHooks: {\n      option: {\n        get: function get(elem) {\n          var val = jQuery.find.attr(elem, "value");\n          return val != null ? val : // Support: IE <=10 - 11 only\n          // option.text throws exceptions (#14686, #14858)\n          // Strip and collapse whitespace\n          // https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n          stripAndCollapse(jQuery.text(elem));\n        }\n      },\n      select: {\n        get: function get(elem) {\n          var value,\n              option,\n              i,\n              options = elem.options,\n              index = elem.selectedIndex,\n              one = elem.type === "select-one",\n              values = one ? null : [],\n              max = one ? index + 1 : options.length;\n\n          if (index < 0) {\n            i = max;\n          } else {\n            i = one ? index : 0;\n          } // Loop through all the selected options\n\n\n          for (; i < max; i++) {\n            option = options[i]; // Support: IE <=9 only\n            // IE8-9 doesn\'t update selected after form reset (#2551)\n\n            if ((option.selected || i === index) && // Don\'t return options that are disabled or in a disabled optgroup\n            !option.disabled && (!option.parentNode.disabled || !nodeName(option.parentNode, "optgroup"))) {\n              // Get the specific value for the option\n              value = jQuery(option).val(); // We don\'t need an array for one selects\n\n              if (one) {\n                return value;\n              } // Multi-Selects return an array\n\n\n              values.push(value);\n            }\n          }\n\n          return values;\n        },\n        set: function set(elem, value) {\n          var optionSet,\n              option,\n              options = elem.options,\n              values = jQuery.makeArray(value),\n              i = options.length;\n\n          while (i--) {\n            option = options[i];\n            /* eslint-disable no-cond-assign */\n\n            if (option.selected = jQuery.inArray(jQuery.valHooks.option.get(option), values) > -1) {\n              optionSet = true;\n            }\n            /* eslint-enable no-cond-assign */\n\n          } // Force browsers to behave consistently when non-matching value is set\n\n\n          if (!optionSet) {\n            elem.selectedIndex = -1;\n          }\n\n          return values;\n        }\n      }\n    }\n  }); // Radios and checkboxes getter/setter\n\n  jQuery.each(["radio", "checkbox"], function () {\n    jQuery.valHooks[this] = {\n      set: function set(elem, value) {\n        if (Array.isArray(value)) {\n          return elem.checked = jQuery.inArray(jQuery(elem).val(), value) > -1;\n        }\n      }\n    };\n\n    if (!support.checkOn) {\n      jQuery.valHooks[this].get = function (elem) {\n        return elem.getAttribute("value") === null ? "on" : elem.value;\n      };\n    }\n  }); // Return jQuery for attributes-only inclusion\n\n  support.focusin = "onfocusin" in window;\n\n  var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n      stopPropagationCallback = function stopPropagationCallback(e) {\n    e.stopPropagation();\n  };\n\n  jQuery.extend(jQuery.event, {\n    trigger: function trigger(event, data, elem, onlyHandlers) {\n      var i,\n          cur,\n          tmp,\n          bubbleType,\n          ontype,\n          handle,\n          special,\n          lastElement,\n          eventPath = [elem || document],\n          type = hasOwn.call(event, "type") ? event.type : event,\n          namespaces = hasOwn.call(event, "namespace") ? event.namespace.split(".") : [];\n      cur = lastElement = tmp = elem = elem || document; // Don\'t do events on text and comment nodes\n\n      if (elem.nodeType === 3 || elem.nodeType === 8) {\n        return;\n      } // focus/blur morphs to focusin/out; ensure we\'re not firing them right now\n\n\n      if (rfocusMorph.test(type + jQuery.event.triggered)) {\n        return;\n      }\n\n      if (type.indexOf(".") > -1) {\n        // Namespaced trigger; create a regexp to match event type in handle()\n        namespaces = type.split(".");\n        type = namespaces.shift();\n        namespaces.sort();\n      }\n\n      ontype = type.indexOf(":") < 0 && "on" + type; // Caller can pass in a jQuery.Event object, Object, or just an event type string\n\n      event = event[jQuery.expando] ? event : new jQuery.Event(type, _typeof(event) === "object" && event); // Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\n      event.isTrigger = onlyHandlers ? 2 : 3;\n      event.namespace = namespaces.join(".");\n      event.rnamespace = event.namespace ? new RegExp("(^|\\\\.)" + namespaces.join("\\\\.(?:.*\\\\.|)") + "(\\\\.|$)") : null; // Clean up the event in case it is being reused\n\n      event.result = undefined;\n\n      if (!event.target) {\n        event.target = elem;\n      } // Clone any incoming data and prepend the event, creating the handler arg list\n\n\n      data = data == null ? [event] : jQuery.makeArray(data, [event]); // Allow special events to draw outside the lines\n\n      special = jQuery.event.special[type] || {};\n\n      if (!onlyHandlers && special.trigger && special.trigger.apply(elem, data) === false) {\n        return;\n      } // Determine event propagation path in advance, per W3C events spec (#9951)\n      // Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\n\n      if (!onlyHandlers && !special.noBubble && !isWindow(elem)) {\n        bubbleType = special.delegateType || type;\n\n        if (!rfocusMorph.test(bubbleType + type)) {\n          cur = cur.parentNode;\n        }\n\n        for (; cur; cur = cur.parentNode) {\n          eventPath.push(cur);\n          tmp = cur;\n        } // Only add window if we got to document (e.g., not plain obj or detached DOM)\n\n\n        if (tmp === (elem.ownerDocument || document)) {\n          eventPath.push(tmp.defaultView || tmp.parentWindow || window);\n        }\n      } // Fire handlers on the event path\n\n\n      i = 0;\n\n      while ((cur = eventPath[i++]) && !event.isPropagationStopped()) {\n        lastElement = cur;\n        event.type = i > 1 ? bubbleType : special.bindType || type; // jQuery handler\n\n        handle = (dataPriv.get(cur, "events") || Object.create(null))[event.type] && dataPriv.get(cur, "handle");\n\n        if (handle) {\n          handle.apply(cur, data);\n        } // Native handler\n\n\n        handle = ontype && cur[ontype];\n\n        if (handle && handle.apply && acceptData(cur)) {\n          event.result = handle.apply(cur, data);\n\n          if (event.result === false) {\n            event.preventDefault();\n          }\n        }\n      }\n\n      event.type = type; // If nobody prevented the default action, do it now\n\n      if (!onlyHandlers && !event.isDefaultPrevented()) {\n        if ((!special._default || special._default.apply(eventPath.pop(), data) === false) && acceptData(elem)) {\n          // Call a native DOM method on the target with the same name as the event.\n          // Don\'t do default actions on window, that\'s where global variables be (#6170)\n          if (ontype && isFunction(elem[type]) && !isWindow(elem)) {\n            // Don\'t re-trigger an onFOO event when we call its FOO() method\n            tmp = elem[ontype];\n\n            if (tmp) {\n              elem[ontype] = null;\n            } // Prevent re-triggering of the same event, since we already bubbled it above\n\n\n            jQuery.event.triggered = type;\n\n            if (event.isPropagationStopped()) {\n              lastElement.addEventListener(type, stopPropagationCallback);\n            }\n\n            elem[type]();\n\n            if (event.isPropagationStopped()) {\n              lastElement.removeEventListener(type, stopPropagationCallback);\n            }\n\n            jQuery.event.triggered = undefined;\n\n            if (tmp) {\n              elem[ontype] = tmp;\n            }\n          }\n        }\n      }\n\n      return event.result;\n    },\n    // Piggyback on a donor event to simulate a different one\n    // Used only for `focus(in | out)` events\n    simulate: function simulate(type, elem, event) {\n      var e = jQuery.extend(new jQuery.Event(), event, {\n        type: type,\n        isSimulated: true\n      });\n      jQuery.event.trigger(e, null, elem);\n    }\n  });\n  jQuery.fn.extend({\n    trigger: function trigger(type, data) {\n      return this.each(function () {\n        jQuery.event.trigger(type, data, this);\n      });\n    },\n    triggerHandler: function triggerHandler(type, data) {\n      var elem = this[0];\n\n      if (elem) {\n        return jQuery.event.trigger(type, data, elem, true);\n      }\n    }\n  }); // Support: Firefox <=44\n  // Firefox doesn\'t have focus(in | out) events\n  // Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n  //\n  // Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\n  // focus(in | out) events fire after focus & blur events,\n  // which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n  // Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\n\n  if (!support.focusin) {\n    jQuery.each({\n      focus: "focusin",\n      blur: "focusout"\n    }, function (orig, fix) {\n      // Attach a single capturing handler on the document while someone wants focusin/focusout\n      var handler = function handler(event) {\n        jQuery.event.simulate(fix, event.target, jQuery.event.fix(event));\n      };\n\n      jQuery.event.special[fix] = {\n        setup: function setup() {\n          // Handle: regular nodes (via `this.ownerDocument`), window\n          // (via `this.document`) & document (via `this`).\n          var doc = this.ownerDocument || this.document || this,\n              attaches = dataPriv.access(doc, fix);\n\n          if (!attaches) {\n            doc.addEventListener(orig, handler, true);\n          }\n\n          dataPriv.access(doc, fix, (attaches || 0) + 1);\n        },\n        teardown: function teardown() {\n          var doc = this.ownerDocument || this.document || this,\n              attaches = dataPriv.access(doc, fix) - 1;\n\n          if (!attaches) {\n            doc.removeEventListener(orig, handler, true);\n            dataPriv.remove(doc, fix);\n          } else {\n            dataPriv.access(doc, fix, attaches);\n          }\n        }\n      };\n    });\n  }\n\n  var location = window.location;\n  var nonce = {\n    guid: Date.now()\n  };\n  var rquery = /\\?/; // Cross-browser xml parsing\n\n  jQuery.parseXML = function (data) {\n    var xml, parserErrorElem;\n\n    if (!data || typeof data !== "string") {\n      return null;\n    } // Support: IE 9 - 11 only\n    // IE throws on parseFromString with invalid input.\n\n\n    try {\n      xml = new window.DOMParser().parseFromString(data, "text/xml");\n    } catch (e) {}\n\n    parserErrorElem = xml && xml.getElementsByTagName("parsererror")[0];\n\n    if (!xml || parserErrorElem) {\n      jQuery.error("Invalid XML: " + (parserErrorElem ? jQuery.map(parserErrorElem.childNodes, function (el) {\n        return el.textContent;\n      }).join("\\n") : data));\n    }\n\n    return xml;\n  };\n\n  var rbracket = /\\[\\]$/,\n      rCRLF = /\\r?\\n/g,\n      rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n      rsubmittable = /^(?:input|select|textarea|keygen)/i;\n\n  function buildParams(prefix, obj, traditional, add) {\n    var name;\n\n    if (Array.isArray(obj)) {\n      // Serialize array item.\n      jQuery.each(obj, function (i, v) {\n        if (traditional || rbracket.test(prefix)) {\n          // Treat each array item as a scalar.\n          add(prefix, v);\n        } else {\n          // Item is non-scalar (array or object), encode its numeric index.\n          buildParams(prefix + "[" + (_typeof(v) === "object" && v != null ? i : "") + "]", v, traditional, add);\n        }\n      });\n    } else if (!traditional && toType(obj) === "object") {\n      // Serialize object item.\n      for (name in obj) {\n        buildParams(prefix + "[" + name + "]", obj[name], traditional, add);\n      }\n    } else {\n      // Serialize scalar item.\n      add(prefix, obj);\n    }\n  } // Serialize an array of form elements or a set of\n  // key/values into a query string\n\n\n  jQuery.param = function (a, traditional) {\n    var prefix,\n        s = [],\n        add = function add(key, valueOrFunction) {\n      // If value is a function, invoke it and use its return value\n      var value = isFunction(valueOrFunction) ? valueOrFunction() : valueOrFunction;\n      s[s.length] = encodeURIComponent(key) + "=" + encodeURIComponent(value == null ? "" : value);\n    };\n\n    if (a == null) {\n      return "";\n    } // If an array was passed in, assume that it is an array of form elements.\n\n\n    if (Array.isArray(a) || a.jquery && !jQuery.isPlainObject(a)) {\n      // Serialize the form elements\n      jQuery.each(a, function () {\n        add(this.name, this.value);\n      });\n    } else {\n      // If traditional, encode the "old" way (the way 1.3.2 or older\n      // did it), otherwise encode params recursively.\n      for (prefix in a) {\n        buildParams(prefix, a[prefix], traditional, add);\n      }\n    } // Return the resulting serialization\n\n\n    return s.join("&");\n  };\n\n  jQuery.fn.extend({\n    serialize: function serialize() {\n      return jQuery.param(this.serializeArray());\n    },\n    serializeArray: function serializeArray() {\n      return this.map(function () {\n        // Can add propHook for "elements" to filter or add form elements\n        var elements = jQuery.prop(this, "elements");\n        return elements ? jQuery.makeArray(elements) : this;\n      }).filter(function () {\n        var type = this.type; // Use .is( ":disabled" ) so that fieldset[disabled] works\n\n        return this.name && !jQuery(this).is(":disabled") && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type));\n      }).map(function (_i, elem) {\n        var val = jQuery(this).val();\n\n        if (val == null) {\n          return null;\n        }\n\n        if (Array.isArray(val)) {\n          return jQuery.map(val, function (val) {\n            return {\n              name: elem.name,\n              value: val.replace(rCRLF, "\\r\\n")\n            };\n          });\n        }\n\n        return {\n          name: elem.name,\n          value: val.replace(rCRLF, "\\r\\n")\n        };\n      }).get();\n    }\n  });\n  var r20 = /%20/g,\n      rhash = /#.*$/,\n      rantiCache = /([?&])_=[^&]*/,\n      rheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n      // #7653, #8125, #8152: local protocol detection\n  rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n      rnoContent = /^(?:GET|HEAD)$/,\n      rprotocol = /^\\/\\//,\n\n  /* Prefilters\n   * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n   * 2) These are called:\n   *    - BEFORE asking for a transport\n   *    - AFTER param serialization (s.data is a string if s.processData is true)\n   * 3) key is the dataType\n   * 4) the catchall symbol "*" can be used\n   * 5) execution will start with transport dataType and THEN continue down to "*" if needed\n   */\n  prefilters = {},\n\n  /* Transports bindings\n   * 1) key is the dataType\n   * 2) the catchall symbol "*" can be used\n   * 3) selection will start with transport dataType and THEN go to "*" if needed\n   */\n  transports = {},\n      // Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n  allTypes = "*/".concat("*"),\n      // Anchor tag for parsing the document origin\n  originAnchor = document.createElement("a");\n  originAnchor.href = location.href; // Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\n\n  function addToPrefiltersOrTransports(structure) {\n    // dataTypeExpression is optional and defaults to "*"\n    return function (dataTypeExpression, func) {\n      if (typeof dataTypeExpression !== "string") {\n        func = dataTypeExpression;\n        dataTypeExpression = "*";\n      }\n\n      var dataType,\n          i = 0,\n          dataTypes = dataTypeExpression.toLowerCase().match(rnothtmlwhite) || [];\n\n      if (isFunction(func)) {\n        // For each dataType in the dataTypeExpression\n        while (dataType = dataTypes[i++]) {\n          // Prepend if requested\n          if (dataType[0] === "+") {\n            dataType = dataType.slice(1) || "*";\n            (structure[dataType] = structure[dataType] || []).unshift(func); // Otherwise append\n          } else {\n            (structure[dataType] = structure[dataType] || []).push(func);\n          }\n        }\n      }\n    };\n  } // Base inspection function for prefilters and transports\n\n\n  function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {\n    var inspected = {},\n        seekingTransport = structure === transports;\n\n    function inspect(dataType) {\n      var selected;\n      inspected[dataType] = true;\n      jQuery.each(structure[dataType] || [], function (_, prefilterOrFactory) {\n        var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);\n\n        if (typeof dataTypeOrTransport === "string" && !seekingTransport && !inspected[dataTypeOrTransport]) {\n          options.dataTypes.unshift(dataTypeOrTransport);\n          inspect(dataTypeOrTransport);\n          return false;\n        } else if (seekingTransport) {\n          return !(selected = dataTypeOrTransport);\n        }\n      });\n      return selected;\n    }\n\n    return inspect(options.dataTypes[0]) || !inspected["*"] && inspect("*");\n  } // A special extend for ajax options\n  // that takes "flat" options (not to be deep extended)\n  // Fixes #9887\n\n\n  function ajaxExtend(target, src) {\n    var key,\n        deep,\n        flatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n    for (key in src) {\n      if (src[key] !== undefined) {\n        (flatOptions[key] ? target : deep || (deep = {}))[key] = src[key];\n      }\n    }\n\n    if (deep) {\n      jQuery.extend(true, target, deep);\n    }\n\n    return target;\n  }\n  /* Handles responses to an ajax request:\n   * - finds the right dataType (mediates between content-type and expected dataType)\n   * - returns the corresponding response\n   */\n\n\n  function ajaxHandleResponses(s, jqXHR, responses) {\n    var ct,\n        type,\n        finalDataType,\n        firstDataType,\n        contents = s.contents,\n        dataTypes = s.dataTypes; // Remove auto dataType and get content-type in the process\n\n    while (dataTypes[0] === "*") {\n      dataTypes.shift();\n\n      if (ct === undefined) {\n        ct = s.mimeType || jqXHR.getResponseHeader("Content-Type");\n      }\n    } // Check if we\'re dealing with a known content-type\n\n\n    if (ct) {\n      for (type in contents) {\n        if (contents[type] && contents[type].test(ct)) {\n          dataTypes.unshift(type);\n          break;\n        }\n      }\n    } // Check to see if we have a response for the expected dataType\n\n\n    if (dataTypes[0] in responses) {\n      finalDataType = dataTypes[0];\n    } else {\n      // Try convertible dataTypes\n      for (type in responses) {\n        if (!dataTypes[0] || s.converters[type + " " + dataTypes[0]]) {\n          finalDataType = type;\n          break;\n        }\n\n        if (!firstDataType) {\n          firstDataType = type;\n        }\n      } // Or just use first one\n\n\n      finalDataType = finalDataType || firstDataType;\n    } // If we found a dataType\n    // We add the dataType to the list if needed\n    // and return the corresponding response\n\n\n    if (finalDataType) {\n      if (finalDataType !== dataTypes[0]) {\n        dataTypes.unshift(finalDataType);\n      }\n\n      return responses[finalDataType];\n    }\n  }\n  /* Chain conversions given the request and the original response\n   * Also sets the responseXXX fields on the jqXHR instance\n   */\n\n\n  function ajaxConvert(s, response, jqXHR, isSuccess) {\n    var conv2,\n        current,\n        conv,\n        tmp,\n        prev,\n        converters = {},\n        // Work with a copy of dataTypes in case we need to modify it for conversion\n    dataTypes = s.dataTypes.slice(); // Create converters map with lowercased keys\n\n    if (dataTypes[1]) {\n      for (conv in s.converters) {\n        converters[conv.toLowerCase()] = s.converters[conv];\n      }\n    }\n\n    current = dataTypes.shift(); // Convert to each sequential dataType\n\n    while (current) {\n      if (s.responseFields[current]) {\n        jqXHR[s.responseFields[current]] = response;\n      } // Apply the dataFilter if provided\n\n\n      if (!prev && isSuccess && s.dataFilter) {\n        response = s.dataFilter(response, s.dataType);\n      }\n\n      prev = current;\n      current = dataTypes.shift();\n\n      if (current) {\n        // There\'s only work to do if current dataType is non-auto\n        if (current === "*") {\n          current = prev; // Convert response if prev dataType is non-auto and differs from current\n        } else if (prev !== "*" && prev !== current) {\n          // Seek a direct converter\n          conv = converters[prev + " " + current] || converters["* " + current]; // If none found, seek a pair\n\n          if (!conv) {\n            for (conv2 in converters) {\n              // If conv2 outputs current\n              tmp = conv2.split(" ");\n\n              if (tmp[1] === current) {\n                // If prev can be converted to accepted input\n                conv = converters[prev + " " + tmp[0]] || converters["* " + tmp[0]];\n\n                if (conv) {\n                  // Condense equivalence converters\n                  if (conv === true) {\n                    conv = converters[conv2]; // Otherwise, insert the intermediate dataType\n                  } else if (converters[conv2] !== true) {\n                    current = tmp[0];\n                    dataTypes.unshift(tmp[1]);\n                  }\n\n                  break;\n                }\n              }\n            }\n          } // Apply converter (if not an equivalence)\n\n\n          if (conv !== true) {\n            // Unless errors are allowed to bubble, catch and return them\n            if (conv && s["throws"]) {\n              response = conv(response);\n            } else {\n              try {\n                response = conv(response);\n              } catch (e) {\n                return {\n                  state: "parsererror",\n                  error: conv ? e : "No conversion from " + prev + " to " + current\n                };\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return {\n      state: "success",\n      data: response\n    };\n  }\n\n  jQuery.extend({\n    // Counter for holding the number of active queries\n    active: 0,\n    // Last-Modified header cache for next request\n    lastModified: {},\n    etag: {},\n    ajaxSettings: {\n      url: location.href,\n      type: "GET",\n      isLocal: rlocalProtocol.test(location.protocol),\n      global: true,\n      processData: true,\n      async: true,\n      contentType: "application/x-www-form-urlencoded; charset=UTF-8",\n\n      /*\n      timeout: 0,\n      data: null,\n      dataType: null,\n      username: null,\n      password: null,\n      cache: null,\n      throws: false,\n      traditional: false,\n      headers: {},\n      */\n      accepts: {\n        "*": allTypes,\n        text: "text/plain",\n        html: "text/html",\n        xml: "application/xml, text/xml",\n        json: "application/json, text/javascript"\n      },\n      contents: {\n        xml: /\\bxml\\b/,\n        html: /\\bhtml/,\n        json: /\\bjson\\b/\n      },\n      responseFields: {\n        xml: "responseXML",\n        text: "responseText",\n        json: "responseJSON"\n      },\n      // Data converters\n      // Keys separate source (or catchall "*") and destination types with a single space\n      converters: {\n        // Convert anything to text\n        "* text": String,\n        // Text to html (true = no transformation)\n        "text html": true,\n        // Evaluate text as a json expression\n        "text json": JSON.parse,\n        // Parse text as xml\n        "text xml": jQuery.parseXML\n      },\n      // For options that shouldn\'t be deep extended:\n      // you can add your own custom options here if\n      // and when you create one that shouldn\'t be\n      // deep extended (see ajaxExtend)\n      flatOptions: {\n        url: true,\n        context: true\n      }\n    },\n    // Creates a full fledged settings object into target\n    // with both ajaxSettings and settings fields.\n    // If target is omitted, writes into ajaxSettings.\n    ajaxSetup: function ajaxSetup(target, settings) {\n      return settings ? // Building a settings object\n      ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings) : // Extending ajaxSettings\n      ajaxExtend(jQuery.ajaxSettings, target);\n    },\n    ajaxPrefilter: addToPrefiltersOrTransports(prefilters),\n    ajaxTransport: addToPrefiltersOrTransports(transports),\n    // Main method\n    ajax: function ajax(url, options) {\n      // If url is an object, simulate pre-1.5 signature\n      if (_typeof(url) === "object") {\n        options = url;\n        url = undefined;\n      } // Force options to be an object\n\n\n      options = options || {};\n\n      var transport,\n          // URL without anti-cache param\n      cacheURL,\n          // Response headers\n      responseHeadersString,\n          responseHeaders,\n          // timeout handle\n      timeoutTimer,\n          // Url cleanup var\n      urlAnchor,\n          // Request state (becomes false upon send and true upon completion)\n      completed,\n          // To know if global events are to be dispatched\n      fireGlobals,\n          // Loop variable\n      i,\n          // uncached part of the url\n      uncached,\n          // Create the final options object\n      s = jQuery.ajaxSetup({}, options),\n          // Callbacks context\n      callbackContext = s.context || s,\n          // Context for global events is callbackContext if it is a DOM node or jQuery collection\n      globalEventContext = s.context && (callbackContext.nodeType || callbackContext.jquery) ? jQuery(callbackContext) : jQuery.event,\n          // Deferreds\n      deferred = jQuery.Deferred(),\n          completeDeferred = jQuery.Callbacks("once memory"),\n          // Status-dependent callbacks\n      _statusCode = s.statusCode || {},\n          // Headers (they are sent all at once)\n      requestHeaders = {},\n          requestHeadersNames = {},\n          // Default abort message\n      strAbort = "canceled",\n          // Fake xhr\n      jqXHR = {\n        readyState: 0,\n        // Builds headers hashtable if needed\n        getResponseHeader: function getResponseHeader(key) {\n          var match;\n\n          if (completed) {\n            if (!responseHeaders) {\n              responseHeaders = {};\n\n              while (match = rheaders.exec(responseHeadersString)) {\n                responseHeaders[match[1].toLowerCase() + " "] = (responseHeaders[match[1].toLowerCase() + " "] || []).concat(match[2]);\n              }\n            }\n\n            match = responseHeaders[key.toLowerCase() + " "];\n          }\n\n          return match == null ? null : match.join(", ");\n        },\n        // Raw string\n        getAllResponseHeaders: function getAllResponseHeaders() {\n          return completed ? responseHeadersString : null;\n        },\n        // Caches the header\n        setRequestHeader: function setRequestHeader(name, value) {\n          if (completed == null) {\n            name = requestHeadersNames[name.toLowerCase()] = requestHeadersNames[name.toLowerCase()] || name;\n            requestHeaders[name] = value;\n          }\n\n          return this;\n        },\n        // Overrides response content-type header\n        overrideMimeType: function overrideMimeType(type) {\n          if (completed == null) {\n            s.mimeType = type;\n          }\n\n          return this;\n        },\n        // Status-dependent callbacks\n        statusCode: function statusCode(map) {\n          var code;\n\n          if (map) {\n            if (completed) {\n              // Execute the appropriate callbacks\n              jqXHR.always(map[jqXHR.status]);\n            } else {\n              // Lazy-add the new callbacks in a way that preserves old ones\n              for (code in map) {\n                _statusCode[code] = [_statusCode[code], map[code]];\n              }\n            }\n          }\n\n          return this;\n        },\n        // Cancel the request\n        abort: function abort(statusText) {\n          var finalText = statusText || strAbort;\n\n          if (transport) {\n            transport.abort(finalText);\n          }\n\n          done(0, finalText);\n          return this;\n        }\n      }; // Attach deferreds\n\n\n      deferred.promise(jqXHR); // Add protocol if not provided (prefilters might expect it)\n      // Handle falsy url in the settings object (#10093: consistency with old signature)\n      // We also use the url parameter if available\n\n      s.url = ((url || s.url || location.href) + "").replace(rprotocol, location.protocol + "//"); // Alias method option to type as per ticket #12004\n\n      s.type = options.method || options.type || s.method || s.type; // Extract dataTypes list\n\n      s.dataTypes = (s.dataType || "*").toLowerCase().match(rnothtmlwhite) || [""]; // A cross-domain request is in order when the origin doesn\'t match the current origin.\n\n      if (s.crossDomain == null) {\n        urlAnchor = document.createElement("a"); // Support: IE <=8 - 11, Edge 12 - 15\n        // IE throws exception on accessing the href property if url is malformed,\n        // e.g. http://example.com:80x/\n\n        try {\n          urlAnchor.href = s.url; // Support: IE <=8 - 11 only\n          // Anchor\'s host property isn\'t correctly set when s.url is relative\n\n          urlAnchor.href = urlAnchor.href;\n          s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !== urlAnchor.protocol + "//" + urlAnchor.host;\n        } catch (e) {\n          // If there is an error parsing the URL, assume it is crossDomain,\n          // it can be rejected by the transport if it is invalid\n          s.crossDomain = true;\n        }\n      } // Convert data if not already a string\n\n\n      if (s.data && s.processData && typeof s.data !== "string") {\n        s.data = jQuery.param(s.data, s.traditional);\n      } // Apply prefilters\n\n\n      inspectPrefiltersOrTransports(prefilters, s, options, jqXHR); // If request was aborted inside a prefilter, stop there\n\n      if (completed) {\n        return jqXHR;\n      } // We can fire global events as of now if asked to\n      // Don\'t fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n\n\n      fireGlobals = jQuery.event && s.global; // Watch for a new set of requests\n\n      if (fireGlobals && jQuery.active++ === 0) {\n        jQuery.event.trigger("ajaxStart");\n      } // Uppercase the type\n\n\n      s.type = s.type.toUpperCase(); // Determine if request has content\n\n      s.hasContent = !rnoContent.test(s.type); // Save the URL in case we\'re toying with the If-Modified-Since\n      // and/or If-None-Match header later on\n      // Remove hash to simplify url manipulation\n\n      cacheURL = s.url.replace(rhash, ""); // More options handling for requests with no content\n\n      if (!s.hasContent) {\n        // Remember the hash so we can put it back\n        uncached = s.url.slice(cacheURL.length); // If data is available and should be processed, append data to url\n\n        if (s.data && (s.processData || typeof s.data === "string")) {\n          cacheURL += (rquery.test(cacheURL) ? "&" : "?") + s.data; // #9682: remove data so that it\'s not used in an eventual retry\n\n          delete s.data;\n        } // Add or update anti-cache param if needed\n\n\n        if (s.cache === false) {\n          cacheURL = cacheURL.replace(rantiCache, "$1");\n          uncached = (rquery.test(cacheURL) ? "&" : "?") + "_=" + nonce.guid++ + uncached;\n        } // Put hash and anti-cache on the URL that will be requested (gh-1732)\n\n\n        s.url = cacheURL + uncached; // Change \'%20\' to \'+\' if this is encoded form body content (gh-2658)\n      } else if (s.data && s.processData && (s.contentType || "").indexOf("application/x-www-form-urlencoded") === 0) {\n        s.data = s.data.replace(r20, "+");\n      } // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\n\n      if (s.ifModified) {\n        if (jQuery.lastModified[cacheURL]) {\n          jqXHR.setRequestHeader("If-Modified-Since", jQuery.lastModified[cacheURL]);\n        }\n\n        if (jQuery.etag[cacheURL]) {\n          jqXHR.setRequestHeader("If-None-Match", jQuery.etag[cacheURL]);\n        }\n      } // Set the correct header, if data is being sent\n\n\n      if (s.data && s.hasContent && s.contentType !== false || options.contentType) {\n        jqXHR.setRequestHeader("Content-Type", s.contentType);\n      } // Set the Accepts header for the server, depending on the dataType\n\n\n      jqXHR.setRequestHeader("Accept", s.dataTypes[0] && s.accepts[s.dataTypes[0]] ? s.accepts[s.dataTypes[0]] + (s.dataTypes[0] !== "*" ? ", " + allTypes + "; q=0.01" : "") : s.accepts["*"]); // Check for headers option\n\n      for (i in s.headers) {\n        jqXHR.setRequestHeader(i, s.headers[i]);\n      } // Allow custom headers/mimetypes and early abort\n\n\n      if (s.beforeSend && (s.beforeSend.call(callbackContext, jqXHR, s) === false || completed)) {\n        // Abort if not done already and return\n        return jqXHR.abort();\n      } // Aborting is no longer a cancellation\n\n\n      strAbort = "abort"; // Install callbacks on deferreds\n\n      completeDeferred.add(s.complete);\n      jqXHR.done(s.success);\n      jqXHR.fail(s.error); // Get transport\n\n      transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR); // If no transport, we auto-abort\n\n      if (!transport) {\n        done(-1, "No Transport");\n      } else {\n        jqXHR.readyState = 1; // Send global event\n\n        if (fireGlobals) {\n          globalEventContext.trigger("ajaxSend", [jqXHR, s]);\n        } // If request was aborted inside ajaxSend, stop there\n\n\n        if (completed) {\n          return jqXHR;\n        } // Timeout\n\n\n        if (s.async && s.timeout > 0) {\n          timeoutTimer = window.setTimeout(function () {\n            jqXHR.abort("timeout");\n          }, s.timeout);\n        }\n\n        try {\n          completed = false;\n          transport.send(requestHeaders, done);\n        } catch (e) {\n          // Rethrow post-completion exceptions\n          if (completed) {\n            throw e;\n          } // Propagate others as results\n\n\n          done(-1, e);\n        }\n      } // Callback for when everything is done\n\n\n      function done(status, nativeStatusText, responses, headers) {\n        var isSuccess,\n            success,\n            error,\n            response,\n            modified,\n            statusText = nativeStatusText; // Ignore repeat invocations\n\n        if (completed) {\n          return;\n        }\n\n        completed = true; // Clear timeout if it exists\n\n        if (timeoutTimer) {\n          window.clearTimeout(timeoutTimer);\n        } // Dereference transport for early garbage collection\n        // (no matter how long the jqXHR object will be used)\n\n\n        transport = undefined; // Cache response headers\n\n        responseHeadersString = headers || ""; // Set readyState\n\n        jqXHR.readyState = status > 0 ? 4 : 0; // Determine if successful\n\n        isSuccess = status >= 200 && status < 300 || status === 304; // Get response data\n\n        if (responses) {\n          response = ajaxHandleResponses(s, jqXHR, responses);\n        } // Use a noop converter for missing script but not if jsonp\n\n\n        if (!isSuccess && jQuery.inArray("script", s.dataTypes) > -1 && jQuery.inArray("json", s.dataTypes) < 0) {\n          s.converters["text script"] = function () {};\n        } // Convert no matter what (that way responseXXX fields are always set)\n\n\n        response = ajaxConvert(s, response, jqXHR, isSuccess); // If successful, handle type chaining\n\n        if (isSuccess) {\n          // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n          if (s.ifModified) {\n            modified = jqXHR.getResponseHeader("Last-Modified");\n\n            if (modified) {\n              jQuery.lastModified[cacheURL] = modified;\n            }\n\n            modified = jqXHR.getResponseHeader("etag");\n\n            if (modified) {\n              jQuery.etag[cacheURL] = modified;\n            }\n          } // if no content\n\n\n          if (status === 204 || s.type === "HEAD") {\n            statusText = "nocontent"; // if not modified\n          } else if (status === 304) {\n            statusText = "notmodified"; // If we have data, let\'s convert it\n          } else {\n            statusText = response.state;\n            success = response.data;\n            error = response.error;\n            isSuccess = !error;\n          }\n        } else {\n          // Extract error from statusText and normalize for non-aborts\n          error = statusText;\n\n          if (status || !statusText) {\n            statusText = "error";\n\n            if (status < 0) {\n              status = 0;\n            }\n          }\n        } // Set data for the fake xhr object\n\n\n        jqXHR.status = status;\n        jqXHR.statusText = (nativeStatusText || statusText) + ""; // Success/Error\n\n        if (isSuccess) {\n          deferred.resolveWith(callbackContext, [success, statusText, jqXHR]);\n        } else {\n          deferred.rejectWith(callbackContext, [jqXHR, statusText, error]);\n        } // Status-dependent callbacks\n\n\n        jqXHR.statusCode(_statusCode);\n        _statusCode = undefined;\n\n        if (fireGlobals) {\n          globalEventContext.trigger(isSuccess ? "ajaxSuccess" : "ajaxError", [jqXHR, s, isSuccess ? success : error]);\n        } // Complete\n\n\n        completeDeferred.fireWith(callbackContext, [jqXHR, statusText]);\n\n        if (fireGlobals) {\n          globalEventContext.trigger("ajaxComplete", [jqXHR, s]); // Handle the global AJAX counter\n\n          if (! --jQuery.active) {\n            jQuery.event.trigger("ajaxStop");\n          }\n        }\n      }\n\n      return jqXHR;\n    },\n    getJSON: function getJSON(url, data, callback) {\n      return jQuery.get(url, data, callback, "json");\n    },\n    getScript: function getScript(url, callback) {\n      return jQuery.get(url, undefined, callback, "script");\n    }\n  });\n  jQuery.each(["get", "post"], function (_i, method) {\n    jQuery[method] = function (url, data, callback, type) {\n      // Shift arguments if data argument was omitted\n      if (isFunction(data)) {\n        type = type || callback;\n        callback = data;\n        data = undefined;\n      } // The url can be an options object (which then must have .url)\n\n\n      return jQuery.ajax(jQuery.extend({\n        url: url,\n        type: method,\n        dataType: type,\n        data: data,\n        success: callback\n      }, jQuery.isPlainObject(url) && url));\n    };\n  });\n  jQuery.ajaxPrefilter(function (s) {\n    var i;\n\n    for (i in s.headers) {\n      if (i.toLowerCase() === "content-type") {\n        s.contentType = s.headers[i] || "";\n      }\n    }\n  });\n\n  jQuery._evalUrl = function (url, options, doc) {\n    return jQuery.ajax({\n      url: url,\n      // Make this explicit, since user can override this through ajaxSetup (#11264)\n      type: "GET",\n      dataType: "script",\n      cache: true,\n      async: false,\n      global: false,\n      // Only evaluate the response if it is successful (gh-4126)\n      // dataFilter is not invoked for failure responses, so using it instead\n      // of the default converter is kludgy but it works.\n      converters: {\n        "text script": function textScript() {}\n      },\n      dataFilter: function dataFilter(response) {\n        jQuery.globalEval(response, options, doc);\n      }\n    });\n  };\n\n  jQuery.fn.extend({\n    wrapAll: function wrapAll(html) {\n      var wrap;\n\n      if (this[0]) {\n        if (isFunction(html)) {\n          html = html.call(this[0]);\n        } // The elements to wrap the target around\n\n\n        wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(true);\n\n        if (this[0].parentNode) {\n          wrap.insertBefore(this[0]);\n        }\n\n        wrap.map(function () {\n          var elem = this;\n\n          while (elem.firstElementChild) {\n            elem = elem.firstElementChild;\n          }\n\n          return elem;\n        }).append(this);\n      }\n\n      return this;\n    },\n    wrapInner: function wrapInner(html) {\n      if (isFunction(html)) {\n        return this.each(function (i) {\n          jQuery(this).wrapInner(html.call(this, i));\n        });\n      }\n\n      return this.each(function () {\n        var self = jQuery(this),\n            contents = self.contents();\n\n        if (contents.length) {\n          contents.wrapAll(html);\n        } else {\n          self.append(html);\n        }\n      });\n    },\n    wrap: function wrap(html) {\n      var htmlIsFunction = isFunction(html);\n      return this.each(function (i) {\n        jQuery(this).wrapAll(htmlIsFunction ? html.call(this, i) : html);\n      });\n    },\n    unwrap: function unwrap(selector) {\n      this.parent(selector).not("body").each(function () {\n        jQuery(this).replaceWith(this.childNodes);\n      });\n      return this;\n    }\n  });\n\n  jQuery.expr.pseudos.hidden = function (elem) {\n    return !jQuery.expr.pseudos.visible(elem);\n  };\n\n  jQuery.expr.pseudos.visible = function (elem) {\n    return !!(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length);\n  };\n\n  jQuery.ajaxSettings.xhr = function () {\n    try {\n      return new window.XMLHttpRequest();\n    } catch (e) {}\n  };\n\n  var xhrSuccessStatus = {\n    // File protocol always yields status code 0, assume 200\n    0: 200,\n    // Support: IE <=9 only\n    // #1450: sometimes IE returns 1223 when it should be 204\n    1223: 204\n  },\n      xhrSupported = jQuery.ajaxSettings.xhr();\n  support.cors = !!xhrSupported && "withCredentials" in xhrSupported;\n  support.ajax = xhrSupported = !!xhrSupported;\n  jQuery.ajaxTransport(function (options) {\n    var _callback, errorCallback; // Cross domain only allowed if supported through XMLHttpRequest\n\n\n    if (support.cors || xhrSupported && !options.crossDomain) {\n      return {\n        send: function send(headers, complete) {\n          var i,\n              xhr = options.xhr();\n          xhr.open(options.type, options.url, options.async, options.username, options.password); // Apply custom fields if provided\n\n          if (options.xhrFields) {\n            for (i in options.xhrFields) {\n              xhr[i] = options.xhrFields[i];\n            }\n          } // Override mime type if needed\n\n\n          if (options.mimeType && xhr.overrideMimeType) {\n            xhr.overrideMimeType(options.mimeType);\n          } // X-Requested-With header\n          // For cross-domain requests, seeing as conditions for a preflight are\n          // akin to a jigsaw puzzle, we simply never set it to be sure.\n          // (it can always be set on a per-request basis or even using ajaxSetup)\n          // For same-domain requests, won\'t change header if already provided.\n\n\n          if (!options.crossDomain && !headers["X-Requested-With"]) {\n            headers["X-Requested-With"] = "XMLHttpRequest";\n          } // Set headers\n\n\n          for (i in headers) {\n            xhr.setRequestHeader(i, headers[i]);\n          } // Callback\n\n\n          _callback = function callback(type) {\n            return function () {\n              if (_callback) {\n                _callback = errorCallback = xhr.onload = xhr.onerror = xhr.onabort = xhr.ontimeout = xhr.onreadystatechange = null;\n\n                if (type === "abort") {\n                  xhr.abort();\n                } else if (type === "error") {\n                  // Support: IE <=9 only\n                  // On a manual native abort, IE9 throws\n                  // errors on any property access that is not readyState\n                  if (typeof xhr.status !== "number") {\n                    complete(0, "error");\n                  } else {\n                    complete( // File: protocol always yields status 0; see #8605, #14207\n                    xhr.status, xhr.statusText);\n                  }\n                } else {\n                  complete(xhrSuccessStatus[xhr.status] || xhr.status, xhr.statusText, // Support: IE <=9 only\n                  // IE9 has no XHR2 but throws on binary (trac-11426)\n                  // For XHR2 non-text, let the caller handle it (gh-2498)\n                  (xhr.responseType || "text") !== "text" || typeof xhr.responseText !== "string" ? {\n                    binary: xhr.response\n                  } : {\n                    text: xhr.responseText\n                  }, xhr.getAllResponseHeaders());\n                }\n              }\n            };\n          }; // Listen to events\n\n\n          xhr.onload = _callback();\n          errorCallback = xhr.onerror = xhr.ontimeout = _callback("error"); // Support: IE 9 only\n          // Use onreadystatechange to replace onabort\n          // to handle uncaught aborts\n\n          if (xhr.onabort !== undefined) {\n            xhr.onabort = errorCallback;\n          } else {\n            xhr.onreadystatechange = function () {\n              // Check readyState before timeout as it changes\n              if (xhr.readyState === 4) {\n                // Allow onerror to be called first,\n                // but that will not handle a native abort\n                // Also, save errorCallback to a variable\n                // as xhr.onerror cannot be accessed\n                window.setTimeout(function () {\n                  if (_callback) {\n                    errorCallback();\n                  }\n                });\n              }\n            };\n          } // Create the abort callback\n\n\n          _callback = _callback("abort");\n\n          try {\n            // Do send the request (this may raise an exception)\n            xhr.send(options.hasContent && options.data || null);\n          } catch (e) {\n            // #14683: Only rethrow if this hasn\'t been notified as an error yet\n            if (_callback) {\n              throw e;\n            }\n          }\n        },\n        abort: function abort() {\n          if (_callback) {\n            _callback();\n          }\n        }\n      };\n    }\n  }); // Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)\n\n  jQuery.ajaxPrefilter(function (s) {\n    if (s.crossDomain) {\n      s.contents.script = false;\n    }\n  }); // Install script dataType\n\n  jQuery.ajaxSetup({\n    accepts: {\n      script: "text/javascript, application/javascript, " + "application/ecmascript, application/x-ecmascript"\n    },\n    contents: {\n      script: /\\b(?:java|ecma)script\\b/\n    },\n    converters: {\n      "text script": function textScript(text) {\n        jQuery.globalEval(text);\n        return text;\n      }\n    }\n  }); // Handle cache\'s special case and crossDomain\n\n  jQuery.ajaxPrefilter("script", function (s) {\n    if (s.cache === undefined) {\n      s.cache = false;\n    }\n\n    if (s.crossDomain) {\n      s.type = "GET";\n    }\n  }); // Bind script tag hack transport\n\n  jQuery.ajaxTransport("script", function (s) {\n    // This transport only deals with cross domain or forced-by-attrs requests\n    if (s.crossDomain || s.scriptAttrs) {\n      var script, _callback2;\n\n      return {\n        send: function send(_, complete) {\n          script = jQuery("<script>").attr(s.scriptAttrs || {}).prop({\n            charset: s.scriptCharset,\n            src: s.url\n          }).on("load error", _callback2 = function callback(evt) {\n            script.remove();\n            _callback2 = null;\n\n            if (evt) {\n              complete(evt.type === "error" ? 404 : 200, evt.type);\n            }\n          }); // Use native DOM manipulation to avoid our domManip AJAX trickery\n\n          document.head.appendChild(script[0]);\n        },\n        abort: function abort() {\n          if (_callback2) {\n            _callback2();\n          }\n        }\n      };\n    }\n  });\n  var oldCallbacks = [],\n      rjsonp = /(=)\\?(?=&|$)|\\?\\?/; // Default jsonp settings\n\n  jQuery.ajaxSetup({\n    jsonp: "callback",\n    jsonpCallback: function jsonpCallback() {\n      var callback = oldCallbacks.pop() || jQuery.expando + "_" + nonce.guid++;\n      this[callback] = true;\n      return callback;\n    }\n  }); // Detect, normalize options and install callbacks for jsonp requests\n\n  jQuery.ajaxPrefilter("json jsonp", function (s, originalSettings, jqXHR) {\n    var callbackName,\n        overwritten,\n        responseContainer,\n        jsonProp = s.jsonp !== false && (rjsonp.test(s.url) ? "url" : typeof s.data === "string" && (s.contentType || "").indexOf("application/x-www-form-urlencoded") === 0 && rjsonp.test(s.data) && "data"); // Handle iff the expected data type is "jsonp" or we have a parameter to set\n\n    if (jsonProp || s.dataTypes[0] === "jsonp") {\n      // Get callback name, remembering preexisting value associated with it\n      callbackName = s.jsonpCallback = isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback; // Insert callback into url or form data\n\n      if (jsonProp) {\n        s[jsonProp] = s[jsonProp].replace(rjsonp, "$1" + callbackName);\n      } else if (s.jsonp !== false) {\n        s.url += (rquery.test(s.url) ? "&" : "?") + s.jsonp + "=" + callbackName;\n      } // Use data converter to retrieve json after script execution\n\n\n      s.converters["script json"] = function () {\n        if (!responseContainer) {\n          jQuery.error(callbackName + " was not called");\n        }\n\n        return responseContainer[0];\n      }; // Force json dataType\n\n\n      s.dataTypes[0] = "json"; // Install callback\n\n      overwritten = window[callbackName];\n\n      window[callbackName] = function () {\n        responseContainer = arguments;\n      }; // Clean-up function (fires after converters)\n\n\n      jqXHR.always(function () {\n        // If previous value didn\'t exist - remove it\n        if (overwritten === undefined) {\n          jQuery(window).removeProp(callbackName); // Otherwise restore preexisting value\n        } else {\n          window[callbackName] = overwritten;\n        } // Save back as free\n\n\n        if (s[callbackName]) {\n          // Make sure that re-using the options doesn\'t screw things around\n          s.jsonpCallback = originalSettings.jsonpCallback; // Save the callback name for future use\n\n          oldCallbacks.push(callbackName);\n        } // Call if it was a function and we have a response\n\n\n        if (responseContainer && isFunction(overwritten)) {\n          overwritten(responseContainer[0]);\n        }\n\n        responseContainer = overwritten = undefined;\n      }); // Delegate to script\n\n      return "script";\n    }\n  }); // Support: Safari 8 only\n  // In Safari 8 documents created via document.implementation.createHTMLDocument\n  // collapse sibling forms: the second one becomes a child of the first one.\n  // Because of that, this security measure has to be disabled in Safari 8.\n  // https://bugs.webkit.org/show_bug.cgi?id=137337\n\n  support.createHTMLDocument = function () {\n    var body = document.implementation.createHTMLDocument("").body;\n    body.innerHTML = "<form></form><form></form>";\n    return body.childNodes.length === 2;\n  }(); // Argument "data" should be string of html\n  // context (optional): If specified, the fragment will be created in this context,\n  // defaults to document\n  // keepScripts (optional): If true, will include scripts passed in the html string\n\n\n  jQuery.parseHTML = function (data, context, keepScripts) {\n    if (typeof data !== "string") {\n      return [];\n    }\n\n    if (typeof context === "boolean") {\n      keepScripts = context;\n      context = false;\n    }\n\n    var base, parsed, scripts;\n\n    if (!context) {\n      // Stop scripts or inline event handlers from being executed immediately\n      // by using document.implementation\n      if (support.createHTMLDocument) {\n        context = document.implementation.createHTMLDocument(""); // Set the base href for the created document\n        // so any parsed elements with URLs\n        // are based on the document\'s URL (gh-2965)\n\n        base = context.createElement("base");\n        base.href = document.location.href;\n        context.head.appendChild(base);\n      } else {\n        context = document;\n      }\n    }\n\n    parsed = rsingleTag.exec(data);\n    scripts = !keepScripts && []; // Single tag\n\n    if (parsed) {\n      return [context.createElement(parsed[1])];\n    }\n\n    parsed = buildFragment([data], context, scripts);\n\n    if (scripts && scripts.length) {\n      jQuery(scripts).remove();\n    }\n\n    return jQuery.merge([], parsed.childNodes);\n  };\n  /**\n   * Load a url into a page\n   */\n\n\n  jQuery.fn.load = function (url, params, callback) {\n    var selector,\n        type,\n        response,\n        self = this,\n        off = url.indexOf(" ");\n\n    if (off > -1) {\n      selector = stripAndCollapse(url.slice(off));\n      url = url.slice(0, off);\n    } // If it\'s a function\n\n\n    if (isFunction(params)) {\n      // We assume that it\'s the callback\n      callback = params;\n      params = undefined; // Otherwise, build a param string\n    } else if (params && _typeof(params) === "object") {\n      type = "POST";\n    } // If we have elements to modify, make the request\n\n\n    if (self.length > 0) {\n      jQuery.ajax({\n        url: url,\n        // If "type" variable is undefined, then "GET" method will be used.\n        // Make value of this field explicit since\n        // user can override it through ajaxSetup method\n        type: type || "GET",\n        dataType: "html",\n        data: params\n      }).done(function (responseText) {\n        // Save response for use in complete callback\n        response = arguments;\n        self.html(selector ? // If a selector was specified, locate the right elements in a dummy div\n        // Exclude scripts to avoid IE \'Permission Denied\' errors\n        jQuery("<div>").append(jQuery.parseHTML(responseText)).find(selector) : // Otherwise use the full result\n        responseText); // If the request succeeds, this function gets "data", "status", "jqXHR"\n        // but they are ignored because response was set above.\n        // If it fails, this function gets "jqXHR", "status", "error"\n      }).always(callback && function (jqXHR, status) {\n        self.each(function () {\n          callback.apply(this, response || [jqXHR.responseText, status, jqXHR]);\n        });\n      });\n    }\n\n    return this;\n  };\n\n  jQuery.expr.pseudos.animated = function (elem) {\n    return jQuery.grep(jQuery.timers, function (fn) {\n      return elem === fn.elem;\n    }).length;\n  };\n\n  jQuery.offset = {\n    setOffset: function setOffset(elem, options, i) {\n      var curPosition,\n          curLeft,\n          curCSSTop,\n          curTop,\n          curOffset,\n          curCSSLeft,\n          calculatePosition,\n          position = jQuery.css(elem, "position"),\n          curElem = jQuery(elem),\n          props = {}; // Set position first, in-case top/left are set even on static elem\n\n      if (position === "static") {\n        elem.style.position = "relative";\n      }\n\n      curOffset = curElem.offset();\n      curCSSTop = jQuery.css(elem, "top");\n      curCSSLeft = jQuery.css(elem, "left");\n      calculatePosition = (position === "absolute" || position === "fixed") && (curCSSTop + curCSSLeft).indexOf("auto") > -1; // Need to be able to calculate position if either\n      // top or left is auto and position is either absolute or fixed\n\n      if (calculatePosition) {\n        curPosition = curElem.position();\n        curTop = curPosition.top;\n        curLeft = curPosition.left;\n      } else {\n        curTop = parseFloat(curCSSTop) || 0;\n        curLeft = parseFloat(curCSSLeft) || 0;\n      }\n\n      if (isFunction(options)) {\n        // Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n        options = options.call(elem, i, jQuery.extend({}, curOffset));\n      }\n\n      if (options.top != null) {\n        props.top = options.top - curOffset.top + curTop;\n      }\n\n      if (options.left != null) {\n        props.left = options.left - curOffset.left + curLeft;\n      }\n\n      if ("using" in options) {\n        options.using.call(elem, props);\n      } else {\n        curElem.css(props);\n      }\n    }\n  };\n  jQuery.fn.extend({\n    // offset() relates an element\'s border box to the document origin\n    offset: function offset(options) {\n      // Preserve chaining for setter\n      if (arguments.length) {\n        return options === undefined ? this : this.each(function (i) {\n          jQuery.offset.setOffset(this, options, i);\n        });\n      }\n\n      var rect,\n          win,\n          elem = this[0];\n\n      if (!elem) {\n        return;\n      } // Return zeros for disconnected and hidden (display: none) elements (gh-2310)\n      // Support: IE <=11 only\n      // Running getBoundingClientRect on a\n      // disconnected node in IE throws an error\n\n\n      if (!elem.getClientRects().length) {\n        return {\n          top: 0,\n          left: 0\n        };\n      } // Get document-relative position by adding viewport scroll to viewport-relative gBCR\n\n\n      rect = elem.getBoundingClientRect();\n      win = elem.ownerDocument.defaultView;\n      return {\n        top: rect.top + win.pageYOffset,\n        left: rect.left + win.pageXOffset\n      };\n    },\n    // position() relates an element\'s margin box to its offset parent\'s padding box\n    // This corresponds to the behavior of CSS absolute positioning\n    position: function position() {\n      if (!this[0]) {\n        return;\n      }\n\n      var offsetParent,\n          offset,\n          doc,\n          elem = this[0],\n          parentOffset = {\n        top: 0,\n        left: 0\n      }; // position:fixed elements are offset from the viewport, which itself always has zero offset\n\n      if (jQuery.css(elem, "position") === "fixed") {\n        // Assume position:fixed implies availability of getBoundingClientRect\n        offset = elem.getBoundingClientRect();\n      } else {\n        offset = this.offset(); // Account for the *real* offset parent, which can be the document or its root element\n        // when a statically positioned element is identified\n\n        doc = elem.ownerDocument;\n        offsetParent = elem.offsetParent || doc.documentElement;\n\n        while (offsetParent && (offsetParent === doc.body || offsetParent === doc.documentElement) && jQuery.css(offsetParent, "position") === "static") {\n          offsetParent = offsetParent.parentNode;\n        }\n\n        if (offsetParent && offsetParent !== elem && offsetParent.nodeType === 1) {\n          // Incorporate borders into its offset, since they are outside its content origin\n          parentOffset = jQuery(offsetParent).offset();\n          parentOffset.top += jQuery.css(offsetParent, "borderTopWidth", true);\n          parentOffset.left += jQuery.css(offsetParent, "borderLeftWidth", true);\n        }\n      } // Subtract parent offsets and element margins\n\n\n      return {\n        top: offset.top - parentOffset.top - jQuery.css(elem, "marginTop", true),\n        left: offset.left - parentOffset.left - jQuery.css(elem, "marginLeft", true)\n      };\n    },\n    // This method will return documentElement in the following cases:\n    // 1) For the element inside the iframe without offsetParent, this method will return\n    //    documentElement of the parent window\n    // 2) For the hidden or detached element\n    // 3) For body or html element, i.e. in case of the html node - it will return itself\n    //\n    // but those exceptions were never presented as a real life use-cases\n    // and might be considered as more preferable results.\n    //\n    // This logic, however, is not guaranteed and can change at any point in the future\n    offsetParent: function offsetParent() {\n      return this.map(function () {\n        var offsetParent = this.offsetParent;\n\n        while (offsetParent && jQuery.css(offsetParent, "position") === "static") {\n          offsetParent = offsetParent.offsetParent;\n        }\n\n        return offsetParent || documentElement;\n      });\n    }\n  }); // Create scrollLeft and scrollTop methods\n\n  jQuery.each({\n    scrollLeft: "pageXOffset",\n    scrollTop: "pageYOffset"\n  }, function (method, prop) {\n    var top = "pageYOffset" === prop;\n\n    jQuery.fn[method] = function (val) {\n      return access(this, function (elem, method, val) {\n        // Coalesce documents and windows\n        var win;\n\n        if (isWindow(elem)) {\n          win = elem;\n        } else if (elem.nodeType === 9) {\n          win = elem.defaultView;\n        }\n\n        if (val === undefined) {\n          return win ? win[prop] : elem[method];\n        }\n\n        if (win) {\n          win.scrollTo(!top ? val : win.pageXOffset, top ? val : win.pageYOffset);\n        } else {\n          elem[method] = val;\n        }\n      }, method, val, arguments.length);\n    };\n  }); // Support: Safari <=7 - 9.1, Chrome <=37 - 49\n  // Add the top/left cssHooks using jQuery.fn.position\n  // Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n  // Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\n  // getComputedStyle returns percent when specified for top/left/bottom/right;\n  // rather than make the css module depend on the offset module, just check for it here\n\n  jQuery.each(["top", "left"], function (_i, prop) {\n    jQuery.cssHooks[prop] = addGetHookIf(support.pixelPosition, function (elem, computed) {\n      if (computed) {\n        computed = curCSS(elem, prop); // If curCSS returns percentage, fallback to offset\n\n        return rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + "px" : computed;\n      }\n    });\n  }); // Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\n\n  jQuery.each({\n    Height: "height",\n    Width: "width"\n  }, function (name, type) {\n    jQuery.each({\n      padding: "inner" + name,\n      content: type,\n      "": "outer" + name\n    }, function (defaultExtra, funcName) {\n      // Margin is only for outerHeight, outerWidth\n      jQuery.fn[funcName] = function (margin, value) {\n        var chainable = arguments.length && (defaultExtra || typeof margin !== "boolean"),\n            extra = defaultExtra || (margin === true || value === true ? "margin" : "border");\n        return access(this, function (elem, type, value) {\n          var doc;\n\n          if (isWindow(elem)) {\n            // $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\n            return funcName.indexOf("outer") === 0 ? elem["inner" + name] : elem.document.documentElement["client" + name];\n          } // Get document width or height\n\n\n          if (elem.nodeType === 9) {\n            doc = elem.documentElement; // Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n            // whichever is greatest\n\n            return Math.max(elem.body["scroll" + name], doc["scroll" + name], elem.body["offset" + name], doc["offset" + name], doc["client" + name]);\n          }\n\n          return value === undefined ? // Get width or height on the element, requesting but not forcing parseFloat\n          jQuery.css(elem, type, extra) : // Set width or height on the element\n          jQuery.style(elem, type, value, extra);\n        }, type, chainable ? margin : undefined, chainable);\n      };\n    });\n  });\n  jQuery.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function (_i, type) {\n    jQuery.fn[type] = function (fn) {\n      return this.on(type, fn);\n    };\n  });\n  jQuery.fn.extend({\n    bind: function bind(types, data, fn) {\n      return this.on(types, null, data, fn);\n    },\n    unbind: function unbind(types, fn) {\n      return this.off(types, null, fn);\n    },\n    delegate: function delegate(selector, types, data, fn) {\n      return this.on(types, selector, data, fn);\n    },\n    undelegate: function undelegate(selector, types, fn) {\n      // ( namespace ) or ( selector, types [, fn] )\n      return arguments.length === 1 ? this.off(selector, "**") : this.off(types, selector || "**", fn);\n    },\n    hover: function hover(fnOver, fnOut) {\n      return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\n    }\n  });\n  jQuery.each(("blur focus focusin focusout resize scroll click dblclick " + "mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " + "change select submit keydown keypress keyup contextmenu").split(" "), function (_i, name) {\n    // Handle event binding\n    jQuery.fn[name] = function (data, fn) {\n      return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);\n    };\n  }); // Support: Android <=4.0 only\n  // Make sure we trim BOM and NBSP\n\n  var rtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g; // Bind a function to a context, optionally partially applying any\n  // arguments.\n  // jQuery.proxy is deprecated to promote standards (specifically Function#bind)\n  // However, it is not slated for removal any time soon\n\n  jQuery.proxy = function (fn, context) {\n    var tmp, args, proxy;\n\n    if (typeof context === "string") {\n      tmp = fn[context];\n      context = fn;\n      fn = tmp;\n    } // Quick check to determine if target is callable, in the spec\n    // this throws a TypeError, but we will just return undefined.\n\n\n    if (!isFunction(fn)) {\n      return undefined;\n    } // Simulated bind\n\n\n    args = _slice.call(arguments, 2);\n\n    proxy = function proxy() {\n      return fn.apply(context || this, args.concat(_slice.call(arguments)));\n    }; // Set the guid of unique handler to the same of original handler, so it can be removed\n\n\n    proxy.guid = fn.guid = fn.guid || jQuery.guid++;\n    return proxy;\n  };\n\n  jQuery.holdReady = function (hold) {\n    if (hold) {\n      jQuery.readyWait++;\n    } else {\n      jQuery.ready(true);\n    }\n  };\n\n  jQuery.isArray = Array.isArray;\n  jQuery.parseJSON = JSON.parse;\n  jQuery.nodeName = nodeName;\n  jQuery.isFunction = isFunction;\n  jQuery.isWindow = isWindow;\n  jQuery.camelCase = camelCase;\n  jQuery.type = toType;\n  jQuery.now = Date.now;\n\n  jQuery.isNumeric = function (obj) {\n    // As of jQuery 3.0, isNumeric is limited to\n    // strings and numbers (primitives or objects)\n    // that can be coerced to finite numbers (gh-2662)\n    var type = jQuery.type(obj);\n    return (type === "number" || type === "string") && // parseFloat NaNs numeric-cast false positives ("")\n    // ...but misinterprets leading-number strings, particularly hex literals ("0x...")\n    // subtraction forces infinities to NaN\n    !isNaN(obj - parseFloat(obj));\n  };\n\n  jQuery.trim = function (text) {\n    return text == null ? "" : (text + "").replace(rtrim, "");\n  }; // Register as a named AMD module, since jQuery can be concatenated with other\n  // files that may use define, but not via a proper concatenation script that\n  // understands anonymous AMD modules. A named AMD is safest and most robust\n  // way to register. Lowercase jquery is used because AMD module names are\n  // derived from file names, and jQuery is normally delivered in a lowercase\n  // file name. Do this after creating the global so that if an AMD module wants\n  // to call noConflict to hide this version of jQuery, it will work.\n  // Note that for maximum portability, libraries that are not jQuery should\n  // declare themselves as anonymous modules, and avoid setting a global if an\n  // AMD loader is present. jQuery is a special case. For more information, see\n  // https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\n\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n      return jQuery;\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n\n  var // Map over jQuery in case of overwrite\n  _jQuery = window.jQuery,\n      // Map over the $ in case of overwrite\n  _$ = window.$;\n\n  jQuery.noConflict = function (deep) {\n    if (window.$ === jQuery) {\n      window.$ = _$;\n    }\n\n    if (deep && window.jQuery === jQuery) {\n      window.jQuery = _jQuery;\n    }\n\n    return jQuery;\n  }; // Expose jQuery and $ identifiers, even in AMD\n  // (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n  // and CommonJS for browser emulators (#13566)\n\n\n  if (typeof noGlobal === "undefined") {\n    window.jQuery = window.$ = jQuery;\n  }\n\n  return jQuery;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFDQTs7O0FBRUEsTUFBSyxJQUFMLEVBQWtEO0FBQ2pEaWdDLElBQUFBLGlDQUFrQixFQUFaLG1DQUFnQixZQUFXO0FBQ2hDLGFBQU9sbkMsTUFBUDtBQUNBLEtBRks7QUFBQSxrR0FBTjtBQUdBOztBQUtELE1BRUM7QUFDQW9uQyxFQUFBQSxPQUFPLEdBQUdwcUMsTUFBTSxDQUFDZ0QsTUFIbEI7QUFBQSxNQUtDO0FBQ0FxbkMsRUFBQUEsRUFBRSxHQUFHcnFDLE1BQU0sQ0FBQ3NxQyxDQU5iOztBQVFBdG5DLEVBQUFBLE1BQU0sQ0FBQ3VuQyxVQUFQLEdBQW9CLFVBQVU5a0MsSUFBVixFQUFpQjtBQUNwQyxRQUFLekYsTUFBTSxDQUFDc3FDLENBQVAsS0FBYXRuQyxNQUFsQixFQUEyQjtBQUMxQmhELE1BQUFBLE1BQU0sQ0FBQ3NxQyxDQUFQLEdBQVdELEVBQVg7QUFDQTs7QUFFRCxRQUFLNWtDLElBQUksSUFBSXpGLE1BQU0sQ0FBQ2dELE1BQVAsS0FBa0JBLE1BQS9CLEVBQXdDO0FBQ3ZDaEQsTUFBQUEsTUFBTSxDQUFDZ0QsTUFBUCxHQUFnQm9uQyxPQUFoQjtBQUNBOztBQUVELFdBQU9wbkMsTUFBUDtBQUNBLEdBVkQsQ0Fsa1ZpRixDQThrVmpGO0FBQ0E7QUFDQTs7O0FBQ0EsTUFBSyxPQUFPL0MsUUFBUCxLQUFvQixXQUF6QixFQUF1QztBQUN0Q0QsSUFBQUEsTUFBTSxDQUFDZ0QsTUFBUCxHQUFnQmhELE1BQU0sQ0FBQ3NxQyxDQUFQLEdBQVd0bkMsTUFBM0I7QUFDQTs7QUFLRCxTQUFPQSxNQUFQO0FBQ0MsQ0FublZEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGhlbWVhbC8uL25vZGVfbW9kdWxlcy9qcXVlcnkvZGlzdC9qcXVlcnkuanM/MTE1NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIGpRdWVyeSBKYXZhU2NyaXB0IExpYnJhcnkgdjMuNi4wXG4gKiBodHRwczovL2pxdWVyeS5jb20vXG4gKlxuICogSW5jbHVkZXMgU2l6emxlLmpzXG4gKiBodHRwczovL3NpenpsZWpzLmNvbS9cbiAqXG4gKiBDb3B5cmlnaHQgT3BlbkpTIEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9yc1xuICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlXG4gKiBodHRwczovL2pxdWVyeS5vcmcvbGljZW5zZVxuICpcbiAqIERhdGU6IDIwMjEtMDMtMDJUMTc6MDhaXG4gKi9cbiggZnVuY3Rpb24oIGdsb2JhbCwgZmFjdG9yeSApIHtcblxuXHRcInVzZSBzdHJpY3RcIjtcblxuXHRpZiAoIHR5cGVvZiBtb2R1bGUgPT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIG1vZHVsZS5leHBvcnRzID09PSBcIm9iamVjdFwiICkge1xuXG5cdFx0Ly8gRm9yIENvbW1vbkpTIGFuZCBDb21tb25KUy1saWtlIGVudmlyb25tZW50cyB3aGVyZSBhIHByb3BlciBgd2luZG93YFxuXHRcdC8vIGlzIHByZXNlbnQsIGV4ZWN1dGUgdGhlIGZhY3RvcnkgYW5kIGdldCBqUXVlcnkuXG5cdFx0Ly8gRm9yIGVudmlyb25tZW50cyB0aGF0IGRvIG5vdCBoYXZlIGEgYHdpbmRvd2Agd2l0aCBhIGBkb2N1bWVudGBcblx0XHQvLyAoc3VjaCBhcyBOb2RlLmpzKSwgZXhwb3NlIGEgZmFjdG9yeSBhcyBtb2R1bGUuZXhwb3J0cy5cblx0XHQvLyBUaGlzIGFjY2VudHVhdGVzIHRoZSBuZWVkIGZvciB0aGUgY3JlYXRpb24gb2YgYSByZWFsIGB3aW5kb3dgLlxuXHRcdC8vIGUuZy4gdmFyIGpRdWVyeSA9IHJlcXVpcmUoXCJqcXVlcnlcIikod2luZG93KTtcblx0XHQvLyBTZWUgdGlja2V0ICMxNDU0OSBmb3IgbW9yZSBpbmZvLlxuXHRcdG1vZHVsZS5leHBvcnRzID0gZ2xvYmFsLmRvY3VtZW50ID9cblx0XHRcdGZhY3RvcnkoIGdsb2JhbCwgdHJ1ZSApIDpcblx0XHRcdGZ1bmN0aW9uKCB3ICkge1xuXHRcdFx0XHRpZiAoICF3LmRvY3VtZW50ICkge1xuXHRcdFx0XHRcdHRocm93IG5ldyBFcnJvciggXCJqUXVlcnkgcmVxdWlyZXMgYSB3aW5kb3cgd2l0aCBhIGRvY3VtZW50XCIgKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gZmFjdG9yeSggdyApO1xuXHRcdFx0fTtcblx0fSBlbHNlIHtcblx0XHRmYWN0b3J5KCBnbG9iYWwgKTtcblx0fVxuXG4vLyBQYXNzIHRoaXMgaWYgd2luZG93IGlzIG5vdCBkZWZpbmVkIHlldFxufSApKCB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93IDogdGhpcywgZnVuY3Rpb24oIHdpbmRvdywgbm9HbG9iYWwgKSB7XG5cbi8vIEVkZ2UgPD0gMTIgLSAxMyssIEZpcmVmb3ggPD0xOCAtIDQ1KywgSUUgMTAgLSAxMSwgU2FmYXJpIDUuMSAtIDkrLCBpT1MgNiAtIDkuMVxuLy8gdGhyb3cgZXhjZXB0aW9ucyB3aGVuIG5vbi1zdHJpY3QgY29kZSAoZS5nLiwgQVNQLk5FVCA0LjUpIGFjY2Vzc2VzIHN0cmljdCBtb2RlXG4vLyBhcmd1bWVudHMuY2FsbGVlLmNhbGxlciAodHJhYy0xMzMzNSkuIEJ1dCBhcyBvZiBqUXVlcnkgMy4wICgyMDE2KSwgc3RyaWN0IG1vZGUgc2hvdWxkIGJlIGNvbW1vblxuLy8gZW5vdWdoIHRoYXQgYWxsIHN1Y2ggYXR0ZW1wdHMgYXJlIGd1YXJkZWQgaW4gYSB0cnkgYmxvY2suXG5cInVzZSBzdHJpY3RcIjtcblxudmFyIGFyciA9IFtdO1xuXG52YXIgZ2V0UHJvdG8gPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Y7XG5cbnZhciBzbGljZSA9IGFyci5zbGljZTtcblxudmFyIGZsYXQgPSBhcnIuZmxhdCA/IGZ1bmN0aW9uKCBhcnJheSApIHtcblx0cmV0dXJuIGFyci5mbGF0LmNhbGwoIGFycmF5ICk7XG59IDogZnVuY3Rpb24oIGFycmF5ICkge1xuXHRyZXR1cm4gYXJyLmNvbmNhdC5hcHBseSggW10sIGFycmF5ICk7XG59O1xuXG5cbnZhciBwdXNoID0gYXJyLnB1c2g7XG5cbnZhciBpbmRleE9mID0gYXJyLmluZGV4T2Y7XG5cbnZhciBjbGFzczJ0eXBlID0ge307XG5cbnZhciB0b1N0cmluZyA9IGNsYXNzMnR5cGUudG9TdHJpbmc7XG5cbnZhciBoYXNPd24gPSBjbGFzczJ0eXBlLmhhc093blByb3BlcnR5O1xuXG52YXIgZm5Ub1N0cmluZyA9IGhhc093bi50b1N0cmluZztcblxudmFyIE9iamVjdEZ1bmN0aW9uU3RyaW5nID0gZm5Ub1N0cmluZy5jYWxsKCBPYmplY3QgKTtcblxudmFyIHN1cHBvcnQgPSB7fTtcblxudmFyIGlzRnVuY3Rpb24gPSBmdW5jdGlvbiBpc0Z1bmN0aW9uKCBvYmogKSB7XG5cblx0XHQvLyBTdXBwb3J0OiBDaHJvbWUgPD01NywgRmlyZWZveCA8PTUyXG5cdFx0Ly8gSW4gc29tZSBicm93c2VycywgdHlwZW9mIHJldHVybnMgXCJmdW5jdGlvblwiIGZvciBIVE1MIDxvYmplY3Q+IGVsZW1lbnRzXG5cdFx0Ly8gKGkuZS4sIGB0eXBlb2YgZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJvYmplY3RcIiApID09PSBcImZ1bmN0aW9uXCJgKS5cblx0XHQvLyBXZSBkb24ndCB3YW50IHRvIGNsYXNzaWZ5ICphbnkqIERPTSBub2RlIGFzIGEgZnVuY3Rpb24uXG5cdFx0Ly8gU3VwcG9ydDogUXRXZWIgPD0zLjguNSwgV2ViS2l0IDw9NTM0LjM0LCB3a2h0bWx0b3BkZiB0b29sIDw9MC4xMi41XG5cdFx0Ly8gUGx1cyBmb3Igb2xkIFdlYktpdCwgdHlwZW9mIHJldHVybnMgXCJmdW5jdGlvblwiIGZvciBIVE1MIGNvbGxlY3Rpb25zXG5cdFx0Ly8gKGUuZy4sIGB0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJkaXZcIikgPT09IFwiZnVuY3Rpb25cImApLiAoZ2gtNDc1Nilcblx0XHRyZXR1cm4gdHlwZW9mIG9iaiA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBvYmoubm9kZVR5cGUgIT09IFwibnVtYmVyXCIgJiZcblx0XHRcdHR5cGVvZiBvYmouaXRlbSAhPT0gXCJmdW5jdGlvblwiO1xuXHR9O1xuXG5cbnZhciBpc1dpbmRvdyA9IGZ1bmN0aW9uIGlzV2luZG93KCBvYmogKSB7XG5cdFx0cmV0dXJuIG9iaiAhPSBudWxsICYmIG9iaiA9PT0gb2JqLndpbmRvdztcblx0fTtcblxuXG52YXIgZG9jdW1lbnQgPSB3aW5kb3cuZG9jdW1lbnQ7XG5cblxuXG5cdHZhciBwcmVzZXJ2ZWRTY3JpcHRBdHRyaWJ1dGVzID0ge1xuXHRcdHR5cGU6IHRydWUsXG5cdFx0c3JjOiB0cnVlLFxuXHRcdG5vbmNlOiB0cnVlLFxuXHRcdG5vTW9kdWxlOiB0cnVlXG5cdH07XG5cblx0ZnVuY3Rpb24gRE9NRXZhbCggY29kZSwgbm9kZSwgZG9jICkge1xuXHRcdGRvYyA9IGRvYyB8fCBkb2N1bWVudDtcblxuXHRcdHZhciBpLCB2YWwsXG5cdFx0XHRzY3JpcHQgPSBkb2MuY3JlYXRlRWxlbWVudCggXCJzY3JpcHRcIiApO1xuXG5cdFx0c2NyaXB0LnRleHQgPSBjb2RlO1xuXHRcdGlmICggbm9kZSApIHtcblx0XHRcdGZvciAoIGkgaW4gcHJlc2VydmVkU2NyaXB0QXR0cmlidXRlcyApIHtcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBGaXJlZm94IDY0KywgRWRnZSAxOCtcblx0XHRcdFx0Ly8gU29tZSBicm93c2VycyBkb24ndCBzdXBwb3J0IHRoZSBcIm5vbmNlXCIgcHJvcGVydHkgb24gc2NyaXB0cy5cblx0XHRcdFx0Ly8gT24gdGhlIG90aGVyIGhhbmQsIGp1c3QgdXNpbmcgYGdldEF0dHJpYnV0ZWAgaXMgbm90IGVub3VnaCBhc1xuXHRcdFx0XHQvLyB0aGUgYG5vbmNlYCBhdHRyaWJ1dGUgaXMgcmVzZXQgdG8gYW4gZW1wdHkgc3RyaW5nIHdoZW5ldmVyIGl0XG5cdFx0XHRcdC8vIGJlY29tZXMgYnJvd3NpbmctY29udGV4dCBjb25uZWN0ZWQuXG5cdFx0XHRcdC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vd2hhdHdnL2h0bWwvaXNzdWVzLzIzNjlcblx0XHRcdFx0Ly8gU2VlIGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvI25vbmNlLWF0dHJpYnV0ZXNcblx0XHRcdFx0Ly8gVGhlIGBub2RlLmdldEF0dHJpYnV0ZWAgY2hlY2sgd2FzIGFkZGVkIGZvciB0aGUgc2FrZSBvZlxuXHRcdFx0XHQvLyBgalF1ZXJ5Lmdsb2JhbEV2YWxgIHNvIHRoYXQgaXQgY2FuIGZha2UgYSBub25jZS1jb250YWluaW5nIG5vZGVcblx0XHRcdFx0Ly8gdmlhIGFuIG9iamVjdC5cblx0XHRcdFx0dmFsID0gbm9kZVsgaSBdIHx8IG5vZGUuZ2V0QXR0cmlidXRlICYmIG5vZGUuZ2V0QXR0cmlidXRlKCBpICk7XG5cdFx0XHRcdGlmICggdmFsICkge1xuXHRcdFx0XHRcdHNjcmlwdC5zZXRBdHRyaWJ1dGUoIGksIHZhbCApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHRcdGRvYy5oZWFkLmFwcGVuZENoaWxkKCBzY3JpcHQgKS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKCBzY3JpcHQgKTtcblx0fVxuXG5cbmZ1bmN0aW9uIHRvVHlwZSggb2JqICkge1xuXHRpZiAoIG9iaiA9PSBudWxsICkge1xuXHRcdHJldHVybiBvYmogKyBcIlwiO1xuXHR9XG5cblx0Ly8gU3VwcG9ydDogQW5kcm9pZCA8PTIuMyBvbmx5IChmdW5jdGlvbmlzaCBSZWdFeHApXG5cdHJldHVybiB0eXBlb2Ygb2JqID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBvYmogPT09IFwiZnVuY3Rpb25cIiA/XG5cdFx0Y2xhc3MydHlwZVsgdG9TdHJpbmcuY2FsbCggb2JqICkgXSB8fCBcIm9iamVjdFwiIDpcblx0XHR0eXBlb2Ygb2JqO1xufVxuLyogZ2xvYmFsIFN5bWJvbCAqL1xuLy8gRGVmaW5pbmcgdGhpcyBnbG9iYWwgaW4gLmVzbGludHJjLmpzb24gd291bGQgY3JlYXRlIGEgZGFuZ2VyIG9mIHVzaW5nIHRoZSBnbG9iYWxcbi8vIHVuZ3VhcmRlZCBpbiBhbm90aGVyIHBsYWNlLCBpdCBzZWVtcyBzYWZlciB0byBkZWZpbmUgZ2xvYmFsIG9ubHkgZm9yIHRoaXMgbW9kdWxlXG5cblxuXG52YXJcblx0dmVyc2lvbiA9IFwiMy42LjBcIixcblxuXHQvLyBEZWZpbmUgYSBsb2NhbCBjb3B5IG9mIGpRdWVyeVxuXHRqUXVlcnkgPSBmdW5jdGlvbiggc2VsZWN0b3IsIGNvbnRleHQgKSB7XG5cblx0XHQvLyBUaGUgalF1ZXJ5IG9iamVjdCBpcyBhY3R1YWxseSBqdXN0IHRoZSBpbml0IGNvbnN0cnVjdG9yICdlbmhhbmNlZCdcblx0XHQvLyBOZWVkIGluaXQgaWYgalF1ZXJ5IGlzIGNhbGxlZCAoanVzdCBhbGxvdyBlcnJvciB0byBiZSB0aHJvd24gaWYgbm90IGluY2x1ZGVkKVxuXHRcdHJldHVybiBuZXcgalF1ZXJ5LmZuLmluaXQoIHNlbGVjdG9yLCBjb250ZXh0ICk7XG5cdH07XG5cbmpRdWVyeS5mbiA9IGpRdWVyeS5wcm90b3R5cGUgPSB7XG5cblx0Ly8gVGhlIGN1cnJlbnQgdmVyc2lvbiBvZiBqUXVlcnkgYmVpbmcgdXNlZFxuXHRqcXVlcnk6IHZlcnNpb24sXG5cblx0Y29uc3RydWN0b3I6IGpRdWVyeSxcblxuXHQvLyBUaGUgZGVmYXVsdCBsZW5ndGggb2YgYSBqUXVlcnkgb2JqZWN0IGlzIDBcblx0bGVuZ3RoOiAwLFxuXG5cdHRvQXJyYXk6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBzbGljZS5jYWxsKCB0aGlzICk7XG5cdH0sXG5cblx0Ly8gR2V0IHRoZSBOdGggZWxlbWVudCBpbiB0aGUgbWF0Y2hlZCBlbGVtZW50IHNldCBPUlxuXHQvLyBHZXQgdGhlIHdob2xlIG1hdGNoZWQgZWxlbWVudCBzZXQgYXMgYSBjbGVhbiBhcnJheVxuXHRnZXQ6IGZ1bmN0aW9uKCBudW0gKSB7XG5cblx0XHQvLyBSZXR1cm4gYWxsIHRoZSBlbGVtZW50cyBpbiBhIGNsZWFuIGFycmF5XG5cdFx0aWYgKCBudW0gPT0gbnVsbCApIHtcblx0XHRcdHJldHVybiBzbGljZS5jYWxsKCB0aGlzICk7XG5cdFx0fVxuXG5cdFx0Ly8gUmV0dXJuIGp1c3QgdGhlIG9uZSBlbGVtZW50IGZyb20gdGhlIHNldFxuXHRcdHJldHVybiBudW0gPCAwID8gdGhpc1sgbnVtICsgdGhpcy5sZW5ndGggXSA6IHRoaXNbIG51bSBdO1xuXHR9LFxuXG5cdC8vIFRha2UgYW4gYXJyYXkgb2YgZWxlbWVudHMgYW5kIHB1c2ggaXQgb250byB0aGUgc3RhY2tcblx0Ly8gKHJldHVybmluZyB0aGUgbmV3IG1hdGNoZWQgZWxlbWVudCBzZXQpXG5cdHB1c2hTdGFjazogZnVuY3Rpb24oIGVsZW1zICkge1xuXG5cdFx0Ly8gQnVpbGQgYSBuZXcgalF1ZXJ5IG1hdGNoZWQgZWxlbWVudCBzZXRcblx0XHR2YXIgcmV0ID0galF1ZXJ5Lm1lcmdlKCB0aGlzLmNvbnN0cnVjdG9yKCksIGVsZW1zICk7XG5cblx0XHQvLyBBZGQgdGhlIG9sZCBvYmplY3Qgb250byB0aGUgc3RhY2sgKGFzIGEgcmVmZXJlbmNlKVxuXHRcdHJldC5wcmV2T2JqZWN0ID0gdGhpcztcblxuXHRcdC8vIFJldHVybiB0aGUgbmV3bHktZm9ybWVkIGVsZW1lbnQgc2V0XG5cdFx0cmV0dXJuIHJldDtcblx0fSxcblxuXHQvLyBFeGVjdXRlIGEgY2FsbGJhY2sgZm9yIGV2ZXJ5IGVsZW1lbnQgaW4gdGhlIG1hdGNoZWQgc2V0LlxuXHRlYWNoOiBmdW5jdGlvbiggY2FsbGJhY2sgKSB7XG5cdFx0cmV0dXJuIGpRdWVyeS5lYWNoKCB0aGlzLCBjYWxsYmFjayApO1xuXHR9LFxuXG5cdG1hcDogZnVuY3Rpb24oIGNhbGxiYWNrICkge1xuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggalF1ZXJ5Lm1hcCggdGhpcywgZnVuY3Rpb24oIGVsZW0sIGkgKSB7XG5cdFx0XHRyZXR1cm4gY2FsbGJhY2suY2FsbCggZWxlbSwgaSwgZWxlbSApO1xuXHRcdH0gKSApO1xuXHR9LFxuXG5cdHNsaWNlOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIHNsaWNlLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKSApO1xuXHR9LFxuXG5cdGZpcnN0OiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gdGhpcy5lcSggMCApO1xuXHR9LFxuXG5cdGxhc3Q6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLmVxKCAtMSApO1xuXHR9LFxuXG5cdGV2ZW46IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggalF1ZXJ5LmdyZXAoIHRoaXMsIGZ1bmN0aW9uKCBfZWxlbSwgaSApIHtcblx0XHRcdHJldHVybiAoIGkgKyAxICkgJSAyO1xuXHRcdH0gKSApO1xuXHR9LFxuXG5cdG9kZDogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCBqUXVlcnkuZ3JlcCggdGhpcywgZnVuY3Rpb24oIF9lbGVtLCBpICkge1xuXHRcdFx0cmV0dXJuIGkgJSAyO1xuXHRcdH0gKSApO1xuXHR9LFxuXG5cdGVxOiBmdW5jdGlvbiggaSApIHtcblx0XHR2YXIgbGVuID0gdGhpcy5sZW5ndGgsXG5cdFx0XHRqID0gK2kgKyAoIGkgPCAwID8gbGVuIDogMCApO1xuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggaiA+PSAwICYmIGogPCBsZW4gPyBbIHRoaXNbIGogXSBdIDogW10gKTtcblx0fSxcblxuXHRlbmQ6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLnByZXZPYmplY3QgfHwgdGhpcy5jb25zdHJ1Y3RvcigpO1xuXHR9LFxuXG5cdC8vIEZvciBpbnRlcm5hbCB1c2Ugb25seS5cblx0Ly8gQmVoYXZlcyBsaWtlIGFuIEFycmF5J3MgbWV0aG9kLCBub3QgbGlrZSBhIGpRdWVyeSBtZXRob2QuXG5cdHB1c2g6IHB1c2gsXG5cdHNvcnQ6IGFyci5zb3J0LFxuXHRzcGxpY2U6IGFyci5zcGxpY2Vcbn07XG5cbmpRdWVyeS5leHRlbmQgPSBqUXVlcnkuZm4uZXh0ZW5kID0gZnVuY3Rpb24oKSB7XG5cdHZhciBvcHRpb25zLCBuYW1lLCBzcmMsIGNvcHksIGNvcHlJc0FycmF5LCBjbG9uZSxcblx0XHR0YXJnZXQgPSBhcmd1bWVudHNbIDAgXSB8fCB7fSxcblx0XHRpID0gMSxcblx0XHRsZW5ndGggPSBhcmd1bWVudHMubGVuZ3RoLFxuXHRcdGRlZXAgPSBmYWxzZTtcblxuXHQvLyBIYW5kbGUgYSBkZWVwIGNvcHkgc2l0dWF0aW9uXG5cdGlmICggdHlwZW9mIHRhcmdldCA9PT0gXCJib29sZWFuXCIgKSB7XG5cdFx0ZGVlcCA9IHRhcmdldDtcblxuXHRcdC8vIFNraXAgdGhlIGJvb2xlYW4gYW5kIHRoZSB0YXJnZXRcblx0XHR0YXJnZXQgPSBhcmd1bWVudHNbIGkgXSB8fCB7fTtcblx0XHRpKys7XG5cdH1cblxuXHQvLyBIYW5kbGUgY2FzZSB3aGVuIHRhcmdldCBpcyBhIHN0cmluZyBvciBzb21ldGhpbmcgKHBvc3NpYmxlIGluIGRlZXAgY29weSlcblx0aWYgKCB0eXBlb2YgdGFyZ2V0ICE9PSBcIm9iamVjdFwiICYmICFpc0Z1bmN0aW9uKCB0YXJnZXQgKSApIHtcblx0XHR0YXJnZXQgPSB7fTtcblx0fVxuXG5cdC8vIEV4dGVuZCBqUXVlcnkgaXRzZWxmIGlmIG9ubHkgb25lIGFyZ3VtZW50IGlzIHBhc3NlZFxuXHRpZiAoIGkgPT09IGxlbmd0aCApIHtcblx0XHR0YXJnZXQgPSB0aGlzO1xuXHRcdGktLTtcblx0fVxuXG5cdGZvciAoIDsgaSA8IGxlbmd0aDsgaSsrICkge1xuXG5cdFx0Ly8gT25seSBkZWFsIHdpdGggbm9uLW51bGwvdW5kZWZpbmVkIHZhbHVlc1xuXHRcdGlmICggKCBvcHRpb25zID0gYXJndW1lbnRzWyBpIF0gKSAhPSBudWxsICkge1xuXG5cdFx0XHQvLyBFeHRlbmQgdGhlIGJhc2Ugb2JqZWN0XG5cdFx0XHRmb3IgKCBuYW1lIGluIG9wdGlvbnMgKSB7XG5cdFx0XHRcdGNvcHkgPSBvcHRpb25zWyBuYW1lIF07XG5cblx0XHRcdFx0Ly8gUHJldmVudCBPYmplY3QucHJvdG90eXBlIHBvbGx1dGlvblxuXHRcdFx0XHQvLyBQcmV2ZW50IG5ldmVyLWVuZGluZyBsb29wXG5cdFx0XHRcdGlmICggbmFtZSA9PT0gXCJfX3Byb3RvX19cIiB8fCB0YXJnZXQgPT09IGNvcHkgKSB7XG5cdFx0XHRcdFx0Y29udGludWU7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBSZWN1cnNlIGlmIHdlJ3JlIG1lcmdpbmcgcGxhaW4gb2JqZWN0cyBvciBhcnJheXNcblx0XHRcdFx0aWYgKCBkZWVwICYmIGNvcHkgJiYgKCBqUXVlcnkuaXNQbGFpbk9iamVjdCggY29weSApIHx8XG5cdFx0XHRcdFx0KCBjb3B5SXNBcnJheSA9IEFycmF5LmlzQXJyYXkoIGNvcHkgKSApICkgKSB7XG5cdFx0XHRcdFx0c3JjID0gdGFyZ2V0WyBuYW1lIF07XG5cblx0XHRcdFx0XHQvLyBFbnN1cmUgcHJvcGVyIHR5cGUgZm9yIHRoZSBzb3VyY2UgdmFsdWVcblx0XHRcdFx0XHRpZiAoIGNvcHlJc0FycmF5ICYmICFBcnJheS5pc0FycmF5KCBzcmMgKSApIHtcblx0XHRcdFx0XHRcdGNsb25lID0gW107XG5cdFx0XHRcdFx0fSBlbHNlIGlmICggIWNvcHlJc0FycmF5ICYmICFqUXVlcnkuaXNQbGFpbk9iamVjdCggc3JjICkgKSB7XG5cdFx0XHRcdFx0XHRjbG9uZSA9IHt9O1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRjbG9uZSA9IHNyYztcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0Y29weUlzQXJyYXkgPSBmYWxzZTtcblxuXHRcdFx0XHRcdC8vIE5ldmVyIG1vdmUgb3JpZ2luYWwgb2JqZWN0cywgY2xvbmUgdGhlbVxuXHRcdFx0XHRcdHRhcmdldFsgbmFtZSBdID0galF1ZXJ5LmV4dGVuZCggZGVlcCwgY2xvbmUsIGNvcHkgKTtcblxuXHRcdFx0XHQvLyBEb24ndCBicmluZyBpbiB1bmRlZmluZWQgdmFsdWVzXG5cdFx0XHRcdH0gZWxzZSBpZiAoIGNvcHkgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0XHR0YXJnZXRbIG5hbWUgXSA9IGNvcHk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyBSZXR1cm4gdGhlIG1vZGlmaWVkIG9iamVjdFxuXHRyZXR1cm4gdGFyZ2V0O1xufTtcblxualF1ZXJ5LmV4dGVuZCgge1xuXG5cdC8vIFVuaXF1ZSBmb3IgZWFjaCBjb3B5IG9mIGpRdWVyeSBvbiB0aGUgcGFnZVxuXHRleHBhbmRvOiBcImpRdWVyeVwiICsgKCB2ZXJzaW9uICsgTWF0aC5yYW5kb20oKSApLnJlcGxhY2UoIC9cXEQvZywgXCJcIiApLFxuXG5cdC8vIEFzc3VtZSBqUXVlcnkgaXMgcmVhZHkgd2l0aG91dCB0aGUgcmVhZHkgbW9kdWxlXG5cdGlzUmVhZHk6IHRydWUsXG5cblx0ZXJyb3I6IGZ1bmN0aW9uKCBtc2cgKSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKCBtc2cgKTtcblx0fSxcblxuXHRub29wOiBmdW5jdGlvbigpIHt9LFxuXG5cdGlzUGxhaW5PYmplY3Q6IGZ1bmN0aW9uKCBvYmogKSB7XG5cdFx0dmFyIHByb3RvLCBDdG9yO1xuXG5cdFx0Ly8gRGV0ZWN0IG9idmlvdXMgbmVnYXRpdmVzXG5cdFx0Ly8gVXNlIHRvU3RyaW5nIGluc3RlYWQgb2YgalF1ZXJ5LnR5cGUgdG8gY2F0Y2ggaG9zdCBvYmplY3RzXG5cdFx0aWYgKCAhb2JqIHx8IHRvU3RyaW5nLmNhbGwoIG9iaiApICE9PSBcIltvYmplY3QgT2JqZWN0XVwiICkge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdHByb3RvID0gZ2V0UHJvdG8oIG9iaiApO1xuXG5cdFx0Ly8gT2JqZWN0cyB3aXRoIG5vIHByb3RvdHlwZSAoZS5nLiwgYE9iamVjdC5jcmVhdGUoIG51bGwgKWApIGFyZSBwbGFpblxuXHRcdGlmICggIXByb3RvICkge1xuXHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0fVxuXG5cdFx0Ly8gT2JqZWN0cyB3aXRoIHByb3RvdHlwZSBhcmUgcGxhaW4gaWZmIHRoZXkgd2VyZSBjb25zdHJ1Y3RlZCBieSBhIGdsb2JhbCBPYmplY3QgZnVuY3Rpb25cblx0XHRDdG9yID0gaGFzT3duLmNhbGwoIHByb3RvLCBcImNvbnN0cnVjdG9yXCIgKSAmJiBwcm90by5jb25zdHJ1Y3Rvcjtcblx0XHRyZXR1cm4gdHlwZW9mIEN0b3IgPT09IFwiZnVuY3Rpb25cIiAmJiBmblRvU3RyaW5nLmNhbGwoIEN0b3IgKSA9PT0gT2JqZWN0RnVuY3Rpb25TdHJpbmc7XG5cdH0sXG5cblx0aXNFbXB0eU9iamVjdDogZnVuY3Rpb24oIG9iaiApIHtcblx0XHR2YXIgbmFtZTtcblxuXHRcdGZvciAoIG5hbWUgaW4gb2JqICkge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblx0XHRyZXR1cm4gdHJ1ZTtcblx0fSxcblxuXHQvLyBFdmFsdWF0ZXMgYSBzY3JpcHQgaW4gYSBwcm92aWRlZCBjb250ZXh0OyBmYWxscyBiYWNrIHRvIHRoZSBnbG9iYWwgb25lXG5cdC8vIGlmIG5vdCBzcGVjaWZpZWQuXG5cdGdsb2JhbEV2YWw6IGZ1bmN0aW9uKCBjb2RlLCBvcHRpb25zLCBkb2MgKSB7XG5cdFx0RE9NRXZhbCggY29kZSwgeyBub25jZTogb3B0aW9ucyAmJiBvcHRpb25zLm5vbmNlIH0sIGRvYyApO1xuXHR9LFxuXG5cdGVhY2g6IGZ1bmN0aW9uKCBvYmosIGNhbGxiYWNrICkge1xuXHRcdHZhciBsZW5ndGgsIGkgPSAwO1xuXG5cdFx0aWYgKCBpc0FycmF5TGlrZSggb2JqICkgKSB7XG5cdFx0XHRsZW5ndGggPSBvYmoubGVuZ3RoO1xuXHRcdFx0Zm9yICggOyBpIDwgbGVuZ3RoOyBpKysgKSB7XG5cdFx0XHRcdGlmICggY2FsbGJhY2suY2FsbCggb2JqWyBpIF0sIGksIG9ialsgaSBdICkgPT09IGZhbHNlICkge1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSBlbHNlIHtcblx0XHRcdGZvciAoIGkgaW4gb2JqICkge1xuXHRcdFx0XHRpZiAoIGNhbGxiYWNrLmNhbGwoIG9ialsgaSBdLCBpLCBvYmpbIGkgXSApID09PSBmYWxzZSApIHtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBvYmo7XG5cdH0sXG5cblx0Ly8gcmVzdWx0cyBpcyBmb3IgaW50ZXJuYWwgdXNhZ2Ugb25seVxuXHRtYWtlQXJyYXk6IGZ1bmN0aW9uKCBhcnIsIHJlc3VsdHMgKSB7XG5cdFx0dmFyIHJldCA9IHJlc3VsdHMgfHwgW107XG5cblx0XHRpZiAoIGFyciAhPSBudWxsICkge1xuXHRcdFx0aWYgKCBpc0FycmF5TGlrZSggT2JqZWN0KCBhcnIgKSApICkge1xuXHRcdFx0XHRqUXVlcnkubWVyZ2UoIHJldCxcblx0XHRcdFx0XHR0eXBlb2YgYXJyID09PSBcInN0cmluZ1wiID9cblx0XHRcdFx0XHRcdFsgYXJyIF0gOiBhcnJcblx0XHRcdFx0KTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHB1c2guY2FsbCggcmV0LCBhcnIgKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gcmV0O1xuXHR9LFxuXG5cdGluQXJyYXk6IGZ1bmN0aW9uKCBlbGVtLCBhcnIsIGkgKSB7XG5cdFx0cmV0dXJuIGFyciA9PSBudWxsID8gLTEgOiBpbmRleE9mLmNhbGwoIGFyciwgZWxlbSwgaSApO1xuXHR9LFxuXG5cdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD00LjAgb25seSwgUGhhbnRvbUpTIDEgb25seVxuXHQvLyBwdXNoLmFwcGx5KF8sIGFycmF5bGlrZSkgdGhyb3dzIG9uIGFuY2llbnQgV2ViS2l0XG5cdG1lcmdlOiBmdW5jdGlvbiggZmlyc3QsIHNlY29uZCApIHtcblx0XHR2YXIgbGVuID0gK3NlY29uZC5sZW5ndGgsXG5cdFx0XHRqID0gMCxcblx0XHRcdGkgPSBmaXJzdC5sZW5ndGg7XG5cblx0XHRmb3IgKCA7IGogPCBsZW47IGorKyApIHtcblx0XHRcdGZpcnN0WyBpKysgXSA9IHNlY29uZFsgaiBdO1xuXHRcdH1cblxuXHRcdGZpcnN0Lmxlbmd0aCA9IGk7XG5cblx0XHRyZXR1cm4gZmlyc3Q7XG5cdH0sXG5cblx0Z3JlcDogZnVuY3Rpb24oIGVsZW1zLCBjYWxsYmFjaywgaW52ZXJ0ICkge1xuXHRcdHZhciBjYWxsYmFja0ludmVyc2UsXG5cdFx0XHRtYXRjaGVzID0gW10sXG5cdFx0XHRpID0gMCxcblx0XHRcdGxlbmd0aCA9IGVsZW1zLmxlbmd0aCxcblx0XHRcdGNhbGxiYWNrRXhwZWN0ID0gIWludmVydDtcblxuXHRcdC8vIEdvIHRocm91Z2ggdGhlIGFycmF5LCBvbmx5IHNhdmluZyB0aGUgaXRlbXNcblx0XHQvLyB0aGF0IHBhc3MgdGhlIHZhbGlkYXRvciBmdW5jdGlvblxuXHRcdGZvciAoIDsgaSA8IGxlbmd0aDsgaSsrICkge1xuXHRcdFx0Y2FsbGJhY2tJbnZlcnNlID0gIWNhbGxiYWNrKCBlbGVtc1sgaSBdLCBpICk7XG5cdFx0XHRpZiAoIGNhbGxiYWNrSW52ZXJzZSAhPT0gY2FsbGJhY2tFeHBlY3QgKSB7XG5cdFx0XHRcdG1hdGNoZXMucHVzaCggZWxlbXNbIGkgXSApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBtYXRjaGVzO1xuXHR9LFxuXG5cdC8vIGFyZyBpcyBmb3IgaW50ZXJuYWwgdXNhZ2Ugb25seVxuXHRtYXA6IGZ1bmN0aW9uKCBlbGVtcywgY2FsbGJhY2ssIGFyZyApIHtcblx0XHR2YXIgbGVuZ3RoLCB2YWx1ZSxcblx0XHRcdGkgPSAwLFxuXHRcdFx0cmV0ID0gW107XG5cblx0XHQvLyBHbyB0aHJvdWdoIHRoZSBhcnJheSwgdHJhbnNsYXRpbmcgZWFjaCBvZiB0aGUgaXRlbXMgdG8gdGhlaXIgbmV3IHZhbHVlc1xuXHRcdGlmICggaXNBcnJheUxpa2UoIGVsZW1zICkgKSB7XG5cdFx0XHRsZW5ndGggPSBlbGVtcy5sZW5ndGg7XG5cdFx0XHRmb3IgKCA7IGkgPCBsZW5ndGg7IGkrKyApIHtcblx0XHRcdFx0dmFsdWUgPSBjYWxsYmFjayggZWxlbXNbIGkgXSwgaSwgYXJnICk7XG5cblx0XHRcdFx0aWYgKCB2YWx1ZSAhPSBudWxsICkge1xuXHRcdFx0XHRcdHJldC5wdXNoKCB2YWx1ZSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHQvLyBHbyB0aHJvdWdoIGV2ZXJ5IGtleSBvbiB0aGUgb2JqZWN0LFxuXHRcdH0gZWxzZSB7XG5cdFx0XHRmb3IgKCBpIGluIGVsZW1zICkge1xuXHRcdFx0XHR2YWx1ZSA9IGNhbGxiYWNrKCBlbGVtc1sgaSBdLCBpLCBhcmcgKTtcblxuXHRcdFx0XHRpZiAoIHZhbHVlICE9IG51bGwgKSB7XG5cdFx0XHRcdFx0cmV0LnB1c2goIHZhbHVlICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBGbGF0dGVuIGFueSBuZXN0ZWQgYXJyYXlzXG5cdFx0cmV0dXJuIGZsYXQoIHJldCApO1xuXHR9LFxuXG5cdC8vIEEgZ2xvYmFsIEdVSUQgY291bnRlciBmb3Igb2JqZWN0c1xuXHRndWlkOiAxLFxuXG5cdC8vIGpRdWVyeS5zdXBwb3J0IGlzIG5vdCB1c2VkIGluIENvcmUgYnV0IG90aGVyIHByb2plY3RzIGF0dGFjaCB0aGVpclxuXHQvLyBwcm9wZXJ0aWVzIHRvIGl0IHNvIGl0IG5lZWRzIHRvIGV4aXN0LlxuXHRzdXBwb3J0OiBzdXBwb3J0XG59ICk7XG5cbmlmICggdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICkge1xuXHRqUXVlcnkuZm5bIFN5bWJvbC5pdGVyYXRvciBdID0gYXJyWyBTeW1ib2wuaXRlcmF0b3IgXTtcbn1cblxuLy8gUG9wdWxhdGUgdGhlIGNsYXNzMnR5cGUgbWFwXG5qUXVlcnkuZWFjaCggXCJCb29sZWFuIE51bWJlciBTdHJpbmcgRnVuY3Rpb24gQXJyYXkgRGF0ZSBSZWdFeHAgT2JqZWN0IEVycm9yIFN5bWJvbFwiLnNwbGl0KCBcIiBcIiApLFxuXHRmdW5jdGlvbiggX2ksIG5hbWUgKSB7XG5cdFx0Y2xhc3MydHlwZVsgXCJbb2JqZWN0IFwiICsgbmFtZSArIFwiXVwiIF0gPSBuYW1lLnRvTG93ZXJDYXNlKCk7XG5cdH0gKTtcblxuZnVuY3Rpb24gaXNBcnJheUxpa2UoIG9iaiApIHtcblxuXHQvLyBTdXBwb3J0OiByZWFsIGlPUyA4LjIgb25seSAobm90IHJlcHJvZHVjaWJsZSBpbiBzaW11bGF0b3IpXG5cdC8vIGBpbmAgY2hlY2sgdXNlZCB0byBwcmV2ZW50IEpJVCBlcnJvciAoZ2gtMjE0NSlcblx0Ly8gaGFzT3duIGlzbid0IHVzZWQgaGVyZSBkdWUgdG8gZmFsc2UgbmVnYXRpdmVzXG5cdC8vIHJlZ2FyZGluZyBOb2RlbGlzdCBsZW5ndGggaW4gSUVcblx0dmFyIGxlbmd0aCA9ICEhb2JqICYmIFwibGVuZ3RoXCIgaW4gb2JqICYmIG9iai5sZW5ndGgsXG5cdFx0dHlwZSA9IHRvVHlwZSggb2JqICk7XG5cblx0aWYgKCBpc0Z1bmN0aW9uKCBvYmogKSB8fCBpc1dpbmRvdyggb2JqICkgKSB7XG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG5cblx0cmV0dXJuIHR5cGUgPT09IFwiYXJyYXlcIiB8fCBsZW5ndGggPT09IDAgfHxcblx0XHR0eXBlb2YgbGVuZ3RoID09PSBcIm51bWJlclwiICYmIGxlbmd0aCA+IDAgJiYgKCBsZW5ndGggLSAxICkgaW4gb2JqO1xufVxudmFyIFNpenpsZSA9XG4vKiFcbiAqIFNpenpsZSBDU1MgU2VsZWN0b3IgRW5naW5lIHYyLjMuNlxuICogaHR0cHM6Ly9zaXp6bGVqcy5jb20vXG4gKlxuICogQ29weXJpZ2h0IEpTIEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9yc1xuICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlXG4gKiBodHRwczovL2pzLmZvdW5kYXRpb24vXG4gKlxuICogRGF0ZTogMjAyMS0wMi0xNlxuICovXG4oIGZ1bmN0aW9uKCB3aW5kb3cgKSB7XG52YXIgaSxcblx0c3VwcG9ydCxcblx0RXhwcixcblx0Z2V0VGV4dCxcblx0aXNYTUwsXG5cdHRva2VuaXplLFxuXHRjb21waWxlLFxuXHRzZWxlY3QsXG5cdG91dGVybW9zdENvbnRleHQsXG5cdHNvcnRJbnB1dCxcblx0aGFzRHVwbGljYXRlLFxuXG5cdC8vIExvY2FsIGRvY3VtZW50IHZhcnNcblx0c2V0RG9jdW1lbnQsXG5cdGRvY3VtZW50LFxuXHRkb2NFbGVtLFxuXHRkb2N1bWVudElzSFRNTCxcblx0cmJ1Z2d5UVNBLFxuXHRyYnVnZ3lNYXRjaGVzLFxuXHRtYXRjaGVzLFxuXHRjb250YWlucyxcblxuXHQvLyBJbnN0YW5jZS1zcGVjaWZpYyBkYXRhXG5cdGV4cGFuZG8gPSBcInNpenpsZVwiICsgMSAqIG5ldyBEYXRlKCksXG5cdHByZWZlcnJlZERvYyA9IHdpbmRvdy5kb2N1bWVudCxcblx0ZGlycnVucyA9IDAsXG5cdGRvbmUgPSAwLFxuXHRjbGFzc0NhY2hlID0gY3JlYXRlQ2FjaGUoKSxcblx0dG9rZW5DYWNoZSA9IGNyZWF0ZUNhY2hlKCksXG5cdGNvbXBpbGVyQ2FjaGUgPSBjcmVhdGVDYWNoZSgpLFxuXHRub25uYXRpdmVTZWxlY3RvckNhY2hlID0gY3JlYXRlQ2FjaGUoKSxcblx0c29ydE9yZGVyID0gZnVuY3Rpb24oIGEsIGIgKSB7XG5cdFx0aWYgKCBhID09PSBiICkge1xuXHRcdFx0aGFzRHVwbGljYXRlID0gdHJ1ZTtcblx0XHR9XG5cdFx0cmV0dXJuIDA7XG5cdH0sXG5cblx0Ly8gSW5zdGFuY2UgbWV0aG9kc1xuXHRoYXNPd24gPSAoIHt9ICkuaGFzT3duUHJvcGVydHksXG5cdGFyciA9IFtdLFxuXHRwb3AgPSBhcnIucG9wLFxuXHRwdXNoTmF0aXZlID0gYXJyLnB1c2gsXG5cdHB1c2ggPSBhcnIucHVzaCxcblx0c2xpY2UgPSBhcnIuc2xpY2UsXG5cblx0Ly8gVXNlIGEgc3RyaXBwZWQtZG93biBpbmRleE9mIGFzIGl0J3MgZmFzdGVyIHRoYW4gbmF0aXZlXG5cdC8vIGh0dHBzOi8vanNwZXJmLmNvbS90aG9yLWluZGV4b2YtdnMtZm9yLzVcblx0aW5kZXhPZiA9IGZ1bmN0aW9uKCBsaXN0LCBlbGVtICkge1xuXHRcdHZhciBpID0gMCxcblx0XHRcdGxlbiA9IGxpc3QubGVuZ3RoO1xuXHRcdGZvciAoIDsgaSA8IGxlbjsgaSsrICkge1xuXHRcdFx0aWYgKCBsaXN0WyBpIF0gPT09IGVsZW0gKSB7XG5cdFx0XHRcdHJldHVybiBpO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRyZXR1cm4gLTE7XG5cdH0sXG5cblx0Ym9vbGVhbnMgPSBcImNoZWNrZWR8c2VsZWN0ZWR8YXN5bmN8YXV0b2ZvY3VzfGF1dG9wbGF5fGNvbnRyb2xzfGRlZmVyfGRpc2FibGVkfGhpZGRlbnxcIiArXG5cdFx0XCJpc21hcHxsb29wfG11bHRpcGxlfG9wZW58cmVhZG9ubHl8cmVxdWlyZWR8c2NvcGVkXCIsXG5cblx0Ly8gUmVndWxhciBleHByZXNzaW9uc1xuXG5cdC8vIGh0dHA6Ly93d3cudzMub3JnL1RSL2NzczMtc2VsZWN0b3JzLyN3aGl0ZXNwYWNlXG5cdHdoaXRlc3BhY2UgPSBcIltcXFxceDIwXFxcXHRcXFxcclxcXFxuXFxcXGZdXCIsXG5cblx0Ly8gaHR0cHM6Ly93d3cudzMub3JnL1RSL2Nzcy1zeW50YXgtMy8jaWRlbnQtdG9rZW4tZGlhZ3JhbVxuXHRpZGVudGlmaWVyID0gXCIoPzpcXFxcXFxcXFtcXFxcZGEtZkEtRl17MSw2fVwiICsgd2hpdGVzcGFjZSArXG5cdFx0XCI/fFxcXFxcXFxcW15cXFxcclxcXFxuXFxcXGZdfFtcXFxcdy1dfFteXFwwLVxcXFx4N2ZdKStcIixcblxuXHQvLyBBdHRyaWJ1dGUgc2VsZWN0b3JzOiBodHRwOi8vd3d3LnczLm9yZy9UUi9zZWxlY3RvcnMvI2F0dHJpYnV0ZS1zZWxlY3RvcnNcblx0YXR0cmlidXRlcyA9IFwiXFxcXFtcIiArIHdoaXRlc3BhY2UgKyBcIiooXCIgKyBpZGVudGlmaWVyICsgXCIpKD86XCIgKyB3aGl0ZXNwYWNlICtcblxuXHRcdC8vIE9wZXJhdG9yIChjYXB0dXJlIDIpXG5cdFx0XCIqKFsqXiR8IX5dPz0pXCIgKyB3aGl0ZXNwYWNlICtcblxuXHRcdC8vIFwiQXR0cmlidXRlIHZhbHVlcyBtdXN0IGJlIENTUyBpZGVudGlmaWVycyBbY2FwdHVyZSA1XVxuXHRcdC8vIG9yIHN0cmluZ3MgW2NhcHR1cmUgMyBvciBjYXB0dXJlIDRdXCJcblx0XHRcIiooPzonKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcJ10pKiknfFxcXCIoKD86XFxcXFxcXFwufFteXFxcXFxcXFxcXFwiXSkqKVxcXCJ8KFwiICsgaWRlbnRpZmllciArIFwiKSl8KVwiICtcblx0XHR3aGl0ZXNwYWNlICsgXCIqXFxcXF1cIixcblxuXHRwc2V1ZG9zID0gXCI6KFwiICsgaWRlbnRpZmllciArIFwiKSg/OlxcXFwoKFwiICtcblxuXHRcdC8vIFRvIHJlZHVjZSB0aGUgbnVtYmVyIG9mIHNlbGVjdG9ycyBuZWVkaW5nIHRva2VuaXplIGluIHRoZSBwcmVGaWx0ZXIsIHByZWZlciBhcmd1bWVudHM6XG5cdFx0Ly8gMS4gcXVvdGVkIChjYXB0dXJlIDM7IGNhcHR1cmUgNCBvciBjYXB0dXJlIDUpXG5cdFx0XCIoJygoPzpcXFxcXFxcXC58W15cXFxcXFxcXCddKSopJ3xcXFwiKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcXFxcIl0pKilcXFwiKXxcIiArXG5cblx0XHQvLyAyLiBzaW1wbGUgKGNhcHR1cmUgNilcblx0XHRcIigoPzpcXFxcXFxcXC58W15cXFxcXFxcXCgpW1xcXFxdXXxcIiArIGF0dHJpYnV0ZXMgKyBcIikqKXxcIiArXG5cblx0XHQvLyAzLiBhbnl0aGluZyBlbHNlIChjYXB0dXJlIDIpXG5cdFx0XCIuKlwiICtcblx0XHRcIilcXFxcKXwpXCIsXG5cblx0Ly8gTGVhZGluZyBhbmQgbm9uLWVzY2FwZWQgdHJhaWxpbmcgd2hpdGVzcGFjZSwgY2FwdHVyaW5nIHNvbWUgbm9uLXdoaXRlc3BhY2UgY2hhcmFjdGVycyBwcmVjZWRpbmcgdGhlIGxhdHRlclxuXHRyd2hpdGVzcGFjZSA9IG5ldyBSZWdFeHAoIHdoaXRlc3BhY2UgKyBcIitcIiwgXCJnXCIgKSxcblx0cnRyaW0gPSBuZXcgUmVnRXhwKCBcIl5cIiArIHdoaXRlc3BhY2UgKyBcIit8KCg/Ol58W15cXFxcXFxcXF0pKD86XFxcXFxcXFwuKSopXCIgK1xuXHRcdHdoaXRlc3BhY2UgKyBcIiskXCIsIFwiZ1wiICksXG5cblx0cmNvbW1hID0gbmV3IFJlZ0V4cCggXCJeXCIgKyB3aGl0ZXNwYWNlICsgXCIqLFwiICsgd2hpdGVzcGFjZSArIFwiKlwiICksXG5cdHJjb21iaW5hdG9ycyA9IG5ldyBSZWdFeHAoIFwiXlwiICsgd2hpdGVzcGFjZSArIFwiKihbPit+XXxcIiArIHdoaXRlc3BhY2UgKyBcIilcIiArIHdoaXRlc3BhY2UgK1xuXHRcdFwiKlwiICksXG5cdHJkZXNjZW5kID0gbmV3IFJlZ0V4cCggd2hpdGVzcGFjZSArIFwifD5cIiApLFxuXG5cdHJwc2V1ZG8gPSBuZXcgUmVnRXhwKCBwc2V1ZG9zICksXG5cdHJpZGVudGlmaWVyID0gbmV3IFJlZ0V4cCggXCJeXCIgKyBpZGVudGlmaWVyICsgXCIkXCIgKSxcblxuXHRtYXRjaEV4cHIgPSB7XG5cdFx0XCJJRFwiOiBuZXcgUmVnRXhwKCBcIl4jKFwiICsgaWRlbnRpZmllciArIFwiKVwiICksXG5cdFx0XCJDTEFTU1wiOiBuZXcgUmVnRXhwKCBcIl5cXFxcLihcIiArIGlkZW50aWZpZXIgKyBcIilcIiApLFxuXHRcdFwiVEFHXCI6IG5ldyBSZWdFeHAoIFwiXihcIiArIGlkZW50aWZpZXIgKyBcInxbKl0pXCIgKSxcblx0XHRcIkFUVFJcIjogbmV3IFJlZ0V4cCggXCJeXCIgKyBhdHRyaWJ1dGVzICksXG5cdFx0XCJQU0VVRE9cIjogbmV3IFJlZ0V4cCggXCJeXCIgKyBwc2V1ZG9zICksXG5cdFx0XCJDSElMRFwiOiBuZXcgUmVnRXhwKCBcIl46KG9ubHl8Zmlyc3R8bGFzdHxudGh8bnRoLWxhc3QpLShjaGlsZHxvZi10eXBlKSg/OlxcXFwoXCIgK1xuXHRcdFx0d2hpdGVzcGFjZSArIFwiKihldmVufG9kZHwoKFsrLV18KShcXFxcZCopbnwpXCIgKyB3aGl0ZXNwYWNlICsgXCIqKD86KFsrLV18KVwiICtcblx0XHRcdHdoaXRlc3BhY2UgKyBcIiooXFxcXGQrKXwpKVwiICsgd2hpdGVzcGFjZSArIFwiKlxcXFwpfClcIiwgXCJpXCIgKSxcblx0XHRcImJvb2xcIjogbmV3IFJlZ0V4cCggXCJeKD86XCIgKyBib29sZWFucyArIFwiKSRcIiwgXCJpXCIgKSxcblxuXHRcdC8vIEZvciB1c2UgaW4gbGlicmFyaWVzIGltcGxlbWVudGluZyAuaXMoKVxuXHRcdC8vIFdlIHVzZSB0aGlzIGZvciBQT1MgbWF0Y2hpbmcgaW4gYHNlbGVjdGBcblx0XHRcIm5lZWRzQ29udGV4dFwiOiBuZXcgUmVnRXhwKCBcIl5cIiArIHdoaXRlc3BhY2UgK1xuXHRcdFx0XCIqWz4rfl18OihldmVufG9kZHxlcXxndHxsdHxudGh8Zmlyc3R8bGFzdCkoPzpcXFxcKFwiICsgd2hpdGVzcGFjZSArXG5cdFx0XHRcIiooKD86LVxcXFxkKT9cXFxcZCopXCIgKyB3aGl0ZXNwYWNlICsgXCIqXFxcXCl8KSg/PVteLV18JClcIiwgXCJpXCIgKVxuXHR9LFxuXG5cdHJodG1sID0gL0hUTUwkL2ksXG5cdHJpbnB1dHMgPSAvXig/OmlucHV0fHNlbGVjdHx0ZXh0YXJlYXxidXR0b24pJC9pLFxuXHRyaGVhZGVyID0gL15oXFxkJC9pLFxuXG5cdHJuYXRpdmUgPSAvXltee10rXFx7XFxzKlxcW25hdGl2ZSBcXHcvLFxuXG5cdC8vIEVhc2lseS1wYXJzZWFibGUvcmV0cmlldmFibGUgSUQgb3IgVEFHIG9yIENMQVNTIHNlbGVjdG9yc1xuXHRycXVpY2tFeHByID0gL14oPzojKFtcXHctXSspfChcXHcrKXxcXC4oW1xcdy1dKykpJC8sXG5cblx0cnNpYmxpbmcgPSAvWyt+XS8sXG5cblx0Ly8gQ1NTIGVzY2FwZXNcblx0Ly8gaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvc3luZGF0YS5odG1sI2VzY2FwZWQtY2hhcmFjdGVyc1xuXHRydW5lc2NhcGUgPSBuZXcgUmVnRXhwKCBcIlxcXFxcXFxcW1xcXFxkYS1mQS1GXXsxLDZ9XCIgKyB3aGl0ZXNwYWNlICsgXCI/fFxcXFxcXFxcKFteXFxcXHJcXFxcblxcXFxmXSlcIiwgXCJnXCIgKSxcblx0ZnVuZXNjYXBlID0gZnVuY3Rpb24oIGVzY2FwZSwgbm9uSGV4ICkge1xuXHRcdHZhciBoaWdoID0gXCIweFwiICsgZXNjYXBlLnNsaWNlKCAxICkgLSAweDEwMDAwO1xuXG5cdFx0cmV0dXJuIG5vbkhleCA/XG5cblx0XHRcdC8vIFN0cmlwIHRoZSBiYWNrc2xhc2ggcHJlZml4IGZyb20gYSBub24taGV4IGVzY2FwZSBzZXF1ZW5jZVxuXHRcdFx0bm9uSGV4IDpcblxuXHRcdFx0Ly8gUmVwbGFjZSBhIGhleGFkZWNpbWFsIGVzY2FwZSBzZXF1ZW5jZSB3aXRoIHRoZSBlbmNvZGVkIFVuaWNvZGUgY29kZSBwb2ludFxuXHRcdFx0Ly8gU3VwcG9ydDogSUUgPD0xMStcblx0XHRcdC8vIEZvciB2YWx1ZXMgb3V0c2lkZSB0aGUgQmFzaWMgTXVsdGlsaW5ndWFsIFBsYW5lIChCTVApLCBtYW51YWxseSBjb25zdHJ1Y3QgYVxuXHRcdFx0Ly8gc3Vycm9nYXRlIHBhaXJcblx0XHRcdGhpZ2ggPCAwID9cblx0XHRcdFx0U3RyaW5nLmZyb21DaGFyQ29kZSggaGlnaCArIDB4MTAwMDAgKSA6XG5cdFx0XHRcdFN0cmluZy5mcm9tQ2hhckNvZGUoIGhpZ2ggPj4gMTAgfCAweEQ4MDAsIGhpZ2ggJiAweDNGRiB8IDB4REMwMCApO1xuXHR9LFxuXG5cdC8vIENTUyBzdHJpbmcvaWRlbnRpZmllciBzZXJpYWxpemF0aW9uXG5cdC8vIGh0dHBzOi8vZHJhZnRzLmNzc3dnLm9yZy9jc3NvbS8jY29tbW9uLXNlcmlhbGl6aW5nLWlkaW9tc1xuXHRyY3NzZXNjYXBlID0gLyhbXFwwLVxceDFmXFx4N2ZdfF4tP1xcZCl8Xi0kfFteXFwwLVxceDFmXFx4N2YtXFx1RkZGRlxcdy1dL2csXG5cdGZjc3Nlc2NhcGUgPSBmdW5jdGlvbiggY2gsIGFzQ29kZVBvaW50ICkge1xuXHRcdGlmICggYXNDb2RlUG9pbnQgKSB7XG5cblx0XHRcdC8vIFUrMDAwMCBOVUxMIGJlY29tZXMgVStGRkZEIFJFUExBQ0VNRU5UIENIQVJBQ1RFUlxuXHRcdFx0aWYgKCBjaCA9PT0gXCJcXDBcIiApIHtcblx0XHRcdFx0cmV0dXJuIFwiXFx1RkZGRFwiO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBDb250cm9sIGNoYXJhY3RlcnMgYW5kIChkZXBlbmRlbnQgdXBvbiBwb3NpdGlvbikgbnVtYmVycyBnZXQgZXNjYXBlZCBhcyBjb2RlIHBvaW50c1xuXHRcdFx0cmV0dXJuIGNoLnNsaWNlKCAwLCAtMSApICsgXCJcXFxcXCIgK1xuXHRcdFx0XHRjaC5jaGFyQ29kZUF0KCBjaC5sZW5ndGggLSAxICkudG9TdHJpbmcoIDE2ICkgKyBcIiBcIjtcblx0XHR9XG5cblx0XHQvLyBPdGhlciBwb3RlbnRpYWxseS1zcGVjaWFsIEFTQ0lJIGNoYXJhY3RlcnMgZ2V0IGJhY2tzbGFzaC1lc2NhcGVkXG5cdFx0cmV0dXJuIFwiXFxcXFwiICsgY2g7XG5cdH0sXG5cblx0Ly8gVXNlZCBmb3IgaWZyYW1lc1xuXHQvLyBTZWUgc2V0RG9jdW1lbnQoKVxuXHQvLyBSZW1vdmluZyB0aGUgZnVuY3Rpb24gd3JhcHBlciBjYXVzZXMgYSBcIlBlcm1pc3Npb24gRGVuaWVkXCJcblx0Ly8gZXJyb3IgaW4gSUVcblx0dW5sb2FkSGFuZGxlciA9IGZ1bmN0aW9uKCkge1xuXHRcdHNldERvY3VtZW50KCk7XG5cdH0sXG5cblx0aW5EaXNhYmxlZEZpZWxkc2V0ID0gYWRkQ29tYmluYXRvcihcblx0XHRmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiBlbGVtLmRpc2FibGVkID09PSB0cnVlICYmIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gXCJmaWVsZHNldFwiO1xuXHRcdH0sXG5cdFx0eyBkaXI6IFwicGFyZW50Tm9kZVwiLCBuZXh0OiBcImxlZ2VuZFwiIH1cblx0KTtcblxuLy8gT3B0aW1pemUgZm9yIHB1c2guYXBwbHkoIF8sIE5vZGVMaXN0IClcbnRyeSB7XG5cdHB1c2guYXBwbHkoXG5cdFx0KCBhcnIgPSBzbGljZS5jYWxsKCBwcmVmZXJyZWREb2MuY2hpbGROb2RlcyApICksXG5cdFx0cHJlZmVycmVkRG9jLmNoaWxkTm9kZXNcblx0KTtcblxuXHQvLyBTdXBwb3J0OiBBbmRyb2lkPDQuMFxuXHQvLyBEZXRlY3Qgc2lsZW50bHkgZmFpbGluZyBwdXNoLmFwcGx5XG5cdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtZXhwcmVzc2lvbnNcblx0YXJyWyBwcmVmZXJyZWREb2MuY2hpbGROb2Rlcy5sZW5ndGggXS5ub2RlVHlwZTtcbn0gY2F0Y2ggKCBlICkge1xuXHRwdXNoID0geyBhcHBseTogYXJyLmxlbmd0aCA/XG5cblx0XHQvLyBMZXZlcmFnZSBzbGljZSBpZiBwb3NzaWJsZVxuXHRcdGZ1bmN0aW9uKCB0YXJnZXQsIGVscyApIHtcblx0XHRcdHB1c2hOYXRpdmUuYXBwbHkoIHRhcmdldCwgc2xpY2UuY2FsbCggZWxzICkgKTtcblx0XHR9IDpcblxuXHRcdC8vIFN1cHBvcnQ6IElFPDlcblx0XHQvLyBPdGhlcndpc2UgYXBwZW5kIGRpcmVjdGx5XG5cdFx0ZnVuY3Rpb24oIHRhcmdldCwgZWxzICkge1xuXHRcdFx0dmFyIGogPSB0YXJnZXQubGVuZ3RoLFxuXHRcdFx0XHRpID0gMDtcblxuXHRcdFx0Ly8gQ2FuJ3QgdHJ1c3QgTm9kZUxpc3QubGVuZ3RoXG5cdFx0XHR3aGlsZSAoICggdGFyZ2V0WyBqKysgXSA9IGVsc1sgaSsrIF0gKSApIHt9XG5cdFx0XHR0YXJnZXQubGVuZ3RoID0gaiAtIDE7XG5cdFx0fVxuXHR9O1xufVxuXG5mdW5jdGlvbiBTaXp6bGUoIHNlbGVjdG9yLCBjb250ZXh0LCByZXN1bHRzLCBzZWVkICkge1xuXHR2YXIgbSwgaSwgZWxlbSwgbmlkLCBtYXRjaCwgZ3JvdXBzLCBuZXdTZWxlY3Rvcixcblx0XHRuZXdDb250ZXh0ID0gY29udGV4dCAmJiBjb250ZXh0Lm93bmVyRG9jdW1lbnQsXG5cblx0XHQvLyBub2RlVHlwZSBkZWZhdWx0cyB0byA5LCBzaW5jZSBjb250ZXh0IGRlZmF1bHRzIHRvIGRvY3VtZW50XG5cdFx0bm9kZVR5cGUgPSBjb250ZXh0ID8gY29udGV4dC5ub2RlVHlwZSA6IDk7XG5cblx0cmVzdWx0cyA9IHJlc3VsdHMgfHwgW107XG5cblx0Ly8gUmV0dXJuIGVhcmx5IGZyb20gY2FsbHMgd2l0aCBpbnZhbGlkIHNlbGVjdG9yIG9yIGNvbnRleHRcblx0aWYgKCB0eXBlb2Ygc2VsZWN0b3IgIT09IFwic3RyaW5nXCIgfHwgIXNlbGVjdG9yIHx8XG5cdFx0bm9kZVR5cGUgIT09IDEgJiYgbm9kZVR5cGUgIT09IDkgJiYgbm9kZVR5cGUgIT09IDExICkge1xuXG5cdFx0cmV0dXJuIHJlc3VsdHM7XG5cdH1cblxuXHQvLyBUcnkgdG8gc2hvcnRjdXQgZmluZCBvcGVyYXRpb25zIChhcyBvcHBvc2VkIHRvIGZpbHRlcnMpIGluIEhUTUwgZG9jdW1lbnRzXG5cdGlmICggIXNlZWQgKSB7XG5cdFx0c2V0RG9jdW1lbnQoIGNvbnRleHQgKTtcblx0XHRjb250ZXh0ID0gY29udGV4dCB8fCBkb2N1bWVudDtcblxuXHRcdGlmICggZG9jdW1lbnRJc0hUTUwgKSB7XG5cblx0XHRcdC8vIElmIHRoZSBzZWxlY3RvciBpcyBzdWZmaWNpZW50bHkgc2ltcGxlLCB0cnkgdXNpbmcgYSBcImdldCpCeSpcIiBET00gbWV0aG9kXG5cdFx0XHQvLyAoZXhjZXB0aW5nIERvY3VtZW50RnJhZ21lbnQgY29udGV4dCwgd2hlcmUgdGhlIG1ldGhvZHMgZG9uJ3QgZXhpc3QpXG5cdFx0XHRpZiAoIG5vZGVUeXBlICE9PSAxMSAmJiAoIG1hdGNoID0gcnF1aWNrRXhwci5leGVjKCBzZWxlY3RvciApICkgKSB7XG5cblx0XHRcdFx0Ly8gSUQgc2VsZWN0b3Jcblx0XHRcdFx0aWYgKCAoIG0gPSBtYXRjaFsgMSBdICkgKSB7XG5cblx0XHRcdFx0XHQvLyBEb2N1bWVudCBjb250ZXh0XG5cdFx0XHRcdFx0aWYgKCBub2RlVHlwZSA9PT0gOSApIHtcblx0XHRcdFx0XHRcdGlmICggKCBlbGVtID0gY29udGV4dC5nZXRFbGVtZW50QnlJZCggbSApICkgKSB7XG5cblx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUsIE9wZXJhLCBXZWJraXRcblx0XHRcdFx0XHRcdFx0Ly8gVE9ETzogaWRlbnRpZnkgdmVyc2lvbnNcblx0XHRcdFx0XHRcdFx0Ly8gZ2V0RWxlbWVudEJ5SWQgY2FuIG1hdGNoIGVsZW1lbnRzIGJ5IG5hbWUgaW5zdGVhZCBvZiBJRFxuXHRcdFx0XHRcdFx0XHRpZiAoIGVsZW0uaWQgPT09IG0gKSB7XG5cdFx0XHRcdFx0XHRcdFx0cmVzdWx0cy5wdXNoKCBlbGVtICk7XG5cdFx0XHRcdFx0XHRcdFx0cmV0dXJuIHJlc3VsdHM7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiByZXN1bHRzO1xuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gRWxlbWVudCBjb250ZXh0XG5cdFx0XHRcdFx0fSBlbHNlIHtcblxuXHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUsIE9wZXJhLCBXZWJraXRcblx0XHRcdFx0XHRcdC8vIFRPRE86IGlkZW50aWZ5IHZlcnNpb25zXG5cdFx0XHRcdFx0XHQvLyBnZXRFbGVtZW50QnlJZCBjYW4gbWF0Y2ggZWxlbWVudHMgYnkgbmFtZSBpbnN0ZWFkIG9mIElEXG5cdFx0XHRcdFx0XHRpZiAoIG5ld0NvbnRleHQgJiYgKCBlbGVtID0gbmV3Q29udGV4dC5nZXRFbGVtZW50QnlJZCggbSApICkgJiZcblx0XHRcdFx0XHRcdFx0Y29udGFpbnMoIGNvbnRleHQsIGVsZW0gKSAmJlxuXHRcdFx0XHRcdFx0XHRlbGVtLmlkID09PSBtICkge1xuXG5cdFx0XHRcdFx0XHRcdHJlc3VsdHMucHVzaCggZWxlbSApO1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gcmVzdWx0cztcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gVHlwZSBzZWxlY3RvclxuXHRcdFx0XHR9IGVsc2UgaWYgKCBtYXRjaFsgMiBdICkge1xuXHRcdFx0XHRcdHB1c2guYXBwbHkoIHJlc3VsdHMsIGNvbnRleHQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIHNlbGVjdG9yICkgKTtcblx0XHRcdFx0XHRyZXR1cm4gcmVzdWx0cztcblxuXHRcdFx0XHQvLyBDbGFzcyBzZWxlY3RvclxuXHRcdFx0XHR9IGVsc2UgaWYgKCAoIG0gPSBtYXRjaFsgMyBdICkgJiYgc3VwcG9ydC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lICYmXG5cdFx0XHRcdFx0Y29udGV4dC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lICkge1xuXG5cdFx0XHRcdFx0cHVzaC5hcHBseSggcmVzdWx0cywgY29udGV4dC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCBtICkgKTtcblx0XHRcdFx0XHRyZXR1cm4gcmVzdWx0cztcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBUYWtlIGFkdmFudGFnZSBvZiBxdWVyeVNlbGVjdG9yQWxsXG5cdFx0XHRpZiAoIHN1cHBvcnQucXNhICYmXG5cdFx0XHRcdCFub25uYXRpdmVTZWxlY3RvckNhY2hlWyBzZWxlY3RvciArIFwiIFwiIF0gJiZcblx0XHRcdFx0KCAhcmJ1Z2d5UVNBIHx8ICFyYnVnZ3lRU0EudGVzdCggc2VsZWN0b3IgKSApICYmXG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgOCBvbmx5XG5cdFx0XHRcdC8vIEV4Y2x1ZGUgb2JqZWN0IGVsZW1lbnRzXG5cdFx0XHRcdCggbm9kZVR5cGUgIT09IDEgfHwgY29udGV4dC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpICE9PSBcIm9iamVjdFwiICkgKSB7XG5cblx0XHRcdFx0bmV3U2VsZWN0b3IgPSBzZWxlY3Rvcjtcblx0XHRcdFx0bmV3Q29udGV4dCA9IGNvbnRleHQ7XG5cblx0XHRcdFx0Ly8gcVNBIGNvbnNpZGVycyBlbGVtZW50cyBvdXRzaWRlIGEgc2NvcGluZyByb290IHdoZW4gZXZhbHVhdGluZyBjaGlsZCBvclxuXHRcdFx0XHQvLyBkZXNjZW5kYW50IGNvbWJpbmF0b3JzLCB3aGljaCBpcyBub3Qgd2hhdCB3ZSB3YW50LlxuXHRcdFx0XHQvLyBJbiBzdWNoIGNhc2VzLCB3ZSB3b3JrIGFyb3VuZCB0aGUgYmVoYXZpb3IgYnkgcHJlZml4aW5nIGV2ZXJ5IHNlbGVjdG9yIGluIHRoZVxuXHRcdFx0XHQvLyBsaXN0IHdpdGggYW4gSUQgc2VsZWN0b3IgcmVmZXJlbmNpbmcgdGhlIHNjb3BlIGNvbnRleHQuXG5cdFx0XHRcdC8vIFRoZSB0ZWNobmlxdWUgaGFzIHRvIGJlIHVzZWQgYXMgd2VsbCB3aGVuIGEgbGVhZGluZyBjb21iaW5hdG9yIGlzIHVzZWRcblx0XHRcdFx0Ly8gYXMgc3VjaCBzZWxlY3RvcnMgYXJlIG5vdCByZWNvZ25pemVkIGJ5IHF1ZXJ5U2VsZWN0b3JBbGwuXG5cdFx0XHRcdC8vIFRoYW5rcyB0byBBbmRyZXcgRHVwb250IGZvciB0aGlzIHRlY2huaXF1ZS5cblx0XHRcdFx0aWYgKCBub2RlVHlwZSA9PT0gMSAmJlxuXHRcdFx0XHRcdCggcmRlc2NlbmQudGVzdCggc2VsZWN0b3IgKSB8fCByY29tYmluYXRvcnMudGVzdCggc2VsZWN0b3IgKSApICkge1xuXG5cdFx0XHRcdFx0Ly8gRXhwYW5kIGNvbnRleHQgZm9yIHNpYmxpbmcgc2VsZWN0b3JzXG5cdFx0XHRcdFx0bmV3Q29udGV4dCA9IHJzaWJsaW5nLnRlc3QoIHNlbGVjdG9yICkgJiYgdGVzdENvbnRleHQoIGNvbnRleHQucGFyZW50Tm9kZSApIHx8XG5cdFx0XHRcdFx0XHRjb250ZXh0O1xuXG5cdFx0XHRcdFx0Ly8gV2UgY2FuIHVzZSA6c2NvcGUgaW5zdGVhZCBvZiB0aGUgSUQgaGFjayBpZiB0aGUgYnJvd3NlclxuXHRcdFx0XHRcdC8vIHN1cHBvcnRzIGl0ICYgaWYgd2UncmUgbm90IGNoYW5naW5nIHRoZSBjb250ZXh0LlxuXHRcdFx0XHRcdGlmICggbmV3Q29udGV4dCAhPT0gY29udGV4dCB8fCAhc3VwcG9ydC5zY29wZSApIHtcblxuXHRcdFx0XHRcdFx0Ly8gQ2FwdHVyZSB0aGUgY29udGV4dCBJRCwgc2V0dGluZyBpdCBmaXJzdCBpZiBuZWNlc3Nhcnlcblx0XHRcdFx0XHRcdGlmICggKCBuaWQgPSBjb250ZXh0LmdldEF0dHJpYnV0ZSggXCJpZFwiICkgKSApIHtcblx0XHRcdFx0XHRcdFx0bmlkID0gbmlkLnJlcGxhY2UoIHJjc3Nlc2NhcGUsIGZjc3Nlc2NhcGUgKTtcblx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdGNvbnRleHQuc2V0QXR0cmlidXRlKCBcImlkXCIsICggbmlkID0gZXhwYW5kbyApICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gUHJlZml4IGV2ZXJ5IHNlbGVjdG9yIGluIHRoZSBsaXN0XG5cdFx0XHRcdFx0Z3JvdXBzID0gdG9rZW5pemUoIHNlbGVjdG9yICk7XG5cdFx0XHRcdFx0aSA9IGdyb3Vwcy5sZW5ndGg7XG5cdFx0XHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdFx0XHRncm91cHNbIGkgXSA9ICggbmlkID8gXCIjXCIgKyBuaWQgOiBcIjpzY29wZVwiICkgKyBcIiBcIiArXG5cdFx0XHRcdFx0XHRcdHRvU2VsZWN0b3IoIGdyb3Vwc1sgaSBdICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdG5ld1NlbGVjdG9yID0gZ3JvdXBzLmpvaW4oIFwiLFwiICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdHB1c2guYXBwbHkoIHJlc3VsdHMsXG5cdFx0XHRcdFx0XHRuZXdDb250ZXh0LnF1ZXJ5U2VsZWN0b3JBbGwoIG5ld1NlbGVjdG9yIClcblx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdHJldHVybiByZXN1bHRzO1xuXHRcdFx0XHR9IGNhdGNoICggcXNhRXJyb3IgKSB7XG5cdFx0XHRcdFx0bm9ubmF0aXZlU2VsZWN0b3JDYWNoZSggc2VsZWN0b3IsIHRydWUgKTtcblx0XHRcdFx0fSBmaW5hbGx5IHtcblx0XHRcdFx0XHRpZiAoIG5pZCA9PT0gZXhwYW5kbyApIHtcblx0XHRcdFx0XHRcdGNvbnRleHQucmVtb3ZlQXR0cmlidXRlKCBcImlkXCIgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyBBbGwgb3RoZXJzXG5cdHJldHVybiBzZWxlY3QoIHNlbGVjdG9yLnJlcGxhY2UoIHJ0cmltLCBcIiQxXCIgKSwgY29udGV4dCwgcmVzdWx0cywgc2VlZCApO1xufVxuXG4vKipcbiAqIENyZWF0ZSBrZXktdmFsdWUgY2FjaGVzIG9mIGxpbWl0ZWQgc2l6ZVxuICogQHJldHVybnMge2Z1bmN0aW9uKHN0cmluZywgb2JqZWN0KX0gUmV0dXJucyB0aGUgT2JqZWN0IGRhdGEgYWZ0ZXIgc3RvcmluZyBpdCBvbiBpdHNlbGYgd2l0aFxuICpcdHByb3BlcnR5IG5hbWUgdGhlIChzcGFjZS1zdWZmaXhlZCkgc3RyaW5nIGFuZCAoaWYgdGhlIGNhY2hlIGlzIGxhcmdlciB0aGFuIEV4cHIuY2FjaGVMZW5ndGgpXG4gKlx0ZGVsZXRpbmcgdGhlIG9sZGVzdCBlbnRyeVxuICovXG5mdW5jdGlvbiBjcmVhdGVDYWNoZSgpIHtcblx0dmFyIGtleXMgPSBbXTtcblxuXHRmdW5jdGlvbiBjYWNoZSgga2V5LCB2YWx1ZSApIHtcblxuXHRcdC8vIFVzZSAoa2V5ICsgXCIgXCIpIHRvIGF2b2lkIGNvbGxpc2lvbiB3aXRoIG5hdGl2ZSBwcm90b3R5cGUgcHJvcGVydGllcyAoc2VlIElzc3VlICMxNTcpXG5cdFx0aWYgKCBrZXlzLnB1c2goIGtleSArIFwiIFwiICkgPiBFeHByLmNhY2hlTGVuZ3RoICkge1xuXG5cdFx0XHQvLyBPbmx5IGtlZXAgdGhlIG1vc3QgcmVjZW50IGVudHJpZXNcblx0XHRcdGRlbGV0ZSBjYWNoZVsga2V5cy5zaGlmdCgpIF07XG5cdFx0fVxuXHRcdHJldHVybiAoIGNhY2hlWyBrZXkgKyBcIiBcIiBdID0gdmFsdWUgKTtcblx0fVxuXHRyZXR1cm4gY2FjaGU7XG59XG5cbi8qKlxuICogTWFyayBhIGZ1bmN0aW9uIGZvciBzcGVjaWFsIHVzZSBieSBTaXp6bGVcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZuIFRoZSBmdW5jdGlvbiB0byBtYXJrXG4gKi9cbmZ1bmN0aW9uIG1hcmtGdW5jdGlvbiggZm4gKSB7XG5cdGZuWyBleHBhbmRvIF0gPSB0cnVlO1xuXHRyZXR1cm4gZm47XG59XG5cbi8qKlxuICogU3VwcG9ydCB0ZXN0aW5nIHVzaW5nIGFuIGVsZW1lbnRcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZuIFBhc3NlZCB0aGUgY3JlYXRlZCBlbGVtZW50IGFuZCByZXR1cm5zIGEgYm9vbGVhbiByZXN1bHRcbiAqL1xuZnVuY3Rpb24gYXNzZXJ0KCBmbiApIHtcblx0dmFyIGVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJmaWVsZHNldFwiICk7XG5cblx0dHJ5IHtcblx0XHRyZXR1cm4gISFmbiggZWwgKTtcblx0fSBjYXRjaCAoIGUgKSB7XG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9IGZpbmFsbHkge1xuXG5cdFx0Ly8gUmVtb3ZlIGZyb20gaXRzIHBhcmVudCBieSBkZWZhdWx0XG5cdFx0aWYgKCBlbC5wYXJlbnROb2RlICkge1xuXHRcdFx0ZWwucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCggZWwgKTtcblx0XHR9XG5cblx0XHQvLyByZWxlYXNlIG1lbW9yeSBpbiBJRVxuXHRcdGVsID0gbnVsbDtcblx0fVxufVxuXG4vKipcbiAqIEFkZHMgdGhlIHNhbWUgaGFuZGxlciBmb3IgYWxsIG9mIHRoZSBzcGVjaWZpZWQgYXR0cnNcbiAqIEBwYXJhbSB7U3RyaW5nfSBhdHRycyBQaXBlLXNlcGFyYXRlZCBsaXN0IG9mIGF0dHJpYnV0ZXNcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGhhbmRsZXIgVGhlIG1ldGhvZCB0aGF0IHdpbGwgYmUgYXBwbGllZFxuICovXG5mdW5jdGlvbiBhZGRIYW5kbGUoIGF0dHJzLCBoYW5kbGVyICkge1xuXHR2YXIgYXJyID0gYXR0cnMuc3BsaXQoIFwifFwiICksXG5cdFx0aSA9IGFyci5sZW5ndGg7XG5cblx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0RXhwci5hdHRySGFuZGxlWyBhcnJbIGkgXSBdID0gaGFuZGxlcjtcblx0fVxufVxuXG4vKipcbiAqIENoZWNrcyBkb2N1bWVudCBvcmRlciBvZiB0d28gc2libGluZ3NcbiAqIEBwYXJhbSB7RWxlbWVudH0gYVxuICogQHBhcmFtIHtFbGVtZW50fSBiXG4gKiBAcmV0dXJucyB7TnVtYmVyfSBSZXR1cm5zIGxlc3MgdGhhbiAwIGlmIGEgcHJlY2VkZXMgYiwgZ3JlYXRlciB0aGFuIDAgaWYgYSBmb2xsb3dzIGJcbiAqL1xuZnVuY3Rpb24gc2libGluZ0NoZWNrKCBhLCBiICkge1xuXHR2YXIgY3VyID0gYiAmJiBhLFxuXHRcdGRpZmYgPSBjdXIgJiYgYS5ub2RlVHlwZSA9PT0gMSAmJiBiLm5vZGVUeXBlID09PSAxICYmXG5cdFx0XHRhLnNvdXJjZUluZGV4IC0gYi5zb3VyY2VJbmRleDtcblxuXHQvLyBVc2UgSUUgc291cmNlSW5kZXggaWYgYXZhaWxhYmxlIG9uIGJvdGggbm9kZXNcblx0aWYgKCBkaWZmICkge1xuXHRcdHJldHVybiBkaWZmO1xuXHR9XG5cblx0Ly8gQ2hlY2sgaWYgYiBmb2xsb3dzIGFcblx0aWYgKCBjdXIgKSB7XG5cdFx0d2hpbGUgKCAoIGN1ciA9IGN1ci5uZXh0U2libGluZyApICkge1xuXHRcdFx0aWYgKCBjdXIgPT09IGIgKSB7XG5cdFx0XHRcdHJldHVybiAtMTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gYSA/IDEgOiAtMTtcbn1cblxuLyoqXG4gKiBSZXR1cm5zIGEgZnVuY3Rpb24gdG8gdXNlIGluIHBzZXVkb3MgZm9yIGlucHV0IHR5cGVzXG4gKiBAcGFyYW0ge1N0cmluZ30gdHlwZVxuICovXG5mdW5jdGlvbiBjcmVhdGVJbnB1dFBzZXVkbyggdHlwZSApIHtcblx0cmV0dXJuIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHZhciBuYW1lID0gZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO1xuXHRcdHJldHVybiBuYW1lID09PSBcImlucHV0XCIgJiYgZWxlbS50eXBlID09PSB0eXBlO1xuXHR9O1xufVxuXG4vKipcbiAqIFJldHVybnMgYSBmdW5jdGlvbiB0byB1c2UgaW4gcHNldWRvcyBmb3IgYnV0dG9uc1xuICogQHBhcmFtIHtTdHJpbmd9IHR5cGVcbiAqL1xuZnVuY3Rpb24gY3JlYXRlQnV0dG9uUHNldWRvKCB0eXBlICkge1xuXHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0dmFyIG5hbWUgPSBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7XG5cdFx0cmV0dXJuICggbmFtZSA9PT0gXCJpbnB1dFwiIHx8IG5hbWUgPT09IFwiYnV0dG9uXCIgKSAmJiBlbGVtLnR5cGUgPT09IHR5cGU7XG5cdH07XG59XG5cbi8qKlxuICogUmV0dXJucyBhIGZ1bmN0aW9uIHRvIHVzZSBpbiBwc2V1ZG9zIGZvciA6ZW5hYmxlZC86ZGlzYWJsZWRcbiAqIEBwYXJhbSB7Qm9vbGVhbn0gZGlzYWJsZWQgdHJ1ZSBmb3IgOmRpc2FibGVkOyBmYWxzZSBmb3IgOmVuYWJsZWRcbiAqL1xuZnVuY3Rpb24gY3JlYXRlRGlzYWJsZWRQc2V1ZG8oIGRpc2FibGVkICkge1xuXG5cdC8vIEtub3duIDpkaXNhYmxlZCBmYWxzZSBwb3NpdGl2ZXM6IGZpZWxkc2V0W2Rpc2FibGVkXSA+IGxlZ2VuZDpudGgtb2YtdHlwZShuKzIpIDpjYW4tZGlzYWJsZVxuXHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cblx0XHQvLyBPbmx5IGNlcnRhaW4gZWxlbWVudHMgY2FuIG1hdGNoIDplbmFibGVkIG9yIDpkaXNhYmxlZFxuXHRcdC8vIGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvbXVsdGlwYWdlL3NjcmlwdGluZy5odG1sI3NlbGVjdG9yLWVuYWJsZWRcblx0XHQvLyBodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnL211bHRpcGFnZS9zY3JpcHRpbmcuaHRtbCNzZWxlY3Rvci1kaXNhYmxlZFxuXHRcdGlmICggXCJmb3JtXCIgaW4gZWxlbSApIHtcblxuXHRcdFx0Ly8gQ2hlY2sgZm9yIGluaGVyaXRlZCBkaXNhYmxlZG5lc3Mgb24gcmVsZXZhbnQgbm9uLWRpc2FibGVkIGVsZW1lbnRzOlxuXHRcdFx0Ly8gKiBsaXN0ZWQgZm9ybS1hc3NvY2lhdGVkIGVsZW1lbnRzIGluIGEgZGlzYWJsZWQgZmllbGRzZXRcblx0XHRcdC8vICAgaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2UvZm9ybXMuaHRtbCNjYXRlZ29yeS1saXN0ZWRcblx0XHRcdC8vICAgaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2UvZm9ybXMuaHRtbCNjb25jZXB0LWZlLWRpc2FibGVkXG5cdFx0XHQvLyAqIG9wdGlvbiBlbGVtZW50cyBpbiBhIGRpc2FibGVkIG9wdGdyb3VwXG5cdFx0XHQvLyAgIGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvbXVsdGlwYWdlL2Zvcm1zLmh0bWwjY29uY2VwdC1vcHRpb24tZGlzYWJsZWRcblx0XHRcdC8vIEFsbCBzdWNoIGVsZW1lbnRzIGhhdmUgYSBcImZvcm1cIiBwcm9wZXJ0eS5cblx0XHRcdGlmICggZWxlbS5wYXJlbnROb2RlICYmIGVsZW0uZGlzYWJsZWQgPT09IGZhbHNlICkge1xuXG5cdFx0XHRcdC8vIE9wdGlvbiBlbGVtZW50cyBkZWZlciB0byBhIHBhcmVudCBvcHRncm91cCBpZiBwcmVzZW50XG5cdFx0XHRcdGlmICggXCJsYWJlbFwiIGluIGVsZW0gKSB7XG5cdFx0XHRcdFx0aWYgKCBcImxhYmVsXCIgaW4gZWxlbS5wYXJlbnROb2RlICkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIGVsZW0ucGFyZW50Tm9kZS5kaXNhYmxlZCA9PT0gZGlzYWJsZWQ7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdHJldHVybiBlbGVtLmRpc2FibGVkID09PSBkaXNhYmxlZDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA2IC0gMTFcblx0XHRcdFx0Ly8gVXNlIHRoZSBpc0Rpc2FibGVkIHNob3J0Y3V0IHByb3BlcnR5IHRvIGNoZWNrIGZvciBkaXNhYmxlZCBmaWVsZHNldCBhbmNlc3RvcnNcblx0XHRcdFx0cmV0dXJuIGVsZW0uaXNEaXNhYmxlZCA9PT0gZGlzYWJsZWQgfHxcblxuXHRcdFx0XHRcdC8vIFdoZXJlIHRoZXJlIGlzIG5vIGlzRGlzYWJsZWQsIGNoZWNrIG1hbnVhbGx5XG5cdFx0XHRcdFx0LyoganNoaW50IC1XMDE4ICovXG5cdFx0XHRcdFx0ZWxlbS5pc0Rpc2FibGVkICE9PSAhZGlzYWJsZWQgJiZcblx0XHRcdFx0XHRpbkRpc2FibGVkRmllbGRzZXQoIGVsZW0gKSA9PT0gZGlzYWJsZWQ7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBlbGVtLmRpc2FibGVkID09PSBkaXNhYmxlZDtcblxuXHRcdC8vIFRyeSB0byB3aW5ub3cgb3V0IGVsZW1lbnRzIHRoYXQgY2FuJ3QgYmUgZGlzYWJsZWQgYmVmb3JlIHRydXN0aW5nIHRoZSBkaXNhYmxlZCBwcm9wZXJ0eS5cblx0XHQvLyBTb21lIHZpY3RpbXMgZ2V0IGNhdWdodCBpbiBvdXIgbmV0IChsYWJlbCwgbGVnZW5kLCBtZW51LCB0cmFjayksIGJ1dCBpdCBzaG91bGRuJ3Rcblx0XHQvLyBldmVuIGV4aXN0IG9uIHRoZW0sIGxldCBhbG9uZSBoYXZlIGEgYm9vbGVhbiB2YWx1ZS5cblx0XHR9IGVsc2UgaWYgKCBcImxhYmVsXCIgaW4gZWxlbSApIHtcblx0XHRcdHJldHVybiBlbGVtLmRpc2FibGVkID09PSBkaXNhYmxlZDtcblx0XHR9XG5cblx0XHQvLyBSZW1haW5pbmcgZWxlbWVudHMgYXJlIG5laXRoZXIgOmVuYWJsZWQgbm9yIDpkaXNhYmxlZFxuXHRcdHJldHVybiBmYWxzZTtcblx0fTtcbn1cblxuLyoqXG4gKiBSZXR1cm5zIGEgZnVuY3Rpb24gdG8gdXNlIGluIHBzZXVkb3MgZm9yIHBvc2l0aW9uYWxzXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmblxuICovXG5mdW5jdGlvbiBjcmVhdGVQb3NpdGlvbmFsUHNldWRvKCBmbiApIHtcblx0cmV0dXJuIG1hcmtGdW5jdGlvbiggZnVuY3Rpb24oIGFyZ3VtZW50ICkge1xuXHRcdGFyZ3VtZW50ID0gK2FyZ3VtZW50O1xuXHRcdHJldHVybiBtYXJrRnVuY3Rpb24oIGZ1bmN0aW9uKCBzZWVkLCBtYXRjaGVzICkge1xuXHRcdFx0dmFyIGosXG5cdFx0XHRcdG1hdGNoSW5kZXhlcyA9IGZuKCBbXSwgc2VlZC5sZW5ndGgsIGFyZ3VtZW50ICksXG5cdFx0XHRcdGkgPSBtYXRjaEluZGV4ZXMubGVuZ3RoO1xuXG5cdFx0XHQvLyBNYXRjaCBlbGVtZW50cyBmb3VuZCBhdCB0aGUgc3BlY2lmaWVkIGluZGV4ZXNcblx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRpZiAoIHNlZWRbICggaiA9IG1hdGNoSW5kZXhlc1sgaSBdICkgXSApIHtcblx0XHRcdFx0XHRzZWVkWyBqIF0gPSAhKCBtYXRjaGVzWyBqIF0gPSBzZWVkWyBqIF0gKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0gKTtcblx0fSApO1xufVxuXG4vKipcbiAqIENoZWNrcyBhIG5vZGUgZm9yIHZhbGlkaXR5IGFzIGEgU2l6emxlIGNvbnRleHRcbiAqIEBwYXJhbSB7RWxlbWVudHxPYmplY3Q9fSBjb250ZXh0XG4gKiBAcmV0dXJucyB7RWxlbWVudHxPYmplY3R8Qm9vbGVhbn0gVGhlIGlucHV0IG5vZGUgaWYgYWNjZXB0YWJsZSwgb3RoZXJ3aXNlIGEgZmFsc3kgdmFsdWVcbiAqL1xuZnVuY3Rpb24gdGVzdENvbnRleHQoIGNvbnRleHQgKSB7XG5cdHJldHVybiBjb250ZXh0ICYmIHR5cGVvZiBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lICE9PSBcInVuZGVmaW5lZFwiICYmIGNvbnRleHQ7XG59XG5cbi8vIEV4cG9zZSBzdXBwb3J0IHZhcnMgZm9yIGNvbnZlbmllbmNlXG5zdXBwb3J0ID0gU2l6emxlLnN1cHBvcnQgPSB7fTtcblxuLyoqXG4gKiBEZXRlY3RzIFhNTCBub2Rlc1xuICogQHBhcmFtIHtFbGVtZW50fE9iamVjdH0gZWxlbSBBbiBlbGVtZW50IG9yIGEgZG9jdW1lbnRcbiAqIEByZXR1cm5zIHtCb29sZWFufSBUcnVlIGlmZiBlbGVtIGlzIGEgbm9uLUhUTUwgWE1MIG5vZGVcbiAqL1xuaXNYTUwgPSBTaXp6bGUuaXNYTUwgPSBmdW5jdGlvbiggZWxlbSApIHtcblx0dmFyIG5hbWVzcGFjZSA9IGVsZW0gJiYgZWxlbS5uYW1lc3BhY2VVUkksXG5cdFx0ZG9jRWxlbSA9IGVsZW0gJiYgKCBlbGVtLm93bmVyRG9jdW1lbnQgfHwgZWxlbSApLmRvY3VtZW50RWxlbWVudDtcblxuXHQvLyBTdXBwb3J0OiBJRSA8PThcblx0Ly8gQXNzdW1lIEhUTUwgd2hlbiBkb2N1bWVudEVsZW1lbnQgZG9lc24ndCB5ZXQgZXhpc3QsIHN1Y2ggYXMgaW5zaWRlIGxvYWRpbmcgaWZyYW1lc1xuXHQvLyBodHRwczovL2J1Z3MuanF1ZXJ5LmNvbS90aWNrZXQvNDgzM1xuXHRyZXR1cm4gIXJodG1sLnRlc3QoIG5hbWVzcGFjZSB8fCBkb2NFbGVtICYmIGRvY0VsZW0ubm9kZU5hbWUgfHwgXCJIVE1MXCIgKTtcbn07XG5cbi8qKlxuICogU2V0cyBkb2N1bWVudC1yZWxhdGVkIHZhcmlhYmxlcyBvbmNlIGJhc2VkIG9uIHRoZSBjdXJyZW50IGRvY3VtZW50XG4gKiBAcGFyYW0ge0VsZW1lbnR8T2JqZWN0fSBbZG9jXSBBbiBlbGVtZW50IG9yIGRvY3VtZW50IG9iamVjdCB0byB1c2UgdG8gc2V0IHRoZSBkb2N1bWVudFxuICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyB0aGUgY3VycmVudCBkb2N1bWVudFxuICovXG5zZXREb2N1bWVudCA9IFNpenpsZS5zZXREb2N1bWVudCA9IGZ1bmN0aW9uKCBub2RlICkge1xuXHR2YXIgaGFzQ29tcGFyZSwgc3ViV2luZG93LFxuXHRcdGRvYyA9IG5vZGUgPyBub2RlLm93bmVyRG9jdW1lbnQgfHwgbm9kZSA6IHByZWZlcnJlZERvYztcblxuXHQvLyBSZXR1cm4gZWFybHkgaWYgZG9jIGlzIGludmFsaWQgb3IgYWxyZWFkeSBzZWxlY3RlZFxuXHQvLyBTdXBwb3J0OiBJRSAxMSssIEVkZ2UgMTcgLSAxOCtcblx0Ly8gSUUvRWRnZSBzb21ldGltZXMgdGhyb3cgYSBcIlBlcm1pc3Npb24gZGVuaWVkXCIgZXJyb3Igd2hlbiBzdHJpY3QtY29tcGFyaW5nXG5cdC8vIHR3byBkb2N1bWVudHM7IHNoYWxsb3cgY29tcGFyaXNvbnMgd29yay5cblx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVxZXFlcVxuXHRpZiAoIGRvYyA9PSBkb2N1bWVudCB8fCBkb2Mubm9kZVR5cGUgIT09IDkgfHwgIWRvYy5kb2N1bWVudEVsZW1lbnQgKSB7XG5cdFx0cmV0dXJuIGRvY3VtZW50O1xuXHR9XG5cblx0Ly8gVXBkYXRlIGdsb2JhbCB2YXJpYWJsZXNcblx0ZG9jdW1lbnQgPSBkb2M7XG5cdGRvY0VsZW0gPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XG5cdGRvY3VtZW50SXNIVE1MID0gIWlzWE1MKCBkb2N1bWVudCApO1xuXG5cdC8vIFN1cHBvcnQ6IElFIDkgLSAxMSssIEVkZ2UgMTIgLSAxOCtcblx0Ly8gQWNjZXNzaW5nIGlmcmFtZSBkb2N1bWVudHMgYWZ0ZXIgdW5sb2FkIHRocm93cyBcInBlcm1pc3Npb24gZGVuaWVkXCIgZXJyb3JzIChqUXVlcnkgIzEzOTM2KVxuXHQvLyBTdXBwb3J0OiBJRSAxMSssIEVkZ2UgMTcgLSAxOCtcblx0Ly8gSUUvRWRnZSBzb21ldGltZXMgdGhyb3cgYSBcIlBlcm1pc3Npb24gZGVuaWVkXCIgZXJyb3Igd2hlbiBzdHJpY3QtY29tcGFyaW5nXG5cdC8vIHR3byBkb2N1bWVudHM7IHNoYWxsb3cgY29tcGFyaXNvbnMgd29yay5cblx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVxZXFlcVxuXHRpZiAoIHByZWZlcnJlZERvYyAhPSBkb2N1bWVudCAmJlxuXHRcdCggc3ViV2luZG93ID0gZG9jdW1lbnQuZGVmYXVsdFZpZXcgKSAmJiBzdWJXaW5kb3cudG9wICE9PSBzdWJXaW5kb3cgKSB7XG5cblx0XHQvLyBTdXBwb3J0OiBJRSAxMSwgRWRnZVxuXHRcdGlmICggc3ViV2luZG93LmFkZEV2ZW50TGlzdGVuZXIgKSB7XG5cdFx0XHRzdWJXaW5kb3cuYWRkRXZlbnRMaXN0ZW5lciggXCJ1bmxvYWRcIiwgdW5sb2FkSGFuZGxlciwgZmFsc2UgKTtcblxuXHRcdC8vIFN1cHBvcnQ6IElFIDkgLSAxMCBvbmx5XG5cdFx0fSBlbHNlIGlmICggc3ViV2luZG93LmF0dGFjaEV2ZW50ICkge1xuXHRcdFx0c3ViV2luZG93LmF0dGFjaEV2ZW50KCBcIm9udW5sb2FkXCIsIHVubG9hZEhhbmRsZXIgKTtcblx0XHR9XG5cdH1cblxuXHQvLyBTdXBwb3J0OiBJRSA4IC0gMTErLCBFZGdlIDEyIC0gMTgrLCBDaHJvbWUgPD0xNiAtIDI1IG9ubHksIEZpcmVmb3ggPD0zLjYgLSAzMSBvbmx5LFxuXHQvLyBTYWZhcmkgNCAtIDUgb25seSwgT3BlcmEgPD0xMS42IC0gMTIueCBvbmx5XG5cdC8vIElFL0VkZ2UgJiBvbGRlciBicm93c2VycyBkb24ndCBzdXBwb3J0IHRoZSA6c2NvcGUgcHNldWRvLWNsYXNzLlxuXHQvLyBTdXBwb3J0OiBTYWZhcmkgNi4wIG9ubHlcblx0Ly8gU2FmYXJpIDYuMCBzdXBwb3J0cyA6c2NvcGUgYnV0IGl0J3MgYW4gYWxpYXMgb2YgOnJvb3QgdGhlcmUuXG5cdHN1cHBvcnQuc2NvcGUgPSBhc3NlcnQoIGZ1bmN0aW9uKCBlbCApIHtcblx0XHRkb2NFbGVtLmFwcGVuZENoaWxkKCBlbCApLmFwcGVuZENoaWxkKCBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImRpdlwiICkgKTtcblx0XHRyZXR1cm4gdHlwZW9mIGVsLnF1ZXJ5U2VsZWN0b3JBbGwgIT09IFwidW5kZWZpbmVkXCIgJiZcblx0XHRcdCFlbC5xdWVyeVNlbGVjdG9yQWxsKCBcIjpzY29wZSBmaWVsZHNldCBkaXZcIiApLmxlbmd0aDtcblx0fSApO1xuXG5cdC8qIEF0dHJpYnV0ZXNcblx0LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXG5cdC8vIFN1cHBvcnQ6IElFPDhcblx0Ly8gVmVyaWZ5IHRoYXQgZ2V0QXR0cmlidXRlIHJlYWxseSByZXR1cm5zIGF0dHJpYnV0ZXMgYW5kIG5vdCBwcm9wZXJ0aWVzXG5cdC8vIChleGNlcHRpbmcgSUU4IGJvb2xlYW5zKVxuXHRzdXBwb3J0LmF0dHJpYnV0ZXMgPSBhc3NlcnQoIGZ1bmN0aW9uKCBlbCApIHtcblx0XHRlbC5jbGFzc05hbWUgPSBcImlcIjtcblx0XHRyZXR1cm4gIWVsLmdldEF0dHJpYnV0ZSggXCJjbGFzc05hbWVcIiApO1xuXHR9ICk7XG5cblx0LyogZ2V0RWxlbWVudChzKUJ5KlxuXHQtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cblx0Ly8gQ2hlY2sgaWYgZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCIqXCIpIHJldHVybnMgb25seSBlbGVtZW50c1xuXHRzdXBwb3J0LmdldEVsZW1lbnRzQnlUYWdOYW1lID0gYXNzZXJ0KCBmdW5jdGlvbiggZWwgKSB7XG5cdFx0ZWwuYXBwZW5kQ2hpbGQoIGRvY3VtZW50LmNyZWF0ZUNvbW1lbnQoIFwiXCIgKSApO1xuXHRcdHJldHVybiAhZWwuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIFwiKlwiICkubGVuZ3RoO1xuXHR9ICk7XG5cblx0Ly8gU3VwcG9ydDogSUU8OVxuXHRzdXBwb3J0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUgPSBybmF0aXZlLnRlc3QoIGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUgKTtcblxuXHQvLyBTdXBwb3J0OiBJRTwxMFxuXHQvLyBDaGVjayBpZiBnZXRFbGVtZW50QnlJZCByZXR1cm5zIGVsZW1lbnRzIGJ5IG5hbWVcblx0Ly8gVGhlIGJyb2tlbiBnZXRFbGVtZW50QnlJZCBtZXRob2RzIGRvbid0IHBpY2sgdXAgcHJvZ3JhbW1hdGljYWxseS1zZXQgbmFtZXMsXG5cdC8vIHNvIHVzZSBhIHJvdW5kYWJvdXQgZ2V0RWxlbWVudHNCeU5hbWUgdGVzdFxuXHRzdXBwb3J0LmdldEJ5SWQgPSBhc3NlcnQoIGZ1bmN0aW9uKCBlbCApIHtcblx0XHRkb2NFbGVtLmFwcGVuZENoaWxkKCBlbCApLmlkID0gZXhwYW5kbztcblx0XHRyZXR1cm4gIWRvY3VtZW50LmdldEVsZW1lbnRzQnlOYW1lIHx8ICFkb2N1bWVudC5nZXRFbGVtZW50c0J5TmFtZSggZXhwYW5kbyApLmxlbmd0aDtcblx0fSApO1xuXG5cdC8vIElEIGZpbHRlciBhbmQgZmluZFxuXHRpZiAoIHN1cHBvcnQuZ2V0QnlJZCApIHtcblx0XHRFeHByLmZpbHRlclsgXCJJRFwiIF0gPSBmdW5jdGlvbiggaWQgKSB7XG5cdFx0XHR2YXIgYXR0cklkID0gaWQucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKTtcblx0XHRcdHJldHVybiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdFx0cmV0dXJuIGVsZW0uZ2V0QXR0cmlidXRlKCBcImlkXCIgKSA9PT0gYXR0cklkO1xuXHRcdFx0fTtcblx0XHR9O1xuXHRcdEV4cHIuZmluZFsgXCJJRFwiIF0gPSBmdW5jdGlvbiggaWQsIGNvbnRleHQgKSB7XG5cdFx0XHRpZiAoIHR5cGVvZiBjb250ZXh0LmdldEVsZW1lbnRCeUlkICE9PSBcInVuZGVmaW5lZFwiICYmIGRvY3VtZW50SXNIVE1MICkge1xuXHRcdFx0XHR2YXIgZWxlbSA9IGNvbnRleHQuZ2V0RWxlbWVudEJ5SWQoIGlkICk7XG5cdFx0XHRcdHJldHVybiBlbGVtID8gWyBlbGVtIF0gOiBbXTtcblx0XHRcdH1cblx0XHR9O1xuXHR9IGVsc2Uge1xuXHRcdEV4cHIuZmlsdGVyWyBcIklEXCIgXSA9ICBmdW5jdGlvbiggaWQgKSB7XG5cdFx0XHR2YXIgYXR0cklkID0gaWQucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKTtcblx0XHRcdHJldHVybiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdFx0dmFyIG5vZGUgPSB0eXBlb2YgZWxlbS5nZXRBdHRyaWJ1dGVOb2RlICE9PSBcInVuZGVmaW5lZFwiICYmXG5cdFx0XHRcdFx0ZWxlbS5nZXRBdHRyaWJ1dGVOb2RlKCBcImlkXCIgKTtcblx0XHRcdFx0cmV0dXJuIG5vZGUgJiYgbm9kZS52YWx1ZSA9PT0gYXR0cklkO1xuXHRcdFx0fTtcblx0XHR9O1xuXG5cdFx0Ly8gU3VwcG9ydDogSUUgNiAtIDcgb25seVxuXHRcdC8vIGdldEVsZW1lbnRCeUlkIGlzIG5vdCByZWxpYWJsZSBhcyBhIGZpbmQgc2hvcnRjdXRcblx0XHRFeHByLmZpbmRbIFwiSURcIiBdID0gZnVuY3Rpb24oIGlkLCBjb250ZXh0ICkge1xuXHRcdFx0aWYgKCB0eXBlb2YgY29udGV4dC5nZXRFbGVtZW50QnlJZCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBkb2N1bWVudElzSFRNTCApIHtcblx0XHRcdFx0dmFyIG5vZGUsIGksIGVsZW1zLFxuXHRcdFx0XHRcdGVsZW0gPSBjb250ZXh0LmdldEVsZW1lbnRCeUlkKCBpZCApO1xuXG5cdFx0XHRcdGlmICggZWxlbSApIHtcblxuXHRcdFx0XHRcdC8vIFZlcmlmeSB0aGUgaWQgYXR0cmlidXRlXG5cdFx0XHRcdFx0bm9kZSA9IGVsZW0uZ2V0QXR0cmlidXRlTm9kZSggXCJpZFwiICk7XG5cdFx0XHRcdFx0aWYgKCBub2RlICYmIG5vZGUudmFsdWUgPT09IGlkICkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIFsgZWxlbSBdO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdC8vIEZhbGwgYmFjayBvbiBnZXRFbGVtZW50c0J5TmFtZVxuXHRcdFx0XHRcdGVsZW1zID0gY29udGV4dC5nZXRFbGVtZW50c0J5TmFtZSggaWQgKTtcblx0XHRcdFx0XHRpID0gMDtcblx0XHRcdFx0XHR3aGlsZSAoICggZWxlbSA9IGVsZW1zWyBpKysgXSApICkge1xuXHRcdFx0XHRcdFx0bm9kZSA9IGVsZW0uZ2V0QXR0cmlidXRlTm9kZSggXCJpZFwiICk7XG5cdFx0XHRcdFx0XHRpZiAoIG5vZGUgJiYgbm9kZS52YWx1ZSA9PT0gaWQgKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiBbIGVsZW0gXTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gW107XG5cdFx0XHR9XG5cdFx0fTtcblx0fVxuXG5cdC8vIFRhZ1xuXHRFeHByLmZpbmRbIFwiVEFHXCIgXSA9IHN1cHBvcnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUgP1xuXHRcdGZ1bmN0aW9uKCB0YWcsIGNvbnRleHQgKSB7XG5cdFx0XHRpZiAoIHR5cGVvZiBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lICE9PSBcInVuZGVmaW5lZFwiICkge1xuXHRcdFx0XHRyZXR1cm4gY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSggdGFnICk7XG5cblx0XHRcdC8vIERvY3VtZW50RnJhZ21lbnQgbm9kZXMgZG9uJ3QgaGF2ZSBnRUJUTlxuXHRcdFx0fSBlbHNlIGlmICggc3VwcG9ydC5xc2EgKSB7XG5cdFx0XHRcdHJldHVybiBjb250ZXh0LnF1ZXJ5U2VsZWN0b3JBbGwoIHRhZyApO1xuXHRcdFx0fVxuXHRcdH0gOlxuXG5cdFx0ZnVuY3Rpb24oIHRhZywgY29udGV4dCApIHtcblx0XHRcdHZhciBlbGVtLFxuXHRcdFx0XHR0bXAgPSBbXSxcblx0XHRcdFx0aSA9IDAsXG5cblx0XHRcdFx0Ly8gQnkgaGFwcHkgY29pbmNpZGVuY2UsIGEgKGJyb2tlbikgZ0VCVE4gYXBwZWFycyBvbiBEb2N1bWVudEZyYWdtZW50IG5vZGVzIHRvb1xuXHRcdFx0XHRyZXN1bHRzID0gY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSggdGFnICk7XG5cblx0XHRcdC8vIEZpbHRlciBvdXQgcG9zc2libGUgY29tbWVudHNcblx0XHRcdGlmICggdGFnID09PSBcIipcIiApIHtcblx0XHRcdFx0d2hpbGUgKCAoIGVsZW0gPSByZXN1bHRzWyBpKysgXSApICkge1xuXHRcdFx0XHRcdGlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSApIHtcblx0XHRcdFx0XHRcdHRtcC5wdXNoKCBlbGVtICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIHRtcDtcblx0XHRcdH1cblx0XHRcdHJldHVybiByZXN1bHRzO1xuXHRcdH07XG5cblx0Ly8gQ2xhc3Ncblx0RXhwci5maW5kWyBcIkNMQVNTXCIgXSA9IHN1cHBvcnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSAmJiBmdW5jdGlvbiggY2xhc3NOYW1lLCBjb250ZXh0ICkge1xuXHRcdGlmICggdHlwZW9mIGNvbnRleHQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSAhPT0gXCJ1bmRlZmluZWRcIiAmJiBkb2N1bWVudElzSFRNTCApIHtcblx0XHRcdHJldHVybiBjb250ZXh0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoIGNsYXNzTmFtZSApO1xuXHRcdH1cblx0fTtcblxuXHQvKiBRU0EvbWF0Y2hlc1NlbGVjdG9yXG5cdC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuXHQvLyBRU0EgYW5kIG1hdGNoZXNTZWxlY3RvciBzdXBwb3J0XG5cblx0Ly8gbWF0Y2hlc1NlbGVjdG9yKDphY3RpdmUpIHJlcG9ydHMgZmFsc2Ugd2hlbiB0cnVlIChJRTkvT3BlcmEgMTEuNSlcblx0cmJ1Z2d5TWF0Y2hlcyA9IFtdO1xuXG5cdC8vIHFTYSg6Zm9jdXMpIHJlcG9ydHMgZmFsc2Ugd2hlbiB0cnVlIChDaHJvbWUgMjEpXG5cdC8vIFdlIGFsbG93IHRoaXMgYmVjYXVzZSBvZiBhIGJ1ZyBpbiBJRTgvOSB0aGF0IHRocm93cyBhbiBlcnJvclxuXHQvLyB3aGVuZXZlciBgZG9jdW1lbnQuYWN0aXZlRWxlbWVudGAgaXMgYWNjZXNzZWQgb24gYW4gaWZyYW1lXG5cdC8vIFNvLCB3ZSBhbGxvdyA6Zm9jdXMgdG8gcGFzcyB0aHJvdWdoIFFTQSBhbGwgdGhlIHRpbWUgdG8gYXZvaWQgdGhlIElFIGVycm9yXG5cdC8vIFNlZSBodHRwczovL2J1Z3MuanF1ZXJ5LmNvbS90aWNrZXQvMTMzNzhcblx0cmJ1Z2d5UVNBID0gW107XG5cblx0aWYgKCAoIHN1cHBvcnQucXNhID0gcm5hdGl2ZS50ZXN0KCBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsICkgKSApIHtcblxuXHRcdC8vIEJ1aWxkIFFTQSByZWdleFxuXHRcdC8vIFJlZ2V4IHN0cmF0ZWd5IGFkb3B0ZWQgZnJvbSBEaWVnbyBQZXJpbmlcblx0XHRhc3NlcnQoIGZ1bmN0aW9uKCBlbCApIHtcblxuXHRcdFx0dmFyIGlucHV0O1xuXG5cdFx0XHQvLyBTZWxlY3QgaXMgc2V0IHRvIGVtcHR5IHN0cmluZyBvbiBwdXJwb3NlXG5cdFx0XHQvLyBUaGlzIGlzIHRvIHRlc3QgSUUncyB0cmVhdG1lbnQgb2Ygbm90IGV4cGxpY2l0bHlcblx0XHRcdC8vIHNldHRpbmcgYSBib29sZWFuIGNvbnRlbnQgYXR0cmlidXRlLFxuXHRcdFx0Ly8gc2luY2UgaXRzIHByZXNlbmNlIHNob3VsZCBiZSBlbm91Z2hcblx0XHRcdC8vIGh0dHBzOi8vYnVncy5qcXVlcnkuY29tL3RpY2tldC8xMjM1OVxuXHRcdFx0ZG9jRWxlbS5hcHBlbmRDaGlsZCggZWwgKS5pbm5lckhUTUwgPSBcIjxhIGlkPSdcIiArIGV4cGFuZG8gKyBcIic+PC9hPlwiICtcblx0XHRcdFx0XCI8c2VsZWN0IGlkPSdcIiArIGV4cGFuZG8gKyBcIi1cXHJcXFxcJyBtc2FsbG93Y2FwdHVyZT0nJz5cIiArXG5cdFx0XHRcdFwiPG9wdGlvbiBzZWxlY3RlZD0nJz48L29wdGlvbj48L3NlbGVjdD5cIjtcblxuXHRcdFx0Ly8gU3VwcG9ydDogSUU4LCBPcGVyYSAxMS0xMi4xNlxuXHRcdFx0Ly8gTm90aGluZyBzaG91bGQgYmUgc2VsZWN0ZWQgd2hlbiBlbXB0eSBzdHJpbmdzIGZvbGxvdyBePSBvciAkPSBvciAqPVxuXHRcdFx0Ly8gVGhlIHRlc3QgYXR0cmlidXRlIG11c3QgYmUgdW5rbm93biBpbiBPcGVyYSBidXQgXCJzYWZlXCIgZm9yIFdpblJUXG5cdFx0XHQvLyBodHRwczovL21zZG4ubWljcm9zb2Z0LmNvbS9lbi11cy9saWJyYXJ5L2llL2hoNDY1Mzg4LmFzcHgjYXR0cmlidXRlX3NlY3Rpb25cblx0XHRcdGlmICggZWwucXVlcnlTZWxlY3RvckFsbCggXCJbbXNhbGxvd2NhcHR1cmVePScnXVwiICkubGVuZ3RoICkge1xuXHRcdFx0XHRyYnVnZ3lRU0EucHVzaCggXCJbKl4kXT1cIiArIHdoaXRlc3BhY2UgKyBcIiooPzonJ3xcXFwiXFxcIilcIiApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTdXBwb3J0OiBJRThcblx0XHRcdC8vIEJvb2xlYW4gYXR0cmlidXRlcyBhbmQgXCJ2YWx1ZVwiIGFyZSBub3QgdHJlYXRlZCBjb3JyZWN0bHlcblx0XHRcdGlmICggIWVsLnF1ZXJ5U2VsZWN0b3JBbGwoIFwiW3NlbGVjdGVkXVwiICkubGVuZ3RoICkge1xuXHRcdFx0XHRyYnVnZ3lRU0EucHVzaCggXCJcXFxcW1wiICsgd2hpdGVzcGFjZSArIFwiKig/OnZhbHVlfFwiICsgYm9vbGVhbnMgKyBcIilcIiApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTdXBwb3J0OiBDaHJvbWU8MjksIEFuZHJvaWQ8NC40LCBTYWZhcmk8Ny4wKywgaU9TPDcuMCssIFBoYW50b21KUzwxLjkuOCtcblx0XHRcdGlmICggIWVsLnF1ZXJ5U2VsZWN0b3JBbGwoIFwiW2lkfj1cIiArIGV4cGFuZG8gKyBcIi1dXCIgKS5sZW5ndGggKSB7XG5cdFx0XHRcdHJidWdneVFTQS5wdXNoKCBcIn49XCIgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU3VwcG9ydDogSUUgMTErLCBFZGdlIDE1IC0gMTgrXG5cdFx0XHQvLyBJRSAxMS9FZGdlIGRvbid0IGZpbmQgZWxlbWVudHMgb24gYSBgW25hbWU9JyddYCBxdWVyeSBpbiBzb21lIGNhc2VzLlxuXHRcdFx0Ly8gQWRkaW5nIGEgdGVtcG9yYXJ5IGF0dHJpYnV0ZSB0byB0aGUgZG9jdW1lbnQgYmVmb3JlIHRoZSBzZWxlY3Rpb24gd29ya3Ncblx0XHRcdC8vIGFyb3VuZCB0aGUgaXNzdWUuXG5cdFx0XHQvLyBJbnRlcmVzdGluZ2x5LCBJRSAxMCAmIG9sZGVyIGRvbid0IHNlZW0gdG8gaGF2ZSB0aGUgaXNzdWUuXG5cdFx0XHRpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiaW5wdXRcIiApO1xuXHRcdFx0aW5wdXQuc2V0QXR0cmlidXRlKCBcIm5hbWVcIiwgXCJcIiApO1xuXHRcdFx0ZWwuYXBwZW5kQ2hpbGQoIGlucHV0ICk7XG5cdFx0XHRpZiAoICFlbC5xdWVyeVNlbGVjdG9yQWxsKCBcIltuYW1lPScnXVwiICkubGVuZ3RoICkge1xuXHRcdFx0XHRyYnVnZ3lRU0EucHVzaCggXCJcXFxcW1wiICsgd2hpdGVzcGFjZSArIFwiKm5hbWVcIiArIHdoaXRlc3BhY2UgKyBcIio9XCIgK1xuXHRcdFx0XHRcdHdoaXRlc3BhY2UgKyBcIiooPzonJ3xcXFwiXFxcIilcIiApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBXZWJraXQvT3BlcmEgLSA6Y2hlY2tlZCBzaG91bGQgcmV0dXJuIHNlbGVjdGVkIG9wdGlvbiBlbGVtZW50c1xuXHRcdFx0Ly8gaHR0cDovL3d3dy53My5vcmcvVFIvMjAxMS9SRUMtY3NzMy1zZWxlY3RvcnMtMjAxMTA5MjkvI2NoZWNrZWRcblx0XHRcdC8vIElFOCB0aHJvd3MgZXJyb3IgaGVyZSBhbmQgd2lsbCBub3Qgc2VlIGxhdGVyIHRlc3RzXG5cdFx0XHRpZiAoICFlbC5xdWVyeVNlbGVjdG9yQWxsKCBcIjpjaGVja2VkXCIgKS5sZW5ndGggKSB7XG5cdFx0XHRcdHJidWdneVFTQS5wdXNoKCBcIjpjaGVja2VkXCIgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU3VwcG9ydDogU2FmYXJpIDgrLCBpT1MgOCtcblx0XHRcdC8vIGh0dHBzOi8vYnVncy53ZWJraXQub3JnL3Nob3dfYnVnLmNnaT9pZD0xMzY4NTFcblx0XHRcdC8vIEluLXBhZ2UgYHNlbGVjdG9yI2lkIHNpYmxpbmctY29tYmluYXRvciBzZWxlY3RvcmAgZmFpbHNcblx0XHRcdGlmICggIWVsLnF1ZXJ5U2VsZWN0b3JBbGwoIFwiYSNcIiArIGV4cGFuZG8gKyBcIisqXCIgKS5sZW5ndGggKSB7XG5cdFx0XHRcdHJidWdneVFTQS5wdXNoKCBcIi4jLitbK35dXCIgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU3VwcG9ydDogRmlyZWZveCA8PTMuNiAtIDUgb25seVxuXHRcdFx0Ly8gT2xkIEZpcmVmb3ggZG9lc24ndCB0aHJvdyBvbiBhIGJhZGx5LWVzY2FwZWQgaWRlbnRpZmllci5cblx0XHRcdGVsLnF1ZXJ5U2VsZWN0b3JBbGwoIFwiXFxcXFxcZlwiICk7XG5cdFx0XHRyYnVnZ3lRU0EucHVzaCggXCJbXFxcXHJcXFxcblxcXFxmXVwiICk7XG5cdFx0fSApO1xuXG5cdFx0YXNzZXJ0KCBmdW5jdGlvbiggZWwgKSB7XG5cdFx0XHRlbC5pbm5lckhUTUwgPSBcIjxhIGhyZWY9JycgZGlzYWJsZWQ9J2Rpc2FibGVkJz48L2E+XCIgK1xuXHRcdFx0XHRcIjxzZWxlY3QgZGlzYWJsZWQ9J2Rpc2FibGVkJz48b3B0aW9uLz48L3NlbGVjdD5cIjtcblxuXHRcdFx0Ly8gU3VwcG9ydDogV2luZG93cyA4IE5hdGl2ZSBBcHBzXG5cdFx0XHQvLyBUaGUgdHlwZSBhbmQgbmFtZSBhdHRyaWJ1dGVzIGFyZSByZXN0cmljdGVkIGR1cmluZyAuaW5uZXJIVE1MIGFzc2lnbm1lbnRcblx0XHRcdHZhciBpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiaW5wdXRcIiApO1xuXHRcdFx0aW5wdXQuc2V0QXR0cmlidXRlKCBcInR5cGVcIiwgXCJoaWRkZW5cIiApO1xuXHRcdFx0ZWwuYXBwZW5kQ2hpbGQoIGlucHV0ICkuc2V0QXR0cmlidXRlKCBcIm5hbWVcIiwgXCJEXCIgKTtcblxuXHRcdFx0Ly8gU3VwcG9ydDogSUU4XG5cdFx0XHQvLyBFbmZvcmNlIGNhc2Utc2Vuc2l0aXZpdHkgb2YgbmFtZSBhdHRyaWJ1dGVcblx0XHRcdGlmICggZWwucXVlcnlTZWxlY3RvckFsbCggXCJbbmFtZT1kXVwiICkubGVuZ3RoICkge1xuXHRcdFx0XHRyYnVnZ3lRU0EucHVzaCggXCJuYW1lXCIgKyB3aGl0ZXNwYWNlICsgXCIqWypeJHwhfl0/PVwiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIEZGIDMuNSAtIDplbmFibGVkLzpkaXNhYmxlZCBhbmQgaGlkZGVuIGVsZW1lbnRzIChoaWRkZW4gZWxlbWVudHMgYXJlIHN0aWxsIGVuYWJsZWQpXG5cdFx0XHQvLyBJRTggdGhyb3dzIGVycm9yIGhlcmUgYW5kIHdpbGwgbm90IHNlZSBsYXRlciB0ZXN0c1xuXHRcdFx0aWYgKCBlbC5xdWVyeVNlbGVjdG9yQWxsKCBcIjplbmFibGVkXCIgKS5sZW5ndGggIT09IDIgKSB7XG5cdFx0XHRcdHJidWdneVFTQS5wdXNoKCBcIjplbmFibGVkXCIsIFwiOmRpc2FibGVkXCIgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU3VwcG9ydDogSUU5LTExK1xuXHRcdFx0Ly8gSUUncyA6ZGlzYWJsZWQgc2VsZWN0b3IgZG9lcyBub3QgcGljayB1cCB0aGUgY2hpbGRyZW4gb2YgZGlzYWJsZWQgZmllbGRzZXRzXG5cdFx0XHRkb2NFbGVtLmFwcGVuZENoaWxkKCBlbCApLmRpc2FibGVkID0gdHJ1ZTtcblx0XHRcdGlmICggZWwucXVlcnlTZWxlY3RvckFsbCggXCI6ZGlzYWJsZWRcIiApLmxlbmd0aCAhPT0gMiApIHtcblx0XHRcdFx0cmJ1Z2d5UVNBLnB1c2goIFwiOmVuYWJsZWRcIiwgXCI6ZGlzYWJsZWRcIiApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTdXBwb3J0OiBPcGVyYSAxMCAtIDExIG9ubHlcblx0XHRcdC8vIE9wZXJhIDEwLTExIGRvZXMgbm90IHRocm93IG9uIHBvc3QtY29tbWEgaW52YWxpZCBwc2V1ZG9zXG5cdFx0XHRlbC5xdWVyeVNlbGVjdG9yQWxsKCBcIiosOnhcIiApO1xuXHRcdFx0cmJ1Z2d5UVNBLnB1c2goIFwiLC4qOlwiICk7XG5cdFx0fSApO1xuXHR9XG5cblx0aWYgKCAoIHN1cHBvcnQubWF0Y2hlc1NlbGVjdG9yID0gcm5hdGl2ZS50ZXN0KCAoIG1hdGNoZXMgPSBkb2NFbGVtLm1hdGNoZXMgfHxcblx0XHRkb2NFbGVtLndlYmtpdE1hdGNoZXNTZWxlY3RvciB8fFxuXHRcdGRvY0VsZW0ubW96TWF0Y2hlc1NlbGVjdG9yIHx8XG5cdFx0ZG9jRWxlbS5vTWF0Y2hlc1NlbGVjdG9yIHx8XG5cdFx0ZG9jRWxlbS5tc01hdGNoZXNTZWxlY3RvciApICkgKSApIHtcblxuXHRcdGFzc2VydCggZnVuY3Rpb24oIGVsICkge1xuXG5cdFx0XHQvLyBDaGVjayB0byBzZWUgaWYgaXQncyBwb3NzaWJsZSB0byBkbyBtYXRjaGVzU2VsZWN0b3Jcblx0XHRcdC8vIG9uIGEgZGlzY29ubmVjdGVkIG5vZGUgKElFIDkpXG5cdFx0XHRzdXBwb3J0LmRpc2Nvbm5lY3RlZE1hdGNoID0gbWF0Y2hlcy5jYWxsKCBlbCwgXCIqXCIgKTtcblxuXHRcdFx0Ly8gVGhpcyBzaG91bGQgZmFpbCB3aXRoIGFuIGV4Y2VwdGlvblxuXHRcdFx0Ly8gR2Vja28gZG9lcyBub3QgZXJyb3IsIHJldHVybnMgZmFsc2UgaW5zdGVhZFxuXHRcdFx0bWF0Y2hlcy5jYWxsKCBlbCwgXCJbcyE9JyddOnhcIiApO1xuXHRcdFx0cmJ1Z2d5TWF0Y2hlcy5wdXNoKCBcIiE9XCIsIHBzZXVkb3MgKTtcblx0XHR9ICk7XG5cdH1cblxuXHRyYnVnZ3lRU0EgPSByYnVnZ3lRU0EubGVuZ3RoICYmIG5ldyBSZWdFeHAoIHJidWdneVFTQS5qb2luKCBcInxcIiApICk7XG5cdHJidWdneU1hdGNoZXMgPSByYnVnZ3lNYXRjaGVzLmxlbmd0aCAmJiBuZXcgUmVnRXhwKCByYnVnZ3lNYXRjaGVzLmpvaW4oIFwifFwiICkgKTtcblxuXHQvKiBDb250YWluc1xuXHQtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cdGhhc0NvbXBhcmUgPSBybmF0aXZlLnRlc3QoIGRvY0VsZW0uY29tcGFyZURvY3VtZW50UG9zaXRpb24gKTtcblxuXHQvLyBFbGVtZW50IGNvbnRhaW5zIGFub3RoZXJcblx0Ly8gUHVycG9zZWZ1bGx5IHNlbGYtZXhjbHVzaXZlXG5cdC8vIEFzIGluLCBhbiBlbGVtZW50IGRvZXMgbm90IGNvbnRhaW4gaXRzZWxmXG5cdGNvbnRhaW5zID0gaGFzQ29tcGFyZSB8fCBybmF0aXZlLnRlc3QoIGRvY0VsZW0uY29udGFpbnMgKSA/XG5cdFx0ZnVuY3Rpb24oIGEsIGIgKSB7XG5cdFx0XHR2YXIgYWRvd24gPSBhLm5vZGVUeXBlID09PSA5ID8gYS5kb2N1bWVudEVsZW1lbnQgOiBhLFxuXHRcdFx0XHRidXAgPSBiICYmIGIucGFyZW50Tm9kZTtcblx0XHRcdHJldHVybiBhID09PSBidXAgfHwgISEoIGJ1cCAmJiBidXAubm9kZVR5cGUgPT09IDEgJiYgKFxuXHRcdFx0XHRhZG93bi5jb250YWlucyA/XG5cdFx0XHRcdFx0YWRvd24uY29udGFpbnMoIGJ1cCApIDpcblx0XHRcdFx0XHRhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uICYmIGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oIGJ1cCApICYgMTZcblx0XHRcdCkgKTtcblx0XHR9IDpcblx0XHRmdW5jdGlvbiggYSwgYiApIHtcblx0XHRcdGlmICggYiApIHtcblx0XHRcdFx0d2hpbGUgKCAoIGIgPSBiLnBhcmVudE5vZGUgKSApIHtcblx0XHRcdFx0XHRpZiAoIGIgPT09IGEgKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9O1xuXG5cdC8qIFNvcnRpbmdcblx0LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXG5cdC8vIERvY3VtZW50IG9yZGVyIHNvcnRpbmdcblx0c29ydE9yZGVyID0gaGFzQ29tcGFyZSA/XG5cdGZ1bmN0aW9uKCBhLCBiICkge1xuXG5cdFx0Ly8gRmxhZyBmb3IgZHVwbGljYXRlIHJlbW92YWxcblx0XHRpZiAoIGEgPT09IGIgKSB7XG5cdFx0XHRoYXNEdXBsaWNhdGUgPSB0cnVlO1xuXHRcdFx0cmV0dXJuIDA7XG5cdFx0fVxuXG5cdFx0Ly8gU29ydCBvbiBtZXRob2QgZXhpc3RlbmNlIGlmIG9ubHkgb25lIGlucHV0IGhhcyBjb21wYXJlRG9jdW1lbnRQb3NpdGlvblxuXHRcdHZhciBjb21wYXJlID0gIWEuY29tcGFyZURvY3VtZW50UG9zaXRpb24gLSAhYi5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbjtcblx0XHRpZiAoIGNvbXBhcmUgKSB7XG5cdFx0XHRyZXR1cm4gY29tcGFyZTtcblx0XHR9XG5cblx0XHQvLyBDYWxjdWxhdGUgcG9zaXRpb24gaWYgYm90aCBpbnB1dHMgYmVsb25nIHRvIHRoZSBzYW1lIGRvY3VtZW50XG5cdFx0Ly8gU3VwcG9ydDogSUUgMTErLCBFZGdlIDE3IC0gMTgrXG5cdFx0Ly8gSUUvRWRnZSBzb21ldGltZXMgdGhyb3cgYSBcIlBlcm1pc3Npb24gZGVuaWVkXCIgZXJyb3Igd2hlbiBzdHJpY3QtY29tcGFyaW5nXG5cdFx0Ly8gdHdvIGRvY3VtZW50czsgc2hhbGxvdyBjb21wYXJpc29ucyB3b3JrLlxuXHRcdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcWVxZXFcblx0XHRjb21wYXJlID0gKCBhLm93bmVyRG9jdW1lbnQgfHwgYSApID09ICggYi5vd25lckRvY3VtZW50IHx8IGIgKSA/XG5cdFx0XHRhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKCBiICkgOlxuXG5cdFx0XHQvLyBPdGhlcndpc2Ugd2Uga25vdyB0aGV5IGFyZSBkaXNjb25uZWN0ZWRcblx0XHRcdDE7XG5cblx0XHQvLyBEaXNjb25uZWN0ZWQgbm9kZXNcblx0XHRpZiAoIGNvbXBhcmUgJiAxIHx8XG5cdFx0XHQoICFzdXBwb3J0LnNvcnREZXRhY2hlZCAmJiBiLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKCBhICkgPT09IGNvbXBhcmUgKSApIHtcblxuXHRcdFx0Ly8gQ2hvb3NlIHRoZSBmaXJzdCBlbGVtZW50IHRoYXQgaXMgcmVsYXRlZCB0byBvdXIgcHJlZmVycmVkIGRvY3VtZW50XG5cdFx0XHQvLyBTdXBwb3J0OiBJRSAxMSssIEVkZ2UgMTcgLSAxOCtcblx0XHRcdC8vIElFL0VkZ2Ugc29tZXRpbWVzIHRocm93IGEgXCJQZXJtaXNzaW9uIGRlbmllZFwiIGVycm9yIHdoZW4gc3RyaWN0LWNvbXBhcmluZ1xuXHRcdFx0Ly8gdHdvIGRvY3VtZW50czsgc2hhbGxvdyBjb21wYXJpc29ucyB3b3JrLlxuXHRcdFx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVxZXFlcVxuXHRcdFx0aWYgKCBhID09IGRvY3VtZW50IHx8IGEub3duZXJEb2N1bWVudCA9PSBwcmVmZXJyZWREb2MgJiZcblx0XHRcdFx0Y29udGFpbnMoIHByZWZlcnJlZERvYywgYSApICkge1xuXHRcdFx0XHRyZXR1cm4gLTE7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFN1cHBvcnQ6IElFIDExKywgRWRnZSAxNyAtIDE4K1xuXHRcdFx0Ly8gSUUvRWRnZSBzb21ldGltZXMgdGhyb3cgYSBcIlBlcm1pc3Npb24gZGVuaWVkXCIgZXJyb3Igd2hlbiBzdHJpY3QtY29tcGFyaW5nXG5cdFx0XHQvLyB0d28gZG9jdW1lbnRzOyBzaGFsbG93IGNvbXBhcmlzb25zIHdvcmsuXG5cdFx0XHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXFlcWVxXG5cdFx0XHRpZiAoIGIgPT0gZG9jdW1lbnQgfHwgYi5vd25lckRvY3VtZW50ID09IHByZWZlcnJlZERvYyAmJlxuXHRcdFx0XHRjb250YWlucyggcHJlZmVycmVkRG9jLCBiICkgKSB7XG5cdFx0XHRcdHJldHVybiAxO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBNYWludGFpbiBvcmlnaW5hbCBvcmRlclxuXHRcdFx0cmV0dXJuIHNvcnRJbnB1dCA/XG5cdFx0XHRcdCggaW5kZXhPZiggc29ydElucHV0LCBhICkgLSBpbmRleE9mKCBzb3J0SW5wdXQsIGIgKSApIDpcblx0XHRcdFx0MDtcblx0XHR9XG5cblx0XHRyZXR1cm4gY29tcGFyZSAmIDQgPyAtMSA6IDE7XG5cdH0gOlxuXHRmdW5jdGlvbiggYSwgYiApIHtcblxuXHRcdC8vIEV4aXQgZWFybHkgaWYgdGhlIG5vZGVzIGFyZSBpZGVudGljYWxcblx0XHRpZiAoIGEgPT09IGIgKSB7XG5cdFx0XHRoYXNEdXBsaWNhdGUgPSB0cnVlO1xuXHRcdFx0cmV0dXJuIDA7XG5cdFx0fVxuXG5cdFx0dmFyIGN1cixcblx0XHRcdGkgPSAwLFxuXHRcdFx0YXVwID0gYS5wYXJlbnROb2RlLFxuXHRcdFx0YnVwID0gYi5wYXJlbnROb2RlLFxuXHRcdFx0YXAgPSBbIGEgXSxcblx0XHRcdGJwID0gWyBiIF07XG5cblx0XHQvLyBQYXJlbnRsZXNzIG5vZGVzIGFyZSBlaXRoZXIgZG9jdW1lbnRzIG9yIGRpc2Nvbm5lY3RlZFxuXHRcdGlmICggIWF1cCB8fCAhYnVwICkge1xuXG5cdFx0XHQvLyBTdXBwb3J0OiBJRSAxMSssIEVkZ2UgMTcgLSAxOCtcblx0XHRcdC8vIElFL0VkZ2Ugc29tZXRpbWVzIHRocm93IGEgXCJQZXJtaXNzaW9uIGRlbmllZFwiIGVycm9yIHdoZW4gc3RyaWN0LWNvbXBhcmluZ1xuXHRcdFx0Ly8gdHdvIGRvY3VtZW50czsgc2hhbGxvdyBjb21wYXJpc29ucyB3b3JrLlxuXHRcdFx0LyogZXNsaW50LWRpc2FibGUgZXFlcWVxICovXG5cdFx0XHRyZXR1cm4gYSA9PSBkb2N1bWVudCA/IC0xIDpcblx0XHRcdFx0YiA9PSBkb2N1bWVudCA/IDEgOlxuXHRcdFx0XHQvKiBlc2xpbnQtZW5hYmxlIGVxZXFlcSAqL1xuXHRcdFx0XHRhdXAgPyAtMSA6XG5cdFx0XHRcdGJ1cCA/IDEgOlxuXHRcdFx0XHRzb3J0SW5wdXQgP1xuXHRcdFx0XHQoIGluZGV4T2YoIHNvcnRJbnB1dCwgYSApIC0gaW5kZXhPZiggc29ydElucHV0LCBiICkgKSA6XG5cdFx0XHRcdDA7XG5cblx0XHQvLyBJZiB0aGUgbm9kZXMgYXJlIHNpYmxpbmdzLCB3ZSBjYW4gZG8gYSBxdWljayBjaGVja1xuXHRcdH0gZWxzZSBpZiAoIGF1cCA9PT0gYnVwICkge1xuXHRcdFx0cmV0dXJuIHNpYmxpbmdDaGVjayggYSwgYiApO1xuXHRcdH1cblxuXHRcdC8vIE90aGVyd2lzZSB3ZSBuZWVkIGZ1bGwgbGlzdHMgb2YgdGhlaXIgYW5jZXN0b3JzIGZvciBjb21wYXJpc29uXG5cdFx0Y3VyID0gYTtcblx0XHR3aGlsZSAoICggY3VyID0gY3VyLnBhcmVudE5vZGUgKSApIHtcblx0XHRcdGFwLnVuc2hpZnQoIGN1ciApO1xuXHRcdH1cblx0XHRjdXIgPSBiO1xuXHRcdHdoaWxlICggKCBjdXIgPSBjdXIucGFyZW50Tm9kZSApICkge1xuXHRcdFx0YnAudW5zaGlmdCggY3VyICk7XG5cdFx0fVxuXG5cdFx0Ly8gV2FsayBkb3duIHRoZSB0cmVlIGxvb2tpbmcgZm9yIGEgZGlzY3JlcGFuY3lcblx0XHR3aGlsZSAoIGFwWyBpIF0gPT09IGJwWyBpIF0gKSB7XG5cdFx0XHRpKys7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGkgP1xuXG5cdFx0XHQvLyBEbyBhIHNpYmxpbmcgY2hlY2sgaWYgdGhlIG5vZGVzIGhhdmUgYSBjb21tb24gYW5jZXN0b3Jcblx0XHRcdHNpYmxpbmdDaGVjayggYXBbIGkgXSwgYnBbIGkgXSApIDpcblxuXHRcdFx0Ly8gT3RoZXJ3aXNlIG5vZGVzIGluIG91ciBkb2N1bWVudCBzb3J0IGZpcnN0XG5cdFx0XHQvLyBTdXBwb3J0OiBJRSAxMSssIEVkZ2UgMTcgLSAxOCtcblx0XHRcdC8vIElFL0VkZ2Ugc29tZXRpbWVzIHRocm93IGEgXCJQZXJtaXNzaW9uIGRlbmllZFwiIGVycm9yIHdoZW4gc3RyaWN0LWNvbXBhcmluZ1xuXHRcdFx0Ly8gdHdvIGRvY3VtZW50czsgc2hhbGxvdyBjb21wYXJpc29ucyB3b3JrLlxuXHRcdFx0LyogZXNsaW50LWRpc2FibGUgZXFlcWVxICovXG5cdFx0XHRhcFsgaSBdID09IHByZWZlcnJlZERvYyA/IC0xIDpcblx0XHRcdGJwWyBpIF0gPT0gcHJlZmVycmVkRG9jID8gMSA6XG5cdFx0XHQvKiBlc2xpbnQtZW5hYmxlIGVxZXFlcSAqL1xuXHRcdFx0MDtcblx0fTtcblxuXHRyZXR1cm4gZG9jdW1lbnQ7XG59O1xuXG5TaXp6bGUubWF0Y2hlcyA9IGZ1bmN0aW9uKCBleHByLCBlbGVtZW50cyApIHtcblx0cmV0dXJuIFNpenpsZSggZXhwciwgbnVsbCwgbnVsbCwgZWxlbWVudHMgKTtcbn07XG5cblNpenpsZS5tYXRjaGVzU2VsZWN0b3IgPSBmdW5jdGlvbiggZWxlbSwgZXhwciApIHtcblx0c2V0RG9jdW1lbnQoIGVsZW0gKTtcblxuXHRpZiAoIHN1cHBvcnQubWF0Y2hlc1NlbGVjdG9yICYmIGRvY3VtZW50SXNIVE1MICYmXG5cdFx0IW5vbm5hdGl2ZVNlbGVjdG9yQ2FjaGVbIGV4cHIgKyBcIiBcIiBdICYmXG5cdFx0KCAhcmJ1Z2d5TWF0Y2hlcyB8fCAhcmJ1Z2d5TWF0Y2hlcy50ZXN0KCBleHByICkgKSAmJlxuXHRcdCggIXJidWdneVFTQSAgICAgfHwgIXJidWdneVFTQS50ZXN0KCBleHByICkgKSApIHtcblxuXHRcdHRyeSB7XG5cdFx0XHR2YXIgcmV0ID0gbWF0Y2hlcy5jYWxsKCBlbGVtLCBleHByICk7XG5cblx0XHRcdC8vIElFIDkncyBtYXRjaGVzU2VsZWN0b3IgcmV0dXJucyBmYWxzZSBvbiBkaXNjb25uZWN0ZWQgbm9kZXNcblx0XHRcdGlmICggcmV0IHx8IHN1cHBvcnQuZGlzY29ubmVjdGVkTWF0Y2ggfHxcblxuXHRcdFx0XHQvLyBBcyB3ZWxsLCBkaXNjb25uZWN0ZWQgbm9kZXMgYXJlIHNhaWQgdG8gYmUgaW4gYSBkb2N1bWVudFxuXHRcdFx0XHQvLyBmcmFnbWVudCBpbiBJRSA5XG5cdFx0XHRcdGVsZW0uZG9jdW1lbnQgJiYgZWxlbS5kb2N1bWVudC5ub2RlVHlwZSAhPT0gMTEgKSB7XG5cdFx0XHRcdHJldHVybiByZXQ7XG5cdFx0XHR9XG5cdFx0fSBjYXRjaCAoIGUgKSB7XG5cdFx0XHRub25uYXRpdmVTZWxlY3RvckNhY2hlKCBleHByLCB0cnVlICk7XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIFNpenpsZSggZXhwciwgZG9jdW1lbnQsIG51bGwsIFsgZWxlbSBdICkubGVuZ3RoID4gMDtcbn07XG5cblNpenpsZS5jb250YWlucyA9IGZ1bmN0aW9uKCBjb250ZXh0LCBlbGVtICkge1xuXG5cdC8vIFNldCBkb2N1bWVudCB2YXJzIGlmIG5lZWRlZFxuXHQvLyBTdXBwb3J0OiBJRSAxMSssIEVkZ2UgMTcgLSAxOCtcblx0Ly8gSUUvRWRnZSBzb21ldGltZXMgdGhyb3cgYSBcIlBlcm1pc3Npb24gZGVuaWVkXCIgZXJyb3Igd2hlbiBzdHJpY3QtY29tcGFyaW5nXG5cdC8vIHR3byBkb2N1bWVudHM7IHNoYWxsb3cgY29tcGFyaXNvbnMgd29yay5cblx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVxZXFlcVxuXHRpZiAoICggY29udGV4dC5vd25lckRvY3VtZW50IHx8IGNvbnRleHQgKSAhPSBkb2N1bWVudCApIHtcblx0XHRzZXREb2N1bWVudCggY29udGV4dCApO1xuXHR9XG5cdHJldHVybiBjb250YWlucyggY29udGV4dCwgZWxlbSApO1xufTtcblxuU2l6emxlLmF0dHIgPSBmdW5jdGlvbiggZWxlbSwgbmFtZSApIHtcblxuXHQvLyBTZXQgZG9jdW1lbnQgdmFycyBpZiBuZWVkZWRcblx0Ly8gU3VwcG9ydDogSUUgMTErLCBFZGdlIDE3IC0gMTgrXG5cdC8vIElFL0VkZ2Ugc29tZXRpbWVzIHRocm93IGEgXCJQZXJtaXNzaW9uIGRlbmllZFwiIGVycm9yIHdoZW4gc3RyaWN0LWNvbXBhcmluZ1xuXHQvLyB0d28gZG9jdW1lbnRzOyBzaGFsbG93IGNvbXBhcmlzb25zIHdvcmsuXG5cdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcWVxZXFcblx0aWYgKCAoIGVsZW0ub3duZXJEb2N1bWVudCB8fCBlbGVtICkgIT0gZG9jdW1lbnQgKSB7XG5cdFx0c2V0RG9jdW1lbnQoIGVsZW0gKTtcblx0fVxuXG5cdHZhciBmbiA9IEV4cHIuYXR0ckhhbmRsZVsgbmFtZS50b0xvd2VyQ2FzZSgpIF0sXG5cblx0XHQvLyBEb24ndCBnZXQgZm9vbGVkIGJ5IE9iamVjdC5wcm90b3R5cGUgcHJvcGVydGllcyAoalF1ZXJ5ICMxMzgwNylcblx0XHR2YWwgPSBmbiAmJiBoYXNPd24uY2FsbCggRXhwci5hdHRySGFuZGxlLCBuYW1lLnRvTG93ZXJDYXNlKCkgKSA/XG5cdFx0XHRmbiggZWxlbSwgbmFtZSwgIWRvY3VtZW50SXNIVE1MICkgOlxuXHRcdFx0dW5kZWZpbmVkO1xuXG5cdHJldHVybiB2YWwgIT09IHVuZGVmaW5lZCA/XG5cdFx0dmFsIDpcblx0XHRzdXBwb3J0LmF0dHJpYnV0ZXMgfHwgIWRvY3VtZW50SXNIVE1MID9cblx0XHRcdGVsZW0uZ2V0QXR0cmlidXRlKCBuYW1lICkgOlxuXHRcdFx0KCB2YWwgPSBlbGVtLmdldEF0dHJpYnV0ZU5vZGUoIG5hbWUgKSApICYmIHZhbC5zcGVjaWZpZWQgP1xuXHRcdFx0XHR2YWwudmFsdWUgOlxuXHRcdFx0XHRudWxsO1xufTtcblxuU2l6emxlLmVzY2FwZSA9IGZ1bmN0aW9uKCBzZWwgKSB7XG5cdHJldHVybiAoIHNlbCArIFwiXCIgKS5yZXBsYWNlKCByY3NzZXNjYXBlLCBmY3NzZXNjYXBlICk7XG59O1xuXG5TaXp6bGUuZXJyb3IgPSBmdW5jdGlvbiggbXNnICkge1xuXHR0aHJvdyBuZXcgRXJyb3IoIFwiU3ludGF4IGVycm9yLCB1bnJlY29nbml6ZWQgZXhwcmVzc2lvbjogXCIgKyBtc2cgKTtcbn07XG5cbi8qKlxuICogRG9jdW1lbnQgc29ydGluZyBhbmQgcmVtb3ZpbmcgZHVwbGljYXRlc1xuICogQHBhcmFtIHtBcnJheUxpa2V9IHJlc3VsdHNcbiAqL1xuU2l6emxlLnVuaXF1ZVNvcnQgPSBmdW5jdGlvbiggcmVzdWx0cyApIHtcblx0dmFyIGVsZW0sXG5cdFx0ZHVwbGljYXRlcyA9IFtdLFxuXHRcdGogPSAwLFxuXHRcdGkgPSAwO1xuXG5cdC8vIFVubGVzcyB3ZSAqa25vdyogd2UgY2FuIGRldGVjdCBkdXBsaWNhdGVzLCBhc3N1bWUgdGhlaXIgcHJlc2VuY2Vcblx0aGFzRHVwbGljYXRlID0gIXN1cHBvcnQuZGV0ZWN0RHVwbGljYXRlcztcblx0c29ydElucHV0ID0gIXN1cHBvcnQuc29ydFN0YWJsZSAmJiByZXN1bHRzLnNsaWNlKCAwICk7XG5cdHJlc3VsdHMuc29ydCggc29ydE9yZGVyICk7XG5cblx0aWYgKCBoYXNEdXBsaWNhdGUgKSB7XG5cdFx0d2hpbGUgKCAoIGVsZW0gPSByZXN1bHRzWyBpKysgXSApICkge1xuXHRcdFx0aWYgKCBlbGVtID09PSByZXN1bHRzWyBpIF0gKSB7XG5cdFx0XHRcdGogPSBkdXBsaWNhdGVzLnB1c2goIGkgKTtcblx0XHRcdH1cblx0XHR9XG5cdFx0d2hpbGUgKCBqLS0gKSB7XG5cdFx0XHRyZXN1bHRzLnNwbGljZSggZHVwbGljYXRlc1sgaiBdLCAxICk7XG5cdFx0fVxuXHR9XG5cblx0Ly8gQ2xlYXIgaW5wdXQgYWZ0ZXIgc29ydGluZyB0byByZWxlYXNlIG9iamVjdHNcblx0Ly8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9qcXVlcnkvc2l6emxlL3B1bGwvMjI1XG5cdHNvcnRJbnB1dCA9IG51bGw7XG5cblx0cmV0dXJuIHJlc3VsdHM7XG59O1xuXG4vKipcbiAqIFV0aWxpdHkgZnVuY3Rpb24gZm9yIHJldHJpZXZpbmcgdGhlIHRleHQgdmFsdWUgb2YgYW4gYXJyYXkgb2YgRE9NIG5vZGVzXG4gKiBAcGFyYW0ge0FycmF5fEVsZW1lbnR9IGVsZW1cbiAqL1xuZ2V0VGV4dCA9IFNpenpsZS5nZXRUZXh0ID0gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdHZhciBub2RlLFxuXHRcdHJldCA9IFwiXCIsXG5cdFx0aSA9IDAsXG5cdFx0bm9kZVR5cGUgPSBlbGVtLm5vZGVUeXBlO1xuXG5cdGlmICggIW5vZGVUeXBlICkge1xuXG5cdFx0Ly8gSWYgbm8gbm9kZVR5cGUsIHRoaXMgaXMgZXhwZWN0ZWQgdG8gYmUgYW4gYXJyYXlcblx0XHR3aGlsZSAoICggbm9kZSA9IGVsZW1bIGkrKyBdICkgKSB7XG5cblx0XHRcdC8vIERvIG5vdCB0cmF2ZXJzZSBjb21tZW50IG5vZGVzXG5cdFx0XHRyZXQgKz0gZ2V0VGV4dCggbm9kZSApO1xuXHRcdH1cblx0fSBlbHNlIGlmICggbm9kZVR5cGUgPT09IDEgfHwgbm9kZVR5cGUgPT09IDkgfHwgbm9kZVR5cGUgPT09IDExICkge1xuXG5cdFx0Ly8gVXNlIHRleHRDb250ZW50IGZvciBlbGVtZW50c1xuXHRcdC8vIGlubmVyVGV4dCB1c2FnZSByZW1vdmVkIGZvciBjb25zaXN0ZW5jeSBvZiBuZXcgbGluZXMgKGpRdWVyeSAjMTExNTMpXG5cdFx0aWYgKCB0eXBlb2YgZWxlbS50ZXh0Q29udGVudCA9PT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdHJldHVybiBlbGVtLnRleHRDb250ZW50O1xuXHRcdH0gZWxzZSB7XG5cblx0XHRcdC8vIFRyYXZlcnNlIGl0cyBjaGlsZHJlblxuXHRcdFx0Zm9yICggZWxlbSA9IGVsZW0uZmlyc3RDaGlsZDsgZWxlbTsgZWxlbSA9IGVsZW0ubmV4dFNpYmxpbmcgKSB7XG5cdFx0XHRcdHJldCArPSBnZXRUZXh0KCBlbGVtICk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9IGVsc2UgaWYgKCBub2RlVHlwZSA9PT0gMyB8fCBub2RlVHlwZSA9PT0gNCApIHtcblx0XHRyZXR1cm4gZWxlbS5ub2RlVmFsdWU7XG5cdH1cblxuXHQvLyBEbyBub3QgaW5jbHVkZSBjb21tZW50IG9yIHByb2Nlc3NpbmcgaW5zdHJ1Y3Rpb24gbm9kZXNcblxuXHRyZXR1cm4gcmV0O1xufTtcblxuRXhwciA9IFNpenpsZS5zZWxlY3RvcnMgPSB7XG5cblx0Ly8gQ2FuIGJlIGFkanVzdGVkIGJ5IHRoZSB1c2VyXG5cdGNhY2hlTGVuZ3RoOiA1MCxcblxuXHRjcmVhdGVQc2V1ZG86IG1hcmtGdW5jdGlvbixcblxuXHRtYXRjaDogbWF0Y2hFeHByLFxuXG5cdGF0dHJIYW5kbGU6IHt9LFxuXG5cdGZpbmQ6IHt9LFxuXG5cdHJlbGF0aXZlOiB7XG5cdFx0XCI+XCI6IHsgZGlyOiBcInBhcmVudE5vZGVcIiwgZmlyc3Q6IHRydWUgfSxcblx0XHRcIiBcIjogeyBkaXI6IFwicGFyZW50Tm9kZVwiIH0sXG5cdFx0XCIrXCI6IHsgZGlyOiBcInByZXZpb3VzU2libGluZ1wiLCBmaXJzdDogdHJ1ZSB9LFxuXHRcdFwiflwiOiB7IGRpcjogXCJwcmV2aW91c1NpYmxpbmdcIiB9XG5cdH0sXG5cblx0cHJlRmlsdGVyOiB7XG5cdFx0XCJBVFRSXCI6IGZ1bmN0aW9uKCBtYXRjaCApIHtcblx0XHRcdG1hdGNoWyAxIF0gPSBtYXRjaFsgMSBdLnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICk7XG5cblx0XHRcdC8vIE1vdmUgdGhlIGdpdmVuIHZhbHVlIHRvIG1hdGNoWzNdIHdoZXRoZXIgcXVvdGVkIG9yIHVucXVvdGVkXG5cdFx0XHRtYXRjaFsgMyBdID0gKCBtYXRjaFsgMyBdIHx8IG1hdGNoWyA0IF0gfHxcblx0XHRcdFx0bWF0Y2hbIDUgXSB8fCBcIlwiICkucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKTtcblxuXHRcdFx0aWYgKCBtYXRjaFsgMiBdID09PSBcIn49XCIgKSB7XG5cdFx0XHRcdG1hdGNoWyAzIF0gPSBcIiBcIiArIG1hdGNoWyAzIF0gKyBcIiBcIjtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIG1hdGNoLnNsaWNlKCAwLCA0ICk7XG5cdFx0fSxcblxuXHRcdFwiQ0hJTERcIjogZnVuY3Rpb24oIG1hdGNoICkge1xuXG5cdFx0XHQvKiBtYXRjaGVzIGZyb20gbWF0Y2hFeHByW1wiQ0hJTERcIl1cblx0XHRcdFx0MSB0eXBlIChvbmx5fG50aHwuLi4pXG5cdFx0XHRcdDIgd2hhdCAoY2hpbGR8b2YtdHlwZSlcblx0XHRcdFx0MyBhcmd1bWVudCAoZXZlbnxvZGR8XFxkKnxcXGQqbihbKy1dXFxkKyk/fC4uLilcblx0XHRcdFx0NCB4bi1jb21wb25lbnQgb2YgeG4reSBhcmd1bWVudCAoWystXT9cXGQqbnwpXG5cdFx0XHRcdDUgc2lnbiBvZiB4bi1jb21wb25lbnRcblx0XHRcdFx0NiB4IG9mIHhuLWNvbXBvbmVudFxuXHRcdFx0XHQ3IHNpZ24gb2YgeS1jb21wb25lbnRcblx0XHRcdFx0OCB5IG9mIHktY29tcG9uZW50XG5cdFx0XHQqL1xuXHRcdFx0bWF0Y2hbIDEgXSA9IG1hdGNoWyAxIF0udG9Mb3dlckNhc2UoKTtcblxuXHRcdFx0aWYgKCBtYXRjaFsgMSBdLnNsaWNlKCAwLCAzICkgPT09IFwibnRoXCIgKSB7XG5cblx0XHRcdFx0Ly8gbnRoLSogcmVxdWlyZXMgYXJndW1lbnRcblx0XHRcdFx0aWYgKCAhbWF0Y2hbIDMgXSApIHtcblx0XHRcdFx0XHRTaXp6bGUuZXJyb3IoIG1hdGNoWyAwIF0gKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIG51bWVyaWMgeCBhbmQgeSBwYXJhbWV0ZXJzIGZvciBFeHByLmZpbHRlci5DSElMRFxuXHRcdFx0XHQvLyByZW1lbWJlciB0aGF0IGZhbHNlL3RydWUgY2FzdCByZXNwZWN0aXZlbHkgdG8gMC8xXG5cdFx0XHRcdG1hdGNoWyA0IF0gPSArKCBtYXRjaFsgNCBdID9cblx0XHRcdFx0XHRtYXRjaFsgNSBdICsgKCBtYXRjaFsgNiBdIHx8IDEgKSA6XG5cdFx0XHRcdFx0MiAqICggbWF0Y2hbIDMgXSA9PT0gXCJldmVuXCIgfHwgbWF0Y2hbIDMgXSA9PT0gXCJvZGRcIiApICk7XG5cdFx0XHRcdG1hdGNoWyA1IF0gPSArKCAoIG1hdGNoWyA3IF0gKyBtYXRjaFsgOCBdICkgfHwgbWF0Y2hbIDMgXSA9PT0gXCJvZGRcIiApO1xuXG5cdFx0XHRcdC8vIG90aGVyIHR5cGVzIHByb2hpYml0IGFyZ3VtZW50c1xuXHRcdFx0fSBlbHNlIGlmICggbWF0Y2hbIDMgXSApIHtcblx0XHRcdFx0U2l6emxlLmVycm9yKCBtYXRjaFsgMCBdICk7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBtYXRjaDtcblx0XHR9LFxuXG5cdFx0XCJQU0VVRE9cIjogZnVuY3Rpb24oIG1hdGNoICkge1xuXHRcdFx0dmFyIGV4Y2Vzcyxcblx0XHRcdFx0dW5xdW90ZWQgPSAhbWF0Y2hbIDYgXSAmJiBtYXRjaFsgMiBdO1xuXG5cdFx0XHRpZiAoIG1hdGNoRXhwclsgXCJDSElMRFwiIF0udGVzdCggbWF0Y2hbIDAgXSApICkge1xuXHRcdFx0XHRyZXR1cm4gbnVsbDtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQWNjZXB0IHF1b3RlZCBhcmd1bWVudHMgYXMtaXNcblx0XHRcdGlmICggbWF0Y2hbIDMgXSApIHtcblx0XHRcdFx0bWF0Y2hbIDIgXSA9IG1hdGNoWyA0IF0gfHwgbWF0Y2hbIDUgXSB8fCBcIlwiO1xuXG5cdFx0XHQvLyBTdHJpcCBleGNlc3MgY2hhcmFjdGVycyBmcm9tIHVucXVvdGVkIGFyZ3VtZW50c1xuXHRcdFx0fSBlbHNlIGlmICggdW5xdW90ZWQgJiYgcnBzZXVkby50ZXN0KCB1bnF1b3RlZCApICYmXG5cblx0XHRcdFx0Ly8gR2V0IGV4Y2VzcyBmcm9tIHRva2VuaXplIChyZWN1cnNpdmVseSlcblx0XHRcdFx0KCBleGNlc3MgPSB0b2tlbml6ZSggdW5xdW90ZWQsIHRydWUgKSApICYmXG5cblx0XHRcdFx0Ly8gYWR2YW5jZSB0byB0aGUgbmV4dCBjbG9zaW5nIHBhcmVudGhlc2lzXG5cdFx0XHRcdCggZXhjZXNzID0gdW5xdW90ZWQuaW5kZXhPZiggXCIpXCIsIHVucXVvdGVkLmxlbmd0aCAtIGV4Y2VzcyApIC0gdW5xdW90ZWQubGVuZ3RoICkgKSB7XG5cblx0XHRcdFx0Ly8gZXhjZXNzIGlzIGEgbmVnYXRpdmUgaW5kZXhcblx0XHRcdFx0bWF0Y2hbIDAgXSA9IG1hdGNoWyAwIF0uc2xpY2UoIDAsIGV4Y2VzcyApO1xuXHRcdFx0XHRtYXRjaFsgMiBdID0gdW5xdW90ZWQuc2xpY2UoIDAsIGV4Y2VzcyApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBSZXR1cm4gb25seSBjYXB0dXJlcyBuZWVkZWQgYnkgdGhlIHBzZXVkbyBmaWx0ZXIgbWV0aG9kICh0eXBlIGFuZCBhcmd1bWVudClcblx0XHRcdHJldHVybiBtYXRjaC5zbGljZSggMCwgMyApO1xuXHRcdH1cblx0fSxcblxuXHRmaWx0ZXI6IHtcblxuXHRcdFwiVEFHXCI6IGZ1bmN0aW9uKCBub2RlTmFtZVNlbGVjdG9yICkge1xuXHRcdFx0dmFyIG5vZGVOYW1lID0gbm9kZU5hbWVTZWxlY3Rvci5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApLnRvTG93ZXJDYXNlKCk7XG5cdFx0XHRyZXR1cm4gbm9kZU5hbWVTZWxlY3RvciA9PT0gXCIqXCIgP1xuXHRcdFx0XHRmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0fSA6XG5cdFx0XHRcdGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHRcdHJldHVybiBlbGVtLm5vZGVOYW1lICYmIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gbm9kZU5hbWU7XG5cdFx0XHRcdH07XG5cdFx0fSxcblxuXHRcdFwiQ0xBU1NcIjogZnVuY3Rpb24oIGNsYXNzTmFtZSApIHtcblx0XHRcdHZhciBwYXR0ZXJuID0gY2xhc3NDYWNoZVsgY2xhc3NOYW1lICsgXCIgXCIgXTtcblxuXHRcdFx0cmV0dXJuIHBhdHRlcm4gfHxcblx0XHRcdFx0KCBwYXR0ZXJuID0gbmV3IFJlZ0V4cCggXCIoXnxcIiArIHdoaXRlc3BhY2UgK1xuXHRcdFx0XHRcdFwiKVwiICsgY2xhc3NOYW1lICsgXCIoXCIgKyB3aGl0ZXNwYWNlICsgXCJ8JClcIiApICkgJiYgY2xhc3NDYWNoZShcblx0XHRcdFx0XHRcdGNsYXNzTmFtZSwgZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiBwYXR0ZXJuLnRlc3QoXG5cdFx0XHRcdFx0XHRcdFx0dHlwZW9mIGVsZW0uY2xhc3NOYW1lID09PSBcInN0cmluZ1wiICYmIGVsZW0uY2xhc3NOYW1lIHx8XG5cdFx0XHRcdFx0XHRcdFx0dHlwZW9mIGVsZW0uZ2V0QXR0cmlidXRlICE9PSBcInVuZGVmaW5lZFwiICYmXG5cdFx0XHRcdFx0XHRcdFx0XHRlbGVtLmdldEF0dHJpYnV0ZSggXCJjbGFzc1wiICkgfHxcblx0XHRcdFx0XHRcdFx0XHRcIlwiXG5cdFx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdH0gKTtcblx0XHR9LFxuXG5cdFx0XCJBVFRSXCI6IGZ1bmN0aW9uKCBuYW1lLCBvcGVyYXRvciwgY2hlY2sgKSB7XG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdHZhciByZXN1bHQgPSBTaXp6bGUuYXR0ciggZWxlbSwgbmFtZSApO1xuXG5cdFx0XHRcdGlmICggcmVzdWx0ID09IG51bGwgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIG9wZXJhdG9yID09PSBcIiE9XCI7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKCAhb3BlcmF0b3IgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXN1bHQgKz0gXCJcIjtcblxuXHRcdFx0XHQvKiBlc2xpbnQtZGlzYWJsZSBtYXgtbGVuICovXG5cblx0XHRcdFx0cmV0dXJuIG9wZXJhdG9yID09PSBcIj1cIiA/IHJlc3VsdCA9PT0gY2hlY2sgOlxuXHRcdFx0XHRcdG9wZXJhdG9yID09PSBcIiE9XCIgPyByZXN1bHQgIT09IGNoZWNrIDpcblx0XHRcdFx0XHRvcGVyYXRvciA9PT0gXCJePVwiID8gY2hlY2sgJiYgcmVzdWx0LmluZGV4T2YoIGNoZWNrICkgPT09IDAgOlxuXHRcdFx0XHRcdG9wZXJhdG9yID09PSBcIio9XCIgPyBjaGVjayAmJiByZXN1bHQuaW5kZXhPZiggY2hlY2sgKSA+IC0xIDpcblx0XHRcdFx0XHRvcGVyYXRvciA9PT0gXCIkPVwiID8gY2hlY2sgJiYgcmVzdWx0LnNsaWNlKCAtY2hlY2subGVuZ3RoICkgPT09IGNoZWNrIDpcblx0XHRcdFx0XHRvcGVyYXRvciA9PT0gXCJ+PVwiID8gKCBcIiBcIiArIHJlc3VsdC5yZXBsYWNlKCByd2hpdGVzcGFjZSwgXCIgXCIgKSArIFwiIFwiICkuaW5kZXhPZiggY2hlY2sgKSA+IC0xIDpcblx0XHRcdFx0XHRvcGVyYXRvciA9PT0gXCJ8PVwiID8gcmVzdWx0ID09PSBjaGVjayB8fCByZXN1bHQuc2xpY2UoIDAsIGNoZWNrLmxlbmd0aCArIDEgKSA9PT0gY2hlY2sgKyBcIi1cIiA6XG5cdFx0XHRcdFx0ZmFsc2U7XG5cdFx0XHRcdC8qIGVzbGludC1lbmFibGUgbWF4LWxlbiAqL1xuXG5cdFx0XHR9O1xuXHRcdH0sXG5cblx0XHRcIkNISUxEXCI6IGZ1bmN0aW9uKCB0eXBlLCB3aGF0LCBfYXJndW1lbnQsIGZpcnN0LCBsYXN0ICkge1xuXHRcdFx0dmFyIHNpbXBsZSA9IHR5cGUuc2xpY2UoIDAsIDMgKSAhPT0gXCJudGhcIixcblx0XHRcdFx0Zm9yd2FyZCA9IHR5cGUuc2xpY2UoIC00ICkgIT09IFwibGFzdFwiLFxuXHRcdFx0XHRvZlR5cGUgPSB3aGF0ID09PSBcIm9mLXR5cGVcIjtcblxuXHRcdFx0cmV0dXJuIGZpcnN0ID09PSAxICYmIGxhc3QgPT09IDAgP1xuXG5cdFx0XHRcdC8vIFNob3J0Y3V0IGZvciA6bnRoLSoobilcblx0XHRcdFx0ZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdFx0cmV0dXJuICEhZWxlbS5wYXJlbnROb2RlO1xuXHRcdFx0XHR9IDpcblxuXHRcdFx0XHRmdW5jdGlvbiggZWxlbSwgX2NvbnRleHQsIHhtbCApIHtcblx0XHRcdFx0XHR2YXIgY2FjaGUsIHVuaXF1ZUNhY2hlLCBvdXRlckNhY2hlLCBub2RlLCBub2RlSW5kZXgsIHN0YXJ0LFxuXHRcdFx0XHRcdFx0ZGlyID0gc2ltcGxlICE9PSBmb3J3YXJkID8gXCJuZXh0U2libGluZ1wiIDogXCJwcmV2aW91c1NpYmxpbmdcIixcblx0XHRcdFx0XHRcdHBhcmVudCA9IGVsZW0ucGFyZW50Tm9kZSxcblx0XHRcdFx0XHRcdG5hbWUgPSBvZlR5cGUgJiYgZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpLFxuXHRcdFx0XHRcdFx0dXNlQ2FjaGUgPSAheG1sICYmICFvZlR5cGUsXG5cdFx0XHRcdFx0XHRkaWZmID0gZmFsc2U7XG5cblx0XHRcdFx0XHRpZiAoIHBhcmVudCApIHtcblxuXHRcdFx0XHRcdFx0Ly8gOihmaXJzdHxsYXN0fG9ubHkpLShjaGlsZHxvZi10eXBlKVxuXHRcdFx0XHRcdFx0aWYgKCBzaW1wbGUgKSB7XG5cdFx0XHRcdFx0XHRcdHdoaWxlICggZGlyICkge1xuXHRcdFx0XHRcdFx0XHRcdG5vZGUgPSBlbGVtO1xuXHRcdFx0XHRcdFx0XHRcdHdoaWxlICggKCBub2RlID0gbm9kZVsgZGlyIF0gKSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdGlmICggb2ZUeXBlID9cblx0XHRcdFx0XHRcdFx0XHRcdFx0bm9kZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSBuYW1lIDpcblx0XHRcdFx0XHRcdFx0XHRcdFx0bm9kZS5ub2RlVHlwZSA9PT0gMSApIHtcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRcdFx0Ly8gUmV2ZXJzZSBkaXJlY3Rpb24gZm9yIDpvbmx5LSogKGlmIHdlIGhhdmVuJ3QgeWV0IGRvbmUgc28pXG5cdFx0XHRcdFx0XHRcdFx0c3RhcnQgPSBkaXIgPSB0eXBlID09PSBcIm9ubHlcIiAmJiAhc3RhcnQgJiYgXCJuZXh0U2libGluZ1wiO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRzdGFydCA9IFsgZm9yd2FyZCA/IHBhcmVudC5maXJzdENoaWxkIDogcGFyZW50Lmxhc3RDaGlsZCBdO1xuXG5cdFx0XHRcdFx0XHQvLyBub24teG1sIDpudGgtY2hpbGQoLi4uKSBzdG9yZXMgY2FjaGUgZGF0YSBvbiBgcGFyZW50YFxuXHRcdFx0XHRcdFx0aWYgKCBmb3J3YXJkICYmIHVzZUNhY2hlICkge1xuXG5cdFx0XHRcdFx0XHRcdC8vIFNlZWsgYGVsZW1gIGZyb20gYSBwcmV2aW91c2x5LWNhY2hlZCBpbmRleFxuXG5cdFx0XHRcdFx0XHRcdC8vIC4uLmluIGEgZ3ppcC1mcmllbmRseSB3YXlcblx0XHRcdFx0XHRcdFx0bm9kZSA9IHBhcmVudDtcblx0XHRcdFx0XHRcdFx0b3V0ZXJDYWNoZSA9IG5vZGVbIGV4cGFuZG8gXSB8fCAoIG5vZGVbIGV4cGFuZG8gXSA9IHt9ICk7XG5cblx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPDkgb25seVxuXHRcdFx0XHRcdFx0XHQvLyBEZWZlbmQgYWdhaW5zdCBjbG9uZWQgYXR0cm9wZXJ0aWVzIChqUXVlcnkgZ2gtMTcwOSlcblx0XHRcdFx0XHRcdFx0dW5pcXVlQ2FjaGUgPSBvdXRlckNhY2hlWyBub2RlLnVuaXF1ZUlEIF0gfHxcblx0XHRcdFx0XHRcdFx0XHQoIG91dGVyQ2FjaGVbIG5vZGUudW5pcXVlSUQgXSA9IHt9ICk7XG5cblx0XHRcdFx0XHRcdFx0Y2FjaGUgPSB1bmlxdWVDYWNoZVsgdHlwZSBdIHx8IFtdO1xuXHRcdFx0XHRcdFx0XHRub2RlSW5kZXggPSBjYWNoZVsgMCBdID09PSBkaXJydW5zICYmIGNhY2hlWyAxIF07XG5cdFx0XHRcdFx0XHRcdGRpZmYgPSBub2RlSW5kZXggJiYgY2FjaGVbIDIgXTtcblx0XHRcdFx0XHRcdFx0bm9kZSA9IG5vZGVJbmRleCAmJiBwYXJlbnQuY2hpbGROb2Rlc1sgbm9kZUluZGV4IF07XG5cblx0XHRcdFx0XHRcdFx0d2hpbGUgKCAoIG5vZGUgPSArK25vZGVJbmRleCAmJiBub2RlICYmIG5vZGVbIGRpciBdIHx8XG5cblx0XHRcdFx0XHRcdFx0XHQvLyBGYWxsYmFjayB0byBzZWVraW5nIGBlbGVtYCBmcm9tIHRoZSBzdGFydFxuXHRcdFx0XHRcdFx0XHRcdCggZGlmZiA9IG5vZGVJbmRleCA9IDAgKSB8fCBzdGFydC5wb3AoKSApICkge1xuXG5cdFx0XHRcdFx0XHRcdFx0Ly8gV2hlbiBmb3VuZCwgY2FjaGUgaW5kZXhlcyBvbiBgcGFyZW50YCBhbmQgYnJlYWtcblx0XHRcdFx0XHRcdFx0XHRpZiAoIG5vZGUubm9kZVR5cGUgPT09IDEgJiYgKytkaWZmICYmIG5vZGUgPT09IGVsZW0gKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHR1bmlxdWVDYWNoZVsgdHlwZSBdID0gWyBkaXJydW5zLCBub2RlSW5kZXgsIGRpZmYgXTtcblx0XHRcdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdFx0XHRcdC8vIFVzZSBwcmV2aW91c2x5LWNhY2hlZCBlbGVtZW50IGluZGV4IGlmIGF2YWlsYWJsZVxuXHRcdFx0XHRcdFx0XHRpZiAoIHVzZUNhY2hlICkge1xuXG5cdFx0XHRcdFx0XHRcdFx0Ly8gLi4uaW4gYSBnemlwLWZyaWVuZGx5IHdheVxuXHRcdFx0XHRcdFx0XHRcdG5vZGUgPSBlbGVtO1xuXHRcdFx0XHRcdFx0XHRcdG91dGVyQ2FjaGUgPSBub2RlWyBleHBhbmRvIF0gfHwgKCBub2RlWyBleHBhbmRvIF0gPSB7fSApO1xuXG5cdFx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPDkgb25seVxuXHRcdFx0XHRcdFx0XHRcdC8vIERlZmVuZCBhZ2FpbnN0IGNsb25lZCBhdHRyb3BlcnRpZXMgKGpRdWVyeSBnaC0xNzA5KVxuXHRcdFx0XHRcdFx0XHRcdHVuaXF1ZUNhY2hlID0gb3V0ZXJDYWNoZVsgbm9kZS51bmlxdWVJRCBdIHx8XG5cdFx0XHRcdFx0XHRcdFx0XHQoIG91dGVyQ2FjaGVbIG5vZGUudW5pcXVlSUQgXSA9IHt9ICk7XG5cblx0XHRcdFx0XHRcdFx0XHRjYWNoZSA9IHVuaXF1ZUNhY2hlWyB0eXBlIF0gfHwgW107XG5cdFx0XHRcdFx0XHRcdFx0bm9kZUluZGV4ID0gY2FjaGVbIDAgXSA9PT0gZGlycnVucyAmJiBjYWNoZVsgMSBdO1xuXHRcdFx0XHRcdFx0XHRcdGRpZmYgPSBub2RlSW5kZXg7XG5cdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHQvLyB4bWwgOm50aC1jaGlsZCguLi4pXG5cdFx0XHRcdFx0XHRcdC8vIG9yIDpudGgtbGFzdC1jaGlsZCguLi4pIG9yIDpudGgoLWxhc3QpPy1vZi10eXBlKC4uLilcblx0XHRcdFx0XHRcdFx0aWYgKCBkaWZmID09PSBmYWxzZSApIHtcblxuXHRcdFx0XHRcdFx0XHRcdC8vIFVzZSB0aGUgc2FtZSBsb29wIGFzIGFib3ZlIHRvIHNlZWsgYGVsZW1gIGZyb20gdGhlIHN0YXJ0XG5cdFx0XHRcdFx0XHRcdFx0d2hpbGUgKCAoIG5vZGUgPSArK25vZGVJbmRleCAmJiBub2RlICYmIG5vZGVbIGRpciBdIHx8XG5cdFx0XHRcdFx0XHRcdFx0XHQoIGRpZmYgPSBub2RlSW5kZXggPSAwICkgfHwgc3RhcnQucG9wKCkgKSApIHtcblxuXHRcdFx0XHRcdFx0XHRcdFx0aWYgKCAoIG9mVHlwZSA/XG5cdFx0XHRcdFx0XHRcdFx0XHRcdG5vZGUubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gbmFtZSA6XG5cdFx0XHRcdFx0XHRcdFx0XHRcdG5vZGUubm9kZVR5cGUgPT09IDEgKSAmJlxuXHRcdFx0XHRcdFx0XHRcdFx0XHQrK2RpZmYgKSB7XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gQ2FjaGUgdGhlIGluZGV4IG9mIGVhY2ggZW5jb3VudGVyZWQgZWxlbWVudFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRpZiAoIHVzZUNhY2hlICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdG91dGVyQ2FjaGUgPSBub2RlWyBleHBhbmRvIF0gfHxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdCggbm9kZVsgZXhwYW5kbyBdID0ge30gKTtcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw5IG9ubHlcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBEZWZlbmQgYWdhaW5zdCBjbG9uZWQgYXR0cm9wZXJ0aWVzIChqUXVlcnkgZ2gtMTcwOSlcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR1bmlxdWVDYWNoZSA9IG91dGVyQ2FjaGVbIG5vZGUudW5pcXVlSUQgXSB8fFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0KCBvdXRlckNhY2hlWyBub2RlLnVuaXF1ZUlEIF0gPSB7fSApO1xuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0dW5pcXVlQ2FjaGVbIHR5cGUgXSA9IFsgZGlycnVucywgZGlmZiBdO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0aWYgKCBub2RlID09PSBlbGVtICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdC8vIEluY29ycG9yYXRlIHRoZSBvZmZzZXQsIHRoZW4gY2hlY2sgYWdhaW5zdCBjeWNsZSBzaXplXG5cdFx0XHRcdFx0XHRkaWZmIC09IGxhc3Q7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZGlmZiA9PT0gZmlyc3QgfHwgKCBkaWZmICUgZmlyc3QgPT09IDAgJiYgZGlmZiAvIGZpcnN0ID49IDAgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH07XG5cdFx0fSxcblxuXHRcdFwiUFNFVURPXCI6IGZ1bmN0aW9uKCBwc2V1ZG8sIGFyZ3VtZW50ICkge1xuXG5cdFx0XHQvLyBwc2V1ZG8tY2xhc3MgbmFtZXMgYXJlIGNhc2UtaW5zZW5zaXRpdmVcblx0XHRcdC8vIGh0dHA6Ly93d3cudzMub3JnL1RSL3NlbGVjdG9ycy8jcHNldWRvLWNsYXNzZXNcblx0XHRcdC8vIFByaW9yaXRpemUgYnkgY2FzZSBzZW5zaXRpdml0eSBpbiBjYXNlIGN1c3RvbSBwc2V1ZG9zIGFyZSBhZGRlZCB3aXRoIHVwcGVyY2FzZSBsZXR0ZXJzXG5cdFx0XHQvLyBSZW1lbWJlciB0aGF0IHNldEZpbHRlcnMgaW5oZXJpdHMgZnJvbSBwc2V1ZG9zXG5cdFx0XHR2YXIgYXJncyxcblx0XHRcdFx0Zm4gPSBFeHByLnBzZXVkb3NbIHBzZXVkbyBdIHx8IEV4cHIuc2V0RmlsdGVyc1sgcHNldWRvLnRvTG93ZXJDYXNlKCkgXSB8fFxuXHRcdFx0XHRcdFNpenpsZS5lcnJvciggXCJ1bnN1cHBvcnRlZCBwc2V1ZG86IFwiICsgcHNldWRvICk7XG5cblx0XHRcdC8vIFRoZSB1c2VyIG1heSB1c2UgY3JlYXRlUHNldWRvIHRvIGluZGljYXRlIHRoYXRcblx0XHRcdC8vIGFyZ3VtZW50cyBhcmUgbmVlZGVkIHRvIGNyZWF0ZSB0aGUgZmlsdGVyIGZ1bmN0aW9uXG5cdFx0XHQvLyBqdXN0IGFzIFNpenpsZSBkb2VzXG5cdFx0XHRpZiAoIGZuWyBleHBhbmRvIF0gKSB7XG5cdFx0XHRcdHJldHVybiBmbiggYXJndW1lbnQgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQnV0IG1haW50YWluIHN1cHBvcnQgZm9yIG9sZCBzaWduYXR1cmVzXG5cdFx0XHRpZiAoIGZuLmxlbmd0aCA+IDEgKSB7XG5cdFx0XHRcdGFyZ3MgPSBbIHBzZXVkbywgcHNldWRvLCBcIlwiLCBhcmd1bWVudCBdO1xuXHRcdFx0XHRyZXR1cm4gRXhwci5zZXRGaWx0ZXJzLmhhc093blByb3BlcnR5KCBwc2V1ZG8udG9Mb3dlckNhc2UoKSApID9cblx0XHRcdFx0XHRtYXJrRnVuY3Rpb24oIGZ1bmN0aW9uKCBzZWVkLCBtYXRjaGVzICkge1xuXHRcdFx0XHRcdFx0dmFyIGlkeCxcblx0XHRcdFx0XHRcdFx0bWF0Y2hlZCA9IGZuKCBzZWVkLCBhcmd1bWVudCApLFxuXHRcdFx0XHRcdFx0XHRpID0gbWF0Y2hlZC5sZW5ndGg7XG5cdFx0XHRcdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0XHRcdFx0aWR4ID0gaW5kZXhPZiggc2VlZCwgbWF0Y2hlZFsgaSBdICk7XG5cdFx0XHRcdFx0XHRcdHNlZWRbIGlkeCBdID0gISggbWF0Y2hlc1sgaWR4IF0gPSBtYXRjaGVkWyBpIF0gKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9ICkgOlxuXHRcdFx0XHRcdGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIGZuKCBlbGVtLCAwLCBhcmdzICk7XG5cdFx0XHRcdFx0fTtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIGZuO1xuXHRcdH1cblx0fSxcblxuXHRwc2V1ZG9zOiB7XG5cblx0XHQvLyBQb3RlbnRpYWxseSBjb21wbGV4IHBzZXVkb3Ncblx0XHRcIm5vdFwiOiBtYXJrRnVuY3Rpb24oIGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblxuXHRcdFx0Ly8gVHJpbSB0aGUgc2VsZWN0b3IgcGFzc2VkIHRvIGNvbXBpbGVcblx0XHRcdC8vIHRvIGF2b2lkIHRyZWF0aW5nIGxlYWRpbmcgYW5kIHRyYWlsaW5nXG5cdFx0XHQvLyBzcGFjZXMgYXMgY29tYmluYXRvcnNcblx0XHRcdHZhciBpbnB1dCA9IFtdLFxuXHRcdFx0XHRyZXN1bHRzID0gW10sXG5cdFx0XHRcdG1hdGNoZXIgPSBjb21waWxlKCBzZWxlY3Rvci5yZXBsYWNlKCBydHJpbSwgXCIkMVwiICkgKTtcblxuXHRcdFx0cmV0dXJuIG1hdGNoZXJbIGV4cGFuZG8gXSA/XG5cdFx0XHRcdG1hcmtGdW5jdGlvbiggZnVuY3Rpb24oIHNlZWQsIG1hdGNoZXMsIF9jb250ZXh0LCB4bWwgKSB7XG5cdFx0XHRcdFx0dmFyIGVsZW0sXG5cdFx0XHRcdFx0XHR1bm1hdGNoZWQgPSBtYXRjaGVyKCBzZWVkLCBudWxsLCB4bWwsIFtdICksXG5cdFx0XHRcdFx0XHRpID0gc2VlZC5sZW5ndGg7XG5cblx0XHRcdFx0XHQvLyBNYXRjaCBlbGVtZW50cyB1bm1hdGNoZWQgYnkgYG1hdGNoZXJgXG5cdFx0XHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdFx0XHRpZiAoICggZWxlbSA9IHVubWF0Y2hlZFsgaSBdICkgKSB7XG5cdFx0XHRcdFx0XHRcdHNlZWRbIGkgXSA9ICEoIG1hdGNoZXNbIGkgXSA9IGVsZW0gKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0gKSA6XG5cdFx0XHRcdGZ1bmN0aW9uKCBlbGVtLCBfY29udGV4dCwgeG1sICkge1xuXHRcdFx0XHRcdGlucHV0WyAwIF0gPSBlbGVtO1xuXHRcdFx0XHRcdG1hdGNoZXIoIGlucHV0LCBudWxsLCB4bWwsIHJlc3VsdHMgKTtcblxuXHRcdFx0XHRcdC8vIERvbid0IGtlZXAgdGhlIGVsZW1lbnQgKGlzc3VlICMyOTkpXG5cdFx0XHRcdFx0aW5wdXRbIDAgXSA9IG51bGw7XG5cdFx0XHRcdFx0cmV0dXJuICFyZXN1bHRzLnBvcCgpO1xuXHRcdFx0XHR9O1xuXHRcdH0gKSxcblxuXHRcdFwiaGFzXCI6IG1hcmtGdW5jdGlvbiggZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdFx0cmV0dXJuIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHRyZXR1cm4gU2l6emxlKCBzZWxlY3RvciwgZWxlbSApLmxlbmd0aCA+IDA7XG5cdFx0XHR9O1xuXHRcdH0gKSxcblxuXHRcdFwiY29udGFpbnNcIjogbWFya0Z1bmN0aW9uKCBmdW5jdGlvbiggdGV4dCApIHtcblx0XHRcdHRleHQgPSB0ZXh0LnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICk7XG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdHJldHVybiAoIGVsZW0udGV4dENvbnRlbnQgfHwgZ2V0VGV4dCggZWxlbSApICkuaW5kZXhPZiggdGV4dCApID4gLTE7XG5cdFx0XHR9O1xuXHRcdH0gKSxcblxuXHRcdC8vIFwiV2hldGhlciBhbiBlbGVtZW50IGlzIHJlcHJlc2VudGVkIGJ5IGEgOmxhbmcoKSBzZWxlY3RvclxuXHRcdC8vIGlzIGJhc2VkIHNvbGVseSBvbiB0aGUgZWxlbWVudCdzIGxhbmd1YWdlIHZhbHVlXG5cdFx0Ly8gYmVpbmcgZXF1YWwgdG8gdGhlIGlkZW50aWZpZXIgQyxcblx0XHQvLyBvciBiZWdpbm5pbmcgd2l0aCB0aGUgaWRlbnRpZmllciBDIGltbWVkaWF0ZWx5IGZvbGxvd2VkIGJ5IFwiLVwiLlxuXHRcdC8vIFRoZSBtYXRjaGluZyBvZiBDIGFnYWluc3QgdGhlIGVsZW1lbnQncyBsYW5ndWFnZSB2YWx1ZSBpcyBwZXJmb3JtZWQgY2FzZS1pbnNlbnNpdGl2ZWx5LlxuXHRcdC8vIFRoZSBpZGVudGlmaWVyIEMgZG9lcyBub3QgaGF2ZSB0byBiZSBhIHZhbGlkIGxhbmd1YWdlIG5hbWUuXCJcblx0XHQvLyBodHRwOi8vd3d3LnczLm9yZy9UUi9zZWxlY3RvcnMvI2xhbmctcHNldWRvXG5cdFx0XCJsYW5nXCI6IG1hcmtGdW5jdGlvbiggZnVuY3Rpb24oIGxhbmcgKSB7XG5cblx0XHRcdC8vIGxhbmcgdmFsdWUgbXVzdCBiZSBhIHZhbGlkIGlkZW50aWZpZXJcblx0XHRcdGlmICggIXJpZGVudGlmaWVyLnRlc3QoIGxhbmcgfHwgXCJcIiApICkge1xuXHRcdFx0XHRTaXp6bGUuZXJyb3IoIFwidW5zdXBwb3J0ZWQgbGFuZzogXCIgKyBsYW5nICk7XG5cdFx0XHR9XG5cdFx0XHRsYW5nID0gbGFuZy5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApLnRvTG93ZXJDYXNlKCk7XG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdHZhciBlbGVtTGFuZztcblx0XHRcdFx0ZG8ge1xuXHRcdFx0XHRcdGlmICggKCBlbGVtTGFuZyA9IGRvY3VtZW50SXNIVE1MID9cblx0XHRcdFx0XHRcdGVsZW0ubGFuZyA6XG5cdFx0XHRcdFx0XHRlbGVtLmdldEF0dHJpYnV0ZSggXCJ4bWw6bGFuZ1wiICkgfHwgZWxlbS5nZXRBdHRyaWJ1dGUoIFwibGFuZ1wiICkgKSApIHtcblxuXHRcdFx0XHRcdFx0ZWxlbUxhbmcgPSBlbGVtTGFuZy50b0xvd2VyQ2FzZSgpO1xuXHRcdFx0XHRcdFx0cmV0dXJuIGVsZW1MYW5nID09PSBsYW5nIHx8IGVsZW1MYW5nLmluZGV4T2YoIGxhbmcgKyBcIi1cIiApID09PSAwO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSB3aGlsZSAoICggZWxlbSA9IGVsZW0ucGFyZW50Tm9kZSApICYmIGVsZW0ubm9kZVR5cGUgPT09IDEgKTtcblx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0fTtcblx0XHR9ICksXG5cblx0XHQvLyBNaXNjZWxsYW5lb3VzXG5cdFx0XCJ0YXJnZXRcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHR2YXIgaGFzaCA9IHdpbmRvdy5sb2NhdGlvbiAmJiB3aW5kb3cubG9jYXRpb24uaGFzaDtcblx0XHRcdHJldHVybiBoYXNoICYmIGhhc2guc2xpY2UoIDEgKSA9PT0gZWxlbS5pZDtcblx0XHR9LFxuXG5cdFx0XCJyb290XCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGVsZW0gPT09IGRvY0VsZW07XG5cdFx0fSxcblxuXHRcdFwiZm9jdXNcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gZWxlbSA9PT0gZG9jdW1lbnQuYWN0aXZlRWxlbWVudCAmJlxuXHRcdFx0XHQoICFkb2N1bWVudC5oYXNGb2N1cyB8fCBkb2N1bWVudC5oYXNGb2N1cygpICkgJiZcblx0XHRcdFx0ISEoIGVsZW0udHlwZSB8fCBlbGVtLmhyZWYgfHwgfmVsZW0udGFiSW5kZXggKTtcblx0XHR9LFxuXG5cdFx0Ly8gQm9vbGVhbiBwcm9wZXJ0aWVzXG5cdFx0XCJlbmFibGVkXCI6IGNyZWF0ZURpc2FibGVkUHNldWRvKCBmYWxzZSApLFxuXHRcdFwiZGlzYWJsZWRcIjogY3JlYXRlRGlzYWJsZWRQc2V1ZG8oIHRydWUgKSxcblxuXHRcdFwiY2hlY2tlZFwiOiBmdW5jdGlvbiggZWxlbSApIHtcblxuXHRcdFx0Ly8gSW4gQ1NTMywgOmNoZWNrZWQgc2hvdWxkIHJldHVybiBib3RoIGNoZWNrZWQgYW5kIHNlbGVjdGVkIGVsZW1lbnRzXG5cdFx0XHQvLyBodHRwOi8vd3d3LnczLm9yZy9UUi8yMDExL1JFQy1jc3MzLXNlbGVjdG9ycy0yMDExMDkyOS8jY2hlY2tlZFxuXHRcdFx0dmFyIG5vZGVOYW1lID0gZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO1xuXHRcdFx0cmV0dXJuICggbm9kZU5hbWUgPT09IFwiaW5wdXRcIiAmJiAhIWVsZW0uY2hlY2tlZCApIHx8XG5cdFx0XHRcdCggbm9kZU5hbWUgPT09IFwib3B0aW9uXCIgJiYgISFlbGVtLnNlbGVjdGVkICk7XG5cdFx0fSxcblxuXHRcdFwic2VsZWN0ZWRcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cblx0XHRcdC8vIEFjY2Vzc2luZyB0aGlzIHByb3BlcnR5IG1ha2VzIHNlbGVjdGVkLWJ5LWRlZmF1bHRcblx0XHRcdC8vIG9wdGlvbnMgaW4gU2FmYXJpIHdvcmsgcHJvcGVybHlcblx0XHRcdGlmICggZWxlbS5wYXJlbnROb2RlICkge1xuXHRcdFx0XHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLWV4cHJlc3Npb25zXG5cdFx0XHRcdGVsZW0ucGFyZW50Tm9kZS5zZWxlY3RlZEluZGV4O1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gZWxlbS5zZWxlY3RlZCA9PT0gdHJ1ZTtcblx0XHR9LFxuXG5cdFx0Ly8gQ29udGVudHNcblx0XHRcImVtcHR5XCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXG5cdFx0XHQvLyBodHRwOi8vd3d3LnczLm9yZy9UUi9zZWxlY3RvcnMvI2VtcHR5LXBzZXVkb1xuXHRcdFx0Ly8gOmVtcHR5IGlzIG5lZ2F0ZWQgYnkgZWxlbWVudCAoMSkgb3IgY29udGVudCBub2RlcyAodGV4dDogMzsgY2RhdGE6IDQ7IGVudGl0eSByZWY6IDUpLFxuXHRcdFx0Ly8gICBidXQgbm90IGJ5IG90aGVycyAoY29tbWVudDogODsgcHJvY2Vzc2luZyBpbnN0cnVjdGlvbjogNzsgZXRjLilcblx0XHRcdC8vIG5vZGVUeXBlIDwgNiB3b3JrcyBiZWNhdXNlIGF0dHJpYnV0ZXMgKDIpIGRvIG5vdCBhcHBlYXIgYXMgY2hpbGRyZW5cblx0XHRcdGZvciAoIGVsZW0gPSBlbGVtLmZpcnN0Q2hpbGQ7IGVsZW07IGVsZW0gPSBlbGVtLm5leHRTaWJsaW5nICkge1xuXHRcdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPCA2ICkge1xuXHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0fSxcblxuXHRcdFwicGFyZW50XCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuICFFeHByLnBzZXVkb3NbIFwiZW1wdHlcIiBdKCBlbGVtICk7XG5cdFx0fSxcblxuXHRcdC8vIEVsZW1lbnQvaW5wdXQgdHlwZXNcblx0XHRcImhlYWRlclwiOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiByaGVhZGVyLnRlc3QoIGVsZW0ubm9kZU5hbWUgKTtcblx0XHR9LFxuXG5cdFx0XCJpbnB1dFwiOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiByaW5wdXRzLnRlc3QoIGVsZW0ubm9kZU5hbWUgKTtcblx0XHR9LFxuXG5cdFx0XCJidXR0b25cIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHR2YXIgbmFtZSA9IGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtcblx0XHRcdHJldHVybiBuYW1lID09PSBcImlucHV0XCIgJiYgZWxlbS50eXBlID09PSBcImJ1dHRvblwiIHx8IG5hbWUgPT09IFwiYnV0dG9uXCI7XG5cdFx0fSxcblxuXHRcdFwidGV4dFwiOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHZhciBhdHRyO1xuXHRcdFx0cmV0dXJuIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gXCJpbnB1dFwiICYmXG5cdFx0XHRcdGVsZW0udHlwZSA9PT0gXCJ0ZXh0XCIgJiZcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBJRTw4XG5cdFx0XHRcdC8vIE5ldyBIVE1MNSBhdHRyaWJ1dGUgdmFsdWVzIChlLmcuLCBcInNlYXJjaFwiKSBhcHBlYXIgd2l0aCBlbGVtLnR5cGUgPT09IFwidGV4dFwiXG5cdFx0XHRcdCggKCBhdHRyID0gZWxlbS5nZXRBdHRyaWJ1dGUoIFwidHlwZVwiICkgKSA9PSBudWxsIHx8XG5cdFx0XHRcdFx0YXR0ci50b0xvd2VyQ2FzZSgpID09PSBcInRleHRcIiApO1xuXHRcdH0sXG5cblx0XHQvLyBQb3NpdGlvbi1pbi1jb2xsZWN0aW9uXG5cdFx0XCJmaXJzdFwiOiBjcmVhdGVQb3NpdGlvbmFsUHNldWRvKCBmdW5jdGlvbigpIHtcblx0XHRcdHJldHVybiBbIDAgXTtcblx0XHR9ICksXG5cblx0XHRcImxhc3RcIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyggZnVuY3Rpb24oIF9tYXRjaEluZGV4ZXMsIGxlbmd0aCApIHtcblx0XHRcdHJldHVybiBbIGxlbmd0aCAtIDEgXTtcblx0XHR9ICksXG5cblx0XHRcImVxXCI6IGNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oIGZ1bmN0aW9uKCBfbWF0Y2hJbmRleGVzLCBsZW5ndGgsIGFyZ3VtZW50ICkge1xuXHRcdFx0cmV0dXJuIFsgYXJndW1lbnQgPCAwID8gYXJndW1lbnQgKyBsZW5ndGggOiBhcmd1bWVudCBdO1xuXHRcdH0gKSxcblxuXHRcdFwiZXZlblwiOiBjcmVhdGVQb3NpdGlvbmFsUHNldWRvKCBmdW5jdGlvbiggbWF0Y2hJbmRleGVzLCBsZW5ndGggKSB7XG5cdFx0XHR2YXIgaSA9IDA7XG5cdFx0XHRmb3IgKCA7IGkgPCBsZW5ndGg7IGkgKz0gMiApIHtcblx0XHRcdFx0bWF0Y2hJbmRleGVzLnB1c2goIGkgKTtcblx0XHRcdH1cblx0XHRcdHJldHVybiBtYXRjaEluZGV4ZXM7XG5cdFx0fSApLFxuXG5cdFx0XCJvZGRcIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyggZnVuY3Rpb24oIG1hdGNoSW5kZXhlcywgbGVuZ3RoICkge1xuXHRcdFx0dmFyIGkgPSAxO1xuXHRcdFx0Zm9yICggOyBpIDwgbGVuZ3RoOyBpICs9IDIgKSB7XG5cdFx0XHRcdG1hdGNoSW5kZXhlcy5wdXNoKCBpICk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gbWF0Y2hJbmRleGVzO1xuXHRcdH0gKSxcblxuXHRcdFwibHRcIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyggZnVuY3Rpb24oIG1hdGNoSW5kZXhlcywgbGVuZ3RoLCBhcmd1bWVudCApIHtcblx0XHRcdHZhciBpID0gYXJndW1lbnQgPCAwID9cblx0XHRcdFx0YXJndW1lbnQgKyBsZW5ndGggOlxuXHRcdFx0XHRhcmd1bWVudCA+IGxlbmd0aCA/XG5cdFx0XHRcdFx0bGVuZ3RoIDpcblx0XHRcdFx0XHRhcmd1bWVudDtcblx0XHRcdGZvciAoIDsgLS1pID49IDA7ICkge1xuXHRcdFx0XHRtYXRjaEluZGV4ZXMucHVzaCggaSApO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIG1hdGNoSW5kZXhlcztcblx0XHR9ICksXG5cblx0XHRcImd0XCI6IGNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oIGZ1bmN0aW9uKCBtYXRjaEluZGV4ZXMsIGxlbmd0aCwgYXJndW1lbnQgKSB7XG5cdFx0XHR2YXIgaSA9IGFyZ3VtZW50IDwgMCA/IGFyZ3VtZW50ICsgbGVuZ3RoIDogYXJndW1lbnQ7XG5cdFx0XHRmb3IgKCA7ICsraSA8IGxlbmd0aDsgKSB7XG5cdFx0XHRcdG1hdGNoSW5kZXhlcy5wdXNoKCBpICk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gbWF0Y2hJbmRleGVzO1xuXHRcdH0gKVxuXHR9XG59O1xuXG5FeHByLnBzZXVkb3NbIFwibnRoXCIgXSA9IEV4cHIucHNldWRvc1sgXCJlcVwiIF07XG5cbi8vIEFkZCBidXR0b24vaW5wdXQgdHlwZSBwc2V1ZG9zXG5mb3IgKCBpIGluIHsgcmFkaW86IHRydWUsIGNoZWNrYm94OiB0cnVlLCBmaWxlOiB0cnVlLCBwYXNzd29yZDogdHJ1ZSwgaW1hZ2U6IHRydWUgfSApIHtcblx0RXhwci5wc2V1ZG9zWyBpIF0gPSBjcmVhdGVJbnB1dFBzZXVkbyggaSApO1xufVxuZm9yICggaSBpbiB7IHN1Ym1pdDogdHJ1ZSwgcmVzZXQ6IHRydWUgfSApIHtcblx0RXhwci5wc2V1ZG9zWyBpIF0gPSBjcmVhdGVCdXR0b25Qc2V1ZG8oIGkgKTtcbn1cblxuLy8gRWFzeSBBUEkgZm9yIGNyZWF0aW5nIG5ldyBzZXRGaWx0ZXJzXG5mdW5jdGlvbiBzZXRGaWx0ZXJzKCkge31cbnNldEZpbHRlcnMucHJvdG90eXBlID0gRXhwci5maWx0ZXJzID0gRXhwci5wc2V1ZG9zO1xuRXhwci5zZXRGaWx0ZXJzID0gbmV3IHNldEZpbHRlcnMoKTtcblxudG9rZW5pemUgPSBTaXp6bGUudG9rZW5pemUgPSBmdW5jdGlvbiggc2VsZWN0b3IsIHBhcnNlT25seSApIHtcblx0dmFyIG1hdGNoZWQsIG1hdGNoLCB0b2tlbnMsIHR5cGUsXG5cdFx0c29GYXIsIGdyb3VwcywgcHJlRmlsdGVycyxcblx0XHRjYWNoZWQgPSB0b2tlbkNhY2hlWyBzZWxlY3RvciArIFwiIFwiIF07XG5cblx0aWYgKCBjYWNoZWQgKSB7XG5cdFx0cmV0dXJuIHBhcnNlT25seSA/IDAgOiBjYWNoZWQuc2xpY2UoIDAgKTtcblx0fVxuXG5cdHNvRmFyID0gc2VsZWN0b3I7XG5cdGdyb3VwcyA9IFtdO1xuXHRwcmVGaWx0ZXJzID0gRXhwci5wcmVGaWx0ZXI7XG5cblx0d2hpbGUgKCBzb0ZhciApIHtcblxuXHRcdC8vIENvbW1hIGFuZCBmaXJzdCBydW5cblx0XHRpZiAoICFtYXRjaGVkIHx8ICggbWF0Y2ggPSByY29tbWEuZXhlYyggc29GYXIgKSApICkge1xuXHRcdFx0aWYgKCBtYXRjaCApIHtcblxuXHRcdFx0XHQvLyBEb24ndCBjb25zdW1lIHRyYWlsaW5nIGNvbW1hcyBhcyB2YWxpZFxuXHRcdFx0XHRzb0ZhciA9IHNvRmFyLnNsaWNlKCBtYXRjaFsgMCBdLmxlbmd0aCApIHx8IHNvRmFyO1xuXHRcdFx0fVxuXHRcdFx0Z3JvdXBzLnB1c2goICggdG9rZW5zID0gW10gKSApO1xuXHRcdH1cblxuXHRcdG1hdGNoZWQgPSBmYWxzZTtcblxuXHRcdC8vIENvbWJpbmF0b3JzXG5cdFx0aWYgKCAoIG1hdGNoID0gcmNvbWJpbmF0b3JzLmV4ZWMoIHNvRmFyICkgKSApIHtcblx0XHRcdG1hdGNoZWQgPSBtYXRjaC5zaGlmdCgpO1xuXHRcdFx0dG9rZW5zLnB1c2goIHtcblx0XHRcdFx0dmFsdWU6IG1hdGNoZWQsXG5cblx0XHRcdFx0Ly8gQ2FzdCBkZXNjZW5kYW50IGNvbWJpbmF0b3JzIHRvIHNwYWNlXG5cdFx0XHRcdHR5cGU6IG1hdGNoWyAwIF0ucmVwbGFjZSggcnRyaW0sIFwiIFwiIClcblx0XHRcdH0gKTtcblx0XHRcdHNvRmFyID0gc29GYXIuc2xpY2UoIG1hdGNoZWQubGVuZ3RoICk7XG5cdFx0fVxuXG5cdFx0Ly8gRmlsdGVyc1xuXHRcdGZvciAoIHR5cGUgaW4gRXhwci5maWx0ZXIgKSB7XG5cdFx0XHRpZiAoICggbWF0Y2ggPSBtYXRjaEV4cHJbIHR5cGUgXS5leGVjKCBzb0ZhciApICkgJiYgKCAhcHJlRmlsdGVyc1sgdHlwZSBdIHx8XG5cdFx0XHRcdCggbWF0Y2ggPSBwcmVGaWx0ZXJzWyB0eXBlIF0oIG1hdGNoICkgKSApICkge1xuXHRcdFx0XHRtYXRjaGVkID0gbWF0Y2guc2hpZnQoKTtcblx0XHRcdFx0dG9rZW5zLnB1c2goIHtcblx0XHRcdFx0XHR2YWx1ZTogbWF0Y2hlZCxcblx0XHRcdFx0XHR0eXBlOiB0eXBlLFxuXHRcdFx0XHRcdG1hdGNoZXM6IG1hdGNoXG5cdFx0XHRcdH0gKTtcblx0XHRcdFx0c29GYXIgPSBzb0Zhci5zbGljZSggbWF0Y2hlZC5sZW5ndGggKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAoICFtYXRjaGVkICkge1xuXHRcdFx0YnJlYWs7XG5cdFx0fVxuXHR9XG5cblx0Ly8gUmV0dXJuIHRoZSBsZW5ndGggb2YgdGhlIGludmFsaWQgZXhjZXNzXG5cdC8vIGlmIHdlJ3JlIGp1c3QgcGFyc2luZ1xuXHQvLyBPdGhlcndpc2UsIHRocm93IGFuIGVycm9yIG9yIHJldHVybiB0b2tlbnNcblx0cmV0dXJuIHBhcnNlT25seSA/XG5cdFx0c29GYXIubGVuZ3RoIDpcblx0XHRzb0ZhciA/XG5cdFx0XHRTaXp6bGUuZXJyb3IoIHNlbGVjdG9yICkgOlxuXG5cdFx0XHQvLyBDYWNoZSB0aGUgdG9rZW5zXG5cdFx0XHR0b2tlbkNhY2hlKCBzZWxlY3RvciwgZ3JvdXBzICkuc2xpY2UoIDAgKTtcbn07XG5cbmZ1bmN0aW9uIHRvU2VsZWN0b3IoIHRva2VucyApIHtcblx0dmFyIGkgPSAwLFxuXHRcdGxlbiA9IHRva2Vucy5sZW5ndGgsXG5cdFx0c2VsZWN0b3IgPSBcIlwiO1xuXHRmb3IgKCA7IGkgPCBsZW47IGkrKyApIHtcblx0XHRzZWxlY3RvciArPSB0b2tlbnNbIGkgXS52YWx1ZTtcblx0fVxuXHRyZXR1cm4gc2VsZWN0b3I7XG59XG5cbmZ1bmN0aW9uIGFkZENvbWJpbmF0b3IoIG1hdGNoZXIsIGNvbWJpbmF0b3IsIGJhc2UgKSB7XG5cdHZhciBkaXIgPSBjb21iaW5hdG9yLmRpcixcblx0XHRza2lwID0gY29tYmluYXRvci5uZXh0LFxuXHRcdGtleSA9IHNraXAgfHwgZGlyLFxuXHRcdGNoZWNrTm9uRWxlbWVudHMgPSBiYXNlICYmIGtleSA9PT0gXCJwYXJlbnROb2RlXCIsXG5cdFx0ZG9uZU5hbWUgPSBkb25lKys7XG5cblx0cmV0dXJuIGNvbWJpbmF0b3IuZmlyc3QgP1xuXG5cdFx0Ly8gQ2hlY2sgYWdhaW5zdCBjbG9zZXN0IGFuY2VzdG9yL3ByZWNlZGluZyBlbGVtZW50XG5cdFx0ZnVuY3Rpb24oIGVsZW0sIGNvbnRleHQsIHhtbCApIHtcblx0XHRcdHdoaWxlICggKCBlbGVtID0gZWxlbVsgZGlyIF0gKSApIHtcblx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxIHx8IGNoZWNrTm9uRWxlbWVudHMgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIG1hdGNoZXIoIGVsZW0sIGNvbnRleHQsIHhtbCApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fSA6XG5cblx0XHQvLyBDaGVjayBhZ2FpbnN0IGFsbCBhbmNlc3Rvci9wcmVjZWRpbmcgZWxlbWVudHNcblx0XHRmdW5jdGlvbiggZWxlbSwgY29udGV4dCwgeG1sICkge1xuXHRcdFx0dmFyIG9sZENhY2hlLCB1bmlxdWVDYWNoZSwgb3V0ZXJDYWNoZSxcblx0XHRcdFx0bmV3Q2FjaGUgPSBbIGRpcnJ1bnMsIGRvbmVOYW1lIF07XG5cblx0XHRcdC8vIFdlIGNhbid0IHNldCBhcmJpdHJhcnkgZGF0YSBvbiBYTUwgbm9kZXMsIHNvIHRoZXkgZG9uJ3QgYmVuZWZpdCBmcm9tIGNvbWJpbmF0b3IgY2FjaGluZ1xuXHRcdFx0aWYgKCB4bWwgKSB7XG5cdFx0XHRcdHdoaWxlICggKCBlbGVtID0gZWxlbVsgZGlyIF0gKSApIHtcblx0XHRcdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgfHwgY2hlY2tOb25FbGVtZW50cyApIHtcblx0XHRcdFx0XHRcdGlmICggbWF0Y2hlciggZWxlbSwgY29udGV4dCwgeG1sICkgKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0d2hpbGUgKCAoIGVsZW0gPSBlbGVtWyBkaXIgXSApICkge1xuXHRcdFx0XHRcdGlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSB8fCBjaGVja05vbkVsZW1lbnRzICkge1xuXHRcdFx0XHRcdFx0b3V0ZXJDYWNoZSA9IGVsZW1bIGV4cGFuZG8gXSB8fCAoIGVsZW1bIGV4cGFuZG8gXSA9IHt9ICk7XG5cblx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw5IG9ubHlcblx0XHRcdFx0XHRcdC8vIERlZmVuZCBhZ2FpbnN0IGNsb25lZCBhdHRyb3BlcnRpZXMgKGpRdWVyeSBnaC0xNzA5KVxuXHRcdFx0XHRcdFx0dW5pcXVlQ2FjaGUgPSBvdXRlckNhY2hlWyBlbGVtLnVuaXF1ZUlEIF0gfHxcblx0XHRcdFx0XHRcdFx0KCBvdXRlckNhY2hlWyBlbGVtLnVuaXF1ZUlEIF0gPSB7fSApO1xuXG5cdFx0XHRcdFx0XHRpZiAoIHNraXAgJiYgc2tpcCA9PT0gZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpICkge1xuXHRcdFx0XHRcdFx0XHRlbGVtID0gZWxlbVsgZGlyIF0gfHwgZWxlbTtcblx0XHRcdFx0XHRcdH0gZWxzZSBpZiAoICggb2xkQ2FjaGUgPSB1bmlxdWVDYWNoZVsga2V5IF0gKSAmJlxuXHRcdFx0XHRcdFx0XHRvbGRDYWNoZVsgMCBdID09PSBkaXJydW5zICYmIG9sZENhY2hlWyAxIF0gPT09IGRvbmVOYW1lICkge1xuXG5cdFx0XHRcdFx0XHRcdC8vIEFzc2lnbiB0byBuZXdDYWNoZSBzbyByZXN1bHRzIGJhY2stcHJvcGFnYXRlIHRvIHByZXZpb3VzIGVsZW1lbnRzXG5cdFx0XHRcdFx0XHRcdHJldHVybiAoIG5ld0NhY2hlWyAyIF0gPSBvbGRDYWNoZVsgMiBdICk7XG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdFx0XHRcdC8vIFJldXNlIG5ld2NhY2hlIHNvIHJlc3VsdHMgYmFjay1wcm9wYWdhdGUgdG8gcHJldmlvdXMgZWxlbWVudHNcblx0XHRcdFx0XHRcdFx0dW5pcXVlQ2FjaGVbIGtleSBdID0gbmV3Q2FjaGU7XG5cblx0XHRcdFx0XHRcdFx0Ly8gQSBtYXRjaCBtZWFucyB3ZSdyZSBkb25lOyBhIGZhaWwgbWVhbnMgd2UgaGF2ZSB0byBrZWVwIGNoZWNraW5nXG5cdFx0XHRcdFx0XHRcdGlmICggKCBuZXdDYWNoZVsgMiBdID0gbWF0Y2hlciggZWxlbSwgY29udGV4dCwgeG1sICkgKSApIHtcblx0XHRcdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH07XG59XG5cbmZ1bmN0aW9uIGVsZW1lbnRNYXRjaGVyKCBtYXRjaGVycyApIHtcblx0cmV0dXJuIG1hdGNoZXJzLmxlbmd0aCA+IDEgP1xuXHRcdGZ1bmN0aW9uKCBlbGVtLCBjb250ZXh0LCB4bWwgKSB7XG5cdFx0XHR2YXIgaSA9IG1hdGNoZXJzLmxlbmd0aDtcblx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRpZiAoICFtYXRjaGVyc1sgaSBdKCBlbGVtLCBjb250ZXh0LCB4bWwgKSApIHtcblx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHJldHVybiB0cnVlO1xuXHRcdH0gOlxuXHRcdG1hdGNoZXJzWyAwIF07XG59XG5cbmZ1bmN0aW9uIG11bHRpcGxlQ29udGV4dHMoIHNlbGVjdG9yLCBjb250ZXh0cywgcmVzdWx0cyApIHtcblx0dmFyIGkgPSAwLFxuXHRcdGxlbiA9IGNvbnRleHRzLmxlbmd0aDtcblx0Zm9yICggOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0U2l6emxlKCBzZWxlY3RvciwgY29udGV4dHNbIGkgXSwgcmVzdWx0cyApO1xuXHR9XG5cdHJldHVybiByZXN1bHRzO1xufVxuXG5mdW5jdGlvbiBjb25kZW5zZSggdW5tYXRjaGVkLCBtYXAsIGZpbHRlciwgY29udGV4dCwgeG1sICkge1xuXHR2YXIgZWxlbSxcblx0XHRuZXdVbm1hdGNoZWQgPSBbXSxcblx0XHRpID0gMCxcblx0XHRsZW4gPSB1bm1hdGNoZWQubGVuZ3RoLFxuXHRcdG1hcHBlZCA9IG1hcCAhPSBudWxsO1xuXG5cdGZvciAoIDsgaSA8IGxlbjsgaSsrICkge1xuXHRcdGlmICggKCBlbGVtID0gdW5tYXRjaGVkWyBpIF0gKSApIHtcblx0XHRcdGlmICggIWZpbHRlciB8fCBmaWx0ZXIoIGVsZW0sIGNvbnRleHQsIHhtbCApICkge1xuXHRcdFx0XHRuZXdVbm1hdGNoZWQucHVzaCggZWxlbSApO1xuXHRcdFx0XHRpZiAoIG1hcHBlZCApIHtcblx0XHRcdFx0XHRtYXAucHVzaCggaSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIG5ld1VubWF0Y2hlZDtcbn1cblxuZnVuY3Rpb24gc2V0TWF0Y2hlciggcHJlRmlsdGVyLCBzZWxlY3RvciwgbWF0Y2hlciwgcG9zdEZpbHRlciwgcG9zdEZpbmRlciwgcG9zdFNlbGVjdG9yICkge1xuXHRpZiAoIHBvc3RGaWx0ZXIgJiYgIXBvc3RGaWx0ZXJbIGV4cGFuZG8gXSApIHtcblx0XHRwb3N0RmlsdGVyID0gc2V0TWF0Y2hlciggcG9zdEZpbHRlciApO1xuXHR9XG5cdGlmICggcG9zdEZpbmRlciAmJiAhcG9zdEZpbmRlclsgZXhwYW5kbyBdICkge1xuXHRcdHBvc3RGaW5kZXIgPSBzZXRNYXRjaGVyKCBwb3N0RmluZGVyLCBwb3N0U2VsZWN0b3IgKTtcblx0fVxuXHRyZXR1cm4gbWFya0Z1bmN0aW9uKCBmdW5jdGlvbiggc2VlZCwgcmVzdWx0cywgY29udGV4dCwgeG1sICkge1xuXHRcdHZhciB0ZW1wLCBpLCBlbGVtLFxuXHRcdFx0cHJlTWFwID0gW10sXG5cdFx0XHRwb3N0TWFwID0gW10sXG5cdFx0XHRwcmVleGlzdGluZyA9IHJlc3VsdHMubGVuZ3RoLFxuXG5cdFx0XHQvLyBHZXQgaW5pdGlhbCBlbGVtZW50cyBmcm9tIHNlZWQgb3IgY29udGV4dFxuXHRcdFx0ZWxlbXMgPSBzZWVkIHx8IG11bHRpcGxlQ29udGV4dHMoXG5cdFx0XHRcdHNlbGVjdG9yIHx8IFwiKlwiLFxuXHRcdFx0XHRjb250ZXh0Lm5vZGVUeXBlID8gWyBjb250ZXh0IF0gOiBjb250ZXh0LFxuXHRcdFx0XHRbXVxuXHRcdFx0KSxcblxuXHRcdFx0Ly8gUHJlZmlsdGVyIHRvIGdldCBtYXRjaGVyIGlucHV0LCBwcmVzZXJ2aW5nIGEgbWFwIGZvciBzZWVkLXJlc3VsdHMgc3luY2hyb25pemF0aW9uXG5cdFx0XHRtYXRjaGVySW4gPSBwcmVGaWx0ZXIgJiYgKCBzZWVkIHx8ICFzZWxlY3RvciApID9cblx0XHRcdFx0Y29uZGVuc2UoIGVsZW1zLCBwcmVNYXAsIHByZUZpbHRlciwgY29udGV4dCwgeG1sICkgOlxuXHRcdFx0XHRlbGVtcyxcblxuXHRcdFx0bWF0Y2hlck91dCA9IG1hdGNoZXIgP1xuXG5cdFx0XHRcdC8vIElmIHdlIGhhdmUgYSBwb3N0RmluZGVyLCBvciBmaWx0ZXJlZCBzZWVkLCBvciBub24tc2VlZCBwb3N0RmlsdGVyIG9yIHByZWV4aXN0aW5nIHJlc3VsdHMsXG5cdFx0XHRcdHBvc3RGaW5kZXIgfHwgKCBzZWVkID8gcHJlRmlsdGVyIDogcHJlZXhpc3RpbmcgfHwgcG9zdEZpbHRlciApID9cblxuXHRcdFx0XHRcdC8vIC4uLmludGVybWVkaWF0ZSBwcm9jZXNzaW5nIGlzIG5lY2Vzc2FyeVxuXHRcdFx0XHRcdFtdIDpcblxuXHRcdFx0XHRcdC8vIC4uLm90aGVyd2lzZSB1c2UgcmVzdWx0cyBkaXJlY3RseVxuXHRcdFx0XHRcdHJlc3VsdHMgOlxuXHRcdFx0XHRtYXRjaGVySW47XG5cblx0XHQvLyBGaW5kIHByaW1hcnkgbWF0Y2hlc1xuXHRcdGlmICggbWF0Y2hlciApIHtcblx0XHRcdG1hdGNoZXIoIG1hdGNoZXJJbiwgbWF0Y2hlck91dCwgY29udGV4dCwgeG1sICk7XG5cdFx0fVxuXG5cdFx0Ly8gQXBwbHkgcG9zdEZpbHRlclxuXHRcdGlmICggcG9zdEZpbHRlciApIHtcblx0XHRcdHRlbXAgPSBjb25kZW5zZSggbWF0Y2hlck91dCwgcG9zdE1hcCApO1xuXHRcdFx0cG9zdEZpbHRlciggdGVtcCwgW10sIGNvbnRleHQsIHhtbCApO1xuXG5cdFx0XHQvLyBVbi1tYXRjaCBmYWlsaW5nIGVsZW1lbnRzIGJ5IG1vdmluZyB0aGVtIGJhY2sgdG8gbWF0Y2hlckluXG5cdFx0XHRpID0gdGVtcC5sZW5ndGg7XG5cdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0aWYgKCAoIGVsZW0gPSB0ZW1wWyBpIF0gKSApIHtcblx0XHRcdFx0XHRtYXRjaGVyT3V0WyBwb3N0TWFwWyBpIF0gXSA9ICEoIG1hdGNoZXJJblsgcG9zdE1hcFsgaSBdIF0gPSBlbGVtICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAoIHNlZWQgKSB7XG5cdFx0XHRpZiAoIHBvc3RGaW5kZXIgfHwgcHJlRmlsdGVyICkge1xuXHRcdFx0XHRpZiAoIHBvc3RGaW5kZXIgKSB7XG5cblx0XHRcdFx0XHQvLyBHZXQgdGhlIGZpbmFsIG1hdGNoZXJPdXQgYnkgY29uZGVuc2luZyB0aGlzIGludGVybWVkaWF0ZSBpbnRvIHBvc3RGaW5kZXIgY29udGV4dHNcblx0XHRcdFx0XHR0ZW1wID0gW107XG5cdFx0XHRcdFx0aSA9IG1hdGNoZXJPdXQubGVuZ3RoO1xuXHRcdFx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRcdFx0aWYgKCAoIGVsZW0gPSBtYXRjaGVyT3V0WyBpIF0gKSApIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBSZXN0b3JlIG1hdGNoZXJJbiBzaW5jZSBlbGVtIGlzIG5vdCB5ZXQgYSBmaW5hbCBtYXRjaFxuXHRcdFx0XHRcdFx0XHR0ZW1wLnB1c2goICggbWF0Y2hlckluWyBpIF0gPSBlbGVtICkgKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cG9zdEZpbmRlciggbnVsbCwgKCBtYXRjaGVyT3V0ID0gW10gKSwgdGVtcCwgeG1sICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBNb3ZlIG1hdGNoZWQgZWxlbWVudHMgZnJvbSBzZWVkIHRvIHJlc3VsdHMgdG8ga2VlcCB0aGVtIHN5bmNocm9uaXplZFxuXHRcdFx0XHRpID0gbWF0Y2hlck91dC5sZW5ndGg7XG5cdFx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRcdGlmICggKCBlbGVtID0gbWF0Y2hlck91dFsgaSBdICkgJiZcblx0XHRcdFx0XHRcdCggdGVtcCA9IHBvc3RGaW5kZXIgPyBpbmRleE9mKCBzZWVkLCBlbGVtICkgOiBwcmVNYXBbIGkgXSApID4gLTEgKSB7XG5cblx0XHRcdFx0XHRcdHNlZWRbIHRlbXAgXSA9ICEoIHJlc3VsdHNbIHRlbXAgXSA9IGVsZW0gKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdC8vIEFkZCBlbGVtZW50cyB0byByZXN1bHRzLCB0aHJvdWdoIHBvc3RGaW5kZXIgaWYgZGVmaW5lZFxuXHRcdH0gZWxzZSB7XG5cdFx0XHRtYXRjaGVyT3V0ID0gY29uZGVuc2UoXG5cdFx0XHRcdG1hdGNoZXJPdXQgPT09IHJlc3VsdHMgP1xuXHRcdFx0XHRcdG1hdGNoZXJPdXQuc3BsaWNlKCBwcmVleGlzdGluZywgbWF0Y2hlck91dC5sZW5ndGggKSA6XG5cdFx0XHRcdFx0bWF0Y2hlck91dFxuXHRcdFx0KTtcblx0XHRcdGlmICggcG9zdEZpbmRlciApIHtcblx0XHRcdFx0cG9zdEZpbmRlciggbnVsbCwgcmVzdWx0cywgbWF0Y2hlck91dCwgeG1sICk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRwdXNoLmFwcGx5KCByZXN1bHRzLCBtYXRjaGVyT3V0ICk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9ICk7XG59XG5cbmZ1bmN0aW9uIG1hdGNoZXJGcm9tVG9rZW5zKCB0b2tlbnMgKSB7XG5cdHZhciBjaGVja0NvbnRleHQsIG1hdGNoZXIsIGosXG5cdFx0bGVuID0gdG9rZW5zLmxlbmd0aCxcblx0XHRsZWFkaW5nUmVsYXRpdmUgPSBFeHByLnJlbGF0aXZlWyB0b2tlbnNbIDAgXS50eXBlIF0sXG5cdFx0aW1wbGljaXRSZWxhdGl2ZSA9IGxlYWRpbmdSZWxhdGl2ZSB8fCBFeHByLnJlbGF0aXZlWyBcIiBcIiBdLFxuXHRcdGkgPSBsZWFkaW5nUmVsYXRpdmUgPyAxIDogMCxcblxuXHRcdC8vIFRoZSBmb3VuZGF0aW9uYWwgbWF0Y2hlciBlbnN1cmVzIHRoYXQgZWxlbWVudHMgYXJlIHJlYWNoYWJsZSBmcm9tIHRvcC1sZXZlbCBjb250ZXh0KHMpXG5cdFx0bWF0Y2hDb250ZXh0ID0gYWRkQ29tYmluYXRvciggZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gZWxlbSA9PT0gY2hlY2tDb250ZXh0O1xuXHRcdH0sIGltcGxpY2l0UmVsYXRpdmUsIHRydWUgKSxcblx0XHRtYXRjaEFueUNvbnRleHQgPSBhZGRDb21iaW5hdG9yKCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiBpbmRleE9mKCBjaGVja0NvbnRleHQsIGVsZW0gKSA+IC0xO1xuXHRcdH0sIGltcGxpY2l0UmVsYXRpdmUsIHRydWUgKSxcblx0XHRtYXRjaGVycyA9IFsgZnVuY3Rpb24oIGVsZW0sIGNvbnRleHQsIHhtbCApIHtcblx0XHRcdHZhciByZXQgPSAoICFsZWFkaW5nUmVsYXRpdmUgJiYgKCB4bWwgfHwgY29udGV4dCAhPT0gb3V0ZXJtb3N0Q29udGV4dCApICkgfHwgKFxuXHRcdFx0XHQoIGNoZWNrQ29udGV4dCA9IGNvbnRleHQgKS5ub2RlVHlwZSA/XG5cdFx0XHRcdFx0bWF0Y2hDb250ZXh0KCBlbGVtLCBjb250ZXh0LCB4bWwgKSA6XG5cdFx0XHRcdFx0bWF0Y2hBbnlDb250ZXh0KCBlbGVtLCBjb250ZXh0LCB4bWwgKSApO1xuXG5cdFx0XHQvLyBBdm9pZCBoYW5naW5nIG9udG8gZWxlbWVudCAoaXNzdWUgIzI5OSlcblx0XHRcdGNoZWNrQ29udGV4dCA9IG51bGw7XG5cdFx0XHRyZXR1cm4gcmV0O1xuXHRcdH0gXTtcblxuXHRmb3IgKCA7IGkgPCBsZW47IGkrKyApIHtcblx0XHRpZiAoICggbWF0Y2hlciA9IEV4cHIucmVsYXRpdmVbIHRva2Vuc1sgaSBdLnR5cGUgXSApICkge1xuXHRcdFx0bWF0Y2hlcnMgPSBbIGFkZENvbWJpbmF0b3IoIGVsZW1lbnRNYXRjaGVyKCBtYXRjaGVycyApLCBtYXRjaGVyICkgXTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0bWF0Y2hlciA9IEV4cHIuZmlsdGVyWyB0b2tlbnNbIGkgXS50eXBlIF0uYXBwbHkoIG51bGwsIHRva2Vuc1sgaSBdLm1hdGNoZXMgKTtcblxuXHRcdFx0Ly8gUmV0dXJuIHNwZWNpYWwgdXBvbiBzZWVpbmcgYSBwb3NpdGlvbmFsIG1hdGNoZXJcblx0XHRcdGlmICggbWF0Y2hlclsgZXhwYW5kbyBdICkge1xuXG5cdFx0XHRcdC8vIEZpbmQgdGhlIG5leHQgcmVsYXRpdmUgb3BlcmF0b3IgKGlmIGFueSkgZm9yIHByb3BlciBoYW5kbGluZ1xuXHRcdFx0XHRqID0gKytpO1xuXHRcdFx0XHRmb3IgKCA7IGogPCBsZW47IGorKyApIHtcblx0XHRcdFx0XHRpZiAoIEV4cHIucmVsYXRpdmVbIHRva2Vuc1sgaiBdLnR5cGUgXSApIHtcblx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gc2V0TWF0Y2hlcihcblx0XHRcdFx0XHRpID4gMSAmJiBlbGVtZW50TWF0Y2hlciggbWF0Y2hlcnMgKSxcblx0XHRcdFx0XHRpID4gMSAmJiB0b1NlbGVjdG9yKFxuXG5cdFx0XHRcdFx0Ly8gSWYgdGhlIHByZWNlZGluZyB0b2tlbiB3YXMgYSBkZXNjZW5kYW50IGNvbWJpbmF0b3IsIGluc2VydCBhbiBpbXBsaWNpdCBhbnktZWxlbWVudCBgKmBcblx0XHRcdFx0XHR0b2tlbnNcblx0XHRcdFx0XHRcdC5zbGljZSggMCwgaSAtIDEgKVxuXHRcdFx0XHRcdFx0LmNvbmNhdCggeyB2YWx1ZTogdG9rZW5zWyBpIC0gMiBdLnR5cGUgPT09IFwiIFwiID8gXCIqXCIgOiBcIlwiIH0gKVxuXHRcdFx0XHRcdCkucmVwbGFjZSggcnRyaW0sIFwiJDFcIiApLFxuXHRcdFx0XHRcdG1hdGNoZXIsXG5cdFx0XHRcdFx0aSA8IGogJiYgbWF0Y2hlckZyb21Ub2tlbnMoIHRva2Vucy5zbGljZSggaSwgaiApICksXG5cdFx0XHRcdFx0aiA8IGxlbiAmJiBtYXRjaGVyRnJvbVRva2VucyggKCB0b2tlbnMgPSB0b2tlbnMuc2xpY2UoIGogKSApICksXG5cdFx0XHRcdFx0aiA8IGxlbiAmJiB0b1NlbGVjdG9yKCB0b2tlbnMgKVxuXHRcdFx0XHQpO1xuXHRcdFx0fVxuXHRcdFx0bWF0Y2hlcnMucHVzaCggbWF0Y2hlciApO1xuXHRcdH1cblx0fVxuXG5cdHJldHVybiBlbGVtZW50TWF0Y2hlciggbWF0Y2hlcnMgKTtcbn1cblxuZnVuY3Rpb24gbWF0Y2hlckZyb21Hcm91cE1hdGNoZXJzKCBlbGVtZW50TWF0Y2hlcnMsIHNldE1hdGNoZXJzICkge1xuXHR2YXIgYnlTZXQgPSBzZXRNYXRjaGVycy5sZW5ndGggPiAwLFxuXHRcdGJ5RWxlbWVudCA9IGVsZW1lbnRNYXRjaGVycy5sZW5ndGggPiAwLFxuXHRcdHN1cGVyTWF0Y2hlciA9IGZ1bmN0aW9uKCBzZWVkLCBjb250ZXh0LCB4bWwsIHJlc3VsdHMsIG91dGVybW9zdCApIHtcblx0XHRcdHZhciBlbGVtLCBqLCBtYXRjaGVyLFxuXHRcdFx0XHRtYXRjaGVkQ291bnQgPSAwLFxuXHRcdFx0XHRpID0gXCIwXCIsXG5cdFx0XHRcdHVubWF0Y2hlZCA9IHNlZWQgJiYgW10sXG5cdFx0XHRcdHNldE1hdGNoZWQgPSBbXSxcblx0XHRcdFx0Y29udGV4dEJhY2t1cCA9IG91dGVybW9zdENvbnRleHQsXG5cblx0XHRcdFx0Ly8gV2UgbXVzdCBhbHdheXMgaGF2ZSBlaXRoZXIgc2VlZCBlbGVtZW50cyBvciBvdXRlcm1vc3QgY29udGV4dFxuXHRcdFx0XHRlbGVtcyA9IHNlZWQgfHwgYnlFbGVtZW50ICYmIEV4cHIuZmluZFsgXCJUQUdcIiBdKCBcIipcIiwgb3V0ZXJtb3N0ICksXG5cblx0XHRcdFx0Ly8gVXNlIGludGVnZXIgZGlycnVucyBpZmYgdGhpcyBpcyB0aGUgb3V0ZXJtb3N0IG1hdGNoZXJcblx0XHRcdFx0ZGlycnVuc1VuaXF1ZSA9ICggZGlycnVucyArPSBjb250ZXh0QmFja3VwID09IG51bGwgPyAxIDogTWF0aC5yYW5kb20oKSB8fCAwLjEgKSxcblx0XHRcdFx0bGVuID0gZWxlbXMubGVuZ3RoO1xuXG5cdFx0XHRpZiAoIG91dGVybW9zdCApIHtcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBJRSAxMSssIEVkZ2UgMTcgLSAxOCtcblx0XHRcdFx0Ly8gSUUvRWRnZSBzb21ldGltZXMgdGhyb3cgYSBcIlBlcm1pc3Npb24gZGVuaWVkXCIgZXJyb3Igd2hlbiBzdHJpY3QtY29tcGFyaW5nXG5cdFx0XHRcdC8vIHR3byBkb2N1bWVudHM7IHNoYWxsb3cgY29tcGFyaXNvbnMgd29yay5cblx0XHRcdFx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVxZXFlcVxuXHRcdFx0XHRvdXRlcm1vc3RDb250ZXh0ID0gY29udGV4dCA9PSBkb2N1bWVudCB8fCBjb250ZXh0IHx8IG91dGVybW9zdDtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQWRkIGVsZW1lbnRzIHBhc3NpbmcgZWxlbWVudE1hdGNoZXJzIGRpcmVjdGx5IHRvIHJlc3VsdHNcblx0XHRcdC8vIFN1cHBvcnQ6IElFPDksIFNhZmFyaVxuXHRcdFx0Ly8gVG9sZXJhdGUgTm9kZUxpc3QgcHJvcGVydGllcyAoSUU6IFwibGVuZ3RoXCI7IFNhZmFyaTogPG51bWJlcj4pIG1hdGNoaW5nIGVsZW1lbnRzIGJ5IGlkXG5cdFx0XHRmb3IgKCA7IGkgIT09IGxlbiAmJiAoIGVsZW0gPSBlbGVtc1sgaSBdICkgIT0gbnVsbDsgaSsrICkge1xuXHRcdFx0XHRpZiAoIGJ5RWxlbWVudCAmJiBlbGVtICkge1xuXHRcdFx0XHRcdGogPSAwO1xuXG5cdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgMTErLCBFZGdlIDE3IC0gMTgrXG5cdFx0XHRcdFx0Ly8gSUUvRWRnZSBzb21ldGltZXMgdGhyb3cgYSBcIlBlcm1pc3Npb24gZGVuaWVkXCIgZXJyb3Igd2hlbiBzdHJpY3QtY29tcGFyaW5nXG5cdFx0XHRcdFx0Ly8gdHdvIGRvY3VtZW50czsgc2hhbGxvdyBjb21wYXJpc29ucyB3b3JrLlxuXHRcdFx0XHRcdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcWVxZXFcblx0XHRcdFx0XHRpZiAoICFjb250ZXh0ICYmIGVsZW0ub3duZXJEb2N1bWVudCAhPSBkb2N1bWVudCApIHtcblx0XHRcdFx0XHRcdHNldERvY3VtZW50KCBlbGVtICk7XG5cdFx0XHRcdFx0XHR4bWwgPSAhZG9jdW1lbnRJc0hUTUw7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHdoaWxlICggKCBtYXRjaGVyID0gZWxlbWVudE1hdGNoZXJzWyBqKysgXSApICkge1xuXHRcdFx0XHRcdFx0aWYgKCBtYXRjaGVyKCBlbGVtLCBjb250ZXh0IHx8IGRvY3VtZW50LCB4bWwgKSApIHtcblx0XHRcdFx0XHRcdFx0cmVzdWx0cy5wdXNoKCBlbGVtICk7XG5cdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZiAoIG91dGVybW9zdCApIHtcblx0XHRcdFx0XHRcdGRpcnJ1bnMgPSBkaXJydW5zVW5pcXVlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFRyYWNrIHVubWF0Y2hlZCBlbGVtZW50cyBmb3Igc2V0IGZpbHRlcnNcblx0XHRcdFx0aWYgKCBieVNldCApIHtcblxuXHRcdFx0XHRcdC8vIFRoZXkgd2lsbCBoYXZlIGdvbmUgdGhyb3VnaCBhbGwgcG9zc2libGUgbWF0Y2hlcnNcblx0XHRcdFx0XHRpZiAoICggZWxlbSA9ICFtYXRjaGVyICYmIGVsZW0gKSApIHtcblx0XHRcdFx0XHRcdG1hdGNoZWRDb3VudC0tO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdC8vIExlbmd0aGVuIHRoZSBhcnJheSBmb3IgZXZlcnkgZWxlbWVudCwgbWF0Y2hlZCBvciBub3Rcblx0XHRcdFx0XHRpZiAoIHNlZWQgKSB7XG5cdFx0XHRcdFx0XHR1bm1hdGNoZWQucHVzaCggZWxlbSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBgaWAgaXMgbm93IHRoZSBjb3VudCBvZiBlbGVtZW50cyB2aXNpdGVkIGFib3ZlLCBhbmQgYWRkaW5nIGl0IHRvIGBtYXRjaGVkQ291bnRgXG5cdFx0XHQvLyBtYWtlcyB0aGUgbGF0dGVyIG5vbm5lZ2F0aXZlLlxuXHRcdFx0bWF0Y2hlZENvdW50ICs9IGk7XG5cblx0XHRcdC8vIEFwcGx5IHNldCBmaWx0ZXJzIHRvIHVubWF0Y2hlZCBlbGVtZW50c1xuXHRcdFx0Ly8gTk9URTogVGhpcyBjYW4gYmUgc2tpcHBlZCBpZiB0aGVyZSBhcmUgbm8gdW5tYXRjaGVkIGVsZW1lbnRzIChpLmUuLCBgbWF0Y2hlZENvdW50YFxuXHRcdFx0Ly8gZXF1YWxzIGBpYCksIHVubGVzcyB3ZSBkaWRuJ3QgdmlzaXQgX2FueV8gZWxlbWVudHMgaW4gdGhlIGFib3ZlIGxvb3AgYmVjYXVzZSB3ZSBoYXZlXG5cdFx0XHQvLyBubyBlbGVtZW50IG1hdGNoZXJzIGFuZCBubyBzZWVkLlxuXHRcdFx0Ly8gSW5jcmVtZW50aW5nIGFuIGluaXRpYWxseS1zdHJpbmcgXCIwXCIgYGlgIGFsbG93cyBgaWAgdG8gcmVtYWluIGEgc3RyaW5nIG9ubHkgaW4gdGhhdFxuXHRcdFx0Ly8gY2FzZSwgd2hpY2ggd2lsbCByZXN1bHQgaW4gYSBcIjAwXCIgYG1hdGNoZWRDb3VudGAgdGhhdCBkaWZmZXJzIGZyb20gYGlgIGJ1dCBpcyBhbHNvXG5cdFx0XHQvLyBudW1lcmljYWxseSB6ZXJvLlxuXHRcdFx0aWYgKCBieVNldCAmJiBpICE9PSBtYXRjaGVkQ291bnQgKSB7XG5cdFx0XHRcdGogPSAwO1xuXHRcdFx0XHR3aGlsZSAoICggbWF0Y2hlciA9IHNldE1hdGNoZXJzWyBqKysgXSApICkge1xuXHRcdFx0XHRcdG1hdGNoZXIoIHVubWF0Y2hlZCwgc2V0TWF0Y2hlZCwgY29udGV4dCwgeG1sICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRpZiAoIHNlZWQgKSB7XG5cblx0XHRcdFx0XHQvLyBSZWludGVncmF0ZSBlbGVtZW50IG1hdGNoZXMgdG8gZWxpbWluYXRlIHRoZSBuZWVkIGZvciBzb3J0aW5nXG5cdFx0XHRcdFx0aWYgKCBtYXRjaGVkQ291bnQgPiAwICkge1xuXHRcdFx0XHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdFx0XHRcdGlmICggISggdW5tYXRjaGVkWyBpIF0gfHwgc2V0TWF0Y2hlZFsgaSBdICkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0c2V0TWF0Y2hlZFsgaSBdID0gcG9wLmNhbGwoIHJlc3VsdHMgKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdC8vIERpc2NhcmQgaW5kZXggcGxhY2Vob2xkZXIgdmFsdWVzIHRvIGdldCBvbmx5IGFjdHVhbCBtYXRjaGVzXG5cdFx0XHRcdFx0c2V0TWF0Y2hlZCA9IGNvbmRlbnNlKCBzZXRNYXRjaGVkICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBBZGQgbWF0Y2hlcyB0byByZXN1bHRzXG5cdFx0XHRcdHB1c2guYXBwbHkoIHJlc3VsdHMsIHNldE1hdGNoZWQgKTtcblxuXHRcdFx0XHQvLyBTZWVkbGVzcyBzZXQgbWF0Y2hlcyBzdWNjZWVkaW5nIG11bHRpcGxlIHN1Y2Nlc3NmdWwgbWF0Y2hlcnMgc3RpcHVsYXRlIHNvcnRpbmdcblx0XHRcdFx0aWYgKCBvdXRlcm1vc3QgJiYgIXNlZWQgJiYgc2V0TWF0Y2hlZC5sZW5ndGggPiAwICYmXG5cdFx0XHRcdFx0KCBtYXRjaGVkQ291bnQgKyBzZXRNYXRjaGVycy5sZW5ndGggKSA+IDEgKSB7XG5cblx0XHRcdFx0XHRTaXp6bGUudW5pcXVlU29ydCggcmVzdWx0cyApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIE92ZXJyaWRlIG1hbmlwdWxhdGlvbiBvZiBnbG9iYWxzIGJ5IG5lc3RlZCBtYXRjaGVyc1xuXHRcdFx0aWYgKCBvdXRlcm1vc3QgKSB7XG5cdFx0XHRcdGRpcnJ1bnMgPSBkaXJydW5zVW5pcXVlO1xuXHRcdFx0XHRvdXRlcm1vc3RDb250ZXh0ID0gY29udGV4dEJhY2t1cDtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIHVubWF0Y2hlZDtcblx0XHR9O1xuXG5cdHJldHVybiBieVNldCA/XG5cdFx0bWFya0Z1bmN0aW9uKCBzdXBlck1hdGNoZXIgKSA6XG5cdFx0c3VwZXJNYXRjaGVyO1xufVxuXG5jb21waWxlID0gU2l6emxlLmNvbXBpbGUgPSBmdW5jdGlvbiggc2VsZWN0b3IsIG1hdGNoIC8qIEludGVybmFsIFVzZSBPbmx5ICovICkge1xuXHR2YXIgaSxcblx0XHRzZXRNYXRjaGVycyA9IFtdLFxuXHRcdGVsZW1lbnRNYXRjaGVycyA9IFtdLFxuXHRcdGNhY2hlZCA9IGNvbXBpbGVyQ2FjaGVbIHNlbGVjdG9yICsgXCIgXCIgXTtcblxuXHRpZiAoICFjYWNoZWQgKSB7XG5cblx0XHQvLyBHZW5lcmF0ZSBhIGZ1bmN0aW9uIG9mIHJlY3Vyc2l2ZSBmdW5jdGlvbnMgdGhhdCBjYW4gYmUgdXNlZCB0byBjaGVjayBlYWNoIGVsZW1lbnRcblx0XHRpZiAoICFtYXRjaCApIHtcblx0XHRcdG1hdGNoID0gdG9rZW5pemUoIHNlbGVjdG9yICk7XG5cdFx0fVxuXHRcdGkgPSBtYXRjaC5sZW5ndGg7XG5cdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRjYWNoZWQgPSBtYXRjaGVyRnJvbVRva2VucyggbWF0Y2hbIGkgXSApO1xuXHRcdFx0aWYgKCBjYWNoZWRbIGV4cGFuZG8gXSApIHtcblx0XHRcdFx0c2V0TWF0Y2hlcnMucHVzaCggY2FjaGVkICk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRlbGVtZW50TWF0Y2hlcnMucHVzaCggY2FjaGVkICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gQ2FjaGUgdGhlIGNvbXBpbGVkIGZ1bmN0aW9uXG5cdFx0Y2FjaGVkID0gY29tcGlsZXJDYWNoZShcblx0XHRcdHNlbGVjdG9yLFxuXHRcdFx0bWF0Y2hlckZyb21Hcm91cE1hdGNoZXJzKCBlbGVtZW50TWF0Y2hlcnMsIHNldE1hdGNoZXJzIClcblx0XHQpO1xuXG5cdFx0Ly8gU2F2ZSBzZWxlY3RvciBhbmQgdG9rZW5pemF0aW9uXG5cdFx0Y2FjaGVkLnNlbGVjdG9yID0gc2VsZWN0b3I7XG5cdH1cblx0cmV0dXJuIGNhY2hlZDtcbn07XG5cbi8qKlxuICogQSBsb3ctbGV2ZWwgc2VsZWN0aW9uIGZ1bmN0aW9uIHRoYXQgd29ya3Mgd2l0aCBTaXp6bGUncyBjb21waWxlZFxuICogIHNlbGVjdG9yIGZ1bmN0aW9uc1xuICogQHBhcmFtIHtTdHJpbmd8RnVuY3Rpb259IHNlbGVjdG9yIEEgc2VsZWN0b3Igb3IgYSBwcmUtY29tcGlsZWRcbiAqICBzZWxlY3RvciBmdW5jdGlvbiBidWlsdCB3aXRoIFNpenpsZS5jb21waWxlXG4gKiBAcGFyYW0ge0VsZW1lbnR9IGNvbnRleHRcbiAqIEBwYXJhbSB7QXJyYXl9IFtyZXN1bHRzXVxuICogQHBhcmFtIHtBcnJheX0gW3NlZWRdIEEgc2V0IG9mIGVsZW1lbnRzIHRvIG1hdGNoIGFnYWluc3RcbiAqL1xuc2VsZWN0ID0gU2l6emxlLnNlbGVjdCA9IGZ1bmN0aW9uKCBzZWxlY3RvciwgY29udGV4dCwgcmVzdWx0cywgc2VlZCApIHtcblx0dmFyIGksIHRva2VucywgdG9rZW4sIHR5cGUsIGZpbmQsXG5cdFx0Y29tcGlsZWQgPSB0eXBlb2Ygc2VsZWN0b3IgPT09IFwiZnVuY3Rpb25cIiAmJiBzZWxlY3Rvcixcblx0XHRtYXRjaCA9ICFzZWVkICYmIHRva2VuaXplKCAoIHNlbGVjdG9yID0gY29tcGlsZWQuc2VsZWN0b3IgfHwgc2VsZWN0b3IgKSApO1xuXG5cdHJlc3VsdHMgPSByZXN1bHRzIHx8IFtdO1xuXG5cdC8vIFRyeSB0byBtaW5pbWl6ZSBvcGVyYXRpb25zIGlmIHRoZXJlIGlzIG9ubHkgb25lIHNlbGVjdG9yIGluIHRoZSBsaXN0IGFuZCBubyBzZWVkXG5cdC8vICh0aGUgbGF0dGVyIG9mIHdoaWNoIGd1YXJhbnRlZXMgdXMgY29udGV4dClcblx0aWYgKCBtYXRjaC5sZW5ndGggPT09IDEgKSB7XG5cblx0XHQvLyBSZWR1Y2UgY29udGV4dCBpZiB0aGUgbGVhZGluZyBjb21wb3VuZCBzZWxlY3RvciBpcyBhbiBJRFxuXHRcdHRva2VucyA9IG1hdGNoWyAwIF0gPSBtYXRjaFsgMCBdLnNsaWNlKCAwICk7XG5cdFx0aWYgKCB0b2tlbnMubGVuZ3RoID4gMiAmJiAoIHRva2VuID0gdG9rZW5zWyAwIF0gKS50eXBlID09PSBcIklEXCIgJiZcblx0XHRcdGNvbnRleHQubm9kZVR5cGUgPT09IDkgJiYgZG9jdW1lbnRJc0hUTUwgJiYgRXhwci5yZWxhdGl2ZVsgdG9rZW5zWyAxIF0udHlwZSBdICkge1xuXG5cdFx0XHRjb250ZXh0ID0gKCBFeHByLmZpbmRbIFwiSURcIiBdKCB0b2tlbi5tYXRjaGVzWyAwIF1cblx0XHRcdFx0LnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICksIGNvbnRleHQgKSB8fCBbXSApWyAwIF07XG5cdFx0XHRpZiAoICFjb250ZXh0ICkge1xuXHRcdFx0XHRyZXR1cm4gcmVzdWx0cztcblxuXHRcdFx0Ly8gUHJlY29tcGlsZWQgbWF0Y2hlcnMgd2lsbCBzdGlsbCB2ZXJpZnkgYW5jZXN0cnksIHNvIHN0ZXAgdXAgYSBsZXZlbFxuXHRcdFx0fSBlbHNlIGlmICggY29tcGlsZWQgKSB7XG5cdFx0XHRcdGNvbnRleHQgPSBjb250ZXh0LnBhcmVudE5vZGU7XG5cdFx0XHR9XG5cblx0XHRcdHNlbGVjdG9yID0gc2VsZWN0b3Iuc2xpY2UoIHRva2Vucy5zaGlmdCgpLnZhbHVlLmxlbmd0aCApO1xuXHRcdH1cblxuXHRcdC8vIEZldGNoIGEgc2VlZCBzZXQgZm9yIHJpZ2h0LXRvLWxlZnQgbWF0Y2hpbmdcblx0XHRpID0gbWF0Y2hFeHByWyBcIm5lZWRzQ29udGV4dFwiIF0udGVzdCggc2VsZWN0b3IgKSA/IDAgOiB0b2tlbnMubGVuZ3RoO1xuXHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0dG9rZW4gPSB0b2tlbnNbIGkgXTtcblxuXHRcdFx0Ly8gQWJvcnQgaWYgd2UgaGl0IGEgY29tYmluYXRvclxuXHRcdFx0aWYgKCBFeHByLnJlbGF0aXZlWyAoIHR5cGUgPSB0b2tlbi50eXBlICkgXSApIHtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cdFx0XHRpZiAoICggZmluZCA9IEV4cHIuZmluZFsgdHlwZSBdICkgKSB7XG5cblx0XHRcdFx0Ly8gU2VhcmNoLCBleHBhbmRpbmcgY29udGV4dCBmb3IgbGVhZGluZyBzaWJsaW5nIGNvbWJpbmF0b3JzXG5cdFx0XHRcdGlmICggKCBzZWVkID0gZmluZChcblx0XHRcdFx0XHR0b2tlbi5tYXRjaGVzWyAwIF0ucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKSxcblx0XHRcdFx0XHRyc2libGluZy50ZXN0KCB0b2tlbnNbIDAgXS50eXBlICkgJiYgdGVzdENvbnRleHQoIGNvbnRleHQucGFyZW50Tm9kZSApIHx8XG5cdFx0XHRcdFx0XHRjb250ZXh0XG5cdFx0XHRcdCkgKSApIHtcblxuXHRcdFx0XHRcdC8vIElmIHNlZWQgaXMgZW1wdHkgb3Igbm8gdG9rZW5zIHJlbWFpbiwgd2UgY2FuIHJldHVybiBlYXJseVxuXHRcdFx0XHRcdHRva2Vucy5zcGxpY2UoIGksIDEgKTtcblx0XHRcdFx0XHRzZWxlY3RvciA9IHNlZWQubGVuZ3RoICYmIHRvU2VsZWN0b3IoIHRva2VucyApO1xuXHRcdFx0XHRcdGlmICggIXNlbGVjdG9yICkge1xuXHRcdFx0XHRcdFx0cHVzaC5hcHBseSggcmVzdWx0cywgc2VlZCApO1xuXHRcdFx0XHRcdFx0cmV0dXJuIHJlc3VsdHM7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyBDb21waWxlIGFuZCBleGVjdXRlIGEgZmlsdGVyaW5nIGZ1bmN0aW9uIGlmIG9uZSBpcyBub3QgcHJvdmlkZWRcblx0Ly8gUHJvdmlkZSBgbWF0Y2hgIHRvIGF2b2lkIHJldG9rZW5pemF0aW9uIGlmIHdlIG1vZGlmaWVkIHRoZSBzZWxlY3RvciBhYm92ZVxuXHQoIGNvbXBpbGVkIHx8IGNvbXBpbGUoIHNlbGVjdG9yLCBtYXRjaCApICkoXG5cdFx0c2VlZCxcblx0XHRjb250ZXh0LFxuXHRcdCFkb2N1bWVudElzSFRNTCxcblx0XHRyZXN1bHRzLFxuXHRcdCFjb250ZXh0IHx8IHJzaWJsaW5nLnRlc3QoIHNlbGVjdG9yICkgJiYgdGVzdENvbnRleHQoIGNvbnRleHQucGFyZW50Tm9kZSApIHx8IGNvbnRleHRcblx0KTtcblx0cmV0dXJuIHJlc3VsdHM7XG59O1xuXG4vLyBPbmUtdGltZSBhc3NpZ25tZW50c1xuXG4vLyBTb3J0IHN0YWJpbGl0eVxuc3VwcG9ydC5zb3J0U3RhYmxlID0gZXhwYW5kby5zcGxpdCggXCJcIiApLnNvcnQoIHNvcnRPcmRlciApLmpvaW4oIFwiXCIgKSA9PT0gZXhwYW5kbztcblxuLy8gU3VwcG9ydDogQ2hyb21lIDE0LTM1K1xuLy8gQWx3YXlzIGFzc3VtZSBkdXBsaWNhdGVzIGlmIHRoZXkgYXJlbid0IHBhc3NlZCB0byB0aGUgY29tcGFyaXNvbiBmdW5jdGlvblxuc3VwcG9ydC5kZXRlY3REdXBsaWNhdGVzID0gISFoYXNEdXBsaWNhdGU7XG5cbi8vIEluaXRpYWxpemUgYWdhaW5zdCB0aGUgZGVmYXVsdCBkb2N1bWVudFxuc2V0RG9jdW1lbnQoKTtcblxuLy8gU3VwcG9ydDogV2Via2l0PDUzNy4zMiAtIFNhZmFyaSA2LjAuMy9DaHJvbWUgMjUgKGZpeGVkIGluIENocm9tZSAyNylcbi8vIERldGFjaGVkIG5vZGVzIGNvbmZvdW5kaW5nbHkgZm9sbG93ICplYWNoIG90aGVyKlxuc3VwcG9ydC5zb3J0RGV0YWNoZWQgPSBhc3NlcnQoIGZ1bmN0aW9uKCBlbCApIHtcblxuXHQvLyBTaG91bGQgcmV0dXJuIDEsIGJ1dCByZXR1cm5zIDQgKGZvbGxvd2luZylcblx0cmV0dXJuIGVsLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKCBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImZpZWxkc2V0XCIgKSApICYgMTtcbn0gKTtcblxuLy8gU3VwcG9ydDogSUU8OFxuLy8gUHJldmVudCBhdHRyaWJ1dGUvcHJvcGVydHkgXCJpbnRlcnBvbGF0aW9uXCJcbi8vIGh0dHBzOi8vbXNkbi5taWNyb3NvZnQuY29tL2VuLXVzL2xpYnJhcnkvbXM1MzY0MjklMjhWUy44NSUyOS5hc3B4XG5pZiAoICFhc3NlcnQoIGZ1bmN0aW9uKCBlbCApIHtcblx0ZWwuaW5uZXJIVE1MID0gXCI8YSBocmVmPScjJz48L2E+XCI7XG5cdHJldHVybiBlbC5maXJzdENoaWxkLmdldEF0dHJpYnV0ZSggXCJocmVmXCIgKSA9PT0gXCIjXCI7XG59ICkgKSB7XG5cdGFkZEhhbmRsZSggXCJ0eXBlfGhyZWZ8aGVpZ2h0fHdpZHRoXCIsIGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCBpc1hNTCApIHtcblx0XHRpZiAoICFpc1hNTCApIHtcblx0XHRcdHJldHVybiBlbGVtLmdldEF0dHJpYnV0ZSggbmFtZSwgbmFtZS50b0xvd2VyQ2FzZSgpID09PSBcInR5cGVcIiA/IDEgOiAyICk7XG5cdFx0fVxuXHR9ICk7XG59XG5cbi8vIFN1cHBvcnQ6IElFPDlcbi8vIFVzZSBkZWZhdWx0VmFsdWUgaW4gcGxhY2Ugb2YgZ2V0QXR0cmlidXRlKFwidmFsdWVcIilcbmlmICggIXN1cHBvcnQuYXR0cmlidXRlcyB8fCAhYXNzZXJ0KCBmdW5jdGlvbiggZWwgKSB7XG5cdGVsLmlubmVySFRNTCA9IFwiPGlucHV0Lz5cIjtcblx0ZWwuZmlyc3RDaGlsZC5zZXRBdHRyaWJ1dGUoIFwidmFsdWVcIiwgXCJcIiApO1xuXHRyZXR1cm4gZWwuZmlyc3RDaGlsZC5nZXRBdHRyaWJ1dGUoIFwidmFsdWVcIiApID09PSBcIlwiO1xufSApICkge1xuXHRhZGRIYW5kbGUoIFwidmFsdWVcIiwgZnVuY3Rpb24oIGVsZW0sIF9uYW1lLCBpc1hNTCApIHtcblx0XHRpZiAoICFpc1hNTCAmJiBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09IFwiaW5wdXRcIiApIHtcblx0XHRcdHJldHVybiBlbGVtLmRlZmF1bHRWYWx1ZTtcblx0XHR9XG5cdH0gKTtcbn1cblxuLy8gU3VwcG9ydDogSUU8OVxuLy8gVXNlIGdldEF0dHJpYnV0ZU5vZGUgdG8gZmV0Y2ggYm9vbGVhbnMgd2hlbiBnZXRBdHRyaWJ1dGUgbGllc1xuaWYgKCAhYXNzZXJ0KCBmdW5jdGlvbiggZWwgKSB7XG5cdHJldHVybiBlbC5nZXRBdHRyaWJ1dGUoIFwiZGlzYWJsZWRcIiApID09IG51bGw7XG59ICkgKSB7XG5cdGFkZEhhbmRsZSggYm9vbGVhbnMsIGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCBpc1hNTCApIHtcblx0XHR2YXIgdmFsO1xuXHRcdGlmICggIWlzWE1MICkge1xuXHRcdFx0cmV0dXJuIGVsZW1bIG5hbWUgXSA9PT0gdHJ1ZSA/IG5hbWUudG9Mb3dlckNhc2UoKSA6XG5cdFx0XHRcdCggdmFsID0gZWxlbS5nZXRBdHRyaWJ1dGVOb2RlKCBuYW1lICkgKSAmJiB2YWwuc3BlY2lmaWVkID9cblx0XHRcdFx0XHR2YWwudmFsdWUgOlxuXHRcdFx0XHRcdG51bGw7XG5cdFx0fVxuXHR9ICk7XG59XG5cbnJldHVybiBTaXp6bGU7XG5cbn0gKSggd2luZG93ICk7XG5cblxuXG5qUXVlcnkuZmluZCA9IFNpenpsZTtcbmpRdWVyeS5leHByID0gU2l6emxlLnNlbGVjdG9ycztcblxuLy8gRGVwcmVjYXRlZFxualF1ZXJ5LmV4cHJbIFwiOlwiIF0gPSBqUXVlcnkuZXhwci5wc2V1ZG9zO1xualF1ZXJ5LnVuaXF1ZVNvcnQgPSBqUXVlcnkudW5pcXVlID0gU2l6emxlLnVuaXF1ZVNvcnQ7XG5qUXVlcnkudGV4dCA9IFNpenpsZS5nZXRUZXh0O1xualF1ZXJ5LmlzWE1MRG9jID0gU2l6emxlLmlzWE1MO1xualF1ZXJ5LmNvbnRhaW5zID0gU2l6emxlLmNvbnRhaW5zO1xualF1ZXJ5LmVzY2FwZVNlbGVjdG9yID0gU2l6emxlLmVzY2FwZTtcblxuXG5cblxudmFyIGRpciA9IGZ1bmN0aW9uKCBlbGVtLCBkaXIsIHVudGlsICkge1xuXHR2YXIgbWF0Y2hlZCA9IFtdLFxuXHRcdHRydW5jYXRlID0gdW50aWwgIT09IHVuZGVmaW5lZDtcblxuXHR3aGlsZSAoICggZWxlbSA9IGVsZW1bIGRpciBdICkgJiYgZWxlbS5ub2RlVHlwZSAhPT0gOSApIHtcblx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7XG5cdFx0XHRpZiAoIHRydW5jYXRlICYmIGpRdWVyeSggZWxlbSApLmlzKCB1bnRpbCApICkge1xuXHRcdFx0XHRicmVhaztcblx0XHRcdH1cblx0XHRcdG1hdGNoZWQucHVzaCggZWxlbSApO1xuXHRcdH1cblx0fVxuXHRyZXR1cm4gbWF0Y2hlZDtcbn07XG5cblxudmFyIHNpYmxpbmdzID0gZnVuY3Rpb24oIG4sIGVsZW0gKSB7XG5cdHZhciBtYXRjaGVkID0gW107XG5cblx0Zm9yICggOyBuOyBuID0gbi5uZXh0U2libGluZyApIHtcblx0XHRpZiAoIG4ubm9kZVR5cGUgPT09IDEgJiYgbiAhPT0gZWxlbSApIHtcblx0XHRcdG1hdGNoZWQucHVzaCggbiApO1xuXHRcdH1cblx0fVxuXG5cdHJldHVybiBtYXRjaGVkO1xufTtcblxuXG52YXIgcm5lZWRzQ29udGV4dCA9IGpRdWVyeS5leHByLm1hdGNoLm5lZWRzQ29udGV4dDtcblxuXG5cbmZ1bmN0aW9uIG5vZGVOYW1lKCBlbGVtLCBuYW1lICkge1xuXG5cdHJldHVybiBlbGVtLm5vZGVOYW1lICYmIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gbmFtZS50b0xvd2VyQ2FzZSgpO1xuXG59XG52YXIgcnNpbmdsZVRhZyA9ICggL148KFthLXpdW15cXC9cXDA+OlxceDIwXFx0XFxyXFxuXFxmXSopW1xceDIwXFx0XFxyXFxuXFxmXSpcXC8/Pig/OjxcXC9cXDE+fCkkL2kgKTtcblxuXG5cbi8vIEltcGxlbWVudCB0aGUgaWRlbnRpY2FsIGZ1bmN0aW9uYWxpdHkgZm9yIGZpbHRlciBhbmQgbm90XG5mdW5jdGlvbiB3aW5ub3coIGVsZW1lbnRzLCBxdWFsaWZpZXIsIG5vdCApIHtcblx0aWYgKCBpc0Z1bmN0aW9uKCBxdWFsaWZpZXIgKSApIHtcblx0XHRyZXR1cm4galF1ZXJ5LmdyZXAoIGVsZW1lbnRzLCBmdW5jdGlvbiggZWxlbSwgaSApIHtcblx0XHRcdHJldHVybiAhIXF1YWxpZmllci5jYWxsKCBlbGVtLCBpLCBlbGVtICkgIT09IG5vdDtcblx0XHR9ICk7XG5cdH1cblxuXHQvLyBTaW5nbGUgZWxlbWVudFxuXHRpZiAoIHF1YWxpZmllci5ub2RlVHlwZSApIHtcblx0XHRyZXR1cm4galF1ZXJ5LmdyZXAoIGVsZW1lbnRzLCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiAoIGVsZW0gPT09IHF1YWxpZmllciApICE9PSBub3Q7XG5cdFx0fSApO1xuXHR9XG5cblx0Ly8gQXJyYXlsaWtlIG9mIGVsZW1lbnRzIChqUXVlcnksIGFyZ3VtZW50cywgQXJyYXkpXG5cdGlmICggdHlwZW9mIHF1YWxpZmllciAhPT0gXCJzdHJpbmdcIiApIHtcblx0XHRyZXR1cm4galF1ZXJ5LmdyZXAoIGVsZW1lbnRzLCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiAoIGluZGV4T2YuY2FsbCggcXVhbGlmaWVyLCBlbGVtICkgPiAtMSApICE9PSBub3Q7XG5cdFx0fSApO1xuXHR9XG5cblx0Ly8gRmlsdGVyZWQgZGlyZWN0bHkgZm9yIGJvdGggc2ltcGxlIGFuZCBjb21wbGV4IHNlbGVjdG9yc1xuXHRyZXR1cm4galF1ZXJ5LmZpbHRlciggcXVhbGlmaWVyLCBlbGVtZW50cywgbm90ICk7XG59XG5cbmpRdWVyeS5maWx0ZXIgPSBmdW5jdGlvbiggZXhwciwgZWxlbXMsIG5vdCApIHtcblx0dmFyIGVsZW0gPSBlbGVtc1sgMCBdO1xuXG5cdGlmICggbm90ICkge1xuXHRcdGV4cHIgPSBcIjpub3QoXCIgKyBleHByICsgXCIpXCI7XG5cdH1cblxuXHRpZiAoIGVsZW1zLmxlbmd0aCA9PT0gMSAmJiBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXHRcdHJldHVybiBqUXVlcnkuZmluZC5tYXRjaGVzU2VsZWN0b3IoIGVsZW0sIGV4cHIgKSA/IFsgZWxlbSBdIDogW107XG5cdH1cblxuXHRyZXR1cm4galF1ZXJ5LmZpbmQubWF0Y2hlcyggZXhwciwgalF1ZXJ5LmdyZXAoIGVsZW1zLCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRyZXR1cm4gZWxlbS5ub2RlVHlwZSA9PT0gMTtcblx0fSApICk7XG59O1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdGZpbmQ6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHR2YXIgaSwgcmV0LFxuXHRcdFx0bGVuID0gdGhpcy5sZW5ndGgsXG5cdFx0XHRzZWxmID0gdGhpcztcblxuXHRcdGlmICggdHlwZW9mIHNlbGVjdG9yICE9PSBcInN0cmluZ1wiICkge1xuXHRcdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCBqUXVlcnkoIHNlbGVjdG9yICkuZmlsdGVyKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0Zm9yICggaSA9IDA7IGkgPCBsZW47IGkrKyApIHtcblx0XHRcdFx0XHRpZiAoIGpRdWVyeS5jb250YWlucyggc2VsZlsgaSBdLCB0aGlzICkgKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH0gKSApO1xuXHRcdH1cblxuXHRcdHJldCA9IHRoaXMucHVzaFN0YWNrKCBbXSApO1xuXG5cdFx0Zm9yICggaSA9IDA7IGkgPCBsZW47IGkrKyApIHtcblx0XHRcdGpRdWVyeS5maW5kKCBzZWxlY3Rvciwgc2VsZlsgaSBdLCByZXQgKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gbGVuID4gMSA/IGpRdWVyeS51bmlxdWVTb3J0KCByZXQgKSA6IHJldDtcblx0fSxcblx0ZmlsdGVyOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCB3aW5ub3coIHRoaXMsIHNlbGVjdG9yIHx8IFtdLCBmYWxzZSApICk7XG5cdH0sXG5cdG5vdDogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggd2lubm93KCB0aGlzLCBzZWxlY3RvciB8fCBbXSwgdHJ1ZSApICk7XG5cdH0sXG5cdGlzOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0cmV0dXJuICEhd2lubm93KFxuXHRcdFx0dGhpcyxcblxuXHRcdFx0Ly8gSWYgdGhpcyBpcyBhIHBvc2l0aW9uYWwvcmVsYXRpdmUgc2VsZWN0b3IsIGNoZWNrIG1lbWJlcnNoaXAgaW4gdGhlIHJldHVybmVkIHNldFxuXHRcdFx0Ly8gc28gJChcInA6Zmlyc3RcIikuaXMoXCJwOmxhc3RcIikgd29uJ3QgcmV0dXJuIHRydWUgZm9yIGEgZG9jIHdpdGggdHdvIFwicFwiLlxuXHRcdFx0dHlwZW9mIHNlbGVjdG9yID09PSBcInN0cmluZ1wiICYmIHJuZWVkc0NvbnRleHQudGVzdCggc2VsZWN0b3IgKSA/XG5cdFx0XHRcdGpRdWVyeSggc2VsZWN0b3IgKSA6XG5cdFx0XHRcdHNlbGVjdG9yIHx8IFtdLFxuXHRcdFx0ZmFsc2Vcblx0XHQpLmxlbmd0aDtcblx0fVxufSApO1xuXG5cbi8vIEluaXRpYWxpemUgYSBqUXVlcnkgb2JqZWN0XG5cblxuLy8gQSBjZW50cmFsIHJlZmVyZW5jZSB0byB0aGUgcm9vdCBqUXVlcnkoZG9jdW1lbnQpXG52YXIgcm9vdGpRdWVyeSxcblxuXHQvLyBBIHNpbXBsZSB3YXkgdG8gY2hlY2sgZm9yIEhUTUwgc3RyaW5nc1xuXHQvLyBQcmlvcml0aXplICNpZCBvdmVyIDx0YWc+IHRvIGF2b2lkIFhTUyB2aWEgbG9jYXRpb24uaGFzaCAoIzk1MjEpXG5cdC8vIFN0cmljdCBIVE1MIHJlY29nbml0aW9uICgjMTEyOTA6IG11c3Qgc3RhcnQgd2l0aCA8KVxuXHQvLyBTaG9ydGN1dCBzaW1wbGUgI2lkIGNhc2UgZm9yIHNwZWVkXG5cdHJxdWlja0V4cHIgPSAvXig/OlxccyooPFtcXHdcXFddKz4pW14+XSp8IyhbXFx3LV0rKSkkLyxcblxuXHRpbml0ID0galF1ZXJ5LmZuLmluaXQgPSBmdW5jdGlvbiggc2VsZWN0b3IsIGNvbnRleHQsIHJvb3QgKSB7XG5cdFx0dmFyIG1hdGNoLCBlbGVtO1xuXG5cdFx0Ly8gSEFORExFOiAkKFwiXCIpLCAkKG51bGwpLCAkKHVuZGVmaW5lZCksICQoZmFsc2UpXG5cdFx0aWYgKCAhc2VsZWN0b3IgKSB7XG5cdFx0XHRyZXR1cm4gdGhpcztcblx0XHR9XG5cblx0XHQvLyBNZXRob2QgaW5pdCgpIGFjY2VwdHMgYW4gYWx0ZXJuYXRlIHJvb3RqUXVlcnlcblx0XHQvLyBzbyBtaWdyYXRlIGNhbiBzdXBwb3J0IGpRdWVyeS5zdWIgKGdoLTIxMDEpXG5cdFx0cm9vdCA9IHJvb3QgfHwgcm9vdGpRdWVyeTtcblxuXHRcdC8vIEhhbmRsZSBIVE1MIHN0cmluZ3Ncblx0XHRpZiAoIHR5cGVvZiBzZWxlY3RvciA9PT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdGlmICggc2VsZWN0b3JbIDAgXSA9PT0gXCI8XCIgJiZcblx0XHRcdFx0c2VsZWN0b3JbIHNlbGVjdG9yLmxlbmd0aCAtIDEgXSA9PT0gXCI+XCIgJiZcblx0XHRcdFx0c2VsZWN0b3IubGVuZ3RoID49IDMgKSB7XG5cblx0XHRcdFx0Ly8gQXNzdW1lIHRoYXQgc3RyaW5ncyB0aGF0IHN0YXJ0IGFuZCBlbmQgd2l0aCA8PiBhcmUgSFRNTCBhbmQgc2tpcCB0aGUgcmVnZXggY2hlY2tcblx0XHRcdFx0bWF0Y2ggPSBbIG51bGwsIHNlbGVjdG9yLCBudWxsIF07XG5cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdG1hdGNoID0gcnF1aWNrRXhwci5leGVjKCBzZWxlY3RvciApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBNYXRjaCBodG1sIG9yIG1ha2Ugc3VyZSBubyBjb250ZXh0IGlzIHNwZWNpZmllZCBmb3IgI2lkXG5cdFx0XHRpZiAoIG1hdGNoICYmICggbWF0Y2hbIDEgXSB8fCAhY29udGV4dCApICkge1xuXG5cdFx0XHRcdC8vIEhBTkRMRTogJChodG1sKSAtPiAkKGFycmF5KVxuXHRcdFx0XHRpZiAoIG1hdGNoWyAxIF0gKSB7XG5cdFx0XHRcdFx0Y29udGV4dCA9IGNvbnRleHQgaW5zdGFuY2VvZiBqUXVlcnkgPyBjb250ZXh0WyAwIF0gOiBjb250ZXh0O1xuXG5cdFx0XHRcdFx0Ly8gT3B0aW9uIHRvIHJ1biBzY3JpcHRzIGlzIHRydWUgZm9yIGJhY2stY29tcGF0XG5cdFx0XHRcdFx0Ly8gSW50ZW50aW9uYWxseSBsZXQgdGhlIGVycm9yIGJlIHRocm93biBpZiBwYXJzZUhUTUwgaXMgbm90IHByZXNlbnRcblx0XHRcdFx0XHRqUXVlcnkubWVyZ2UoIHRoaXMsIGpRdWVyeS5wYXJzZUhUTUwoXG5cdFx0XHRcdFx0XHRtYXRjaFsgMSBdLFxuXHRcdFx0XHRcdFx0Y29udGV4dCAmJiBjb250ZXh0Lm5vZGVUeXBlID8gY29udGV4dC5vd25lckRvY3VtZW50IHx8IGNvbnRleHQgOiBkb2N1bWVudCxcblx0XHRcdFx0XHRcdHRydWVcblx0XHRcdFx0XHQpICk7XG5cblx0XHRcdFx0XHQvLyBIQU5ETEU6ICQoaHRtbCwgcHJvcHMpXG5cdFx0XHRcdFx0aWYgKCByc2luZ2xlVGFnLnRlc3QoIG1hdGNoWyAxIF0gKSAmJiBqUXVlcnkuaXNQbGFpbk9iamVjdCggY29udGV4dCApICkge1xuXHRcdFx0XHRcdFx0Zm9yICggbWF0Y2ggaW4gY29udGV4dCApIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBQcm9wZXJ0aWVzIG9mIGNvbnRleHQgYXJlIGNhbGxlZCBhcyBtZXRob2RzIGlmIHBvc3NpYmxlXG5cdFx0XHRcdFx0XHRcdGlmICggaXNGdW5jdGlvbiggdGhpc1sgbWF0Y2ggXSApICkge1xuXHRcdFx0XHRcdFx0XHRcdHRoaXNbIG1hdGNoIF0oIGNvbnRleHRbIG1hdGNoIF0gKTtcblxuXHRcdFx0XHRcdFx0XHQvLyAuLi5hbmQgb3RoZXJ3aXNlIHNldCBhcyBhdHRyaWJ1dGVzXG5cdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdFx0dGhpcy5hdHRyKCBtYXRjaCwgY29udGV4dFsgbWF0Y2ggXSApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cblx0XHRcdFx0Ly8gSEFORExFOiAkKCNpZClcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRlbGVtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIG1hdGNoWyAyIF0gKTtcblxuXHRcdFx0XHRcdGlmICggZWxlbSApIHtcblxuXHRcdFx0XHRcdFx0Ly8gSW5qZWN0IHRoZSBlbGVtZW50IGRpcmVjdGx5IGludG8gdGhlIGpRdWVyeSBvYmplY3Rcblx0XHRcdFx0XHRcdHRoaXNbIDAgXSA9IGVsZW07XG5cdFx0XHRcdFx0XHR0aGlzLmxlbmd0aCA9IDE7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0XHR9XG5cblx0XHRcdC8vIEhBTkRMRTogJChleHByLCAkKC4uLikpXG5cdFx0XHR9IGVsc2UgaWYgKCAhY29udGV4dCB8fCBjb250ZXh0LmpxdWVyeSApIHtcblx0XHRcdFx0cmV0dXJuICggY29udGV4dCB8fCByb290ICkuZmluZCggc2VsZWN0b3IgKTtcblxuXHRcdFx0Ly8gSEFORExFOiAkKGV4cHIsIGNvbnRleHQpXG5cdFx0XHQvLyAod2hpY2ggaXMganVzdCBlcXVpdmFsZW50IHRvOiAkKGNvbnRleHQpLmZpbmQoZXhwcilcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHJldHVybiB0aGlzLmNvbnN0cnVjdG9yKCBjb250ZXh0ICkuZmluZCggc2VsZWN0b3IgKTtcblx0XHRcdH1cblxuXHRcdC8vIEhBTkRMRTogJChET01FbGVtZW50KVxuXHRcdH0gZWxzZSBpZiAoIHNlbGVjdG9yLm5vZGVUeXBlICkge1xuXHRcdFx0dGhpc1sgMCBdID0gc2VsZWN0b3I7XG5cdFx0XHR0aGlzLmxlbmd0aCA9IDE7XG5cdFx0XHRyZXR1cm4gdGhpcztcblxuXHRcdC8vIEhBTkRMRTogJChmdW5jdGlvbilcblx0XHQvLyBTaG9ydGN1dCBmb3IgZG9jdW1lbnQgcmVhZHlcblx0XHR9IGVsc2UgaWYgKCBpc0Z1bmN0aW9uKCBzZWxlY3RvciApICkge1xuXHRcdFx0cmV0dXJuIHJvb3QucmVhZHkgIT09IHVuZGVmaW5lZCA/XG5cdFx0XHRcdHJvb3QucmVhZHkoIHNlbGVjdG9yICkgOlxuXG5cdFx0XHRcdC8vIEV4ZWN1dGUgaW1tZWRpYXRlbHkgaWYgcmVhZHkgaXMgbm90IHByZXNlbnRcblx0XHRcdFx0c2VsZWN0b3IoIGpRdWVyeSApO1xuXHRcdH1cblxuXHRcdHJldHVybiBqUXVlcnkubWFrZUFycmF5KCBzZWxlY3RvciwgdGhpcyApO1xuXHR9O1xuXG4vLyBHaXZlIHRoZSBpbml0IGZ1bmN0aW9uIHRoZSBqUXVlcnkgcHJvdG90eXBlIGZvciBsYXRlciBpbnN0YW50aWF0aW9uXG5pbml0LnByb3RvdHlwZSA9IGpRdWVyeS5mbjtcblxuLy8gSW5pdGlhbGl6ZSBjZW50cmFsIHJlZmVyZW5jZVxucm9vdGpRdWVyeSA9IGpRdWVyeSggZG9jdW1lbnQgKTtcblxuXG52YXIgcnBhcmVudHNwcmV2ID0gL14oPzpwYXJlbnRzfHByZXYoPzpVbnRpbHxBbGwpKS8sXG5cblx0Ly8gTWV0aG9kcyBndWFyYW50ZWVkIHRvIHByb2R1Y2UgYSB1bmlxdWUgc2V0IHdoZW4gc3RhcnRpbmcgZnJvbSBhIHVuaXF1ZSBzZXRcblx0Z3VhcmFudGVlZFVuaXF1ZSA9IHtcblx0XHRjaGlsZHJlbjogdHJ1ZSxcblx0XHRjb250ZW50czogdHJ1ZSxcblx0XHRuZXh0OiB0cnVlLFxuXHRcdHByZXY6IHRydWVcblx0fTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRoYXM6IGZ1bmN0aW9uKCB0YXJnZXQgKSB7XG5cdFx0dmFyIHRhcmdldHMgPSBqUXVlcnkoIHRhcmdldCwgdGhpcyApLFxuXHRcdFx0bCA9IHRhcmdldHMubGVuZ3RoO1xuXG5cdFx0cmV0dXJuIHRoaXMuZmlsdGVyKCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBpID0gMDtcblx0XHRcdGZvciAoIDsgaSA8IGw7IGkrKyApIHtcblx0XHRcdFx0aWYgKCBqUXVlcnkuY29udGFpbnMoIHRoaXMsIHRhcmdldHNbIGkgXSApICkge1xuXHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9LFxuXG5cdGNsb3Nlc3Q6IGZ1bmN0aW9uKCBzZWxlY3RvcnMsIGNvbnRleHQgKSB7XG5cdFx0dmFyIGN1cixcblx0XHRcdGkgPSAwLFxuXHRcdFx0bCA9IHRoaXMubGVuZ3RoLFxuXHRcdFx0bWF0Y2hlZCA9IFtdLFxuXHRcdFx0dGFyZ2V0cyA9IHR5cGVvZiBzZWxlY3RvcnMgIT09IFwic3RyaW5nXCIgJiYgalF1ZXJ5KCBzZWxlY3RvcnMgKTtcblxuXHRcdC8vIFBvc2l0aW9uYWwgc2VsZWN0b3JzIG5ldmVyIG1hdGNoLCBzaW5jZSB0aGVyZSdzIG5vIF9zZWxlY3Rpb25fIGNvbnRleHRcblx0XHRpZiAoICFybmVlZHNDb250ZXh0LnRlc3QoIHNlbGVjdG9ycyApICkge1xuXHRcdFx0Zm9yICggOyBpIDwgbDsgaSsrICkge1xuXHRcdFx0XHRmb3IgKCBjdXIgPSB0aGlzWyBpIF07IGN1ciAmJiBjdXIgIT09IGNvbnRleHQ7IGN1ciA9IGN1ci5wYXJlbnROb2RlICkge1xuXG5cdFx0XHRcdFx0Ly8gQWx3YXlzIHNraXAgZG9jdW1lbnQgZnJhZ21lbnRzXG5cdFx0XHRcdFx0aWYgKCBjdXIubm9kZVR5cGUgPCAxMSAmJiAoIHRhcmdldHMgP1xuXHRcdFx0XHRcdFx0dGFyZ2V0cy5pbmRleCggY3VyICkgPiAtMSA6XG5cblx0XHRcdFx0XHRcdC8vIERvbid0IHBhc3Mgbm9uLWVsZW1lbnRzIHRvIFNpenpsZVxuXHRcdFx0XHRcdFx0Y3VyLm5vZGVUeXBlID09PSAxICYmXG5cdFx0XHRcdFx0XHRcdGpRdWVyeS5maW5kLm1hdGNoZXNTZWxlY3RvciggY3VyLCBzZWxlY3RvcnMgKSApICkge1xuXG5cdFx0XHRcdFx0XHRtYXRjaGVkLnB1c2goIGN1ciApO1xuXHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCBtYXRjaGVkLmxlbmd0aCA+IDEgPyBqUXVlcnkudW5pcXVlU29ydCggbWF0Y2hlZCApIDogbWF0Y2hlZCApO1xuXHR9LFxuXG5cdC8vIERldGVybWluZSB0aGUgcG9zaXRpb24gb2YgYW4gZWxlbWVudCB3aXRoaW4gdGhlIHNldFxuXHRpbmRleDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cblx0XHQvLyBObyBhcmd1bWVudCwgcmV0dXJuIGluZGV4IGluIHBhcmVudFxuXHRcdGlmICggIWVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gKCB0aGlzWyAwIF0gJiYgdGhpc1sgMCBdLnBhcmVudE5vZGUgKSA/IHRoaXMuZmlyc3QoKS5wcmV2QWxsKCkubGVuZ3RoIDogLTE7XG5cdFx0fVxuXG5cdFx0Ly8gSW5kZXggaW4gc2VsZWN0b3Jcblx0XHRpZiAoIHR5cGVvZiBlbGVtID09PSBcInN0cmluZ1wiICkge1xuXHRcdFx0cmV0dXJuIGluZGV4T2YuY2FsbCggalF1ZXJ5KCBlbGVtICksIHRoaXNbIDAgXSApO1xuXHRcdH1cblxuXHRcdC8vIExvY2F0ZSB0aGUgcG9zaXRpb24gb2YgdGhlIGRlc2lyZWQgZWxlbWVudFxuXHRcdHJldHVybiBpbmRleE9mLmNhbGwoIHRoaXMsXG5cblx0XHRcdC8vIElmIGl0IHJlY2VpdmVzIGEgalF1ZXJ5IG9iamVjdCwgdGhlIGZpcnN0IGVsZW1lbnQgaXMgdXNlZFxuXHRcdFx0ZWxlbS5qcXVlcnkgPyBlbGVtWyAwIF0gOiBlbGVtXG5cdFx0KTtcblx0fSxcblxuXHRhZGQ6IGZ1bmN0aW9uKCBzZWxlY3RvciwgY29udGV4dCApIHtcblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soXG5cdFx0XHRqUXVlcnkudW5pcXVlU29ydChcblx0XHRcdFx0alF1ZXJ5Lm1lcmdlKCB0aGlzLmdldCgpLCBqUXVlcnkoIHNlbGVjdG9yLCBjb250ZXh0ICkgKVxuXHRcdFx0KVxuXHRcdCk7XG5cdH0sXG5cblx0YWRkQmFjazogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHJldHVybiB0aGlzLmFkZCggc2VsZWN0b3IgPT0gbnVsbCA/XG5cdFx0XHR0aGlzLnByZXZPYmplY3QgOiB0aGlzLnByZXZPYmplY3QuZmlsdGVyKCBzZWxlY3RvciApXG5cdFx0KTtcblx0fVxufSApO1xuXG5mdW5jdGlvbiBzaWJsaW5nKCBjdXIsIGRpciApIHtcblx0d2hpbGUgKCAoIGN1ciA9IGN1clsgZGlyIF0gKSAmJiBjdXIubm9kZVR5cGUgIT09IDEgKSB7fVxuXHRyZXR1cm4gY3VyO1xufVxuXG5qUXVlcnkuZWFjaCgge1xuXHRwYXJlbnQ6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHZhciBwYXJlbnQgPSBlbGVtLnBhcmVudE5vZGU7XG5cdFx0cmV0dXJuIHBhcmVudCAmJiBwYXJlbnQubm9kZVR5cGUgIT09IDExID8gcGFyZW50IDogbnVsbDtcblx0fSxcblx0cGFyZW50czogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0cmV0dXJuIGRpciggZWxlbSwgXCJwYXJlbnROb2RlXCIgKTtcblx0fSxcblx0cGFyZW50c1VudGlsOiBmdW5jdGlvbiggZWxlbSwgX2ksIHVudGlsICkge1xuXHRcdHJldHVybiBkaXIoIGVsZW0sIFwicGFyZW50Tm9kZVwiLCB1bnRpbCApO1xuXHR9LFxuXHRuZXh0OiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRyZXR1cm4gc2libGluZyggZWxlbSwgXCJuZXh0U2libGluZ1wiICk7XG5cdH0sXG5cdHByZXY6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHJldHVybiBzaWJsaW5nKCBlbGVtLCBcInByZXZpb3VzU2libGluZ1wiICk7XG5cdH0sXG5cdG5leHRBbGw6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHJldHVybiBkaXIoIGVsZW0sIFwibmV4dFNpYmxpbmdcIiApO1xuXHR9LFxuXHRwcmV2QWxsOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRyZXR1cm4gZGlyKCBlbGVtLCBcInByZXZpb3VzU2libGluZ1wiICk7XG5cdH0sXG5cdG5leHRVbnRpbDogZnVuY3Rpb24oIGVsZW0sIF9pLCB1bnRpbCApIHtcblx0XHRyZXR1cm4gZGlyKCBlbGVtLCBcIm5leHRTaWJsaW5nXCIsIHVudGlsICk7XG5cdH0sXG5cdHByZXZVbnRpbDogZnVuY3Rpb24oIGVsZW0sIF9pLCB1bnRpbCApIHtcblx0XHRyZXR1cm4gZGlyKCBlbGVtLCBcInByZXZpb3VzU2libGluZ1wiLCB1bnRpbCApO1xuXHR9LFxuXHRzaWJsaW5nczogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0cmV0dXJuIHNpYmxpbmdzKCAoIGVsZW0ucGFyZW50Tm9kZSB8fCB7fSApLmZpcnN0Q2hpbGQsIGVsZW0gKTtcblx0fSxcblx0Y2hpbGRyZW46IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHJldHVybiBzaWJsaW5ncyggZWxlbS5maXJzdENoaWxkICk7XG5cdH0sXG5cdGNvbnRlbnRzOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRpZiAoIGVsZW0uY29udGVudERvY3VtZW50ICE9IG51bGwgJiZcblxuXHRcdFx0Ly8gU3VwcG9ydDogSUUgMTErXG5cdFx0XHQvLyA8b2JqZWN0PiBlbGVtZW50cyB3aXRoIG5vIGBkYXRhYCBhdHRyaWJ1dGUgaGFzIGFuIG9iamVjdFxuXHRcdFx0Ly8gYGNvbnRlbnREb2N1bWVudGAgd2l0aCBhIGBudWxsYCBwcm90b3R5cGUuXG5cdFx0XHRnZXRQcm90byggZWxlbS5jb250ZW50RG9jdW1lbnQgKSApIHtcblxuXHRcdFx0cmV0dXJuIGVsZW0uY29udGVudERvY3VtZW50O1xuXHRcdH1cblxuXHRcdC8vIFN1cHBvcnQ6IElFIDkgLSAxMSBvbmx5LCBpT1MgNyBvbmx5LCBBbmRyb2lkIEJyb3dzZXIgPD00LjMgb25seVxuXHRcdC8vIFRyZWF0IHRoZSB0ZW1wbGF0ZSBlbGVtZW50IGFzIGEgcmVndWxhciBvbmUgaW4gYnJvd3NlcnMgdGhhdFxuXHRcdC8vIGRvbid0IHN1cHBvcnQgaXQuXG5cdFx0aWYgKCBub2RlTmFtZSggZWxlbSwgXCJ0ZW1wbGF0ZVwiICkgKSB7XG5cdFx0XHRlbGVtID0gZWxlbS5jb250ZW50IHx8IGVsZW07XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGpRdWVyeS5tZXJnZSggW10sIGVsZW0uY2hpbGROb2RlcyApO1xuXHR9XG59LCBmdW5jdGlvbiggbmFtZSwgZm4gKSB7XG5cdGpRdWVyeS5mblsgbmFtZSBdID0gZnVuY3Rpb24oIHVudGlsLCBzZWxlY3RvciApIHtcblx0XHR2YXIgbWF0Y2hlZCA9IGpRdWVyeS5tYXAoIHRoaXMsIGZuLCB1bnRpbCApO1xuXG5cdFx0aWYgKCBuYW1lLnNsaWNlKCAtNSApICE9PSBcIlVudGlsXCIgKSB7XG5cdFx0XHRzZWxlY3RvciA9IHVudGlsO1xuXHRcdH1cblxuXHRcdGlmICggc2VsZWN0b3IgJiYgdHlwZW9mIHNlbGVjdG9yID09PSBcInN0cmluZ1wiICkge1xuXHRcdFx0bWF0Y2hlZCA9IGpRdWVyeS5maWx0ZXIoIHNlbGVjdG9yLCBtYXRjaGVkICk7XG5cdFx0fVxuXG5cdFx0aWYgKCB0aGlzLmxlbmd0aCA+IDEgKSB7XG5cblx0XHRcdC8vIFJlbW92ZSBkdXBsaWNhdGVzXG5cdFx0XHRpZiAoICFndWFyYW50ZWVkVW5pcXVlWyBuYW1lIF0gKSB7XG5cdFx0XHRcdGpRdWVyeS51bmlxdWVTb3J0KCBtYXRjaGVkICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFJldmVyc2Ugb3JkZXIgZm9yIHBhcmVudHMqIGFuZCBwcmV2LWRlcml2YXRpdmVzXG5cdFx0XHRpZiAoIHJwYXJlbnRzcHJldi50ZXN0KCBuYW1lICkgKSB7XG5cdFx0XHRcdG1hdGNoZWQucmV2ZXJzZSgpO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggbWF0Y2hlZCApO1xuXHR9O1xufSApO1xudmFyIHJub3RodG1sd2hpdGUgPSAoIC9bXlxceDIwXFx0XFxyXFxuXFxmXSsvZyApO1xuXG5cblxuLy8gQ29udmVydCBTdHJpbmctZm9ybWF0dGVkIG9wdGlvbnMgaW50byBPYmplY3QtZm9ybWF0dGVkIG9uZXNcbmZ1bmN0aW9uIGNyZWF0ZU9wdGlvbnMoIG9wdGlvbnMgKSB7XG5cdHZhciBvYmplY3QgPSB7fTtcblx0alF1ZXJ5LmVhY2goIG9wdGlvbnMubWF0Y2goIHJub3RodG1sd2hpdGUgKSB8fCBbXSwgZnVuY3Rpb24oIF8sIGZsYWcgKSB7XG5cdFx0b2JqZWN0WyBmbGFnIF0gPSB0cnVlO1xuXHR9ICk7XG5cdHJldHVybiBvYmplY3Q7XG59XG5cbi8qXG4gKiBDcmVhdGUgYSBjYWxsYmFjayBsaXN0IHVzaW5nIHRoZSBmb2xsb3dpbmcgcGFyYW1ldGVyczpcbiAqXG4gKlx0b3B0aW9uczogYW4gb3B0aW9uYWwgbGlzdCBvZiBzcGFjZS1zZXBhcmF0ZWQgb3B0aW9ucyB0aGF0IHdpbGwgY2hhbmdlIGhvd1xuICpcdFx0XHR0aGUgY2FsbGJhY2sgbGlzdCBiZWhhdmVzIG9yIGEgbW9yZSB0cmFkaXRpb25hbCBvcHRpb24gb2JqZWN0XG4gKlxuICogQnkgZGVmYXVsdCBhIGNhbGxiYWNrIGxpc3Qgd2lsbCBhY3QgbGlrZSBhbiBldmVudCBjYWxsYmFjayBsaXN0IGFuZCBjYW4gYmVcbiAqIFwiZmlyZWRcIiBtdWx0aXBsZSB0aW1lcy5cbiAqXG4gKiBQb3NzaWJsZSBvcHRpb25zOlxuICpcbiAqXHRvbmNlOlx0XHRcdHdpbGwgZW5zdXJlIHRoZSBjYWxsYmFjayBsaXN0IGNhbiBvbmx5IGJlIGZpcmVkIG9uY2UgKGxpa2UgYSBEZWZlcnJlZClcbiAqXG4gKlx0bWVtb3J5Olx0XHRcdHdpbGwga2VlcCB0cmFjayBvZiBwcmV2aW91cyB2YWx1ZXMgYW5kIHdpbGwgY2FsbCBhbnkgY2FsbGJhY2sgYWRkZWRcbiAqXHRcdFx0XHRcdGFmdGVyIHRoZSBsaXN0IGhhcyBiZWVuIGZpcmVkIHJpZ2h0IGF3YXkgd2l0aCB0aGUgbGF0ZXN0IFwibWVtb3JpemVkXCJcbiAqXHRcdFx0XHRcdHZhbHVlcyAobGlrZSBhIERlZmVycmVkKVxuICpcbiAqXHR1bmlxdWU6XHRcdFx0d2lsbCBlbnN1cmUgYSBjYWxsYmFjayBjYW4gb25seSBiZSBhZGRlZCBvbmNlIChubyBkdXBsaWNhdGUgaW4gdGhlIGxpc3QpXG4gKlxuICpcdHN0b3BPbkZhbHNlOlx0aW50ZXJydXB0IGNhbGxpbmdzIHdoZW4gYSBjYWxsYmFjayByZXR1cm5zIGZhbHNlXG4gKlxuICovXG5qUXVlcnkuQ2FsbGJhY2tzID0gZnVuY3Rpb24oIG9wdGlvbnMgKSB7XG5cblx0Ly8gQ29udmVydCBvcHRpb25zIGZyb20gU3RyaW5nLWZvcm1hdHRlZCB0byBPYmplY3QtZm9ybWF0dGVkIGlmIG5lZWRlZFxuXHQvLyAod2UgY2hlY2sgaW4gY2FjaGUgZmlyc3QpXG5cdG9wdGlvbnMgPSB0eXBlb2Ygb3B0aW9ucyA9PT0gXCJzdHJpbmdcIiA/XG5cdFx0Y3JlYXRlT3B0aW9ucyggb3B0aW9ucyApIDpcblx0XHRqUXVlcnkuZXh0ZW5kKCB7fSwgb3B0aW9ucyApO1xuXG5cdHZhciAvLyBGbGFnIHRvIGtub3cgaWYgbGlzdCBpcyBjdXJyZW50bHkgZmlyaW5nXG5cdFx0ZmlyaW5nLFxuXG5cdFx0Ly8gTGFzdCBmaXJlIHZhbHVlIGZvciBub24tZm9yZ2V0dGFibGUgbGlzdHNcblx0XHRtZW1vcnksXG5cblx0XHQvLyBGbGFnIHRvIGtub3cgaWYgbGlzdCB3YXMgYWxyZWFkeSBmaXJlZFxuXHRcdGZpcmVkLFxuXG5cdFx0Ly8gRmxhZyB0byBwcmV2ZW50IGZpcmluZ1xuXHRcdGxvY2tlZCxcblxuXHRcdC8vIEFjdHVhbCBjYWxsYmFjayBsaXN0XG5cdFx0bGlzdCA9IFtdLFxuXG5cdFx0Ly8gUXVldWUgb2YgZXhlY3V0aW9uIGRhdGEgZm9yIHJlcGVhdGFibGUgbGlzdHNcblx0XHRxdWV1ZSA9IFtdLFxuXG5cdFx0Ly8gSW5kZXggb2YgY3VycmVudGx5IGZpcmluZyBjYWxsYmFjayAobW9kaWZpZWQgYnkgYWRkL3JlbW92ZSBhcyBuZWVkZWQpXG5cdFx0ZmlyaW5nSW5kZXggPSAtMSxcblxuXHRcdC8vIEZpcmUgY2FsbGJhY2tzXG5cdFx0ZmlyZSA9IGZ1bmN0aW9uKCkge1xuXG5cdFx0XHQvLyBFbmZvcmNlIHNpbmdsZS1maXJpbmdcblx0XHRcdGxvY2tlZCA9IGxvY2tlZCB8fCBvcHRpb25zLm9uY2U7XG5cblx0XHRcdC8vIEV4ZWN1dGUgY2FsbGJhY2tzIGZvciBhbGwgcGVuZGluZyBleGVjdXRpb25zLFxuXHRcdFx0Ly8gcmVzcGVjdGluZyBmaXJpbmdJbmRleCBvdmVycmlkZXMgYW5kIHJ1bnRpbWUgY2hhbmdlc1xuXHRcdFx0ZmlyZWQgPSBmaXJpbmcgPSB0cnVlO1xuXHRcdFx0Zm9yICggOyBxdWV1ZS5sZW5ndGg7IGZpcmluZ0luZGV4ID0gLTEgKSB7XG5cdFx0XHRcdG1lbW9yeSA9IHF1ZXVlLnNoaWZ0KCk7XG5cdFx0XHRcdHdoaWxlICggKytmaXJpbmdJbmRleCA8IGxpc3QubGVuZ3RoICkge1xuXG5cdFx0XHRcdFx0Ly8gUnVuIGNhbGxiYWNrIGFuZCBjaGVjayBmb3IgZWFybHkgdGVybWluYXRpb25cblx0XHRcdFx0XHRpZiAoIGxpc3RbIGZpcmluZ0luZGV4IF0uYXBwbHkoIG1lbW9yeVsgMCBdLCBtZW1vcnlbIDEgXSApID09PSBmYWxzZSAmJlxuXHRcdFx0XHRcdFx0b3B0aW9ucy5zdG9wT25GYWxzZSApIHtcblxuXHRcdFx0XHRcdFx0Ly8gSnVtcCB0byBlbmQgYW5kIGZvcmdldCB0aGUgZGF0YSBzbyAuYWRkIGRvZXNuJ3QgcmUtZmlyZVxuXHRcdFx0XHRcdFx0ZmlyaW5nSW5kZXggPSBsaXN0Lmxlbmd0aDtcblx0XHRcdFx0XHRcdG1lbW9yeSA9IGZhbHNlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBGb3JnZXQgdGhlIGRhdGEgaWYgd2UncmUgZG9uZSB3aXRoIGl0XG5cdFx0XHRpZiAoICFvcHRpb25zLm1lbW9yeSApIHtcblx0XHRcdFx0bWVtb3J5ID0gZmFsc2U7XG5cdFx0XHR9XG5cblx0XHRcdGZpcmluZyA9IGZhbHNlO1xuXG5cdFx0XHQvLyBDbGVhbiB1cCBpZiB3ZSdyZSBkb25lIGZpcmluZyBmb3IgZ29vZFxuXHRcdFx0aWYgKCBsb2NrZWQgKSB7XG5cblx0XHRcdFx0Ly8gS2VlcCBhbiBlbXB0eSBsaXN0IGlmIHdlIGhhdmUgZGF0YSBmb3IgZnV0dXJlIGFkZCBjYWxsc1xuXHRcdFx0XHRpZiAoIG1lbW9yeSApIHtcblx0XHRcdFx0XHRsaXN0ID0gW107XG5cblx0XHRcdFx0Ly8gT3RoZXJ3aXNlLCB0aGlzIG9iamVjdCBpcyBzcGVudFxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGxpc3QgPSBcIlwiO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSxcblxuXHRcdC8vIEFjdHVhbCBDYWxsYmFja3Mgb2JqZWN0XG5cdFx0c2VsZiA9IHtcblxuXHRcdFx0Ly8gQWRkIGEgY2FsbGJhY2sgb3IgYSBjb2xsZWN0aW9uIG9mIGNhbGxiYWNrcyB0byB0aGUgbGlzdFxuXHRcdFx0YWRkOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0aWYgKCBsaXN0ICkge1xuXG5cdFx0XHRcdFx0Ly8gSWYgd2UgaGF2ZSBtZW1vcnkgZnJvbSBhIHBhc3QgcnVuLCB3ZSBzaG91bGQgZmlyZSBhZnRlciBhZGRpbmdcblx0XHRcdFx0XHRpZiAoIG1lbW9yeSAmJiAhZmlyaW5nICkge1xuXHRcdFx0XHRcdFx0ZmlyaW5nSW5kZXggPSBsaXN0Lmxlbmd0aCAtIDE7XG5cdFx0XHRcdFx0XHRxdWV1ZS5wdXNoKCBtZW1vcnkgKTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQoIGZ1bmN0aW9uIGFkZCggYXJncyApIHtcblx0XHRcdFx0XHRcdGpRdWVyeS5lYWNoKCBhcmdzLCBmdW5jdGlvbiggXywgYXJnICkge1xuXHRcdFx0XHRcdFx0XHRpZiAoIGlzRnVuY3Rpb24oIGFyZyApICkge1xuXHRcdFx0XHRcdFx0XHRcdGlmICggIW9wdGlvbnMudW5pcXVlIHx8ICFzZWxmLmhhcyggYXJnICkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRsaXN0LnB1c2goIGFyZyApO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0fSBlbHNlIGlmICggYXJnICYmIGFyZy5sZW5ndGggJiYgdG9UeXBlKCBhcmcgKSAhPT0gXCJzdHJpbmdcIiApIHtcblxuXHRcdFx0XHRcdFx0XHRcdC8vIEluc3BlY3QgcmVjdXJzaXZlbHlcblx0XHRcdFx0XHRcdFx0XHRhZGQoIGFyZyApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9ICk7XG5cdFx0XHRcdFx0fSApKCBhcmd1bWVudHMgKTtcblxuXHRcdFx0XHRcdGlmICggbWVtb3J5ICYmICFmaXJpbmcgKSB7XG5cdFx0XHRcdFx0XHRmaXJlKCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fSxcblxuXHRcdFx0Ly8gUmVtb3ZlIGEgY2FsbGJhY2sgZnJvbSB0aGUgbGlzdFxuXHRcdFx0cmVtb3ZlOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0alF1ZXJ5LmVhY2goIGFyZ3VtZW50cywgZnVuY3Rpb24oIF8sIGFyZyApIHtcblx0XHRcdFx0XHR2YXIgaW5kZXg7XG5cdFx0XHRcdFx0d2hpbGUgKCAoIGluZGV4ID0galF1ZXJ5LmluQXJyYXkoIGFyZywgbGlzdCwgaW5kZXggKSApID4gLTEgKSB7XG5cdFx0XHRcdFx0XHRsaXN0LnNwbGljZSggaW5kZXgsIDEgKTtcblxuXHRcdFx0XHRcdFx0Ly8gSGFuZGxlIGZpcmluZyBpbmRleGVzXG5cdFx0XHRcdFx0XHRpZiAoIGluZGV4IDw9IGZpcmluZ0luZGV4ICkge1xuXHRcdFx0XHRcdFx0XHRmaXJpbmdJbmRleC0tO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSApO1xuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH0sXG5cblx0XHRcdC8vIENoZWNrIGlmIGEgZ2l2ZW4gY2FsbGJhY2sgaXMgaW4gdGhlIGxpc3QuXG5cdFx0XHQvLyBJZiBubyBhcmd1bWVudCBpcyBnaXZlbiwgcmV0dXJuIHdoZXRoZXIgb3Igbm90IGxpc3QgaGFzIGNhbGxiYWNrcyBhdHRhY2hlZC5cblx0XHRcdGhhczogZnVuY3Rpb24oIGZuICkge1xuXHRcdFx0XHRyZXR1cm4gZm4gP1xuXHRcdFx0XHRcdGpRdWVyeS5pbkFycmF5KCBmbiwgbGlzdCApID4gLTEgOlxuXHRcdFx0XHRcdGxpc3QubGVuZ3RoID4gMDtcblx0XHRcdH0sXG5cblx0XHRcdC8vIFJlbW92ZSBhbGwgY2FsbGJhY2tzIGZyb20gdGhlIGxpc3Rcblx0XHRcdGVtcHR5OiBmdW5jdGlvbigpIHtcblx0XHRcdFx0aWYgKCBsaXN0ICkge1xuXHRcdFx0XHRcdGxpc3QgPSBbXTtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH0sXG5cblx0XHRcdC8vIERpc2FibGUgLmZpcmUgYW5kIC5hZGRcblx0XHRcdC8vIEFib3J0IGFueSBjdXJyZW50L3BlbmRpbmcgZXhlY3V0aW9uc1xuXHRcdFx0Ly8gQ2xlYXIgYWxsIGNhbGxiYWNrcyBhbmQgdmFsdWVzXG5cdFx0XHRkaXNhYmxlOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0bG9ja2VkID0gcXVldWUgPSBbXTtcblx0XHRcdFx0bGlzdCA9IG1lbW9yeSA9IFwiXCI7XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fSxcblx0XHRcdGRpc2FibGVkOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuICFsaXN0O1xuXHRcdFx0fSxcblxuXHRcdFx0Ly8gRGlzYWJsZSAuZmlyZVxuXHRcdFx0Ly8gQWxzbyBkaXNhYmxlIC5hZGQgdW5sZXNzIHdlIGhhdmUgbWVtb3J5IChzaW5jZSBpdCB3b3VsZCBoYXZlIG5vIGVmZmVjdClcblx0XHRcdC8vIEFib3J0IGFueSBwZW5kaW5nIGV4ZWN1dGlvbnNcblx0XHRcdGxvY2s6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRsb2NrZWQgPSBxdWV1ZSA9IFtdO1xuXHRcdFx0XHRpZiAoICFtZW1vcnkgJiYgIWZpcmluZyApIHtcblx0XHRcdFx0XHRsaXN0ID0gbWVtb3J5ID0gXCJcIjtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH0sXG5cdFx0XHRsb2NrZWQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gISFsb2NrZWQ7XG5cdFx0XHR9LFxuXG5cdFx0XHQvLyBDYWxsIGFsbCBjYWxsYmFja3Mgd2l0aCB0aGUgZ2l2ZW4gY29udGV4dCBhbmQgYXJndW1lbnRzXG5cdFx0XHRmaXJlV2l0aDogZnVuY3Rpb24oIGNvbnRleHQsIGFyZ3MgKSB7XG5cdFx0XHRcdGlmICggIWxvY2tlZCApIHtcblx0XHRcdFx0XHRhcmdzID0gYXJncyB8fCBbXTtcblx0XHRcdFx0XHRhcmdzID0gWyBjb250ZXh0LCBhcmdzLnNsaWNlID8gYXJncy5zbGljZSgpIDogYXJncyBdO1xuXHRcdFx0XHRcdHF1ZXVlLnB1c2goIGFyZ3MgKTtcblx0XHRcdFx0XHRpZiAoICFmaXJpbmcgKSB7XG5cdFx0XHRcdFx0XHRmaXJlKCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fSxcblxuXHRcdFx0Ly8gQ2FsbCBhbGwgdGhlIGNhbGxiYWNrcyB3aXRoIHRoZSBnaXZlbiBhcmd1bWVudHNcblx0XHRcdGZpcmU6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRzZWxmLmZpcmVXaXRoKCB0aGlzLCBhcmd1bWVudHMgKTtcblx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHR9LFxuXG5cdFx0XHQvLyBUbyBrbm93IGlmIHRoZSBjYWxsYmFja3MgaGF2ZSBhbHJlYWR5IGJlZW4gY2FsbGVkIGF0IGxlYXN0IG9uY2Vcblx0XHRcdGZpcmVkOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuICEhZmlyZWQ7XG5cdFx0XHR9XG5cdFx0fTtcblxuXHRyZXR1cm4gc2VsZjtcbn07XG5cblxuZnVuY3Rpb24gSWRlbnRpdHkoIHYgKSB7XG5cdHJldHVybiB2O1xufVxuZnVuY3Rpb24gVGhyb3dlciggZXggKSB7XG5cdHRocm93IGV4O1xufVxuXG5mdW5jdGlvbiBhZG9wdFZhbHVlKCB2YWx1ZSwgcmVzb2x2ZSwgcmVqZWN0LCBub1ZhbHVlICkge1xuXHR2YXIgbWV0aG9kO1xuXG5cdHRyeSB7XG5cblx0XHQvLyBDaGVjayBmb3IgcHJvbWlzZSBhc3BlY3QgZmlyc3QgdG8gcHJpdmlsZWdlIHN5bmNocm9ub3VzIGJlaGF2aW9yXG5cdFx0aWYgKCB2YWx1ZSAmJiBpc0Z1bmN0aW9uKCAoIG1ldGhvZCA9IHZhbHVlLnByb21pc2UgKSApICkge1xuXHRcdFx0bWV0aG9kLmNhbGwoIHZhbHVlICkuZG9uZSggcmVzb2x2ZSApLmZhaWwoIHJlamVjdCApO1xuXG5cdFx0Ly8gT3RoZXIgdGhlbmFibGVzXG5cdFx0fSBlbHNlIGlmICggdmFsdWUgJiYgaXNGdW5jdGlvbiggKCBtZXRob2QgPSB2YWx1ZS50aGVuICkgKSApIHtcblx0XHRcdG1ldGhvZC5jYWxsKCB2YWx1ZSwgcmVzb2x2ZSwgcmVqZWN0ICk7XG5cblx0XHQvLyBPdGhlciBub24tdGhlbmFibGVzXG5cdFx0fSBlbHNlIHtcblxuXHRcdFx0Ly8gQ29udHJvbCBgcmVzb2x2ZWAgYXJndW1lbnRzIGJ5IGxldHRpbmcgQXJyYXkjc2xpY2UgY2FzdCBib29sZWFuIGBub1ZhbHVlYCB0byBpbnRlZ2VyOlxuXHRcdFx0Ly8gKiBmYWxzZTogWyB2YWx1ZSBdLnNsaWNlKCAwICkgPT4gcmVzb2x2ZSggdmFsdWUgKVxuXHRcdFx0Ly8gKiB0cnVlOiBbIHZhbHVlIF0uc2xpY2UoIDEgKSA9PiByZXNvbHZlKClcblx0XHRcdHJlc29sdmUuYXBwbHkoIHVuZGVmaW5lZCwgWyB2YWx1ZSBdLnNsaWNlKCBub1ZhbHVlICkgKTtcblx0XHR9XG5cblx0Ly8gRm9yIFByb21pc2VzL0ErLCBjb252ZXJ0IGV4Y2VwdGlvbnMgaW50byByZWplY3Rpb25zXG5cdC8vIFNpbmNlIGpRdWVyeS53aGVuIGRvZXNuJ3QgdW53cmFwIHRoZW5hYmxlcywgd2UgY2FuIHNraXAgdGhlIGV4dHJhIGNoZWNrcyBhcHBlYXJpbmcgaW5cblx0Ly8gRGVmZXJyZWQjdGhlbiB0byBjb25kaXRpb25hbGx5IHN1cHByZXNzIHJlamVjdGlvbi5cblx0fSBjYXRjaCAoIHZhbHVlICkge1xuXG5cdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCA0LjAgb25seVxuXHRcdC8vIFN0cmljdCBtb2RlIGZ1bmN0aW9ucyBpbnZva2VkIHdpdGhvdXQgLmNhbGwvLmFwcGx5IGdldCBnbG9iYWwtb2JqZWN0IGNvbnRleHRcblx0XHRyZWplY3QuYXBwbHkoIHVuZGVmaW5lZCwgWyB2YWx1ZSBdICk7XG5cdH1cbn1cblxualF1ZXJ5LmV4dGVuZCgge1xuXG5cdERlZmVycmVkOiBmdW5jdGlvbiggZnVuYyApIHtcblx0XHR2YXIgdHVwbGVzID0gW1xuXG5cdFx0XHRcdC8vIGFjdGlvbiwgYWRkIGxpc3RlbmVyLCBjYWxsYmFja3MsXG5cdFx0XHRcdC8vIC4uLiAudGhlbiBoYW5kbGVycywgYXJndW1lbnQgaW5kZXgsIFtmaW5hbCBzdGF0ZV1cblx0XHRcdFx0WyBcIm5vdGlmeVwiLCBcInByb2dyZXNzXCIsIGpRdWVyeS5DYWxsYmFja3MoIFwibWVtb3J5XCIgKSxcblx0XHRcdFx0XHRqUXVlcnkuQ2FsbGJhY2tzKCBcIm1lbW9yeVwiICksIDIgXSxcblx0XHRcdFx0WyBcInJlc29sdmVcIiwgXCJkb25lXCIsIGpRdWVyeS5DYWxsYmFja3MoIFwib25jZSBtZW1vcnlcIiApLFxuXHRcdFx0XHRcdGpRdWVyeS5DYWxsYmFja3MoIFwib25jZSBtZW1vcnlcIiApLCAwLCBcInJlc29sdmVkXCIgXSxcblx0XHRcdFx0WyBcInJlamVjdFwiLCBcImZhaWxcIiwgalF1ZXJ5LkNhbGxiYWNrcyggXCJvbmNlIG1lbW9yeVwiICksXG5cdFx0XHRcdFx0alF1ZXJ5LkNhbGxiYWNrcyggXCJvbmNlIG1lbW9yeVwiICksIDEsIFwicmVqZWN0ZWRcIiBdXG5cdFx0XHRdLFxuXHRcdFx0c3RhdGUgPSBcInBlbmRpbmdcIixcblx0XHRcdHByb21pc2UgPSB7XG5cdFx0XHRcdHN0YXRlOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRyZXR1cm4gc3RhdGU7XG5cdFx0XHRcdH0sXG5cdFx0XHRcdGFsd2F5czogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0ZGVmZXJyZWQuZG9uZSggYXJndW1lbnRzICkuZmFpbCggYXJndW1lbnRzICk7XG5cdFx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHRcdH0sXG5cdFx0XHRcdFwiY2F0Y2hcIjogZnVuY3Rpb24oIGZuICkge1xuXHRcdFx0XHRcdHJldHVybiBwcm9taXNlLnRoZW4oIG51bGwsIGZuICk7XG5cdFx0XHRcdH0sXG5cblx0XHRcdFx0Ly8gS2VlcCBwaXBlIGZvciBiYWNrLWNvbXBhdFxuXHRcdFx0XHRwaXBlOiBmdW5jdGlvbiggLyogZm5Eb25lLCBmbkZhaWwsIGZuUHJvZ3Jlc3MgKi8gKSB7XG5cdFx0XHRcdFx0dmFyIGZucyA9IGFyZ3VtZW50cztcblxuXHRcdFx0XHRcdHJldHVybiBqUXVlcnkuRGVmZXJyZWQoIGZ1bmN0aW9uKCBuZXdEZWZlciApIHtcblx0XHRcdFx0XHRcdGpRdWVyeS5lYWNoKCB0dXBsZXMsIGZ1bmN0aW9uKCBfaSwgdHVwbGUgKSB7XG5cblx0XHRcdFx0XHRcdFx0Ly8gTWFwIHR1cGxlcyAocHJvZ3Jlc3MsIGRvbmUsIGZhaWwpIHRvIGFyZ3VtZW50cyAoZG9uZSwgZmFpbCwgcHJvZ3Jlc3MpXG5cdFx0XHRcdFx0XHRcdHZhciBmbiA9IGlzRnVuY3Rpb24oIGZuc1sgdHVwbGVbIDQgXSBdICkgJiYgZm5zWyB0dXBsZVsgNCBdIF07XG5cblx0XHRcdFx0XHRcdFx0Ly8gZGVmZXJyZWQucHJvZ3Jlc3MoZnVuY3Rpb24oKSB7IGJpbmQgdG8gbmV3RGVmZXIgb3IgbmV3RGVmZXIubm90aWZ5IH0pXG5cdFx0XHRcdFx0XHRcdC8vIGRlZmVycmVkLmRvbmUoZnVuY3Rpb24oKSB7IGJpbmQgdG8gbmV3RGVmZXIgb3IgbmV3RGVmZXIucmVzb2x2ZSB9KVxuXHRcdFx0XHRcdFx0XHQvLyBkZWZlcnJlZC5mYWlsKGZ1bmN0aW9uKCkgeyBiaW5kIHRvIG5ld0RlZmVyIG9yIG5ld0RlZmVyLnJlamVjdCB9KVxuXHRcdFx0XHRcdFx0XHRkZWZlcnJlZFsgdHVwbGVbIDEgXSBdKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdFx0XHR2YXIgcmV0dXJuZWQgPSBmbiAmJiBmbi5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XG5cdFx0XHRcdFx0XHRcdFx0aWYgKCByZXR1cm5lZCAmJiBpc0Z1bmN0aW9uKCByZXR1cm5lZC5wcm9taXNlICkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRyZXR1cm5lZC5wcm9taXNlKClcblx0XHRcdFx0XHRcdFx0XHRcdFx0LnByb2dyZXNzKCBuZXdEZWZlci5ub3RpZnkgKVxuXHRcdFx0XHRcdFx0XHRcdFx0XHQuZG9uZSggbmV3RGVmZXIucmVzb2x2ZSApXG5cdFx0XHRcdFx0XHRcdFx0XHRcdC5mYWlsKCBuZXdEZWZlci5yZWplY3QgKTtcblx0XHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRcdFx0bmV3RGVmZXJbIHR1cGxlWyAwIF0gKyBcIldpdGhcIiBdKFxuXHRcdFx0XHRcdFx0XHRcdFx0XHR0aGlzLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRmbiA/IFsgcmV0dXJuZWQgXSA6IGFyZ3VtZW50c1xuXHRcdFx0XHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdH0gKTtcblx0XHRcdFx0XHRcdH0gKTtcblx0XHRcdFx0XHRcdGZucyA9IG51bGw7XG5cdFx0XHRcdFx0fSApLnByb21pc2UoKTtcblx0XHRcdFx0fSxcblx0XHRcdFx0dGhlbjogZnVuY3Rpb24oIG9uRnVsZmlsbGVkLCBvblJlamVjdGVkLCBvblByb2dyZXNzICkge1xuXHRcdFx0XHRcdHZhciBtYXhEZXB0aCA9IDA7XG5cdFx0XHRcdFx0ZnVuY3Rpb24gcmVzb2x2ZSggZGVwdGgsIGRlZmVycmVkLCBoYW5kbGVyLCBzcGVjaWFsICkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0XHR2YXIgdGhhdCA9IHRoaXMsXG5cdFx0XHRcdFx0XHRcdFx0YXJncyA9IGFyZ3VtZW50cyxcblx0XHRcdFx0XHRcdFx0XHRtaWdodFRocm93ID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHR2YXIgcmV0dXJuZWQsIHRoZW47XG5cblx0XHRcdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IFByb21pc2VzL0ErIHNlY3Rpb24gMi4zLjMuMy4zXG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBodHRwczovL3Byb21pc2VzYXBsdXMuY29tLyNwb2ludC01OVxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gSWdub3JlIGRvdWJsZS1yZXNvbHV0aW9uIGF0dGVtcHRzXG5cdFx0XHRcdFx0XHRcdFx0XHRpZiAoIGRlcHRoIDwgbWF4RGVwdGggKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHRcdFx0cmV0dXJuZWQgPSBoYW5kbGVyLmFwcGx5KCB0aGF0LCBhcmdzICk7XG5cblx0XHRcdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IFByb21pc2VzL0ErIHNlY3Rpb24gMi4zLjFcblx0XHRcdFx0XHRcdFx0XHRcdC8vIGh0dHBzOi8vcHJvbWlzZXNhcGx1cy5jb20vI3BvaW50LTQ4XG5cdFx0XHRcdFx0XHRcdFx0XHRpZiAoIHJldHVybmVkID09PSBkZWZlcnJlZC5wcm9taXNlKCkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdHRocm93IG5ldyBUeXBlRXJyb3IoIFwiVGhlbmFibGUgc2VsZi1yZXNvbHV0aW9uXCIgKTtcblx0XHRcdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogUHJvbWlzZXMvQSsgc2VjdGlvbnMgMi4zLjMuMSwgMy41XG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBodHRwczovL3Byb21pc2VzYXBsdXMuY29tLyNwb2ludC01NFxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gaHR0cHM6Ly9wcm9taXNlc2FwbHVzLmNvbS8jcG9pbnQtNzVcblx0XHRcdFx0XHRcdFx0XHRcdC8vIFJldHJpZXZlIGB0aGVuYCBvbmx5IG9uY2Vcblx0XHRcdFx0XHRcdFx0XHRcdHRoZW4gPSByZXR1cm5lZCAmJlxuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IFByb21pc2VzL0ErIHNlY3Rpb24gMi4zLjRcblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gaHR0cHM6Ly9wcm9taXNlc2FwbHVzLmNvbS8jcG9pbnQtNjRcblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gT25seSBjaGVjayBvYmplY3RzIGFuZCBmdW5jdGlvbnMgZm9yIHRoZW5hYmlsaXR5XG5cdFx0XHRcdFx0XHRcdFx0XHRcdCggdHlwZW9mIHJldHVybmVkID09PSBcIm9iamVjdFwiIHx8XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0dHlwZW9mIHJldHVybmVkID09PSBcImZ1bmN0aW9uXCIgKSAmJlxuXHRcdFx0XHRcdFx0XHRcdFx0XHRyZXR1cm5lZC50aGVuO1xuXG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBIYW5kbGUgYSByZXR1cm5lZCB0aGVuYWJsZVxuXHRcdFx0XHRcdFx0XHRcdFx0aWYgKCBpc0Z1bmN0aW9uKCB0aGVuICkgKSB7XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gU3BlY2lhbCBwcm9jZXNzb3JzIChub3RpZnkpIGp1c3Qgd2FpdCBmb3IgcmVzb2x1dGlvblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRpZiAoIHNwZWNpYWwgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0dGhlbi5jYWxsKFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0cmV0dXJuZWQsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRyZXNvbHZlKCBtYXhEZXB0aCwgZGVmZXJyZWQsIElkZW50aXR5LCBzcGVjaWFsICksXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRyZXNvbHZlKCBtYXhEZXB0aCwgZGVmZXJyZWQsIFRocm93ZXIsIHNwZWNpYWwgKVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdCk7XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gTm9ybWFsIHByb2Nlc3NvcnMgKHJlc29sdmUpIGFsc28gaG9vayBpbnRvIHByb2dyZXNzXG5cdFx0XHRcdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvLyAuLi5hbmQgZGlzcmVnYXJkIG9sZGVyIHJlc29sdXRpb24gdmFsdWVzXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0bWF4RGVwdGgrKztcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHRoZW4uY2FsbChcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdHJldHVybmVkLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0cmVzb2x2ZSggbWF4RGVwdGgsIGRlZmVycmVkLCBJZGVudGl0eSwgc3BlY2lhbCApLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0cmVzb2x2ZSggbWF4RGVwdGgsIGRlZmVycmVkLCBUaHJvd2VyLCBzcGVjaWFsICksXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRyZXNvbHZlKCBtYXhEZXB0aCwgZGVmZXJyZWQsIElkZW50aXR5LFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRkZWZlcnJlZC5ub3RpZnlXaXRoIClcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdFx0XHRcdC8vIEhhbmRsZSBhbGwgb3RoZXIgcmV0dXJuZWQgdmFsdWVzXG5cdFx0XHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdC8vIE9ubHkgc3Vic3RpdHV0ZSBoYW5kbGVycyBwYXNzIG9uIGNvbnRleHRcblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gYW5kIG11bHRpcGxlIHZhbHVlcyAobm9uLXNwZWMgYmVoYXZpb3IpXG5cdFx0XHRcdFx0XHRcdFx0XHRcdGlmICggaGFuZGxlciAhPT0gSWRlbnRpdHkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0dGhhdCA9IHVuZGVmaW5lZDtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRhcmdzID0gWyByZXR1cm5lZCBdO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gUHJvY2VzcyB0aGUgdmFsdWUocylcblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gRGVmYXVsdCBwcm9jZXNzIGlzIHJlc29sdmVcblx0XHRcdFx0XHRcdFx0XHRcdFx0KCBzcGVjaWFsIHx8IGRlZmVycmVkLnJlc29sdmVXaXRoICkoIHRoYXQsIGFyZ3MgKTtcblx0XHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHR9LFxuXG5cdFx0XHRcdFx0XHRcdFx0Ly8gT25seSBub3JtYWwgcHJvY2Vzc29ycyAocmVzb2x2ZSkgY2F0Y2ggYW5kIHJlamVjdCBleGNlcHRpb25zXG5cdFx0XHRcdFx0XHRcdFx0cHJvY2VzcyA9IHNwZWNpYWwgP1xuXHRcdFx0XHRcdFx0XHRcdFx0bWlnaHRUaHJvdyA6XG5cdFx0XHRcdFx0XHRcdFx0XHRmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRtaWdodFRocm93KCk7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdH0gY2F0Y2ggKCBlICkge1xuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0aWYgKCBqUXVlcnkuRGVmZXJyZWQuZXhjZXB0aW9uSG9vayApIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdGpRdWVyeS5EZWZlcnJlZC5leGNlcHRpb25Ib29rKCBlLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRwcm9jZXNzLnN0YWNrVHJhY2UgKTtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBQcm9taXNlcy9BKyBzZWN0aW9uIDIuMy4zLjMuNC4xXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gaHR0cHM6Ly9wcm9taXNlc2FwbHVzLmNvbS8jcG9pbnQtNjFcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBJZ25vcmUgcG9zdC1yZXNvbHV0aW9uIGV4Y2VwdGlvbnNcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRpZiAoIGRlcHRoICsgMSA+PSBtYXhEZXB0aCApIHtcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gT25seSBzdWJzdGl0dXRlIGhhbmRsZXJzIHBhc3Mgb24gY29udGV4dFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gYW5kIG11bHRpcGxlIHZhbHVlcyAobm9uLXNwZWMgYmVoYXZpb3IpXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRpZiAoIGhhbmRsZXIgIT09IFRocm93ZXIgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdHRoYXQgPSB1bmRlZmluZWQ7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdGFyZ3MgPSBbIGUgXTtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0ZGVmZXJyZWQucmVqZWN0V2l0aCggdGhhdCwgYXJncyApO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdFx0fTtcblxuXHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBQcm9taXNlcy9BKyBzZWN0aW9uIDIuMy4zLjMuMVxuXHRcdFx0XHRcdFx0XHQvLyBodHRwczovL3Byb21pc2VzYXBsdXMuY29tLyNwb2ludC01N1xuXHRcdFx0XHRcdFx0XHQvLyBSZS1yZXNvbHZlIHByb21pc2VzIGltbWVkaWF0ZWx5IHRvIGRvZGdlIGZhbHNlIHJlamVjdGlvbiBmcm9tXG5cdFx0XHRcdFx0XHRcdC8vIHN1YnNlcXVlbnQgZXJyb3JzXG5cdFx0XHRcdFx0XHRcdGlmICggZGVwdGggKSB7XG5cdFx0XHRcdFx0XHRcdFx0cHJvY2VzcygpO1xuXHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdFx0XHRcdFx0Ly8gQ2FsbCBhbiBvcHRpb25hbCBob29rIHRvIHJlY29yZCB0aGUgc3RhY2ssIGluIGNhc2Ugb2YgZXhjZXB0aW9uXG5cdFx0XHRcdFx0XHRcdFx0Ly8gc2luY2UgaXQncyBvdGhlcndpc2UgbG9zdCB3aGVuIGV4ZWN1dGlvbiBnb2VzIGFzeW5jXG5cdFx0XHRcdFx0XHRcdFx0aWYgKCBqUXVlcnkuRGVmZXJyZWQuZ2V0U3RhY2tIb29rICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0cHJvY2Vzcy5zdGFja1RyYWNlID0galF1ZXJ5LkRlZmVycmVkLmdldFN0YWNrSG9vaygpO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHR3aW5kb3cuc2V0VGltZW91dCggcHJvY2VzcyApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9O1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdHJldHVybiBqUXVlcnkuRGVmZXJyZWQoIGZ1bmN0aW9uKCBuZXdEZWZlciApIHtcblxuXHRcdFx0XHRcdFx0Ly8gcHJvZ3Jlc3NfaGFuZGxlcnMuYWRkKCAuLi4gKVxuXHRcdFx0XHRcdFx0dHVwbGVzWyAwIF1bIDMgXS5hZGQoXG5cdFx0XHRcdFx0XHRcdHJlc29sdmUoXG5cdFx0XHRcdFx0XHRcdFx0MCxcblx0XHRcdFx0XHRcdFx0XHRuZXdEZWZlcixcblx0XHRcdFx0XHRcdFx0XHRpc0Z1bmN0aW9uKCBvblByb2dyZXNzICkgP1xuXHRcdFx0XHRcdFx0XHRcdFx0b25Qcm9ncmVzcyA6XG5cdFx0XHRcdFx0XHRcdFx0XHRJZGVudGl0eSxcblx0XHRcdFx0XHRcdFx0XHRuZXdEZWZlci5ub3RpZnlXaXRoXG5cdFx0XHRcdFx0XHRcdClcblx0XHRcdFx0XHRcdCk7XG5cblx0XHRcdFx0XHRcdC8vIGZ1bGZpbGxlZF9oYW5kbGVycy5hZGQoIC4uLiApXG5cdFx0XHRcdFx0XHR0dXBsZXNbIDEgXVsgMyBdLmFkZChcblx0XHRcdFx0XHRcdFx0cmVzb2x2ZShcblx0XHRcdFx0XHRcdFx0XHQwLFxuXHRcdFx0XHRcdFx0XHRcdG5ld0RlZmVyLFxuXHRcdFx0XHRcdFx0XHRcdGlzRnVuY3Rpb24oIG9uRnVsZmlsbGVkICkgP1xuXHRcdFx0XHRcdFx0XHRcdFx0b25GdWxmaWxsZWQgOlxuXHRcdFx0XHRcdFx0XHRcdFx0SWRlbnRpdHlcblx0XHRcdFx0XHRcdFx0KVxuXHRcdFx0XHRcdFx0KTtcblxuXHRcdFx0XHRcdFx0Ly8gcmVqZWN0ZWRfaGFuZGxlcnMuYWRkKCAuLi4gKVxuXHRcdFx0XHRcdFx0dHVwbGVzWyAyIF1bIDMgXS5hZGQoXG5cdFx0XHRcdFx0XHRcdHJlc29sdmUoXG5cdFx0XHRcdFx0XHRcdFx0MCxcblx0XHRcdFx0XHRcdFx0XHRuZXdEZWZlcixcblx0XHRcdFx0XHRcdFx0XHRpc0Z1bmN0aW9uKCBvblJlamVjdGVkICkgP1xuXHRcdFx0XHRcdFx0XHRcdFx0b25SZWplY3RlZCA6XG5cdFx0XHRcdFx0XHRcdFx0XHRUaHJvd2VyXG5cdFx0XHRcdFx0XHRcdClcblx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0fSApLnByb21pc2UoKTtcblx0XHRcdFx0fSxcblxuXHRcdFx0XHQvLyBHZXQgYSBwcm9taXNlIGZvciB0aGlzIGRlZmVycmVkXG5cdFx0XHRcdC8vIElmIG9iaiBpcyBwcm92aWRlZCwgdGhlIHByb21pc2UgYXNwZWN0IGlzIGFkZGVkIHRvIHRoZSBvYmplY3Rcblx0XHRcdFx0cHJvbWlzZTogZnVuY3Rpb24oIG9iaiApIHtcblx0XHRcdFx0XHRyZXR1cm4gb2JqICE9IG51bGwgPyBqUXVlcnkuZXh0ZW5kKCBvYmosIHByb21pc2UgKSA6IHByb21pc2U7XG5cdFx0XHRcdH1cblx0XHRcdH0sXG5cdFx0XHRkZWZlcnJlZCA9IHt9O1xuXG5cdFx0Ly8gQWRkIGxpc3Qtc3BlY2lmaWMgbWV0aG9kc1xuXHRcdGpRdWVyeS5lYWNoKCB0dXBsZXMsIGZ1bmN0aW9uKCBpLCB0dXBsZSApIHtcblx0XHRcdHZhciBsaXN0ID0gdHVwbGVbIDIgXSxcblx0XHRcdFx0c3RhdGVTdHJpbmcgPSB0dXBsZVsgNSBdO1xuXG5cdFx0XHQvLyBwcm9taXNlLnByb2dyZXNzID0gbGlzdC5hZGRcblx0XHRcdC8vIHByb21pc2UuZG9uZSA9IGxpc3QuYWRkXG5cdFx0XHQvLyBwcm9taXNlLmZhaWwgPSBsaXN0LmFkZFxuXHRcdFx0cHJvbWlzZVsgdHVwbGVbIDEgXSBdID0gbGlzdC5hZGQ7XG5cblx0XHRcdC8vIEhhbmRsZSBzdGF0ZVxuXHRcdFx0aWYgKCBzdGF0ZVN0cmluZyApIHtcblx0XHRcdFx0bGlzdC5hZGQoXG5cdFx0XHRcdFx0ZnVuY3Rpb24oKSB7XG5cblx0XHRcdFx0XHRcdC8vIHN0YXRlID0gXCJyZXNvbHZlZFwiIChpLmUuLCBmdWxmaWxsZWQpXG5cdFx0XHRcdFx0XHQvLyBzdGF0ZSA9IFwicmVqZWN0ZWRcIlxuXHRcdFx0XHRcdFx0c3RhdGUgPSBzdGF0ZVN0cmluZztcblx0XHRcdFx0XHR9LFxuXG5cdFx0XHRcdFx0Ly8gcmVqZWN0ZWRfY2FsbGJhY2tzLmRpc2FibGVcblx0XHRcdFx0XHQvLyBmdWxmaWxsZWRfY2FsbGJhY2tzLmRpc2FibGVcblx0XHRcdFx0XHR0dXBsZXNbIDMgLSBpIF1bIDIgXS5kaXNhYmxlLFxuXG5cdFx0XHRcdFx0Ly8gcmVqZWN0ZWRfaGFuZGxlcnMuZGlzYWJsZVxuXHRcdFx0XHRcdC8vIGZ1bGZpbGxlZF9oYW5kbGVycy5kaXNhYmxlXG5cdFx0XHRcdFx0dHVwbGVzWyAzIC0gaSBdWyAzIF0uZGlzYWJsZSxcblxuXHRcdFx0XHRcdC8vIHByb2dyZXNzX2NhbGxiYWNrcy5sb2NrXG5cdFx0XHRcdFx0dHVwbGVzWyAwIF1bIDIgXS5sb2NrLFxuXG5cdFx0XHRcdFx0Ly8gcHJvZ3Jlc3NfaGFuZGxlcnMubG9ja1xuXHRcdFx0XHRcdHR1cGxlc1sgMCBdWyAzIF0ubG9ja1xuXHRcdFx0XHQpO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBwcm9ncmVzc19oYW5kbGVycy5maXJlXG5cdFx0XHQvLyBmdWxmaWxsZWRfaGFuZGxlcnMuZmlyZVxuXHRcdFx0Ly8gcmVqZWN0ZWRfaGFuZGxlcnMuZmlyZVxuXHRcdFx0bGlzdC5hZGQoIHR1cGxlWyAzIF0uZmlyZSApO1xuXG5cdFx0XHQvLyBkZWZlcnJlZC5ub3RpZnkgPSBmdW5jdGlvbigpIHsgZGVmZXJyZWQubm90aWZ5V2l0aCguLi4pIH1cblx0XHRcdC8vIGRlZmVycmVkLnJlc29sdmUgPSBmdW5jdGlvbigpIHsgZGVmZXJyZWQucmVzb2x2ZVdpdGgoLi4uKSB9XG5cdFx0XHQvLyBkZWZlcnJlZC5yZWplY3QgPSBmdW5jdGlvbigpIHsgZGVmZXJyZWQucmVqZWN0V2l0aCguLi4pIH1cblx0XHRcdGRlZmVycmVkWyB0dXBsZVsgMCBdIF0gPSBmdW5jdGlvbigpIHtcblx0XHRcdFx0ZGVmZXJyZWRbIHR1cGxlWyAwIF0gKyBcIldpdGhcIiBdKCB0aGlzID09PSBkZWZlcnJlZCA/IHVuZGVmaW5lZCA6IHRoaXMsIGFyZ3VtZW50cyApO1xuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH07XG5cblx0XHRcdC8vIGRlZmVycmVkLm5vdGlmeVdpdGggPSBsaXN0LmZpcmVXaXRoXG5cdFx0XHQvLyBkZWZlcnJlZC5yZXNvbHZlV2l0aCA9IGxpc3QuZmlyZVdpdGhcblx0XHRcdC8vIGRlZmVycmVkLnJlamVjdFdpdGggPSBsaXN0LmZpcmVXaXRoXG5cdFx0XHRkZWZlcnJlZFsgdHVwbGVbIDAgXSArIFwiV2l0aFwiIF0gPSBsaXN0LmZpcmVXaXRoO1xuXHRcdH0gKTtcblxuXHRcdC8vIE1ha2UgdGhlIGRlZmVycmVkIGEgcHJvbWlzZVxuXHRcdHByb21pc2UucHJvbWlzZSggZGVmZXJyZWQgKTtcblxuXHRcdC8vIENhbGwgZ2l2ZW4gZnVuYyBpZiBhbnlcblx0XHRpZiAoIGZ1bmMgKSB7XG5cdFx0XHRmdW5jLmNhbGwoIGRlZmVycmVkLCBkZWZlcnJlZCApO1xuXHRcdH1cblxuXHRcdC8vIEFsbCBkb25lIVxuXHRcdHJldHVybiBkZWZlcnJlZDtcblx0fSxcblxuXHQvLyBEZWZlcnJlZCBoZWxwZXJcblx0d2hlbjogZnVuY3Rpb24oIHNpbmdsZVZhbHVlICkge1xuXHRcdHZhclxuXG5cdFx0XHQvLyBjb3VudCBvZiB1bmNvbXBsZXRlZCBzdWJvcmRpbmF0ZXNcblx0XHRcdHJlbWFpbmluZyA9IGFyZ3VtZW50cy5sZW5ndGgsXG5cblx0XHRcdC8vIGNvdW50IG9mIHVucHJvY2Vzc2VkIGFyZ3VtZW50c1xuXHRcdFx0aSA9IHJlbWFpbmluZyxcblxuXHRcdFx0Ly8gc3Vib3JkaW5hdGUgZnVsZmlsbG1lbnQgZGF0YVxuXHRcdFx0cmVzb2x2ZUNvbnRleHRzID0gQXJyYXkoIGkgKSxcblx0XHRcdHJlc29sdmVWYWx1ZXMgPSBzbGljZS5jYWxsKCBhcmd1bWVudHMgKSxcblxuXHRcdFx0Ly8gdGhlIHByaW1hcnkgRGVmZXJyZWRcblx0XHRcdHByaW1hcnkgPSBqUXVlcnkuRGVmZXJyZWQoKSxcblxuXHRcdFx0Ly8gc3Vib3JkaW5hdGUgY2FsbGJhY2sgZmFjdG9yeVxuXHRcdFx0dXBkYXRlRnVuYyA9IGZ1bmN0aW9uKCBpICkge1xuXHRcdFx0XHRyZXR1cm4gZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdFx0XHRcdHJlc29sdmVDb250ZXh0c1sgaSBdID0gdGhpcztcblx0XHRcdFx0XHRyZXNvbHZlVmFsdWVzWyBpIF0gPSBhcmd1bWVudHMubGVuZ3RoID4gMSA/IHNsaWNlLmNhbGwoIGFyZ3VtZW50cyApIDogdmFsdWU7XG5cdFx0XHRcdFx0aWYgKCAhKCAtLXJlbWFpbmluZyApICkge1xuXHRcdFx0XHRcdFx0cHJpbWFyeS5yZXNvbHZlV2l0aCggcmVzb2x2ZUNvbnRleHRzLCByZXNvbHZlVmFsdWVzICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9O1xuXHRcdFx0fTtcblxuXHRcdC8vIFNpbmdsZS0gYW5kIGVtcHR5IGFyZ3VtZW50cyBhcmUgYWRvcHRlZCBsaWtlIFByb21pc2UucmVzb2x2ZVxuXHRcdGlmICggcmVtYWluaW5nIDw9IDEgKSB7XG5cdFx0XHRhZG9wdFZhbHVlKCBzaW5nbGVWYWx1ZSwgcHJpbWFyeS5kb25lKCB1cGRhdGVGdW5jKCBpICkgKS5yZXNvbHZlLCBwcmltYXJ5LnJlamVjdCxcblx0XHRcdFx0IXJlbWFpbmluZyApO1xuXG5cdFx0XHQvLyBVc2UgLnRoZW4oKSB0byB1bndyYXAgc2Vjb25kYXJ5IHRoZW5hYmxlcyAoY2YuIGdoLTMwMDApXG5cdFx0XHRpZiAoIHByaW1hcnkuc3RhdGUoKSA9PT0gXCJwZW5kaW5nXCIgfHxcblx0XHRcdFx0aXNGdW5jdGlvbiggcmVzb2x2ZVZhbHVlc1sgaSBdICYmIHJlc29sdmVWYWx1ZXNbIGkgXS50aGVuICkgKSB7XG5cblx0XHRcdFx0cmV0dXJuIHByaW1hcnkudGhlbigpO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIE11bHRpcGxlIGFyZ3VtZW50cyBhcmUgYWdncmVnYXRlZCBsaWtlIFByb21pc2UuYWxsIGFycmF5IGVsZW1lbnRzXG5cdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRhZG9wdFZhbHVlKCByZXNvbHZlVmFsdWVzWyBpIF0sIHVwZGF0ZUZ1bmMoIGkgKSwgcHJpbWFyeS5yZWplY3QgKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gcHJpbWFyeS5wcm9taXNlKCk7XG5cdH1cbn0gKTtcblxuXG4vLyBUaGVzZSB1c3VhbGx5IGluZGljYXRlIGEgcHJvZ3JhbW1lciBtaXN0YWtlIGR1cmluZyBkZXZlbG9wbWVudCxcbi8vIHdhcm4gYWJvdXQgdGhlbSBBU0FQIHJhdGhlciB0aGFuIHN3YWxsb3dpbmcgdGhlbSBieSBkZWZhdWx0LlxudmFyIHJlcnJvck5hbWVzID0gL14oRXZhbHxJbnRlcm5hbHxSYW5nZXxSZWZlcmVuY2V8U3ludGF4fFR5cGV8VVJJKUVycm9yJC87XG5cbmpRdWVyeS5EZWZlcnJlZC5leGNlcHRpb25Ib29rID0gZnVuY3Rpb24oIGVycm9yLCBzdGFjayApIHtcblxuXHQvLyBTdXBwb3J0OiBJRSA4IC0gOSBvbmx5XG5cdC8vIENvbnNvbGUgZXhpc3RzIHdoZW4gZGV2IHRvb2xzIGFyZSBvcGVuLCB3aGljaCBjYW4gaGFwcGVuIGF0IGFueSB0aW1lXG5cdGlmICggd2luZG93LmNvbnNvbGUgJiYgd2luZG93LmNvbnNvbGUud2FybiAmJiBlcnJvciAmJiByZXJyb3JOYW1lcy50ZXN0KCBlcnJvci5uYW1lICkgKSB7XG5cdFx0d2luZG93LmNvbnNvbGUud2FybiggXCJqUXVlcnkuRGVmZXJyZWQgZXhjZXB0aW9uOiBcIiArIGVycm9yLm1lc3NhZ2UsIGVycm9yLnN0YWNrLCBzdGFjayApO1xuXHR9XG59O1xuXG5cblxuXG5qUXVlcnkucmVhZHlFeGNlcHRpb24gPSBmdW5jdGlvbiggZXJyb3IgKSB7XG5cdHdpbmRvdy5zZXRUaW1lb3V0KCBmdW5jdGlvbigpIHtcblx0XHR0aHJvdyBlcnJvcjtcblx0fSApO1xufTtcblxuXG5cblxuLy8gVGhlIGRlZmVycmVkIHVzZWQgb24gRE9NIHJlYWR5XG52YXIgcmVhZHlMaXN0ID0galF1ZXJ5LkRlZmVycmVkKCk7XG5cbmpRdWVyeS5mbi5yZWFkeSA9IGZ1bmN0aW9uKCBmbiApIHtcblxuXHRyZWFkeUxpc3Rcblx0XHQudGhlbiggZm4gKVxuXG5cdFx0Ly8gV3JhcCBqUXVlcnkucmVhZHlFeGNlcHRpb24gaW4gYSBmdW5jdGlvbiBzbyB0aGF0IHRoZSBsb29rdXBcblx0XHQvLyBoYXBwZW5zIGF0IHRoZSB0aW1lIG9mIGVycm9yIGhhbmRsaW5nIGluc3RlYWQgb2YgY2FsbGJhY2tcblx0XHQvLyByZWdpc3RyYXRpb24uXG5cdFx0LmNhdGNoKCBmdW5jdGlvbiggZXJyb3IgKSB7XG5cdFx0XHRqUXVlcnkucmVhZHlFeGNlcHRpb24oIGVycm9yICk7XG5cdFx0fSApO1xuXG5cdHJldHVybiB0aGlzO1xufTtcblxualF1ZXJ5LmV4dGVuZCgge1xuXG5cdC8vIElzIHRoZSBET00gcmVhZHkgdG8gYmUgdXNlZD8gU2V0IHRvIHRydWUgb25jZSBpdCBvY2N1cnMuXG5cdGlzUmVhZHk6IGZhbHNlLFxuXG5cdC8vIEEgY291bnRlciB0byB0cmFjayBob3cgbWFueSBpdGVtcyB0byB3YWl0IGZvciBiZWZvcmVcblx0Ly8gdGhlIHJlYWR5IGV2ZW50IGZpcmVzLiBTZWUgIzY3ODFcblx0cmVhZHlXYWl0OiAxLFxuXG5cdC8vIEhhbmRsZSB3aGVuIHRoZSBET00gaXMgcmVhZHlcblx0cmVhZHk6IGZ1bmN0aW9uKCB3YWl0ICkge1xuXG5cdFx0Ly8gQWJvcnQgaWYgdGhlcmUgYXJlIHBlbmRpbmcgaG9sZHMgb3Igd2UncmUgYWxyZWFkeSByZWFkeVxuXHRcdGlmICggd2FpdCA9PT0gdHJ1ZSA/IC0talF1ZXJ5LnJlYWR5V2FpdCA6IGpRdWVyeS5pc1JlYWR5ICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vIFJlbWVtYmVyIHRoYXQgdGhlIERPTSBpcyByZWFkeVxuXHRcdGpRdWVyeS5pc1JlYWR5ID0gdHJ1ZTtcblxuXHRcdC8vIElmIGEgbm9ybWFsIERPTSBSZWFkeSBldmVudCBmaXJlZCwgZGVjcmVtZW50LCBhbmQgd2FpdCBpZiBuZWVkIGJlXG5cdFx0aWYgKCB3YWl0ICE9PSB0cnVlICYmIC0talF1ZXJ5LnJlYWR5V2FpdCA+IDAgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gSWYgdGhlcmUgYXJlIGZ1bmN0aW9ucyBib3VuZCwgdG8gZXhlY3V0ZVxuXHRcdHJlYWR5TGlzdC5yZXNvbHZlV2l0aCggZG9jdW1lbnQsIFsgalF1ZXJ5IF0gKTtcblx0fVxufSApO1xuXG5qUXVlcnkucmVhZHkudGhlbiA9IHJlYWR5TGlzdC50aGVuO1xuXG4vLyBUaGUgcmVhZHkgZXZlbnQgaGFuZGxlciBhbmQgc2VsZiBjbGVhbnVwIG1ldGhvZFxuZnVuY3Rpb24gY29tcGxldGVkKCkge1xuXHRkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCBcIkRPTUNvbnRlbnRMb2FkZWRcIiwgY29tcGxldGVkICk7XG5cdHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCBcImxvYWRcIiwgY29tcGxldGVkICk7XG5cdGpRdWVyeS5yZWFkeSgpO1xufVxuXG4vLyBDYXRjaCBjYXNlcyB3aGVyZSAkKGRvY3VtZW50KS5yZWFkeSgpIGlzIGNhbGxlZFxuLy8gYWZ0ZXIgdGhlIGJyb3dzZXIgZXZlbnQgaGFzIGFscmVhZHkgb2NjdXJyZWQuXG4vLyBTdXBwb3J0OiBJRSA8PTkgLSAxMCBvbmx5XG4vLyBPbGRlciBJRSBzb21ldGltZXMgc2lnbmFscyBcImludGVyYWN0aXZlXCIgdG9vIHNvb25cbmlmICggZG9jdW1lbnQucmVhZHlTdGF0ZSA9PT0gXCJjb21wbGV0ZVwiIHx8XG5cdCggZG9jdW1lbnQucmVhZHlTdGF0ZSAhPT0gXCJsb2FkaW5nXCIgJiYgIWRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5kb1Njcm9sbCApICkge1xuXG5cdC8vIEhhbmRsZSBpdCBhc3luY2hyb25vdXNseSB0byBhbGxvdyBzY3JpcHRzIHRoZSBvcHBvcnR1bml0eSB0byBkZWxheSByZWFkeVxuXHR3aW5kb3cuc2V0VGltZW91dCggalF1ZXJ5LnJlYWR5ICk7XG5cbn0gZWxzZSB7XG5cblx0Ly8gVXNlIHRoZSBoYW5keSBldmVudCBjYWxsYmFja1xuXHRkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCBcIkRPTUNvbnRlbnRMb2FkZWRcIiwgY29tcGxldGVkICk7XG5cblx0Ly8gQSBmYWxsYmFjayB0byB3aW5kb3cub25sb2FkLCB0aGF0IHdpbGwgYWx3YXlzIHdvcmtcblx0d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoIFwibG9hZFwiLCBjb21wbGV0ZWQgKTtcbn1cblxuXG5cblxuLy8gTXVsdGlmdW5jdGlvbmFsIG1ldGhvZCB0byBnZXQgYW5kIHNldCB2YWx1ZXMgb2YgYSBjb2xsZWN0aW9uXG4vLyBUaGUgdmFsdWUvcyBjYW4gb3B0aW9uYWxseSBiZSBleGVjdXRlZCBpZiBpdCdzIGEgZnVuY3Rpb25cbnZhciBhY2Nlc3MgPSBmdW5jdGlvbiggZWxlbXMsIGZuLCBrZXksIHZhbHVlLCBjaGFpbmFibGUsIGVtcHR5R2V0LCByYXcgKSB7XG5cdHZhciBpID0gMCxcblx0XHRsZW4gPSBlbGVtcy5sZW5ndGgsXG5cdFx0YnVsayA9IGtleSA9PSBudWxsO1xuXG5cdC8vIFNldHMgbWFueSB2YWx1ZXNcblx0aWYgKCB0b1R5cGUoIGtleSApID09PSBcIm9iamVjdFwiICkge1xuXHRcdGNoYWluYWJsZSA9IHRydWU7XG5cdFx0Zm9yICggaSBpbiBrZXkgKSB7XG5cdFx0XHRhY2Nlc3MoIGVsZW1zLCBmbiwgaSwga2V5WyBpIF0sIHRydWUsIGVtcHR5R2V0LCByYXcgKTtcblx0XHR9XG5cblx0Ly8gU2V0cyBvbmUgdmFsdWVcblx0fSBlbHNlIGlmICggdmFsdWUgIT09IHVuZGVmaW5lZCApIHtcblx0XHRjaGFpbmFibGUgPSB0cnVlO1xuXG5cdFx0aWYgKCAhaXNGdW5jdGlvbiggdmFsdWUgKSApIHtcblx0XHRcdHJhdyA9IHRydWU7XG5cdFx0fVxuXG5cdFx0aWYgKCBidWxrICkge1xuXG5cdFx0XHQvLyBCdWxrIG9wZXJhdGlvbnMgcnVuIGFnYWluc3QgdGhlIGVudGlyZSBzZXRcblx0XHRcdGlmICggcmF3ICkge1xuXHRcdFx0XHRmbi5jYWxsKCBlbGVtcywgdmFsdWUgKTtcblx0XHRcdFx0Zm4gPSBudWxsO1xuXG5cdFx0XHQvLyAuLi5leGNlcHQgd2hlbiBleGVjdXRpbmcgZnVuY3Rpb24gdmFsdWVzXG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRidWxrID0gZm47XG5cdFx0XHRcdGZuID0gZnVuY3Rpb24oIGVsZW0sIF9rZXksIHZhbHVlICkge1xuXHRcdFx0XHRcdHJldHVybiBidWxrLmNhbGwoIGpRdWVyeSggZWxlbSApLCB2YWx1ZSApO1xuXHRcdFx0XHR9O1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmICggZm4gKSB7XG5cdFx0XHRmb3IgKCA7IGkgPCBsZW47IGkrKyApIHtcblx0XHRcdFx0Zm4oXG5cdFx0XHRcdFx0ZWxlbXNbIGkgXSwga2V5LCByYXcgP1xuXHRcdFx0XHRcdFx0dmFsdWUgOlxuXHRcdFx0XHRcdFx0dmFsdWUuY2FsbCggZWxlbXNbIGkgXSwgaSwgZm4oIGVsZW1zWyBpIF0sIGtleSApIClcblx0XHRcdFx0KTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRpZiAoIGNoYWluYWJsZSApIHtcblx0XHRyZXR1cm4gZWxlbXM7XG5cdH1cblxuXHQvLyBHZXRzXG5cdGlmICggYnVsayApIHtcblx0XHRyZXR1cm4gZm4uY2FsbCggZWxlbXMgKTtcblx0fVxuXG5cdHJldHVybiBsZW4gPyBmbiggZWxlbXNbIDAgXSwga2V5ICkgOiBlbXB0eUdldDtcbn07XG5cblxuLy8gTWF0Y2hlcyBkYXNoZWQgc3RyaW5nIGZvciBjYW1lbGl6aW5nXG52YXIgcm1zUHJlZml4ID0gL14tbXMtLyxcblx0cmRhc2hBbHBoYSA9IC8tKFthLXpdKS9nO1xuXG4vLyBVc2VkIGJ5IGNhbWVsQ2FzZSBhcyBjYWxsYmFjayB0byByZXBsYWNlKClcbmZ1bmN0aW9uIGZjYW1lbENhc2UoIF9hbGwsIGxldHRlciApIHtcblx0cmV0dXJuIGxldHRlci50b1VwcGVyQ2FzZSgpO1xufVxuXG4vLyBDb252ZXJ0IGRhc2hlZCB0byBjYW1lbENhc2U7IHVzZWQgYnkgdGhlIGNzcyBhbmQgZGF0YSBtb2R1bGVzXG4vLyBTdXBwb3J0OiBJRSA8PTkgLSAxMSwgRWRnZSAxMiAtIDE1XG4vLyBNaWNyb3NvZnQgZm9yZ290IHRvIGh1bXAgdGhlaXIgdmVuZG9yIHByZWZpeCAoIzk1NzIpXG5mdW5jdGlvbiBjYW1lbENhc2UoIHN0cmluZyApIHtcblx0cmV0dXJuIHN0cmluZy5yZXBsYWNlKCBybXNQcmVmaXgsIFwibXMtXCIgKS5yZXBsYWNlKCByZGFzaEFscGhhLCBmY2FtZWxDYXNlICk7XG59XG52YXIgYWNjZXB0RGF0YSA9IGZ1bmN0aW9uKCBvd25lciApIHtcblxuXHQvLyBBY2NlcHRzIG9ubHk6XG5cdC8vICAtIE5vZGVcblx0Ly8gICAgLSBOb2RlLkVMRU1FTlRfTk9ERVxuXHQvLyAgICAtIE5vZGUuRE9DVU1FTlRfTk9ERVxuXHQvLyAgLSBPYmplY3Rcblx0Ly8gICAgLSBBbnlcblx0cmV0dXJuIG93bmVyLm5vZGVUeXBlID09PSAxIHx8IG93bmVyLm5vZGVUeXBlID09PSA5IHx8ICEoICtvd25lci5ub2RlVHlwZSApO1xufTtcblxuXG5cblxuZnVuY3Rpb24gRGF0YSgpIHtcblx0dGhpcy5leHBhbmRvID0galF1ZXJ5LmV4cGFuZG8gKyBEYXRhLnVpZCsrO1xufVxuXG5EYXRhLnVpZCA9IDE7XG5cbkRhdGEucHJvdG90eXBlID0ge1xuXG5cdGNhY2hlOiBmdW5jdGlvbiggb3duZXIgKSB7XG5cblx0XHQvLyBDaGVjayBpZiB0aGUgb3duZXIgb2JqZWN0IGFscmVhZHkgaGFzIGEgY2FjaGVcblx0XHR2YXIgdmFsdWUgPSBvd25lclsgdGhpcy5leHBhbmRvIF07XG5cblx0XHQvLyBJZiBub3QsIGNyZWF0ZSBvbmVcblx0XHRpZiAoICF2YWx1ZSApIHtcblx0XHRcdHZhbHVlID0ge307XG5cblx0XHRcdC8vIFdlIGNhbiBhY2NlcHQgZGF0YSBmb3Igbm9uLWVsZW1lbnQgbm9kZXMgaW4gbW9kZXJuIGJyb3dzZXJzLFxuXHRcdFx0Ly8gYnV0IHdlIHNob3VsZCBub3QsIHNlZSAjODMzNS5cblx0XHRcdC8vIEFsd2F5cyByZXR1cm4gYW4gZW1wdHkgb2JqZWN0LlxuXHRcdFx0aWYgKCBhY2NlcHREYXRhKCBvd25lciApICkge1xuXG5cdFx0XHRcdC8vIElmIGl0IGlzIGEgbm9kZSB1bmxpa2VseSB0byBiZSBzdHJpbmdpZnktZWQgb3IgbG9vcGVkIG92ZXJcblx0XHRcdFx0Ly8gdXNlIHBsYWluIGFzc2lnbm1lbnRcblx0XHRcdFx0aWYgKCBvd25lci5ub2RlVHlwZSApIHtcblx0XHRcdFx0XHRvd25lclsgdGhpcy5leHBhbmRvIF0gPSB2YWx1ZTtcblxuXHRcdFx0XHQvLyBPdGhlcndpc2Ugc2VjdXJlIGl0IGluIGEgbm9uLWVudW1lcmFibGUgcHJvcGVydHlcblx0XHRcdFx0Ly8gY29uZmlndXJhYmxlIG11c3QgYmUgdHJ1ZSB0byBhbGxvdyB0aGUgcHJvcGVydHkgdG8gYmVcblx0XHRcdFx0Ly8gZGVsZXRlZCB3aGVuIGRhdGEgaXMgcmVtb3ZlZFxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eSggb3duZXIsIHRoaXMuZXhwYW5kbywge1xuXHRcdFx0XHRcdFx0dmFsdWU6IHZhbHVlLFxuXHRcdFx0XHRcdFx0Y29uZmlndXJhYmxlOiB0cnVlXG5cdFx0XHRcdFx0fSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHZhbHVlO1xuXHR9LFxuXHRzZXQ6IGZ1bmN0aW9uKCBvd25lciwgZGF0YSwgdmFsdWUgKSB7XG5cdFx0dmFyIHByb3AsXG5cdFx0XHRjYWNoZSA9IHRoaXMuY2FjaGUoIG93bmVyICk7XG5cblx0XHQvLyBIYW5kbGU6IFsgb3duZXIsIGtleSwgdmFsdWUgXSBhcmdzXG5cdFx0Ly8gQWx3YXlzIHVzZSBjYW1lbENhc2Uga2V5IChnaC0yMjU3KVxuXHRcdGlmICggdHlwZW9mIGRhdGEgPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRjYWNoZVsgY2FtZWxDYXNlKCBkYXRhICkgXSA9IHZhbHVlO1xuXG5cdFx0Ly8gSGFuZGxlOiBbIG93bmVyLCB7IHByb3BlcnRpZXMgfSBdIGFyZ3Ncblx0XHR9IGVsc2Uge1xuXG5cdFx0XHQvLyBDb3B5IHRoZSBwcm9wZXJ0aWVzIG9uZS1ieS1vbmUgdG8gdGhlIGNhY2hlIG9iamVjdFxuXHRcdFx0Zm9yICggcHJvcCBpbiBkYXRhICkge1xuXHRcdFx0XHRjYWNoZVsgY2FtZWxDYXNlKCBwcm9wICkgXSA9IGRhdGFbIHByb3AgXTtcblx0XHRcdH1cblx0XHR9XG5cdFx0cmV0dXJuIGNhY2hlO1xuXHR9LFxuXHRnZXQ6IGZ1bmN0aW9uKCBvd25lciwga2V5ICkge1xuXHRcdHJldHVybiBrZXkgPT09IHVuZGVmaW5lZCA/XG5cdFx0XHR0aGlzLmNhY2hlKCBvd25lciApIDpcblxuXHRcdFx0Ly8gQWx3YXlzIHVzZSBjYW1lbENhc2Uga2V5IChnaC0yMjU3KVxuXHRcdFx0b3duZXJbIHRoaXMuZXhwYW5kbyBdICYmIG93bmVyWyB0aGlzLmV4cGFuZG8gXVsgY2FtZWxDYXNlKCBrZXkgKSBdO1xuXHR9LFxuXHRhY2Nlc3M6IGZ1bmN0aW9uKCBvd25lciwga2V5LCB2YWx1ZSApIHtcblxuXHRcdC8vIEluIGNhc2VzIHdoZXJlIGVpdGhlcjpcblx0XHQvL1xuXHRcdC8vICAgMS4gTm8ga2V5IHdhcyBzcGVjaWZpZWRcblx0XHQvLyAgIDIuIEEgc3RyaW5nIGtleSB3YXMgc3BlY2lmaWVkLCBidXQgbm8gdmFsdWUgcHJvdmlkZWRcblx0XHQvL1xuXHRcdC8vIFRha2UgdGhlIFwicmVhZFwiIHBhdGggYW5kIGFsbG93IHRoZSBnZXQgbWV0aG9kIHRvIGRldGVybWluZVxuXHRcdC8vIHdoaWNoIHZhbHVlIHRvIHJldHVybiwgcmVzcGVjdGl2ZWx5IGVpdGhlcjpcblx0XHQvL1xuXHRcdC8vICAgMS4gVGhlIGVudGlyZSBjYWNoZSBvYmplY3Rcblx0XHQvLyAgIDIuIFRoZSBkYXRhIHN0b3JlZCBhdCB0aGUga2V5XG5cdFx0Ly9cblx0XHRpZiAoIGtleSA9PT0gdW5kZWZpbmVkIHx8XG5cdFx0XHRcdCggKCBrZXkgJiYgdHlwZW9mIGtleSA9PT0gXCJzdHJpbmdcIiApICYmIHZhbHVlID09PSB1bmRlZmluZWQgKSApIHtcblxuXHRcdFx0cmV0dXJuIHRoaXMuZ2V0KCBvd25lciwga2V5ICk7XG5cdFx0fVxuXG5cdFx0Ly8gV2hlbiB0aGUga2V5IGlzIG5vdCBhIHN0cmluZywgb3IgYm90aCBhIGtleSBhbmQgdmFsdWVcblx0XHQvLyBhcmUgc3BlY2lmaWVkLCBzZXQgb3IgZXh0ZW5kIChleGlzdGluZyBvYmplY3RzKSB3aXRoIGVpdGhlcjpcblx0XHQvL1xuXHRcdC8vICAgMS4gQW4gb2JqZWN0IG9mIHByb3BlcnRpZXNcblx0XHQvLyAgIDIuIEEga2V5IGFuZCB2YWx1ZVxuXHRcdC8vXG5cdFx0dGhpcy5zZXQoIG93bmVyLCBrZXksIHZhbHVlICk7XG5cblx0XHQvLyBTaW5jZSB0aGUgXCJzZXRcIiBwYXRoIGNhbiBoYXZlIHR3byBwb3NzaWJsZSBlbnRyeSBwb2ludHNcblx0XHQvLyByZXR1cm4gdGhlIGV4cGVjdGVkIGRhdGEgYmFzZWQgb24gd2hpY2ggcGF0aCB3YXMgdGFrZW5bKl1cblx0XHRyZXR1cm4gdmFsdWUgIT09IHVuZGVmaW5lZCA/IHZhbHVlIDoga2V5O1xuXHR9LFxuXHRyZW1vdmU6IGZ1bmN0aW9uKCBvd25lciwga2V5ICkge1xuXHRcdHZhciBpLFxuXHRcdFx0Y2FjaGUgPSBvd25lclsgdGhpcy5leHBhbmRvIF07XG5cblx0XHRpZiAoIGNhY2hlID09PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0aWYgKCBrZXkgIT09IHVuZGVmaW5lZCApIHtcblxuXHRcdFx0Ly8gU3VwcG9ydCBhcnJheSBvciBzcGFjZSBzZXBhcmF0ZWQgc3RyaW5nIG9mIGtleXNcblx0XHRcdGlmICggQXJyYXkuaXNBcnJheSgga2V5ICkgKSB7XG5cblx0XHRcdFx0Ly8gSWYga2V5IGlzIGFuIGFycmF5IG9mIGtleXMuLi5cblx0XHRcdFx0Ly8gV2UgYWx3YXlzIHNldCBjYW1lbENhc2Uga2V5cywgc28gcmVtb3ZlIHRoYXQuXG5cdFx0XHRcdGtleSA9IGtleS5tYXAoIGNhbWVsQ2FzZSApO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0a2V5ID0gY2FtZWxDYXNlKCBrZXkgKTtcblxuXHRcdFx0XHQvLyBJZiBhIGtleSB3aXRoIHRoZSBzcGFjZXMgZXhpc3RzLCB1c2UgaXQuXG5cdFx0XHRcdC8vIE90aGVyd2lzZSwgY3JlYXRlIGFuIGFycmF5IGJ5IG1hdGNoaW5nIG5vbi13aGl0ZXNwYWNlXG5cdFx0XHRcdGtleSA9IGtleSBpbiBjYWNoZSA/XG5cdFx0XHRcdFx0WyBrZXkgXSA6XG5cdFx0XHRcdFx0KCBrZXkubWF0Y2goIHJub3RodG1sd2hpdGUgKSB8fCBbXSApO1xuXHRcdFx0fVxuXG5cdFx0XHRpID0ga2V5Lmxlbmd0aDtcblxuXHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdGRlbGV0ZSBjYWNoZVsga2V5WyBpIF0gXTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBSZW1vdmUgdGhlIGV4cGFuZG8gaWYgdGhlcmUncyBubyBtb3JlIGRhdGFcblx0XHRpZiAoIGtleSA9PT0gdW5kZWZpbmVkIHx8IGpRdWVyeS5pc0VtcHR5T2JqZWN0KCBjYWNoZSApICkge1xuXG5cdFx0XHQvLyBTdXBwb3J0OiBDaHJvbWUgPD0zNSAtIDQ1XG5cdFx0XHQvLyBXZWJraXQgJiBCbGluayBwZXJmb3JtYW5jZSBzdWZmZXJzIHdoZW4gZGVsZXRpbmcgcHJvcGVydGllc1xuXHRcdFx0Ly8gZnJvbSBET00gbm9kZXMsIHNvIHNldCB0byB1bmRlZmluZWQgaW5zdGVhZFxuXHRcdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL2Nocm9taXVtL2lzc3Vlcy9kZXRhaWw/aWQ9Mzc4NjA3IChidWcgcmVzdHJpY3RlZClcblx0XHRcdGlmICggb3duZXIubm9kZVR5cGUgKSB7XG5cdFx0XHRcdG93bmVyWyB0aGlzLmV4cGFuZG8gXSA9IHVuZGVmaW5lZDtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGRlbGV0ZSBvd25lclsgdGhpcy5leHBhbmRvIF07XG5cdFx0XHR9XG5cdFx0fVxuXHR9LFxuXHRoYXNEYXRhOiBmdW5jdGlvbiggb3duZXIgKSB7XG5cdFx0dmFyIGNhY2hlID0gb3duZXJbIHRoaXMuZXhwYW5kbyBdO1xuXHRcdHJldHVybiBjYWNoZSAhPT0gdW5kZWZpbmVkICYmICFqUXVlcnkuaXNFbXB0eU9iamVjdCggY2FjaGUgKTtcblx0fVxufTtcbnZhciBkYXRhUHJpdiA9IG5ldyBEYXRhKCk7XG5cbnZhciBkYXRhVXNlciA9IG5ldyBEYXRhKCk7XG5cblxuXG4vL1x0SW1wbGVtZW50YXRpb24gU3VtbWFyeVxuLy9cbi8vXHQxLiBFbmZvcmNlIEFQSSBzdXJmYWNlIGFuZCBzZW1hbnRpYyBjb21wYXRpYmlsaXR5IHdpdGggMS45LnggYnJhbmNoXG4vL1x0Mi4gSW1wcm92ZSB0aGUgbW9kdWxlJ3MgbWFpbnRhaW5hYmlsaXR5IGJ5IHJlZHVjaW5nIHRoZSBzdG9yYWdlXG4vL1x0XHRwYXRocyB0byBhIHNpbmdsZSBtZWNoYW5pc20uXG4vL1x0My4gVXNlIHRoZSBzYW1lIHNpbmdsZSBtZWNoYW5pc20gdG8gc3VwcG9ydCBcInByaXZhdGVcIiBhbmQgXCJ1c2VyXCIgZGF0YS5cbi8vXHQ0LiBfTmV2ZXJfIGV4cG9zZSBcInByaXZhdGVcIiBkYXRhIHRvIHVzZXIgY29kZSAoVE9ETzogRHJvcCBfZGF0YSwgX3JlbW92ZURhdGEpXG4vL1x0NS4gQXZvaWQgZXhwb3NpbmcgaW1wbGVtZW50YXRpb24gZGV0YWlscyBvbiB1c2VyIG9iamVjdHMgKGVnLiBleHBhbmRvIHByb3BlcnRpZXMpXG4vL1x0Ni4gUHJvdmlkZSBhIGNsZWFyIHBhdGggZm9yIGltcGxlbWVudGF0aW9uIHVwZ3JhZGUgdG8gV2Vha01hcCBpbiAyMDE0XG5cbnZhciByYnJhY2UgPSAvXig/Olxce1tcXHdcXFddKlxcfXxcXFtbXFx3XFxXXSpcXF0pJC8sXG5cdHJtdWx0aURhc2ggPSAvW0EtWl0vZztcblxuZnVuY3Rpb24gZ2V0RGF0YSggZGF0YSApIHtcblx0aWYgKCBkYXRhID09PSBcInRydWVcIiApIHtcblx0XHRyZXR1cm4gdHJ1ZTtcblx0fVxuXG5cdGlmICggZGF0YSA9PT0gXCJmYWxzZVwiICkge1xuXHRcdHJldHVybiBmYWxzZTtcblx0fVxuXG5cdGlmICggZGF0YSA9PT0gXCJudWxsXCIgKSB7XG5cdFx0cmV0dXJuIG51bGw7XG5cdH1cblxuXHQvLyBPbmx5IGNvbnZlcnQgdG8gYSBudW1iZXIgaWYgaXQgZG9lc24ndCBjaGFuZ2UgdGhlIHN0cmluZ1xuXHRpZiAoIGRhdGEgPT09ICtkYXRhICsgXCJcIiApIHtcblx0XHRyZXR1cm4gK2RhdGE7XG5cdH1cblxuXHRpZiAoIHJicmFjZS50ZXN0KCBkYXRhICkgKSB7XG5cdFx0cmV0dXJuIEpTT04ucGFyc2UoIGRhdGEgKTtcblx0fVxuXG5cdHJldHVybiBkYXRhO1xufVxuXG5mdW5jdGlvbiBkYXRhQXR0ciggZWxlbSwga2V5LCBkYXRhICkge1xuXHR2YXIgbmFtZTtcblxuXHQvLyBJZiBub3RoaW5nIHdhcyBmb3VuZCBpbnRlcm5hbGx5LCB0cnkgdG8gZmV0Y2ggYW55XG5cdC8vIGRhdGEgZnJvbSB0aGUgSFRNTDUgZGF0YS0qIGF0dHJpYnV0ZVxuXHRpZiAoIGRhdGEgPT09IHVuZGVmaW5lZCAmJiBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXHRcdG5hbWUgPSBcImRhdGEtXCIgKyBrZXkucmVwbGFjZSggcm11bHRpRGFzaCwgXCItJCZcIiApLnRvTG93ZXJDYXNlKCk7XG5cdFx0ZGF0YSA9IGVsZW0uZ2V0QXR0cmlidXRlKCBuYW1lICk7XG5cblx0XHRpZiAoIHR5cGVvZiBkYXRhID09PSBcInN0cmluZ1wiICkge1xuXHRcdFx0dHJ5IHtcblx0XHRcdFx0ZGF0YSA9IGdldERhdGEoIGRhdGEgKTtcblx0XHRcdH0gY2F0Y2ggKCBlICkge31cblxuXHRcdFx0Ly8gTWFrZSBzdXJlIHdlIHNldCB0aGUgZGF0YSBzbyBpdCBpc24ndCBjaGFuZ2VkIGxhdGVyXG5cdFx0XHRkYXRhVXNlci5zZXQoIGVsZW0sIGtleSwgZGF0YSApO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRkYXRhID0gdW5kZWZpbmVkO1xuXHRcdH1cblx0fVxuXHRyZXR1cm4gZGF0YTtcbn1cblxualF1ZXJ5LmV4dGVuZCgge1xuXHRoYXNEYXRhOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRyZXR1cm4gZGF0YVVzZXIuaGFzRGF0YSggZWxlbSApIHx8IGRhdGFQcml2Lmhhc0RhdGEoIGVsZW0gKTtcblx0fSxcblxuXHRkYXRhOiBmdW5jdGlvbiggZWxlbSwgbmFtZSwgZGF0YSApIHtcblx0XHRyZXR1cm4gZGF0YVVzZXIuYWNjZXNzKCBlbGVtLCBuYW1lLCBkYXRhICk7XG5cdH0sXG5cblx0cmVtb3ZlRGF0YTogZnVuY3Rpb24oIGVsZW0sIG5hbWUgKSB7XG5cdFx0ZGF0YVVzZXIucmVtb3ZlKCBlbGVtLCBuYW1lICk7XG5cdH0sXG5cblx0Ly8gVE9ETzogTm93IHRoYXQgYWxsIGNhbGxzIHRvIF9kYXRhIGFuZCBfcmVtb3ZlRGF0YSBoYXZlIGJlZW4gcmVwbGFjZWRcblx0Ly8gd2l0aCBkaXJlY3QgY2FsbHMgdG8gZGF0YVByaXYgbWV0aG9kcywgdGhlc2UgY2FuIGJlIGRlcHJlY2F0ZWQuXG5cdF9kYXRhOiBmdW5jdGlvbiggZWxlbSwgbmFtZSwgZGF0YSApIHtcblx0XHRyZXR1cm4gZGF0YVByaXYuYWNjZXNzKCBlbGVtLCBuYW1lLCBkYXRhICk7XG5cdH0sXG5cblx0X3JlbW92ZURhdGE6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lICkge1xuXHRcdGRhdGFQcml2LnJlbW92ZSggZWxlbSwgbmFtZSApO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0ZGF0YTogZnVuY3Rpb24oIGtleSwgdmFsdWUgKSB7XG5cdFx0dmFyIGksIG5hbWUsIGRhdGEsXG5cdFx0XHRlbGVtID0gdGhpc1sgMCBdLFxuXHRcdFx0YXR0cnMgPSBlbGVtICYmIGVsZW0uYXR0cmlidXRlcztcblxuXHRcdC8vIEdldHMgYWxsIHZhbHVlc1xuXHRcdGlmICgga2V5ID09PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRpZiAoIHRoaXMubGVuZ3RoICkge1xuXHRcdFx0XHRkYXRhID0gZGF0YVVzZXIuZ2V0KCBlbGVtICk7XG5cblx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxICYmICFkYXRhUHJpdi5nZXQoIGVsZW0sIFwiaGFzRGF0YUF0dHJzXCIgKSApIHtcblx0XHRcdFx0XHRpID0gYXR0cnMubGVuZ3RoO1xuXHRcdFx0XHRcdHdoaWxlICggaS0tICkge1xuXG5cdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSAxMSBvbmx5XG5cdFx0XHRcdFx0XHQvLyBUaGUgYXR0cnMgZWxlbWVudHMgY2FuIGJlIG51bGwgKCMxNDg5NClcblx0XHRcdFx0XHRcdGlmICggYXR0cnNbIGkgXSApIHtcblx0XHRcdFx0XHRcdFx0bmFtZSA9IGF0dHJzWyBpIF0ubmFtZTtcblx0XHRcdFx0XHRcdFx0aWYgKCBuYW1lLmluZGV4T2YoIFwiZGF0YS1cIiApID09PSAwICkge1xuXHRcdFx0XHRcdFx0XHRcdG5hbWUgPSBjYW1lbENhc2UoIG5hbWUuc2xpY2UoIDUgKSApO1xuXHRcdFx0XHRcdFx0XHRcdGRhdGFBdHRyKCBlbGVtLCBuYW1lLCBkYXRhWyBuYW1lIF0gKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRkYXRhUHJpdi5zZXQoIGVsZW0sIFwiaGFzRGF0YUF0dHJzXCIsIHRydWUgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gZGF0YTtcblx0XHR9XG5cblx0XHQvLyBTZXRzIG11bHRpcGxlIHZhbHVlc1xuXHRcdGlmICggdHlwZW9mIGtleSA9PT0gXCJvYmplY3RcIiApIHtcblx0XHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRkYXRhVXNlci5zZXQoIHRoaXMsIGtleSApO1xuXHRcdFx0fSApO1xuXHRcdH1cblxuXHRcdHJldHVybiBhY2Nlc3MoIHRoaXMsIGZ1bmN0aW9uKCB2YWx1ZSApIHtcblx0XHRcdHZhciBkYXRhO1xuXG5cdFx0XHQvLyBUaGUgY2FsbGluZyBqUXVlcnkgb2JqZWN0IChlbGVtZW50IG1hdGNoZXMpIGlzIG5vdCBlbXB0eVxuXHRcdFx0Ly8gKGFuZCB0aGVyZWZvcmUgaGFzIGFuIGVsZW1lbnQgYXBwZWFycyBhdCB0aGlzWyAwIF0pIGFuZCB0aGVcblx0XHRcdC8vIGB2YWx1ZWAgcGFyYW1ldGVyIHdhcyBub3QgdW5kZWZpbmVkLiBBbiBlbXB0eSBqUXVlcnkgb2JqZWN0XG5cdFx0XHQvLyB3aWxsIHJlc3VsdCBpbiBgdW5kZWZpbmVkYCBmb3IgZWxlbSA9IHRoaXNbIDAgXSB3aGljaCB3aWxsXG5cdFx0XHQvLyB0aHJvdyBhbiBleGNlcHRpb24gaWYgYW4gYXR0ZW1wdCB0byByZWFkIGEgZGF0YSBjYWNoZSBpcyBtYWRlLlxuXHRcdFx0aWYgKCBlbGVtICYmIHZhbHVlID09PSB1bmRlZmluZWQgKSB7XG5cblx0XHRcdFx0Ly8gQXR0ZW1wdCB0byBnZXQgZGF0YSBmcm9tIHRoZSBjYWNoZVxuXHRcdFx0XHQvLyBUaGUga2V5IHdpbGwgYWx3YXlzIGJlIGNhbWVsQ2FzZWQgaW4gRGF0YVxuXHRcdFx0XHRkYXRhID0gZGF0YVVzZXIuZ2V0KCBlbGVtLCBrZXkgKTtcblx0XHRcdFx0aWYgKCBkYXRhICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIGRhdGE7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBBdHRlbXB0IHRvIFwiZGlzY292ZXJcIiB0aGUgZGF0YSBpblxuXHRcdFx0XHQvLyBIVE1MNSBjdXN0b20gZGF0YS0qIGF0dHJzXG5cdFx0XHRcdGRhdGEgPSBkYXRhQXR0ciggZWxlbSwga2V5ICk7XG5cdFx0XHRcdGlmICggZGF0YSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRcdHJldHVybiBkYXRhO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gV2UgdHJpZWQgcmVhbGx5IGhhcmQsIGJ1dCB0aGUgZGF0YSBkb2Vzbid0IGV4aXN0LlxuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdC8vIFNldCB0aGUgZGF0YS4uLlxuXHRcdFx0dGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblxuXHRcdFx0XHQvLyBXZSBhbHdheXMgc3RvcmUgdGhlIGNhbWVsQ2FzZWQga2V5XG5cdFx0XHRcdGRhdGFVc2VyLnNldCggdGhpcywga2V5LCB2YWx1ZSApO1xuXHRcdFx0fSApO1xuXHRcdH0sIG51bGwsIHZhbHVlLCBhcmd1bWVudHMubGVuZ3RoID4gMSwgbnVsbCwgdHJ1ZSApO1xuXHR9LFxuXG5cdHJlbW92ZURhdGE6IGZ1bmN0aW9uKCBrZXkgKSB7XG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRkYXRhVXNlci5yZW1vdmUoIHRoaXMsIGtleSApO1xuXHRcdH0gKTtcblx0fVxufSApO1xuXG5cbmpRdWVyeS5leHRlbmQoIHtcblx0cXVldWU6IGZ1bmN0aW9uKCBlbGVtLCB0eXBlLCBkYXRhICkge1xuXHRcdHZhciBxdWV1ZTtcblxuXHRcdGlmICggZWxlbSApIHtcblx0XHRcdHR5cGUgPSAoIHR5cGUgfHwgXCJmeFwiICkgKyBcInF1ZXVlXCI7XG5cdFx0XHRxdWV1ZSA9IGRhdGFQcml2LmdldCggZWxlbSwgdHlwZSApO1xuXG5cdFx0XHQvLyBTcGVlZCB1cCBkZXF1ZXVlIGJ5IGdldHRpbmcgb3V0IHF1aWNrbHkgaWYgdGhpcyBpcyBqdXN0IGEgbG9va3VwXG5cdFx0XHRpZiAoIGRhdGEgKSB7XG5cdFx0XHRcdGlmICggIXF1ZXVlIHx8IEFycmF5LmlzQXJyYXkoIGRhdGEgKSApIHtcblx0XHRcdFx0XHRxdWV1ZSA9IGRhdGFQcml2LmFjY2VzcyggZWxlbSwgdHlwZSwgalF1ZXJ5Lm1ha2VBcnJheSggZGF0YSApICk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0cXVldWUucHVzaCggZGF0YSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gcXVldWUgfHwgW107XG5cdFx0fVxuXHR9LFxuXG5cdGRlcXVldWU6IGZ1bmN0aW9uKCBlbGVtLCB0eXBlICkge1xuXHRcdHR5cGUgPSB0eXBlIHx8IFwiZnhcIjtcblxuXHRcdHZhciBxdWV1ZSA9IGpRdWVyeS5xdWV1ZSggZWxlbSwgdHlwZSApLFxuXHRcdFx0c3RhcnRMZW5ndGggPSBxdWV1ZS5sZW5ndGgsXG5cdFx0XHRmbiA9IHF1ZXVlLnNoaWZ0KCksXG5cdFx0XHRob29rcyA9IGpRdWVyeS5fcXVldWVIb29rcyggZWxlbSwgdHlwZSApLFxuXHRcdFx0bmV4dCA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRqUXVlcnkuZGVxdWV1ZSggZWxlbSwgdHlwZSApO1xuXHRcdFx0fTtcblxuXHRcdC8vIElmIHRoZSBmeCBxdWV1ZSBpcyBkZXF1ZXVlZCwgYWx3YXlzIHJlbW92ZSB0aGUgcHJvZ3Jlc3Mgc2VudGluZWxcblx0XHRpZiAoIGZuID09PSBcImlucHJvZ3Jlc3NcIiApIHtcblx0XHRcdGZuID0gcXVldWUuc2hpZnQoKTtcblx0XHRcdHN0YXJ0TGVuZ3RoLS07XG5cdFx0fVxuXG5cdFx0aWYgKCBmbiApIHtcblxuXHRcdFx0Ly8gQWRkIGEgcHJvZ3Jlc3Mgc2VudGluZWwgdG8gcHJldmVudCB0aGUgZnggcXVldWUgZnJvbSBiZWluZ1xuXHRcdFx0Ly8gYXV0b21hdGljYWxseSBkZXF1ZXVlZFxuXHRcdFx0aWYgKCB0eXBlID09PSBcImZ4XCIgKSB7XG5cdFx0XHRcdHF1ZXVlLnVuc2hpZnQoIFwiaW5wcm9ncmVzc1wiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIENsZWFyIHVwIHRoZSBsYXN0IHF1ZXVlIHN0b3AgZnVuY3Rpb25cblx0XHRcdGRlbGV0ZSBob29rcy5zdG9wO1xuXHRcdFx0Zm4uY2FsbCggZWxlbSwgbmV4dCwgaG9va3MgKTtcblx0XHR9XG5cblx0XHRpZiAoICFzdGFydExlbmd0aCAmJiBob29rcyApIHtcblx0XHRcdGhvb2tzLmVtcHR5LmZpcmUoKTtcblx0XHR9XG5cdH0sXG5cblx0Ly8gTm90IHB1YmxpYyAtIGdlbmVyYXRlIGEgcXVldWVIb29rcyBvYmplY3QsIG9yIHJldHVybiB0aGUgY3VycmVudCBvbmVcblx0X3F1ZXVlSG9va3M6IGZ1bmN0aW9uKCBlbGVtLCB0eXBlICkge1xuXHRcdHZhciBrZXkgPSB0eXBlICsgXCJxdWV1ZUhvb2tzXCI7XG5cdFx0cmV0dXJuIGRhdGFQcml2LmdldCggZWxlbSwga2V5ICkgfHwgZGF0YVByaXYuYWNjZXNzKCBlbGVtLCBrZXksIHtcblx0XHRcdGVtcHR5OiBqUXVlcnkuQ2FsbGJhY2tzKCBcIm9uY2UgbWVtb3J5XCIgKS5hZGQoIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRkYXRhUHJpdi5yZW1vdmUoIGVsZW0sIFsgdHlwZSArIFwicXVldWVcIiwga2V5IF0gKTtcblx0XHRcdH0gKVxuXHRcdH0gKTtcblx0fVxufSApO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdHF1ZXVlOiBmdW5jdGlvbiggdHlwZSwgZGF0YSApIHtcblx0XHR2YXIgc2V0dGVyID0gMjtcblxuXHRcdGlmICggdHlwZW9mIHR5cGUgIT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRkYXRhID0gdHlwZTtcblx0XHRcdHR5cGUgPSBcImZ4XCI7XG5cdFx0XHRzZXR0ZXItLTtcblx0XHR9XG5cblx0XHRpZiAoIGFyZ3VtZW50cy5sZW5ndGggPCBzZXR0ZXIgKSB7XG5cdFx0XHRyZXR1cm4galF1ZXJ5LnF1ZXVlKCB0aGlzWyAwIF0sIHR5cGUgKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gZGF0YSA9PT0gdW5kZWZpbmVkID9cblx0XHRcdHRoaXMgOlxuXHRcdFx0dGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0dmFyIHF1ZXVlID0galF1ZXJ5LnF1ZXVlKCB0aGlzLCB0eXBlLCBkYXRhICk7XG5cblx0XHRcdFx0Ly8gRW5zdXJlIGEgaG9va3MgZm9yIHRoaXMgcXVldWVcblx0XHRcdFx0alF1ZXJ5Ll9xdWV1ZUhvb2tzKCB0aGlzLCB0eXBlICk7XG5cblx0XHRcdFx0aWYgKCB0eXBlID09PSBcImZ4XCIgJiYgcXVldWVbIDAgXSAhPT0gXCJpbnByb2dyZXNzXCIgKSB7XG5cdFx0XHRcdFx0alF1ZXJ5LmRlcXVldWUoIHRoaXMsIHR5cGUgKTtcblx0XHRcdFx0fVxuXHRcdFx0fSApO1xuXHR9LFxuXHRkZXF1ZXVlOiBmdW5jdGlvbiggdHlwZSApIHtcblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdGpRdWVyeS5kZXF1ZXVlKCB0aGlzLCB0eXBlICk7XG5cdFx0fSApO1xuXHR9LFxuXHRjbGVhclF1ZXVlOiBmdW5jdGlvbiggdHlwZSApIHtcblx0XHRyZXR1cm4gdGhpcy5xdWV1ZSggdHlwZSB8fCBcImZ4XCIsIFtdICk7XG5cdH0sXG5cblx0Ly8gR2V0IGEgcHJvbWlzZSByZXNvbHZlZCB3aGVuIHF1ZXVlcyBvZiBhIGNlcnRhaW4gdHlwZVxuXHQvLyBhcmUgZW1wdGllZCAoZnggaXMgdGhlIHR5cGUgYnkgZGVmYXVsdClcblx0cHJvbWlzZTogZnVuY3Rpb24oIHR5cGUsIG9iaiApIHtcblx0XHR2YXIgdG1wLFxuXHRcdFx0Y291bnQgPSAxLFxuXHRcdFx0ZGVmZXIgPSBqUXVlcnkuRGVmZXJyZWQoKSxcblx0XHRcdGVsZW1lbnRzID0gdGhpcyxcblx0XHRcdGkgPSB0aGlzLmxlbmd0aCxcblx0XHRcdHJlc29sdmUgPSBmdW5jdGlvbigpIHtcblx0XHRcdFx0aWYgKCAhKCAtLWNvdW50ICkgKSB7XG5cdFx0XHRcdFx0ZGVmZXIucmVzb2x2ZVdpdGgoIGVsZW1lbnRzLCBbIGVsZW1lbnRzIF0gKTtcblx0XHRcdFx0fVxuXHRcdFx0fTtcblxuXHRcdGlmICggdHlwZW9mIHR5cGUgIT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRvYmogPSB0eXBlO1xuXHRcdFx0dHlwZSA9IHVuZGVmaW5lZDtcblx0XHR9XG5cdFx0dHlwZSA9IHR5cGUgfHwgXCJmeFwiO1xuXG5cdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHR0bXAgPSBkYXRhUHJpdi5nZXQoIGVsZW1lbnRzWyBpIF0sIHR5cGUgKyBcInF1ZXVlSG9va3NcIiApO1xuXHRcdFx0aWYgKCB0bXAgJiYgdG1wLmVtcHR5ICkge1xuXHRcdFx0XHRjb3VudCsrO1xuXHRcdFx0XHR0bXAuZW1wdHkuYWRkKCByZXNvbHZlICk7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdHJlc29sdmUoKTtcblx0XHRyZXR1cm4gZGVmZXIucHJvbWlzZSggb2JqICk7XG5cdH1cbn0gKTtcbnZhciBwbnVtID0gKCAvWystXT8oPzpcXGQqXFwufClcXGQrKD86W2VFXVsrLV0/XFxkK3wpLyApLnNvdXJjZTtcblxudmFyIHJjc3NOdW0gPSBuZXcgUmVnRXhwKCBcIl4oPzooWystXSk9fCkoXCIgKyBwbnVtICsgXCIpKFthLXolXSopJFwiLCBcImlcIiApO1xuXG5cbnZhciBjc3NFeHBhbmQgPSBbIFwiVG9wXCIsIFwiUmlnaHRcIiwgXCJCb3R0b21cIiwgXCJMZWZ0XCIgXTtcblxudmFyIGRvY3VtZW50RWxlbWVudCA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudDtcblxuXG5cblx0dmFyIGlzQXR0YWNoZWQgPSBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiBqUXVlcnkuY29udGFpbnMoIGVsZW0ub3duZXJEb2N1bWVudCwgZWxlbSApO1xuXHRcdH0sXG5cdFx0Y29tcG9zZWQgPSB7IGNvbXBvc2VkOiB0cnVlIH07XG5cblx0Ly8gU3VwcG9ydDogSUUgOSAtIDExKywgRWRnZSAxMiAtIDE4KywgaU9TIDEwLjAgLSAxMC4yIG9ubHlcblx0Ly8gQ2hlY2sgYXR0YWNobWVudCBhY3Jvc3Mgc2hhZG93IERPTSBib3VuZGFyaWVzIHdoZW4gcG9zc2libGUgKGdoLTM1MDQpXG5cdC8vIFN1cHBvcnQ6IGlPUyAxMC4wLTEwLjIgb25seVxuXHQvLyBFYXJseSBpT1MgMTAgdmVyc2lvbnMgc3VwcG9ydCBgYXR0YWNoU2hhZG93YCBidXQgbm90IGBnZXRSb290Tm9kZWAsXG5cdC8vIGxlYWRpbmcgdG8gZXJyb3JzLiBXZSBuZWVkIHRvIGNoZWNrIGZvciBgZ2V0Um9vdE5vZGVgLlxuXHRpZiAoIGRvY3VtZW50RWxlbWVudC5nZXRSb290Tm9kZSApIHtcblx0XHRpc0F0dGFjaGVkID0gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4galF1ZXJ5LmNvbnRhaW5zKCBlbGVtLm93bmVyRG9jdW1lbnQsIGVsZW0gKSB8fFxuXHRcdFx0XHRlbGVtLmdldFJvb3ROb2RlKCBjb21wb3NlZCApID09PSBlbGVtLm93bmVyRG9jdW1lbnQ7XG5cdFx0fTtcblx0fVxudmFyIGlzSGlkZGVuV2l0aGluVHJlZSA9IGZ1bmN0aW9uKCBlbGVtLCBlbCApIHtcblxuXHRcdC8vIGlzSGlkZGVuV2l0aGluVHJlZSBtaWdodCBiZSBjYWxsZWQgZnJvbSBqUXVlcnkjZmlsdGVyIGZ1bmN0aW9uO1xuXHRcdC8vIGluIHRoYXQgY2FzZSwgZWxlbWVudCB3aWxsIGJlIHNlY29uZCBhcmd1bWVudFxuXHRcdGVsZW0gPSBlbCB8fCBlbGVtO1xuXG5cdFx0Ly8gSW5saW5lIHN0eWxlIHRydW1wcyBhbGxcblx0XHRyZXR1cm4gZWxlbS5zdHlsZS5kaXNwbGF5ID09PSBcIm5vbmVcIiB8fFxuXHRcdFx0ZWxlbS5zdHlsZS5kaXNwbGF5ID09PSBcIlwiICYmXG5cblx0XHRcdC8vIE90aGVyd2lzZSwgY2hlY2sgY29tcHV0ZWQgc3R5bGVcblx0XHRcdC8vIFN1cHBvcnQ6IEZpcmVmb3ggPD00MyAtIDQ1XG5cdFx0XHQvLyBEaXNjb25uZWN0ZWQgZWxlbWVudHMgY2FuIGhhdmUgY29tcHV0ZWQgZGlzcGxheTogbm9uZSwgc28gZmlyc3QgY29uZmlybSB0aGF0IGVsZW0gaXNcblx0XHRcdC8vIGluIHRoZSBkb2N1bWVudC5cblx0XHRcdGlzQXR0YWNoZWQoIGVsZW0gKSAmJlxuXG5cdFx0XHRqUXVlcnkuY3NzKCBlbGVtLCBcImRpc3BsYXlcIiApID09PSBcIm5vbmVcIjtcblx0fTtcblxuXG5cbmZ1bmN0aW9uIGFkanVzdENTUyggZWxlbSwgcHJvcCwgdmFsdWVQYXJ0cywgdHdlZW4gKSB7XG5cdHZhciBhZGp1c3RlZCwgc2NhbGUsXG5cdFx0bWF4SXRlcmF0aW9ucyA9IDIwLFxuXHRcdGN1cnJlbnRWYWx1ZSA9IHR3ZWVuID9cblx0XHRcdGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gdHdlZW4uY3VyKCk7XG5cdFx0XHR9IDpcblx0XHRcdGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4galF1ZXJ5LmNzcyggZWxlbSwgcHJvcCwgXCJcIiApO1xuXHRcdFx0fSxcblx0XHRpbml0aWFsID0gY3VycmVudFZhbHVlKCksXG5cdFx0dW5pdCA9IHZhbHVlUGFydHMgJiYgdmFsdWVQYXJ0c1sgMyBdIHx8ICggalF1ZXJ5LmNzc051bWJlclsgcHJvcCBdID8gXCJcIiA6IFwicHhcIiApLFxuXG5cdFx0Ly8gU3RhcnRpbmcgdmFsdWUgY29tcHV0YXRpb24gaXMgcmVxdWlyZWQgZm9yIHBvdGVudGlhbCB1bml0IG1pc21hdGNoZXNcblx0XHRpbml0aWFsSW5Vbml0ID0gZWxlbS5ub2RlVHlwZSAmJlxuXHRcdFx0KCBqUXVlcnkuY3NzTnVtYmVyWyBwcm9wIF0gfHwgdW5pdCAhPT0gXCJweFwiICYmICtpbml0aWFsICkgJiZcblx0XHRcdHJjc3NOdW0uZXhlYyggalF1ZXJ5LmNzcyggZWxlbSwgcHJvcCApICk7XG5cblx0aWYgKCBpbml0aWFsSW5Vbml0ICYmIGluaXRpYWxJblVuaXRbIDMgXSAhPT0gdW5pdCApIHtcblxuXHRcdC8vIFN1cHBvcnQ6IEZpcmVmb3ggPD01NFxuXHRcdC8vIEhhbHZlIHRoZSBpdGVyYXRpb24gdGFyZ2V0IHZhbHVlIHRvIHByZXZlbnQgaW50ZXJmZXJlbmNlIGZyb20gQ1NTIHVwcGVyIGJvdW5kcyAoZ2gtMjE0NClcblx0XHRpbml0aWFsID0gaW5pdGlhbCAvIDI7XG5cblx0XHQvLyBUcnVzdCB1bml0cyByZXBvcnRlZCBieSBqUXVlcnkuY3NzXG5cdFx0dW5pdCA9IHVuaXQgfHwgaW5pdGlhbEluVW5pdFsgMyBdO1xuXG5cdFx0Ly8gSXRlcmF0aXZlbHkgYXBwcm94aW1hdGUgZnJvbSBhIG5vbnplcm8gc3RhcnRpbmcgcG9pbnRcblx0XHRpbml0aWFsSW5Vbml0ID0gK2luaXRpYWwgfHwgMTtcblxuXHRcdHdoaWxlICggbWF4SXRlcmF0aW9ucy0tICkge1xuXG5cdFx0XHQvLyBFdmFsdWF0ZSBhbmQgdXBkYXRlIG91ciBiZXN0IGd1ZXNzIChkb3VibGluZyBndWVzc2VzIHRoYXQgemVybyBvdXQpLlxuXHRcdFx0Ly8gRmluaXNoIGlmIHRoZSBzY2FsZSBlcXVhbHMgb3IgY3Jvc3NlcyAxIChtYWtpbmcgdGhlIG9sZCpuZXcgcHJvZHVjdCBub24tcG9zaXRpdmUpLlxuXHRcdFx0alF1ZXJ5LnN0eWxlKCBlbGVtLCBwcm9wLCBpbml0aWFsSW5Vbml0ICsgdW5pdCApO1xuXHRcdFx0aWYgKCAoIDEgLSBzY2FsZSApICogKCAxIC0gKCBzY2FsZSA9IGN1cnJlbnRWYWx1ZSgpIC8gaW5pdGlhbCB8fCAwLjUgKSApIDw9IDAgKSB7XG5cdFx0XHRcdG1heEl0ZXJhdGlvbnMgPSAwO1xuXHRcdFx0fVxuXHRcdFx0aW5pdGlhbEluVW5pdCA9IGluaXRpYWxJblVuaXQgLyBzY2FsZTtcblxuXHRcdH1cblxuXHRcdGluaXRpYWxJblVuaXQgPSBpbml0aWFsSW5Vbml0ICogMjtcblx0XHRqUXVlcnkuc3R5bGUoIGVsZW0sIHByb3AsIGluaXRpYWxJblVuaXQgKyB1bml0ICk7XG5cblx0XHQvLyBNYWtlIHN1cmUgd2UgdXBkYXRlIHRoZSB0d2VlbiBwcm9wZXJ0aWVzIGxhdGVyIG9uXG5cdFx0dmFsdWVQYXJ0cyA9IHZhbHVlUGFydHMgfHwgW107XG5cdH1cblxuXHRpZiAoIHZhbHVlUGFydHMgKSB7XG5cdFx0aW5pdGlhbEluVW5pdCA9ICtpbml0aWFsSW5Vbml0IHx8ICtpbml0aWFsIHx8IDA7XG5cblx0XHQvLyBBcHBseSByZWxhdGl2ZSBvZmZzZXQgKCs9Ly09KSBpZiBzcGVjaWZpZWRcblx0XHRhZGp1c3RlZCA9IHZhbHVlUGFydHNbIDEgXSA/XG5cdFx0XHRpbml0aWFsSW5Vbml0ICsgKCB2YWx1ZVBhcnRzWyAxIF0gKyAxICkgKiB2YWx1ZVBhcnRzWyAyIF0gOlxuXHRcdFx0K3ZhbHVlUGFydHNbIDIgXTtcblx0XHRpZiAoIHR3ZWVuICkge1xuXHRcdFx0dHdlZW4udW5pdCA9IHVuaXQ7XG5cdFx0XHR0d2Vlbi5zdGFydCA9IGluaXRpYWxJblVuaXQ7XG5cdFx0XHR0d2Vlbi5lbmQgPSBhZGp1c3RlZDtcblx0XHR9XG5cdH1cblx0cmV0dXJuIGFkanVzdGVkO1xufVxuXG5cbnZhciBkZWZhdWx0RGlzcGxheU1hcCA9IHt9O1xuXG5mdW5jdGlvbiBnZXREZWZhdWx0RGlzcGxheSggZWxlbSApIHtcblx0dmFyIHRlbXAsXG5cdFx0ZG9jID0gZWxlbS5vd25lckRvY3VtZW50LFxuXHRcdG5vZGVOYW1lID0gZWxlbS5ub2RlTmFtZSxcblx0XHRkaXNwbGF5ID0gZGVmYXVsdERpc3BsYXlNYXBbIG5vZGVOYW1lIF07XG5cblx0aWYgKCBkaXNwbGF5ICkge1xuXHRcdHJldHVybiBkaXNwbGF5O1xuXHR9XG5cblx0dGVtcCA9IGRvYy5ib2R5LmFwcGVuZENoaWxkKCBkb2MuY3JlYXRlRWxlbWVudCggbm9kZU5hbWUgKSApO1xuXHRkaXNwbGF5ID0galF1ZXJ5LmNzcyggdGVtcCwgXCJkaXNwbGF5XCIgKTtcblxuXHR0ZW1wLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoIHRlbXAgKTtcblxuXHRpZiAoIGRpc3BsYXkgPT09IFwibm9uZVwiICkge1xuXHRcdGRpc3BsYXkgPSBcImJsb2NrXCI7XG5cdH1cblx0ZGVmYXVsdERpc3BsYXlNYXBbIG5vZGVOYW1lIF0gPSBkaXNwbGF5O1xuXG5cdHJldHVybiBkaXNwbGF5O1xufVxuXG5mdW5jdGlvbiBzaG93SGlkZSggZWxlbWVudHMsIHNob3cgKSB7XG5cdHZhciBkaXNwbGF5LCBlbGVtLFxuXHRcdHZhbHVlcyA9IFtdLFxuXHRcdGluZGV4ID0gMCxcblx0XHRsZW5ndGggPSBlbGVtZW50cy5sZW5ndGg7XG5cblx0Ly8gRGV0ZXJtaW5lIG5ldyBkaXNwbGF5IHZhbHVlIGZvciBlbGVtZW50cyB0aGF0IG5lZWQgdG8gY2hhbmdlXG5cdGZvciAoIDsgaW5kZXggPCBsZW5ndGg7IGluZGV4KysgKSB7XG5cdFx0ZWxlbSA9IGVsZW1lbnRzWyBpbmRleCBdO1xuXHRcdGlmICggIWVsZW0uc3R5bGUgKSB7XG5cdFx0XHRjb250aW51ZTtcblx0XHR9XG5cblx0XHRkaXNwbGF5ID0gZWxlbS5zdHlsZS5kaXNwbGF5O1xuXHRcdGlmICggc2hvdyApIHtcblxuXHRcdFx0Ly8gU2luY2Ugd2UgZm9yY2UgdmlzaWJpbGl0eSB1cG9uIGNhc2NhZGUtaGlkZGVuIGVsZW1lbnRzLCBhbiBpbW1lZGlhdGUgKGFuZCBzbG93KVxuXHRcdFx0Ly8gY2hlY2sgaXMgcmVxdWlyZWQgaW4gdGhpcyBmaXJzdCBsb29wIHVubGVzcyB3ZSBoYXZlIGEgbm9uZW1wdHkgZGlzcGxheSB2YWx1ZSAoZWl0aGVyXG5cdFx0XHQvLyBpbmxpbmUgb3IgYWJvdXQtdG8tYmUtcmVzdG9yZWQpXG5cdFx0XHRpZiAoIGRpc3BsYXkgPT09IFwibm9uZVwiICkge1xuXHRcdFx0XHR2YWx1ZXNbIGluZGV4IF0gPSBkYXRhUHJpdi5nZXQoIGVsZW0sIFwiZGlzcGxheVwiICkgfHwgbnVsbDtcblx0XHRcdFx0aWYgKCAhdmFsdWVzWyBpbmRleCBdICkge1xuXHRcdFx0XHRcdGVsZW0uc3R5bGUuZGlzcGxheSA9IFwiXCI7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdGlmICggZWxlbS5zdHlsZS5kaXNwbGF5ID09PSBcIlwiICYmIGlzSGlkZGVuV2l0aGluVHJlZSggZWxlbSApICkge1xuXHRcdFx0XHR2YWx1ZXNbIGluZGV4IF0gPSBnZXREZWZhdWx0RGlzcGxheSggZWxlbSApO1xuXHRcdFx0fVxuXHRcdH0gZWxzZSB7XG5cdFx0XHRpZiAoIGRpc3BsYXkgIT09IFwibm9uZVwiICkge1xuXHRcdFx0XHR2YWx1ZXNbIGluZGV4IF0gPSBcIm5vbmVcIjtcblxuXHRcdFx0XHQvLyBSZW1lbWJlciB3aGF0IHdlJ3JlIG92ZXJ3cml0aW5nXG5cdFx0XHRcdGRhdGFQcml2LnNldCggZWxlbSwgXCJkaXNwbGF5XCIsIGRpc3BsYXkgKTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyBTZXQgdGhlIGRpc3BsYXkgb2YgdGhlIGVsZW1lbnRzIGluIGEgc2Vjb25kIGxvb3AgdG8gYXZvaWQgY29uc3RhbnQgcmVmbG93XG5cdGZvciAoIGluZGV4ID0gMDsgaW5kZXggPCBsZW5ndGg7IGluZGV4KysgKSB7XG5cdFx0aWYgKCB2YWx1ZXNbIGluZGV4IF0gIT0gbnVsbCApIHtcblx0XHRcdGVsZW1lbnRzWyBpbmRleCBdLnN0eWxlLmRpc3BsYXkgPSB2YWx1ZXNbIGluZGV4IF07XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIGVsZW1lbnRzO1xufVxuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdHNob3c6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBzaG93SGlkZSggdGhpcywgdHJ1ZSApO1xuXHR9LFxuXHRoaWRlOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gc2hvd0hpZGUoIHRoaXMgKTtcblx0fSxcblx0dG9nZ2xlOiBmdW5jdGlvbiggc3RhdGUgKSB7XG5cdFx0aWYgKCB0eXBlb2Ygc3RhdGUgPT09IFwiYm9vbGVhblwiICkge1xuXHRcdFx0cmV0dXJuIHN0YXRlID8gdGhpcy5zaG93KCkgOiB0aGlzLmhpZGUoKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdGlmICggaXNIaWRkZW5XaXRoaW5UcmVlKCB0aGlzICkgKSB7XG5cdFx0XHRcdGpRdWVyeSggdGhpcyApLnNob3coKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGpRdWVyeSggdGhpcyApLmhpZGUoKTtcblx0XHRcdH1cblx0XHR9ICk7XG5cdH1cbn0gKTtcbnZhciByY2hlY2thYmxlVHlwZSA9ICggL14oPzpjaGVja2JveHxyYWRpbykkL2kgKTtcblxudmFyIHJ0YWdOYW1lID0gKCAvPChbYS16XVteXFwvXFwwPlxceDIwXFx0XFxyXFxuXFxmXSopL2kgKTtcblxudmFyIHJzY3JpcHRUeXBlID0gKCAvXiR8Xm1vZHVsZSR8XFwvKD86amF2YXxlY21hKXNjcmlwdC9pICk7XG5cblxuXG4oIGZ1bmN0aW9uKCkge1xuXHR2YXIgZnJhZ21lbnQgPSBkb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCksXG5cdFx0ZGl2ID0gZnJhZ21lbnQuYXBwZW5kQ2hpbGQoIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiZGl2XCIgKSApLFxuXHRcdGlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJpbnB1dFwiICk7XG5cblx0Ly8gU3VwcG9ydDogQW5kcm9pZCA0LjAgLSA0LjMgb25seVxuXHQvLyBDaGVjayBzdGF0ZSBsb3N0IGlmIHRoZSBuYW1lIGlzIHNldCAoIzExMjE3KVxuXHQvLyBTdXBwb3J0OiBXaW5kb3dzIFdlYiBBcHBzIChXV0EpXG5cdC8vIGBuYW1lYCBhbmQgYHR5cGVgIG11c3QgdXNlIC5zZXRBdHRyaWJ1dGUgZm9yIFdXQSAoIzE0OTAxKVxuXHRpbnB1dC5zZXRBdHRyaWJ1dGUoIFwidHlwZVwiLCBcInJhZGlvXCIgKTtcblx0aW5wdXQuc2V0QXR0cmlidXRlKCBcImNoZWNrZWRcIiwgXCJjaGVja2VkXCIgKTtcblx0aW5wdXQuc2V0QXR0cmlidXRlKCBcIm5hbWVcIiwgXCJ0XCIgKTtcblxuXHRkaXYuYXBwZW5kQ2hpbGQoIGlucHV0ICk7XG5cblx0Ly8gU3VwcG9ydDogQW5kcm9pZCA8PTQuMSBvbmx5XG5cdC8vIE9sZGVyIFdlYktpdCBkb2Vzbid0IGNsb25lIGNoZWNrZWQgc3RhdGUgY29ycmVjdGx5IGluIGZyYWdtZW50c1xuXHRzdXBwb3J0LmNoZWNrQ2xvbmUgPSBkaXYuY2xvbmVOb2RlKCB0cnVlICkuY2xvbmVOb2RlKCB0cnVlICkubGFzdENoaWxkLmNoZWNrZWQ7XG5cblx0Ly8gU3VwcG9ydDogSUUgPD0xMSBvbmx5XG5cdC8vIE1ha2Ugc3VyZSB0ZXh0YXJlYSAoYW5kIGNoZWNrYm94KSBkZWZhdWx0VmFsdWUgaXMgcHJvcGVybHkgY2xvbmVkXG5cdGRpdi5pbm5lckhUTUwgPSBcIjx0ZXh0YXJlYT54PC90ZXh0YXJlYT5cIjtcblx0c3VwcG9ydC5ub0Nsb25lQ2hlY2tlZCA9ICEhZGl2LmNsb25lTm9kZSggdHJ1ZSApLmxhc3RDaGlsZC5kZWZhdWx0VmFsdWU7XG5cblx0Ly8gU3VwcG9ydDogSUUgPD05IG9ubHlcblx0Ly8gSUUgPD05IHJlcGxhY2VzIDxvcHRpb24+IHRhZ3Mgd2l0aCB0aGVpciBjb250ZW50cyB3aGVuIGluc2VydGVkIG91dHNpZGUgb2Zcblx0Ly8gdGhlIHNlbGVjdCBlbGVtZW50LlxuXHRkaXYuaW5uZXJIVE1MID0gXCI8b3B0aW9uPjwvb3B0aW9uPlwiO1xuXHRzdXBwb3J0Lm9wdGlvbiA9ICEhZGl2Lmxhc3RDaGlsZDtcbn0gKSgpO1xuXG5cbi8vIFdlIGhhdmUgdG8gY2xvc2UgdGhlc2UgdGFncyB0byBzdXBwb3J0IFhIVE1MICgjMTMyMDApXG52YXIgd3JhcE1hcCA9IHtcblxuXHQvLyBYSFRNTCBwYXJzZXJzIGRvIG5vdCBtYWdpY2FsbHkgaW5zZXJ0IGVsZW1lbnRzIGluIHRoZVxuXHQvLyBzYW1lIHdheSB0aGF0IHRhZyBzb3VwIHBhcnNlcnMgZG8uIFNvIHdlIGNhbm5vdCBzaG9ydGVuXG5cdC8vIHRoaXMgYnkgb21pdHRpbmcgPHRib2R5PiBvciBvdGhlciByZXF1aXJlZCBlbGVtZW50cy5cblx0dGhlYWQ6IFsgMSwgXCI8dGFibGU+XCIsIFwiPC90YWJsZT5cIiBdLFxuXHRjb2w6IFsgMiwgXCI8dGFibGU+PGNvbGdyb3VwPlwiLCBcIjwvY29sZ3JvdXA+PC90YWJsZT5cIiBdLFxuXHR0cjogWyAyLCBcIjx0YWJsZT48dGJvZHk+XCIsIFwiPC90Ym9keT48L3RhYmxlPlwiIF0sXG5cdHRkOiBbIDMsIFwiPHRhYmxlPjx0Ym9keT48dHI+XCIsIFwiPC90cj48L3Rib2R5PjwvdGFibGU+XCIgXSxcblxuXHRfZGVmYXVsdDogWyAwLCBcIlwiLCBcIlwiIF1cbn07XG5cbndyYXBNYXAudGJvZHkgPSB3cmFwTWFwLnRmb290ID0gd3JhcE1hcC5jb2xncm91cCA9IHdyYXBNYXAuY2FwdGlvbiA9IHdyYXBNYXAudGhlYWQ7XG53cmFwTWFwLnRoID0gd3JhcE1hcC50ZDtcblxuLy8gU3VwcG9ydDogSUUgPD05IG9ubHlcbmlmICggIXN1cHBvcnQub3B0aW9uICkge1xuXHR3cmFwTWFwLm9wdGdyb3VwID0gd3JhcE1hcC5vcHRpb24gPSBbIDEsIFwiPHNlbGVjdCBtdWx0aXBsZT0nbXVsdGlwbGUnPlwiLCBcIjwvc2VsZWN0PlwiIF07XG59XG5cblxuZnVuY3Rpb24gZ2V0QWxsKCBjb250ZXh0LCB0YWcgKSB7XG5cblx0Ly8gU3VwcG9ydDogSUUgPD05IC0gMTEgb25seVxuXHQvLyBVc2UgdHlwZW9mIHRvIGF2b2lkIHplcm8tYXJndW1lbnQgbWV0aG9kIGludm9jYXRpb24gb24gaG9zdCBvYmplY3RzICgjMTUxNTEpXG5cdHZhciByZXQ7XG5cblx0aWYgKCB0eXBlb2YgY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSAhPT0gXCJ1bmRlZmluZWRcIiApIHtcblx0XHRyZXQgPSBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lKCB0YWcgfHwgXCIqXCIgKTtcblxuXHR9IGVsc2UgaWYgKCB0eXBlb2YgY29udGV4dC5xdWVyeVNlbGVjdG9yQWxsICE9PSBcInVuZGVmaW5lZFwiICkge1xuXHRcdHJldCA9IGNvbnRleHQucXVlcnlTZWxlY3RvckFsbCggdGFnIHx8IFwiKlwiICk7XG5cblx0fSBlbHNlIHtcblx0XHRyZXQgPSBbXTtcblx0fVxuXG5cdGlmICggdGFnID09PSB1bmRlZmluZWQgfHwgdGFnICYmIG5vZGVOYW1lKCBjb250ZXh0LCB0YWcgKSApIHtcblx0XHRyZXR1cm4galF1ZXJ5Lm1lcmdlKCBbIGNvbnRleHQgXSwgcmV0ICk7XG5cdH1cblxuXHRyZXR1cm4gcmV0O1xufVxuXG5cbi8vIE1hcmsgc2NyaXB0cyBhcyBoYXZpbmcgYWxyZWFkeSBiZWVuIGV2YWx1YXRlZFxuZnVuY3Rpb24gc2V0R2xvYmFsRXZhbCggZWxlbXMsIHJlZkVsZW1lbnRzICkge1xuXHR2YXIgaSA9IDAsXG5cdFx0bCA9IGVsZW1zLmxlbmd0aDtcblxuXHRmb3IgKCA7IGkgPCBsOyBpKysgKSB7XG5cdFx0ZGF0YVByaXYuc2V0KFxuXHRcdFx0ZWxlbXNbIGkgXSxcblx0XHRcdFwiZ2xvYmFsRXZhbFwiLFxuXHRcdFx0IXJlZkVsZW1lbnRzIHx8IGRhdGFQcml2LmdldCggcmVmRWxlbWVudHNbIGkgXSwgXCJnbG9iYWxFdmFsXCIgKVxuXHRcdCk7XG5cdH1cbn1cblxuXG52YXIgcmh0bWwgPSAvPHwmIz9cXHcrOy87XG5cbmZ1bmN0aW9uIGJ1aWxkRnJhZ21lbnQoIGVsZW1zLCBjb250ZXh0LCBzY3JpcHRzLCBzZWxlY3Rpb24sIGlnbm9yZWQgKSB7XG5cdHZhciBlbGVtLCB0bXAsIHRhZywgd3JhcCwgYXR0YWNoZWQsIGosXG5cdFx0ZnJhZ21lbnQgPSBjb250ZXh0LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKSxcblx0XHRub2RlcyA9IFtdLFxuXHRcdGkgPSAwLFxuXHRcdGwgPSBlbGVtcy5sZW5ndGg7XG5cblx0Zm9yICggOyBpIDwgbDsgaSsrICkge1xuXHRcdGVsZW0gPSBlbGVtc1sgaSBdO1xuXG5cdFx0aWYgKCBlbGVtIHx8IGVsZW0gPT09IDAgKSB7XG5cblx0XHRcdC8vIEFkZCBub2RlcyBkaXJlY3RseVxuXHRcdFx0aWYgKCB0b1R5cGUoIGVsZW0gKSA9PT0gXCJvYmplY3RcIiApIHtcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBBbmRyb2lkIDw9NC4wIG9ubHksIFBoYW50b21KUyAxIG9ubHlcblx0XHRcdFx0Ly8gcHVzaC5hcHBseShfLCBhcnJheWxpa2UpIHRocm93cyBvbiBhbmNpZW50IFdlYktpdFxuXHRcdFx0XHRqUXVlcnkubWVyZ2UoIG5vZGVzLCBlbGVtLm5vZGVUeXBlID8gWyBlbGVtIF0gOiBlbGVtICk7XG5cblx0XHRcdC8vIENvbnZlcnQgbm9uLWh0bWwgaW50byBhIHRleHQgbm9kZVxuXHRcdFx0fSBlbHNlIGlmICggIXJodG1sLnRlc3QoIGVsZW0gKSApIHtcblx0XHRcdFx0bm9kZXMucHVzaCggY29udGV4dC5jcmVhdGVUZXh0Tm9kZSggZWxlbSApICk7XG5cblx0XHRcdC8vIENvbnZlcnQgaHRtbCBpbnRvIERPTSBub2Rlc1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0dG1wID0gdG1wIHx8IGZyYWdtZW50LmFwcGVuZENoaWxkKCBjb250ZXh0LmNyZWF0ZUVsZW1lbnQoIFwiZGl2XCIgKSApO1xuXG5cdFx0XHRcdC8vIERlc2VyaWFsaXplIGEgc3RhbmRhcmQgcmVwcmVzZW50YXRpb25cblx0XHRcdFx0dGFnID0gKCBydGFnTmFtZS5leGVjKCBlbGVtICkgfHwgWyBcIlwiLCBcIlwiIF0gKVsgMSBdLnRvTG93ZXJDYXNlKCk7XG5cdFx0XHRcdHdyYXAgPSB3cmFwTWFwWyB0YWcgXSB8fCB3cmFwTWFwLl9kZWZhdWx0O1xuXHRcdFx0XHR0bXAuaW5uZXJIVE1MID0gd3JhcFsgMSBdICsgalF1ZXJ5Lmh0bWxQcmVmaWx0ZXIoIGVsZW0gKSArIHdyYXBbIDIgXTtcblxuXHRcdFx0XHQvLyBEZXNjZW5kIHRocm91Z2ggd3JhcHBlcnMgdG8gdGhlIHJpZ2h0IGNvbnRlbnRcblx0XHRcdFx0aiA9IHdyYXBbIDAgXTtcblx0XHRcdFx0d2hpbGUgKCBqLS0gKSB7XG5cdFx0XHRcdFx0dG1wID0gdG1wLmxhc3RDaGlsZDtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD00LjAgb25seSwgUGhhbnRvbUpTIDEgb25seVxuXHRcdFx0XHQvLyBwdXNoLmFwcGx5KF8sIGFycmF5bGlrZSkgdGhyb3dzIG9uIGFuY2llbnQgV2ViS2l0XG5cdFx0XHRcdGpRdWVyeS5tZXJnZSggbm9kZXMsIHRtcC5jaGlsZE5vZGVzICk7XG5cblx0XHRcdFx0Ly8gUmVtZW1iZXIgdGhlIHRvcC1sZXZlbCBjb250YWluZXJcblx0XHRcdFx0dG1wID0gZnJhZ21lbnQuZmlyc3RDaGlsZDtcblxuXHRcdFx0XHQvLyBFbnN1cmUgdGhlIGNyZWF0ZWQgbm9kZXMgYXJlIG9ycGhhbmVkICgjMTIzOTIpXG5cdFx0XHRcdHRtcC50ZXh0Q29udGVudCA9IFwiXCI7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Ly8gUmVtb3ZlIHdyYXBwZXIgZnJvbSBmcmFnbWVudFxuXHRmcmFnbWVudC50ZXh0Q29udGVudCA9IFwiXCI7XG5cblx0aSA9IDA7XG5cdHdoaWxlICggKCBlbGVtID0gbm9kZXNbIGkrKyBdICkgKSB7XG5cblx0XHQvLyBTa2lwIGVsZW1lbnRzIGFscmVhZHkgaW4gdGhlIGNvbnRleHQgY29sbGVjdGlvbiAodHJhYy00MDg3KVxuXHRcdGlmICggc2VsZWN0aW9uICYmIGpRdWVyeS5pbkFycmF5KCBlbGVtLCBzZWxlY3Rpb24gKSA+IC0xICkge1xuXHRcdFx0aWYgKCBpZ25vcmVkICkge1xuXHRcdFx0XHRpZ25vcmVkLnB1c2goIGVsZW0gKTtcblx0XHRcdH1cblx0XHRcdGNvbnRpbnVlO1xuXHRcdH1cblxuXHRcdGF0dGFjaGVkID0gaXNBdHRhY2hlZCggZWxlbSApO1xuXG5cdFx0Ly8gQXBwZW5kIHRvIGZyYWdtZW50XG5cdFx0dG1wID0gZ2V0QWxsKCBmcmFnbWVudC5hcHBlbmRDaGlsZCggZWxlbSApLCBcInNjcmlwdFwiICk7XG5cblx0XHQvLyBQcmVzZXJ2ZSBzY3JpcHQgZXZhbHVhdGlvbiBoaXN0b3J5XG5cdFx0aWYgKCBhdHRhY2hlZCApIHtcblx0XHRcdHNldEdsb2JhbEV2YWwoIHRtcCApO1xuXHRcdH1cblxuXHRcdC8vIENhcHR1cmUgZXhlY3V0YWJsZXNcblx0XHRpZiAoIHNjcmlwdHMgKSB7XG5cdFx0XHRqID0gMDtcblx0XHRcdHdoaWxlICggKCBlbGVtID0gdG1wWyBqKysgXSApICkge1xuXHRcdFx0XHRpZiAoIHJzY3JpcHRUeXBlLnRlc3QoIGVsZW0udHlwZSB8fCBcIlwiICkgKSB7XG5cdFx0XHRcdFx0c2NyaXB0cy5wdXNoKCBlbGVtICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gZnJhZ21lbnQ7XG59XG5cblxudmFyIHJ0eXBlbmFtZXNwYWNlID0gL14oW14uXSopKD86XFwuKC4rKXwpLztcblxuZnVuY3Rpb24gcmV0dXJuVHJ1ZSgpIHtcblx0cmV0dXJuIHRydWU7XG59XG5cbmZ1bmN0aW9uIHJldHVybkZhbHNlKCkge1xuXHRyZXR1cm4gZmFsc2U7XG59XG5cbi8vIFN1cHBvcnQ6IElFIDw9OSAtIDExK1xuLy8gZm9jdXMoKSBhbmQgYmx1cigpIGFyZSBhc3luY2hyb25vdXMsIGV4Y2VwdCB3aGVuIHRoZXkgYXJlIG5vLW9wLlxuLy8gU28gZXhwZWN0IGZvY3VzIHRvIGJlIHN5bmNocm9ub3VzIHdoZW4gdGhlIGVsZW1lbnQgaXMgYWxyZWFkeSBhY3RpdmUsXG4vLyBhbmQgYmx1ciB0byBiZSBzeW5jaHJvbm91cyB3aGVuIHRoZSBlbGVtZW50IGlzIG5vdCBhbHJlYWR5IGFjdGl2ZS5cbi8vIChmb2N1cyBhbmQgYmx1ciBhcmUgYWx3YXlzIHN5bmNocm9ub3VzIGluIG90aGVyIHN1cHBvcnRlZCBicm93c2Vycyxcbi8vIHRoaXMganVzdCBkZWZpbmVzIHdoZW4gd2UgY2FuIGNvdW50IG9uIGl0KS5cbmZ1bmN0aW9uIGV4cGVjdFN5bmMoIGVsZW0sIHR5cGUgKSB7XG5cdHJldHVybiAoIGVsZW0gPT09IHNhZmVBY3RpdmVFbGVtZW50KCkgKSA9PT0gKCB0eXBlID09PSBcImZvY3VzXCIgKTtcbn1cblxuLy8gU3VwcG9ydDogSUUgPD05IG9ubHlcbi8vIEFjY2Vzc2luZyBkb2N1bWVudC5hY3RpdmVFbGVtZW50IGNhbiB0aHJvdyB1bmV4cGVjdGVkbHlcbi8vIGh0dHBzOi8vYnVncy5qcXVlcnkuY29tL3RpY2tldC8xMzM5M1xuZnVuY3Rpb24gc2FmZUFjdGl2ZUVsZW1lbnQoKSB7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQ7XG5cdH0gY2F0Y2ggKCBlcnIgKSB7IH1cbn1cblxuZnVuY3Rpb24gb24oIGVsZW0sIHR5cGVzLCBzZWxlY3RvciwgZGF0YSwgZm4sIG9uZSApIHtcblx0dmFyIG9yaWdGbiwgdHlwZTtcblxuXHQvLyBUeXBlcyBjYW4gYmUgYSBtYXAgb2YgdHlwZXMvaGFuZGxlcnNcblx0aWYgKCB0eXBlb2YgdHlwZXMgPT09IFwib2JqZWN0XCIgKSB7XG5cblx0XHQvLyAoIHR5cGVzLU9iamVjdCwgc2VsZWN0b3IsIGRhdGEgKVxuXHRcdGlmICggdHlwZW9mIHNlbGVjdG9yICE9PSBcInN0cmluZ1wiICkge1xuXG5cdFx0XHQvLyAoIHR5cGVzLU9iamVjdCwgZGF0YSApXG5cdFx0XHRkYXRhID0gZGF0YSB8fCBzZWxlY3Rvcjtcblx0XHRcdHNlbGVjdG9yID0gdW5kZWZpbmVkO1xuXHRcdH1cblx0XHRmb3IgKCB0eXBlIGluIHR5cGVzICkge1xuXHRcdFx0b24oIGVsZW0sIHR5cGUsIHNlbGVjdG9yLCBkYXRhLCB0eXBlc1sgdHlwZSBdLCBvbmUgKTtcblx0XHR9XG5cdFx0cmV0dXJuIGVsZW07XG5cdH1cblxuXHRpZiAoIGRhdGEgPT0gbnVsbCAmJiBmbiA9PSBudWxsICkge1xuXG5cdFx0Ly8gKCB0eXBlcywgZm4gKVxuXHRcdGZuID0gc2VsZWN0b3I7XG5cdFx0ZGF0YSA9IHNlbGVjdG9yID0gdW5kZWZpbmVkO1xuXHR9IGVsc2UgaWYgKCBmbiA9PSBudWxsICkge1xuXHRcdGlmICggdHlwZW9mIHNlbGVjdG9yID09PSBcInN0cmluZ1wiICkge1xuXG5cdFx0XHQvLyAoIHR5cGVzLCBzZWxlY3RvciwgZm4gKVxuXHRcdFx0Zm4gPSBkYXRhO1xuXHRcdFx0ZGF0YSA9IHVuZGVmaW5lZDtcblx0XHR9IGVsc2Uge1xuXG5cdFx0XHQvLyAoIHR5cGVzLCBkYXRhLCBmbiApXG5cdFx0XHRmbiA9IGRhdGE7XG5cdFx0XHRkYXRhID0gc2VsZWN0b3I7XG5cdFx0XHRzZWxlY3RvciA9IHVuZGVmaW5lZDtcblx0XHR9XG5cdH1cblx0aWYgKCBmbiA9PT0gZmFsc2UgKSB7XG5cdFx0Zm4gPSByZXR1cm5GYWxzZTtcblx0fSBlbHNlIGlmICggIWZuICkge1xuXHRcdHJldHVybiBlbGVtO1xuXHR9XG5cblx0aWYgKCBvbmUgPT09IDEgKSB7XG5cdFx0b3JpZ0ZuID0gZm47XG5cdFx0Zm4gPSBmdW5jdGlvbiggZXZlbnQgKSB7XG5cblx0XHRcdC8vIENhbiB1c2UgYW4gZW1wdHkgc2V0LCBzaW5jZSBldmVudCBjb250YWlucyB0aGUgaW5mb1xuXHRcdFx0alF1ZXJ5KCkub2ZmKCBldmVudCApO1xuXHRcdFx0cmV0dXJuIG9yaWdGbi5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XG5cdFx0fTtcblxuXHRcdC8vIFVzZSBzYW1lIGd1aWQgc28gY2FsbGVyIGNhbiByZW1vdmUgdXNpbmcgb3JpZ0ZuXG5cdFx0Zm4uZ3VpZCA9IG9yaWdGbi5ndWlkIHx8ICggb3JpZ0ZuLmd1aWQgPSBqUXVlcnkuZ3VpZCsrICk7XG5cdH1cblx0cmV0dXJuIGVsZW0uZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0alF1ZXJ5LmV2ZW50LmFkZCggdGhpcywgdHlwZXMsIGZuLCBkYXRhLCBzZWxlY3RvciApO1xuXHR9ICk7XG59XG5cbi8qXG4gKiBIZWxwZXIgZnVuY3Rpb25zIGZvciBtYW5hZ2luZyBldmVudHMgLS0gbm90IHBhcnQgb2YgdGhlIHB1YmxpYyBpbnRlcmZhY2UuXG4gKiBQcm9wcyB0byBEZWFuIEVkd2FyZHMnIGFkZEV2ZW50IGxpYnJhcnkgZm9yIG1hbnkgb2YgdGhlIGlkZWFzLlxuICovXG5qUXVlcnkuZXZlbnQgPSB7XG5cblx0Z2xvYmFsOiB7fSxcblxuXHRhZGQ6IGZ1bmN0aW9uKCBlbGVtLCB0eXBlcywgaGFuZGxlciwgZGF0YSwgc2VsZWN0b3IgKSB7XG5cblx0XHR2YXIgaGFuZGxlT2JqSW4sIGV2ZW50SGFuZGxlLCB0bXAsXG5cdFx0XHRldmVudHMsIHQsIGhhbmRsZU9iaixcblx0XHRcdHNwZWNpYWwsIGhhbmRsZXJzLCB0eXBlLCBuYW1lc3BhY2VzLCBvcmlnVHlwZSxcblx0XHRcdGVsZW1EYXRhID0gZGF0YVByaXYuZ2V0KCBlbGVtICk7XG5cblx0XHQvLyBPbmx5IGF0dGFjaCBldmVudHMgdG8gb2JqZWN0cyB0aGF0IGFjY2VwdCBkYXRhXG5cdFx0aWYgKCAhYWNjZXB0RGF0YSggZWxlbSApICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vIENhbGxlciBjYW4gcGFzcyBpbiBhbiBvYmplY3Qgb2YgY3VzdG9tIGRhdGEgaW4gbGlldSBvZiB0aGUgaGFuZGxlclxuXHRcdGlmICggaGFuZGxlci5oYW5kbGVyICkge1xuXHRcdFx0aGFuZGxlT2JqSW4gPSBoYW5kbGVyO1xuXHRcdFx0aGFuZGxlciA9IGhhbmRsZU9iakluLmhhbmRsZXI7XG5cdFx0XHRzZWxlY3RvciA9IGhhbmRsZU9iakluLnNlbGVjdG9yO1xuXHRcdH1cblxuXHRcdC8vIEVuc3VyZSB0aGF0IGludmFsaWQgc2VsZWN0b3JzIHRocm93IGV4Y2VwdGlvbnMgYXQgYXR0YWNoIHRpbWVcblx0XHQvLyBFdmFsdWF0ZSBhZ2FpbnN0IGRvY3VtZW50RWxlbWVudCBpbiBjYXNlIGVsZW0gaXMgYSBub24tZWxlbWVudCBub2RlIChlLmcuLCBkb2N1bWVudClcblx0XHRpZiAoIHNlbGVjdG9yICkge1xuXHRcdFx0alF1ZXJ5LmZpbmQubWF0Y2hlc1NlbGVjdG9yKCBkb2N1bWVudEVsZW1lbnQsIHNlbGVjdG9yICk7XG5cdFx0fVxuXG5cdFx0Ly8gTWFrZSBzdXJlIHRoYXQgdGhlIGhhbmRsZXIgaGFzIGEgdW5pcXVlIElELCB1c2VkIHRvIGZpbmQvcmVtb3ZlIGl0IGxhdGVyXG5cdFx0aWYgKCAhaGFuZGxlci5ndWlkICkge1xuXHRcdFx0aGFuZGxlci5ndWlkID0galF1ZXJ5Lmd1aWQrKztcblx0XHR9XG5cblx0XHQvLyBJbml0IHRoZSBlbGVtZW50J3MgZXZlbnQgc3RydWN0dXJlIGFuZCBtYWluIGhhbmRsZXIsIGlmIHRoaXMgaXMgdGhlIGZpcnN0XG5cdFx0aWYgKCAhKCBldmVudHMgPSBlbGVtRGF0YS5ldmVudHMgKSApIHtcblx0XHRcdGV2ZW50cyA9IGVsZW1EYXRhLmV2ZW50cyA9IE9iamVjdC5jcmVhdGUoIG51bGwgKTtcblx0XHR9XG5cdFx0aWYgKCAhKCBldmVudEhhbmRsZSA9IGVsZW1EYXRhLmhhbmRsZSApICkge1xuXHRcdFx0ZXZlbnRIYW5kbGUgPSBlbGVtRGF0YS5oYW5kbGUgPSBmdW5jdGlvbiggZSApIHtcblxuXHRcdFx0XHQvLyBEaXNjYXJkIHRoZSBzZWNvbmQgZXZlbnQgb2YgYSBqUXVlcnkuZXZlbnQudHJpZ2dlcigpIGFuZFxuXHRcdFx0XHQvLyB3aGVuIGFuIGV2ZW50IGlzIGNhbGxlZCBhZnRlciBhIHBhZ2UgaGFzIHVubG9hZGVkXG5cdFx0XHRcdHJldHVybiB0eXBlb2YgalF1ZXJ5ICE9PSBcInVuZGVmaW5lZFwiICYmIGpRdWVyeS5ldmVudC50cmlnZ2VyZWQgIT09IGUudHlwZSA/XG5cdFx0XHRcdFx0alF1ZXJ5LmV2ZW50LmRpc3BhdGNoLmFwcGx5KCBlbGVtLCBhcmd1bWVudHMgKSA6IHVuZGVmaW5lZDtcblx0XHRcdH07XG5cdFx0fVxuXG5cdFx0Ly8gSGFuZGxlIG11bHRpcGxlIGV2ZW50cyBzZXBhcmF0ZWQgYnkgYSBzcGFjZVxuXHRcdHR5cGVzID0gKCB0eXBlcyB8fCBcIlwiICkubWF0Y2goIHJub3RodG1sd2hpdGUgKSB8fCBbIFwiXCIgXTtcblx0XHR0ID0gdHlwZXMubGVuZ3RoO1xuXHRcdHdoaWxlICggdC0tICkge1xuXHRcdFx0dG1wID0gcnR5cGVuYW1lc3BhY2UuZXhlYyggdHlwZXNbIHQgXSApIHx8IFtdO1xuXHRcdFx0dHlwZSA9IG9yaWdUeXBlID0gdG1wWyAxIF07XG5cdFx0XHRuYW1lc3BhY2VzID0gKCB0bXBbIDIgXSB8fCBcIlwiICkuc3BsaXQoIFwiLlwiICkuc29ydCgpO1xuXG5cdFx0XHQvLyBUaGVyZSAqbXVzdCogYmUgYSB0eXBlLCBubyBhdHRhY2hpbmcgbmFtZXNwYWNlLW9ubHkgaGFuZGxlcnNcblx0XHRcdGlmICggIXR5cGUgKSB7XG5cdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBJZiBldmVudCBjaGFuZ2VzIGl0cyB0eXBlLCB1c2UgdGhlIHNwZWNpYWwgZXZlbnQgaGFuZGxlcnMgZm9yIHRoZSBjaGFuZ2VkIHR5cGVcblx0XHRcdHNwZWNpYWwgPSBqUXVlcnkuZXZlbnQuc3BlY2lhbFsgdHlwZSBdIHx8IHt9O1xuXG5cdFx0XHQvLyBJZiBzZWxlY3RvciBkZWZpbmVkLCBkZXRlcm1pbmUgc3BlY2lhbCBldmVudCBhcGkgdHlwZSwgb3RoZXJ3aXNlIGdpdmVuIHR5cGVcblx0XHRcdHR5cGUgPSAoIHNlbGVjdG9yID8gc3BlY2lhbC5kZWxlZ2F0ZVR5cGUgOiBzcGVjaWFsLmJpbmRUeXBlICkgfHwgdHlwZTtcblxuXHRcdFx0Ly8gVXBkYXRlIHNwZWNpYWwgYmFzZWQgb24gbmV3bHkgcmVzZXQgdHlwZVxuXHRcdFx0c3BlY2lhbCA9IGpRdWVyeS5ldmVudC5zcGVjaWFsWyB0eXBlIF0gfHwge307XG5cblx0XHRcdC8vIGhhbmRsZU9iaiBpcyBwYXNzZWQgdG8gYWxsIGV2ZW50IGhhbmRsZXJzXG5cdFx0XHRoYW5kbGVPYmogPSBqUXVlcnkuZXh0ZW5kKCB7XG5cdFx0XHRcdHR5cGU6IHR5cGUsXG5cdFx0XHRcdG9yaWdUeXBlOiBvcmlnVHlwZSxcblx0XHRcdFx0ZGF0YTogZGF0YSxcblx0XHRcdFx0aGFuZGxlcjogaGFuZGxlcixcblx0XHRcdFx0Z3VpZDogaGFuZGxlci5ndWlkLFxuXHRcdFx0XHRzZWxlY3Rvcjogc2VsZWN0b3IsXG5cdFx0XHRcdG5lZWRzQ29udGV4dDogc2VsZWN0b3IgJiYgalF1ZXJ5LmV4cHIubWF0Y2gubmVlZHNDb250ZXh0LnRlc3QoIHNlbGVjdG9yICksXG5cdFx0XHRcdG5hbWVzcGFjZTogbmFtZXNwYWNlcy5qb2luKCBcIi5cIiApXG5cdFx0XHR9LCBoYW5kbGVPYmpJbiApO1xuXG5cdFx0XHQvLyBJbml0IHRoZSBldmVudCBoYW5kbGVyIHF1ZXVlIGlmIHdlJ3JlIHRoZSBmaXJzdFxuXHRcdFx0aWYgKCAhKCBoYW5kbGVycyA9IGV2ZW50c1sgdHlwZSBdICkgKSB7XG5cdFx0XHRcdGhhbmRsZXJzID0gZXZlbnRzWyB0eXBlIF0gPSBbXTtcblx0XHRcdFx0aGFuZGxlcnMuZGVsZWdhdGVDb3VudCA9IDA7XG5cblx0XHRcdFx0Ly8gT25seSB1c2UgYWRkRXZlbnRMaXN0ZW5lciBpZiB0aGUgc3BlY2lhbCBldmVudHMgaGFuZGxlciByZXR1cm5zIGZhbHNlXG5cdFx0XHRcdGlmICggIXNwZWNpYWwuc2V0dXAgfHxcblx0XHRcdFx0XHRzcGVjaWFsLnNldHVwLmNhbGwoIGVsZW0sIGRhdGEsIG5hbWVzcGFjZXMsIGV2ZW50SGFuZGxlICkgPT09IGZhbHNlICkge1xuXG5cdFx0XHRcdFx0aWYgKCBlbGVtLmFkZEV2ZW50TGlzdGVuZXIgKSB7XG5cdFx0XHRcdFx0XHRlbGVtLmFkZEV2ZW50TGlzdGVuZXIoIHR5cGUsIGV2ZW50SGFuZGxlICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdGlmICggc3BlY2lhbC5hZGQgKSB7XG5cdFx0XHRcdHNwZWNpYWwuYWRkLmNhbGwoIGVsZW0sIGhhbmRsZU9iaiApO1xuXG5cdFx0XHRcdGlmICggIWhhbmRsZU9iai5oYW5kbGVyLmd1aWQgKSB7XG5cdFx0XHRcdFx0aGFuZGxlT2JqLmhhbmRsZXIuZ3VpZCA9IGhhbmRsZXIuZ3VpZDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBBZGQgdG8gdGhlIGVsZW1lbnQncyBoYW5kbGVyIGxpc3QsIGRlbGVnYXRlcyBpbiBmcm9udFxuXHRcdFx0aWYgKCBzZWxlY3RvciApIHtcblx0XHRcdFx0aGFuZGxlcnMuc3BsaWNlKCBoYW5kbGVycy5kZWxlZ2F0ZUNvdW50KyssIDAsIGhhbmRsZU9iaiApO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0aGFuZGxlcnMucHVzaCggaGFuZGxlT2JqICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIEtlZXAgdHJhY2sgb2Ygd2hpY2ggZXZlbnRzIGhhdmUgZXZlciBiZWVuIHVzZWQsIGZvciBldmVudCBvcHRpbWl6YXRpb25cblx0XHRcdGpRdWVyeS5ldmVudC5nbG9iYWxbIHR5cGUgXSA9IHRydWU7XG5cdFx0fVxuXG5cdH0sXG5cblx0Ly8gRGV0YWNoIGFuIGV2ZW50IG9yIHNldCBvZiBldmVudHMgZnJvbSBhbiBlbGVtZW50XG5cdHJlbW92ZTogZnVuY3Rpb24oIGVsZW0sIHR5cGVzLCBoYW5kbGVyLCBzZWxlY3RvciwgbWFwcGVkVHlwZXMgKSB7XG5cblx0XHR2YXIgaiwgb3JpZ0NvdW50LCB0bXAsXG5cdFx0XHRldmVudHMsIHQsIGhhbmRsZU9iaixcblx0XHRcdHNwZWNpYWwsIGhhbmRsZXJzLCB0eXBlLCBuYW1lc3BhY2VzLCBvcmlnVHlwZSxcblx0XHRcdGVsZW1EYXRhID0gZGF0YVByaXYuaGFzRGF0YSggZWxlbSApICYmIGRhdGFQcml2LmdldCggZWxlbSApO1xuXG5cdFx0aWYgKCAhZWxlbURhdGEgfHwgISggZXZlbnRzID0gZWxlbURhdGEuZXZlbnRzICkgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gT25jZSBmb3IgZWFjaCB0eXBlLm5hbWVzcGFjZSBpbiB0eXBlczsgdHlwZSBtYXkgYmUgb21pdHRlZFxuXHRcdHR5cGVzID0gKCB0eXBlcyB8fCBcIlwiICkubWF0Y2goIHJub3RodG1sd2hpdGUgKSB8fCBbIFwiXCIgXTtcblx0XHR0ID0gdHlwZXMubGVuZ3RoO1xuXHRcdHdoaWxlICggdC0tICkge1xuXHRcdFx0dG1wID0gcnR5cGVuYW1lc3BhY2UuZXhlYyggdHlwZXNbIHQgXSApIHx8IFtdO1xuXHRcdFx0dHlwZSA9IG9yaWdUeXBlID0gdG1wWyAxIF07XG5cdFx0XHRuYW1lc3BhY2VzID0gKCB0bXBbIDIgXSB8fCBcIlwiICkuc3BsaXQoIFwiLlwiICkuc29ydCgpO1xuXG5cdFx0XHQvLyBVbmJpbmQgYWxsIGV2ZW50cyAob24gdGhpcyBuYW1lc3BhY2UsIGlmIHByb3ZpZGVkKSBmb3IgdGhlIGVsZW1lbnRcblx0XHRcdGlmICggIXR5cGUgKSB7XG5cdFx0XHRcdGZvciAoIHR5cGUgaW4gZXZlbnRzICkge1xuXHRcdFx0XHRcdGpRdWVyeS5ldmVudC5yZW1vdmUoIGVsZW0sIHR5cGUgKyB0eXBlc1sgdCBdLCBoYW5kbGVyLCBzZWxlY3RvciwgdHJ1ZSApO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0fVxuXG5cdFx0XHRzcGVjaWFsID0galF1ZXJ5LmV2ZW50LnNwZWNpYWxbIHR5cGUgXSB8fCB7fTtcblx0XHRcdHR5cGUgPSAoIHNlbGVjdG9yID8gc3BlY2lhbC5kZWxlZ2F0ZVR5cGUgOiBzcGVjaWFsLmJpbmRUeXBlICkgfHwgdHlwZTtcblx0XHRcdGhhbmRsZXJzID0gZXZlbnRzWyB0eXBlIF0gfHwgW107XG5cdFx0XHR0bXAgPSB0bXBbIDIgXSAmJlxuXHRcdFx0XHRuZXcgUmVnRXhwKCBcIihefFxcXFwuKVwiICsgbmFtZXNwYWNlcy5qb2luKCBcIlxcXFwuKD86LipcXFxcLnwpXCIgKSArIFwiKFxcXFwufCQpXCIgKTtcblxuXHRcdFx0Ly8gUmVtb3ZlIG1hdGNoaW5nIGV2ZW50c1xuXHRcdFx0b3JpZ0NvdW50ID0gaiA9IGhhbmRsZXJzLmxlbmd0aDtcblx0XHRcdHdoaWxlICggai0tICkge1xuXHRcdFx0XHRoYW5kbGVPYmogPSBoYW5kbGVyc1sgaiBdO1xuXG5cdFx0XHRcdGlmICggKCBtYXBwZWRUeXBlcyB8fCBvcmlnVHlwZSA9PT0gaGFuZGxlT2JqLm9yaWdUeXBlICkgJiZcblx0XHRcdFx0XHQoICFoYW5kbGVyIHx8IGhhbmRsZXIuZ3VpZCA9PT0gaGFuZGxlT2JqLmd1aWQgKSAmJlxuXHRcdFx0XHRcdCggIXRtcCB8fCB0bXAudGVzdCggaGFuZGxlT2JqLm5hbWVzcGFjZSApICkgJiZcblx0XHRcdFx0XHQoICFzZWxlY3RvciB8fCBzZWxlY3RvciA9PT0gaGFuZGxlT2JqLnNlbGVjdG9yIHx8XG5cdFx0XHRcdFx0XHRzZWxlY3RvciA9PT0gXCIqKlwiICYmIGhhbmRsZU9iai5zZWxlY3RvciApICkge1xuXHRcdFx0XHRcdGhhbmRsZXJzLnNwbGljZSggaiwgMSApO1xuXG5cdFx0XHRcdFx0aWYgKCBoYW5kbGVPYmouc2VsZWN0b3IgKSB7XG5cdFx0XHRcdFx0XHRoYW5kbGVycy5kZWxlZ2F0ZUNvdW50LS07XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGlmICggc3BlY2lhbC5yZW1vdmUgKSB7XG5cdFx0XHRcdFx0XHRzcGVjaWFsLnJlbW92ZS5jYWxsKCBlbGVtLCBoYW5kbGVPYmogKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gUmVtb3ZlIGdlbmVyaWMgZXZlbnQgaGFuZGxlciBpZiB3ZSByZW1vdmVkIHNvbWV0aGluZyBhbmQgbm8gbW9yZSBoYW5kbGVycyBleGlzdFxuXHRcdFx0Ly8gKGF2b2lkcyBwb3RlbnRpYWwgZm9yIGVuZGxlc3MgcmVjdXJzaW9uIGR1cmluZyByZW1vdmFsIG9mIHNwZWNpYWwgZXZlbnQgaGFuZGxlcnMpXG5cdFx0XHRpZiAoIG9yaWdDb3VudCAmJiAhaGFuZGxlcnMubGVuZ3RoICkge1xuXHRcdFx0XHRpZiAoICFzcGVjaWFsLnRlYXJkb3duIHx8XG5cdFx0XHRcdFx0c3BlY2lhbC50ZWFyZG93bi5jYWxsKCBlbGVtLCBuYW1lc3BhY2VzLCBlbGVtRGF0YS5oYW5kbGUgKSA9PT0gZmFsc2UgKSB7XG5cblx0XHRcdFx0XHRqUXVlcnkucmVtb3ZlRXZlbnQoIGVsZW0sIHR5cGUsIGVsZW1EYXRhLmhhbmRsZSApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0ZGVsZXRlIGV2ZW50c1sgdHlwZSBdO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIFJlbW92ZSBkYXRhIGFuZCB0aGUgZXhwYW5kbyBpZiBpdCdzIG5vIGxvbmdlciB1c2VkXG5cdFx0aWYgKCBqUXVlcnkuaXNFbXB0eU9iamVjdCggZXZlbnRzICkgKSB7XG5cdFx0XHRkYXRhUHJpdi5yZW1vdmUoIGVsZW0sIFwiaGFuZGxlIGV2ZW50c1wiICk7XG5cdFx0fVxuXHR9LFxuXG5cdGRpc3BhdGNoOiBmdW5jdGlvbiggbmF0aXZlRXZlbnQgKSB7XG5cblx0XHR2YXIgaSwgaiwgcmV0LCBtYXRjaGVkLCBoYW5kbGVPYmosIGhhbmRsZXJRdWV1ZSxcblx0XHRcdGFyZ3MgPSBuZXcgQXJyYXkoIGFyZ3VtZW50cy5sZW5ndGggKSxcblxuXHRcdFx0Ly8gTWFrZSBhIHdyaXRhYmxlIGpRdWVyeS5FdmVudCBmcm9tIHRoZSBuYXRpdmUgZXZlbnQgb2JqZWN0XG5cdFx0XHRldmVudCA9IGpRdWVyeS5ldmVudC5maXgoIG5hdGl2ZUV2ZW50ICksXG5cblx0XHRcdGhhbmRsZXJzID0gKFxuXHRcdFx0XHRkYXRhUHJpdi5nZXQoIHRoaXMsIFwiZXZlbnRzXCIgKSB8fCBPYmplY3QuY3JlYXRlKCBudWxsIClcblx0XHRcdClbIGV2ZW50LnR5cGUgXSB8fCBbXSxcblx0XHRcdHNwZWNpYWwgPSBqUXVlcnkuZXZlbnQuc3BlY2lhbFsgZXZlbnQudHlwZSBdIHx8IHt9O1xuXG5cdFx0Ly8gVXNlIHRoZSBmaXgtZWQgalF1ZXJ5LkV2ZW50IHJhdGhlciB0aGFuIHRoZSAocmVhZC1vbmx5KSBuYXRpdmUgZXZlbnRcblx0XHRhcmdzWyAwIF0gPSBldmVudDtcblxuXHRcdGZvciAoIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrICkge1xuXHRcdFx0YXJnc1sgaSBdID0gYXJndW1lbnRzWyBpIF07XG5cdFx0fVxuXG5cdFx0ZXZlbnQuZGVsZWdhdGVUYXJnZXQgPSB0aGlzO1xuXG5cdFx0Ly8gQ2FsbCB0aGUgcHJlRGlzcGF0Y2ggaG9vayBmb3IgdGhlIG1hcHBlZCB0eXBlLCBhbmQgbGV0IGl0IGJhaWwgaWYgZGVzaXJlZFxuXHRcdGlmICggc3BlY2lhbC5wcmVEaXNwYXRjaCAmJiBzcGVjaWFsLnByZURpc3BhdGNoLmNhbGwoIHRoaXMsIGV2ZW50ICkgPT09IGZhbHNlICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vIERldGVybWluZSBoYW5kbGVyc1xuXHRcdGhhbmRsZXJRdWV1ZSA9IGpRdWVyeS5ldmVudC5oYW5kbGVycy5jYWxsKCB0aGlzLCBldmVudCwgaGFuZGxlcnMgKTtcblxuXHRcdC8vIFJ1biBkZWxlZ2F0ZXMgZmlyc3Q7IHRoZXkgbWF5IHdhbnQgdG8gc3RvcCBwcm9wYWdhdGlvbiBiZW5lYXRoIHVzXG5cdFx0aSA9IDA7XG5cdFx0d2hpbGUgKCAoIG1hdGNoZWQgPSBoYW5kbGVyUXVldWVbIGkrKyBdICkgJiYgIWV2ZW50LmlzUHJvcGFnYXRpb25TdG9wcGVkKCkgKSB7XG5cdFx0XHRldmVudC5jdXJyZW50VGFyZ2V0ID0gbWF0Y2hlZC5lbGVtO1xuXG5cdFx0XHRqID0gMDtcblx0XHRcdHdoaWxlICggKCBoYW5kbGVPYmogPSBtYXRjaGVkLmhhbmRsZXJzWyBqKysgXSApICYmXG5cdFx0XHRcdCFldmVudC5pc0ltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZCgpICkge1xuXG5cdFx0XHRcdC8vIElmIHRoZSBldmVudCBpcyBuYW1lc3BhY2VkLCB0aGVuIGVhY2ggaGFuZGxlciBpcyBvbmx5IGludm9rZWQgaWYgaXQgaXNcblx0XHRcdFx0Ly8gc3BlY2lhbGx5IHVuaXZlcnNhbCBvciBpdHMgbmFtZXNwYWNlcyBhcmUgYSBzdXBlcnNldCBvZiB0aGUgZXZlbnQncy5cblx0XHRcdFx0aWYgKCAhZXZlbnQucm5hbWVzcGFjZSB8fCBoYW5kbGVPYmoubmFtZXNwYWNlID09PSBmYWxzZSB8fFxuXHRcdFx0XHRcdGV2ZW50LnJuYW1lc3BhY2UudGVzdCggaGFuZGxlT2JqLm5hbWVzcGFjZSApICkge1xuXG5cdFx0XHRcdFx0ZXZlbnQuaGFuZGxlT2JqID0gaGFuZGxlT2JqO1xuXHRcdFx0XHRcdGV2ZW50LmRhdGEgPSBoYW5kbGVPYmouZGF0YTtcblxuXHRcdFx0XHRcdHJldCA9ICggKCBqUXVlcnkuZXZlbnQuc3BlY2lhbFsgaGFuZGxlT2JqLm9yaWdUeXBlIF0gfHwge30gKS5oYW5kbGUgfHxcblx0XHRcdFx0XHRcdGhhbmRsZU9iai5oYW5kbGVyICkuYXBwbHkoIG1hdGNoZWQuZWxlbSwgYXJncyApO1xuXG5cdFx0XHRcdFx0aWYgKCByZXQgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0XHRcdGlmICggKCBldmVudC5yZXN1bHQgPSByZXQgKSA9PT0gZmFsc2UgKSB7XG5cdFx0XHRcdFx0XHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cdFx0XHRcdFx0XHRcdGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIENhbGwgdGhlIHBvc3REaXNwYXRjaCBob29rIGZvciB0aGUgbWFwcGVkIHR5cGVcblx0XHRpZiAoIHNwZWNpYWwucG9zdERpc3BhdGNoICkge1xuXHRcdFx0c3BlY2lhbC5wb3N0RGlzcGF0Y2guY2FsbCggdGhpcywgZXZlbnQgKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gZXZlbnQucmVzdWx0O1xuXHR9LFxuXG5cdGhhbmRsZXJzOiBmdW5jdGlvbiggZXZlbnQsIGhhbmRsZXJzICkge1xuXHRcdHZhciBpLCBoYW5kbGVPYmosIHNlbCwgbWF0Y2hlZEhhbmRsZXJzLCBtYXRjaGVkU2VsZWN0b3JzLFxuXHRcdFx0aGFuZGxlclF1ZXVlID0gW10sXG5cdFx0XHRkZWxlZ2F0ZUNvdW50ID0gaGFuZGxlcnMuZGVsZWdhdGVDb3VudCxcblx0XHRcdGN1ciA9IGV2ZW50LnRhcmdldDtcblxuXHRcdC8vIEZpbmQgZGVsZWdhdGUgaGFuZGxlcnNcblx0XHRpZiAoIGRlbGVnYXRlQ291bnQgJiZcblxuXHRcdFx0Ly8gU3VwcG9ydDogSUUgPD05XG5cdFx0XHQvLyBCbGFjay1ob2xlIFNWRyA8dXNlPiBpbnN0YW5jZSB0cmVlcyAodHJhYy0xMzE4MClcblx0XHRcdGN1ci5ub2RlVHlwZSAmJlxuXG5cdFx0XHQvLyBTdXBwb3J0OiBGaXJlZm94IDw9NDJcblx0XHRcdC8vIFN1cHByZXNzIHNwZWMtdmlvbGF0aW5nIGNsaWNrcyBpbmRpY2F0aW5nIGEgbm9uLXByaW1hcnkgcG9pbnRlciBidXR0b24gKHRyYWMtMzg2MSlcblx0XHRcdC8vIGh0dHBzOi8vd3d3LnczLm9yZy9UUi9ET00tTGV2ZWwtMy1FdmVudHMvI2V2ZW50LXR5cGUtY2xpY2tcblx0XHRcdC8vIFN1cHBvcnQ6IElFIDExIG9ubHlcblx0XHRcdC8vIC4uLmJ1dCBub3QgYXJyb3cga2V5IFwiY2xpY2tzXCIgb2YgcmFkaW8gaW5wdXRzLCB3aGljaCBjYW4gaGF2ZSBgYnV0dG9uYCAtMSAoZ2gtMjM0Mylcblx0XHRcdCEoIGV2ZW50LnR5cGUgPT09IFwiY2xpY2tcIiAmJiBldmVudC5idXR0b24gPj0gMSApICkge1xuXG5cdFx0XHRmb3IgKCA7IGN1ciAhPT0gdGhpczsgY3VyID0gY3VyLnBhcmVudE5vZGUgfHwgdGhpcyApIHtcblxuXHRcdFx0XHQvLyBEb24ndCBjaGVjayBub24tZWxlbWVudHMgKCMxMzIwOClcblx0XHRcdFx0Ly8gRG9uJ3QgcHJvY2VzcyBjbGlja3Mgb24gZGlzYWJsZWQgZWxlbWVudHMgKCM2OTExLCAjODE2NSwgIzExMzgyLCAjMTE3NjQpXG5cdFx0XHRcdGlmICggY3VyLm5vZGVUeXBlID09PSAxICYmICEoIGV2ZW50LnR5cGUgPT09IFwiY2xpY2tcIiAmJiBjdXIuZGlzYWJsZWQgPT09IHRydWUgKSApIHtcblx0XHRcdFx0XHRtYXRjaGVkSGFuZGxlcnMgPSBbXTtcblx0XHRcdFx0XHRtYXRjaGVkU2VsZWN0b3JzID0ge307XG5cdFx0XHRcdFx0Zm9yICggaSA9IDA7IGkgPCBkZWxlZ2F0ZUNvdW50OyBpKysgKSB7XG5cdFx0XHRcdFx0XHRoYW5kbGVPYmogPSBoYW5kbGVyc1sgaSBdO1xuXG5cdFx0XHRcdFx0XHQvLyBEb24ndCBjb25mbGljdCB3aXRoIE9iamVjdC5wcm90b3R5cGUgcHJvcGVydGllcyAoIzEzMjAzKVxuXHRcdFx0XHRcdFx0c2VsID0gaGFuZGxlT2JqLnNlbGVjdG9yICsgXCIgXCI7XG5cblx0XHRcdFx0XHRcdGlmICggbWF0Y2hlZFNlbGVjdG9yc1sgc2VsIF0gPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0XHRcdFx0bWF0Y2hlZFNlbGVjdG9yc1sgc2VsIF0gPSBoYW5kbGVPYmoubmVlZHNDb250ZXh0ID9cblx0XHRcdFx0XHRcdFx0XHRqUXVlcnkoIHNlbCwgdGhpcyApLmluZGV4KCBjdXIgKSA+IC0xIDpcblx0XHRcdFx0XHRcdFx0XHRqUXVlcnkuZmluZCggc2VsLCB0aGlzLCBudWxsLCBbIGN1ciBdICkubGVuZ3RoO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0aWYgKCBtYXRjaGVkU2VsZWN0b3JzWyBzZWwgXSApIHtcblx0XHRcdFx0XHRcdFx0bWF0Y2hlZEhhbmRsZXJzLnB1c2goIGhhbmRsZU9iaiApO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZiAoIG1hdGNoZWRIYW5kbGVycy5sZW5ndGggKSB7XG5cdFx0XHRcdFx0XHRoYW5kbGVyUXVldWUucHVzaCggeyBlbGVtOiBjdXIsIGhhbmRsZXJzOiBtYXRjaGVkSGFuZGxlcnMgfSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIEFkZCB0aGUgcmVtYWluaW5nIChkaXJlY3RseS1ib3VuZCkgaGFuZGxlcnNcblx0XHRjdXIgPSB0aGlzO1xuXHRcdGlmICggZGVsZWdhdGVDb3VudCA8IGhhbmRsZXJzLmxlbmd0aCApIHtcblx0XHRcdGhhbmRsZXJRdWV1ZS5wdXNoKCB7IGVsZW06IGN1ciwgaGFuZGxlcnM6IGhhbmRsZXJzLnNsaWNlKCBkZWxlZ2F0ZUNvdW50ICkgfSApO1xuXHRcdH1cblxuXHRcdHJldHVybiBoYW5kbGVyUXVldWU7XG5cdH0sXG5cblx0YWRkUHJvcDogZnVuY3Rpb24oIG5hbWUsIGhvb2sgKSB7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KCBqUXVlcnkuRXZlbnQucHJvdG90eXBlLCBuYW1lLCB7XG5cdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuXHRcdFx0Y29uZmlndXJhYmxlOiB0cnVlLFxuXG5cdFx0XHRnZXQ6IGlzRnVuY3Rpb24oIGhvb2sgKSA/XG5cdFx0XHRcdGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdGlmICggdGhpcy5vcmlnaW5hbEV2ZW50ICkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIGhvb2soIHRoaXMub3JpZ2luYWxFdmVudCApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSA6XG5cdFx0XHRcdGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdGlmICggdGhpcy5vcmlnaW5hbEV2ZW50ICkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIHRoaXMub3JpZ2luYWxFdmVudFsgbmFtZSBdO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSxcblxuXHRcdFx0c2V0OiBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eSggdGhpcywgbmFtZSwge1xuXHRcdFx0XHRcdGVudW1lcmFibGU6IHRydWUsXG5cdFx0XHRcdFx0Y29uZmlndXJhYmxlOiB0cnVlLFxuXHRcdFx0XHRcdHdyaXRhYmxlOiB0cnVlLFxuXHRcdFx0XHRcdHZhbHVlOiB2YWx1ZVxuXHRcdFx0XHR9ICk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9LFxuXG5cdGZpeDogZnVuY3Rpb24oIG9yaWdpbmFsRXZlbnQgKSB7XG5cdFx0cmV0dXJuIG9yaWdpbmFsRXZlbnRbIGpRdWVyeS5leHBhbmRvIF0gP1xuXHRcdFx0b3JpZ2luYWxFdmVudCA6XG5cdFx0XHRuZXcgalF1ZXJ5LkV2ZW50KCBvcmlnaW5hbEV2ZW50ICk7XG5cdH0sXG5cblx0c3BlY2lhbDoge1xuXHRcdGxvYWQ6IHtcblxuXHRcdFx0Ly8gUHJldmVudCB0cmlnZ2VyZWQgaW1hZ2UubG9hZCBldmVudHMgZnJvbSBidWJibGluZyB0byB3aW5kb3cubG9hZFxuXHRcdFx0bm9CdWJibGU6IHRydWVcblx0XHR9LFxuXHRcdGNsaWNrOiB7XG5cblx0XHRcdC8vIFV0aWxpemUgbmF0aXZlIGV2ZW50IHRvIGVuc3VyZSBjb3JyZWN0IHN0YXRlIGZvciBjaGVja2FibGUgaW5wdXRzXG5cdFx0XHRzZXR1cDogZnVuY3Rpb24oIGRhdGEgKSB7XG5cblx0XHRcdFx0Ly8gRm9yIG11dHVhbCBjb21wcmVzc2liaWxpdHkgd2l0aCBfZGVmYXVsdCwgcmVwbGFjZSBgdGhpc2AgYWNjZXNzIHdpdGggYSBsb2NhbCB2YXIuXG5cdFx0XHRcdC8vIGB8fCBkYXRhYCBpcyBkZWFkIGNvZGUgbWVhbnQgb25seSB0byBwcmVzZXJ2ZSB0aGUgdmFyaWFibGUgdGhyb3VnaCBtaW5pZmljYXRpb24uXG5cdFx0XHRcdHZhciBlbCA9IHRoaXMgfHwgZGF0YTtcblxuXHRcdFx0XHQvLyBDbGFpbSB0aGUgZmlyc3QgaGFuZGxlclxuXHRcdFx0XHRpZiAoIHJjaGVja2FibGVUeXBlLnRlc3QoIGVsLnR5cGUgKSAmJlxuXHRcdFx0XHRcdGVsLmNsaWNrICYmIG5vZGVOYW1lKCBlbCwgXCJpbnB1dFwiICkgKSB7XG5cblx0XHRcdFx0XHQvLyBkYXRhUHJpdi5zZXQoIGVsLCBcImNsaWNrXCIsIC4uLiApXG5cdFx0XHRcdFx0bGV2ZXJhZ2VOYXRpdmUoIGVsLCBcImNsaWNrXCIsIHJldHVyblRydWUgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFJldHVybiBmYWxzZSB0byBhbGxvdyBub3JtYWwgcHJvY2Vzc2luZyBpbiB0aGUgY2FsbGVyXG5cdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdH0sXG5cdFx0XHR0cmlnZ2VyOiBmdW5jdGlvbiggZGF0YSApIHtcblxuXHRcdFx0XHQvLyBGb3IgbXV0dWFsIGNvbXByZXNzaWJpbGl0eSB3aXRoIF9kZWZhdWx0LCByZXBsYWNlIGB0aGlzYCBhY2Nlc3Mgd2l0aCBhIGxvY2FsIHZhci5cblx0XHRcdFx0Ly8gYHx8IGRhdGFgIGlzIGRlYWQgY29kZSBtZWFudCBvbmx5IHRvIHByZXNlcnZlIHRoZSB2YXJpYWJsZSB0aHJvdWdoIG1pbmlmaWNhdGlvbi5cblx0XHRcdFx0dmFyIGVsID0gdGhpcyB8fCBkYXRhO1xuXG5cdFx0XHRcdC8vIEZvcmNlIHNldHVwIGJlZm9yZSB0cmlnZ2VyaW5nIGEgY2xpY2tcblx0XHRcdFx0aWYgKCByY2hlY2thYmxlVHlwZS50ZXN0KCBlbC50eXBlICkgJiZcblx0XHRcdFx0XHRlbC5jbGljayAmJiBub2RlTmFtZSggZWwsIFwiaW5wdXRcIiApICkge1xuXG5cdFx0XHRcdFx0bGV2ZXJhZ2VOYXRpdmUoIGVsLCBcImNsaWNrXCIgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFJldHVybiBub24tZmFsc2UgdG8gYWxsb3cgbm9ybWFsIGV2ZW50LXBhdGggcHJvcGFnYXRpb25cblx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHR9LFxuXG5cdFx0XHQvLyBGb3IgY3Jvc3MtYnJvd3NlciBjb25zaXN0ZW5jeSwgc3VwcHJlc3MgbmF0aXZlIC5jbGljaygpIG9uIGxpbmtzXG5cdFx0XHQvLyBBbHNvIHByZXZlbnQgaXQgaWYgd2UncmUgY3VycmVudGx5IGluc2lkZSBhIGxldmVyYWdlZCBuYXRpdmUtZXZlbnQgc3RhY2tcblx0XHRcdF9kZWZhdWx0OiBmdW5jdGlvbiggZXZlbnQgKSB7XG5cdFx0XHRcdHZhciB0YXJnZXQgPSBldmVudC50YXJnZXQ7XG5cdFx0XHRcdHJldHVybiByY2hlY2thYmxlVHlwZS50ZXN0KCB0YXJnZXQudHlwZSApICYmXG5cdFx0XHRcdFx0dGFyZ2V0LmNsaWNrICYmIG5vZGVOYW1lKCB0YXJnZXQsIFwiaW5wdXRcIiApICYmXG5cdFx0XHRcdFx0ZGF0YVByaXYuZ2V0KCB0YXJnZXQsIFwiY2xpY2tcIiApIHx8XG5cdFx0XHRcdFx0bm9kZU5hbWUoIHRhcmdldCwgXCJhXCIgKTtcblx0XHRcdH1cblx0XHR9LFxuXG5cdFx0YmVmb3JldW5sb2FkOiB7XG5cdFx0XHRwb3N0RGlzcGF0Y2g6IGZ1bmN0aW9uKCBldmVudCApIHtcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBGaXJlZm94IDIwK1xuXHRcdFx0XHQvLyBGaXJlZm94IGRvZXNuJ3QgYWxlcnQgaWYgdGhlIHJldHVyblZhbHVlIGZpZWxkIGlzIG5vdCBzZXQuXG5cdFx0XHRcdGlmICggZXZlbnQucmVzdWx0ICE9PSB1bmRlZmluZWQgJiYgZXZlbnQub3JpZ2luYWxFdmVudCApIHtcblx0XHRcdFx0XHRldmVudC5vcmlnaW5hbEV2ZW50LnJldHVyblZhbHVlID0gZXZlbnQucmVzdWx0O1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59O1xuXG4vLyBFbnN1cmUgdGhlIHByZXNlbmNlIG9mIGFuIGV2ZW50IGxpc3RlbmVyIHRoYXQgaGFuZGxlcyBtYW51YWxseS10cmlnZ2VyZWRcbi8vIHN5bnRoZXRpYyBldmVudHMgYnkgaW50ZXJydXB0aW5nIHByb2dyZXNzIHVudGlsIHJlaW52b2tlZCBpbiByZXNwb25zZSB0b1xuLy8gKm5hdGl2ZSogZXZlbnRzIHRoYXQgaXQgZmlyZXMgZGlyZWN0bHksIGVuc3VyaW5nIHRoYXQgc3RhdGUgY2hhbmdlcyBoYXZlXG4vLyBhbHJlYWR5IG9jY3VycmVkIGJlZm9yZSBvdGhlciBsaXN0ZW5lcnMgYXJlIGludm9rZWQuXG5mdW5jdGlvbiBsZXZlcmFnZU5hdGl2ZSggZWwsIHR5cGUsIGV4cGVjdFN5bmMgKSB7XG5cblx0Ly8gTWlzc2luZyBleHBlY3RTeW5jIGluZGljYXRlcyBhIHRyaWdnZXIgY2FsbCwgd2hpY2ggbXVzdCBmb3JjZSBzZXR1cCB0aHJvdWdoIGpRdWVyeS5ldmVudC5hZGRcblx0aWYgKCAhZXhwZWN0U3luYyApIHtcblx0XHRpZiAoIGRhdGFQcml2LmdldCggZWwsIHR5cGUgKSA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0alF1ZXJ5LmV2ZW50LmFkZCggZWwsIHR5cGUsIHJldHVyblRydWUgKTtcblx0XHR9XG5cdFx0cmV0dXJuO1xuXHR9XG5cblx0Ly8gUmVnaXN0ZXIgdGhlIGNvbnRyb2xsZXIgYXMgYSBzcGVjaWFsIHVuaXZlcnNhbCBoYW5kbGVyIGZvciBhbGwgZXZlbnQgbmFtZXNwYWNlc1xuXHRkYXRhUHJpdi5zZXQoIGVsLCB0eXBlLCBmYWxzZSApO1xuXHRqUXVlcnkuZXZlbnQuYWRkKCBlbCwgdHlwZSwge1xuXHRcdG5hbWVzcGFjZTogZmFsc2UsXG5cdFx0aGFuZGxlcjogZnVuY3Rpb24oIGV2ZW50ICkge1xuXHRcdFx0dmFyIG5vdEFzeW5jLCByZXN1bHQsXG5cdFx0XHRcdHNhdmVkID0gZGF0YVByaXYuZ2V0KCB0aGlzLCB0eXBlICk7XG5cblx0XHRcdGlmICggKCBldmVudC5pc1RyaWdnZXIgJiAxICkgJiYgdGhpc1sgdHlwZSBdICkge1xuXG5cdFx0XHRcdC8vIEludGVycnVwdCBwcm9jZXNzaW5nIG9mIHRoZSBvdXRlciBzeW50aGV0aWMgLnRyaWdnZXIoKWVkIGV2ZW50XG5cdFx0XHRcdC8vIFNhdmVkIGRhdGEgc2hvdWxkIGJlIGZhbHNlIGluIHN1Y2ggY2FzZXMsIGJ1dCBtaWdodCBiZSBhIGxlZnRvdmVyIGNhcHR1cmUgb2JqZWN0XG5cdFx0XHRcdC8vIGZyb20gYW4gYXN5bmMgbmF0aXZlIGhhbmRsZXIgKGdoLTQzNTApXG5cdFx0XHRcdGlmICggIXNhdmVkLmxlbmd0aCApIHtcblxuXHRcdFx0XHRcdC8vIFN0b3JlIGFyZ3VtZW50cyBmb3IgdXNlIHdoZW4gaGFuZGxpbmcgdGhlIGlubmVyIG5hdGl2ZSBldmVudFxuXHRcdFx0XHRcdC8vIFRoZXJlIHdpbGwgYWx3YXlzIGJlIGF0IGxlYXN0IG9uZSBhcmd1bWVudCAoYW4gZXZlbnQgb2JqZWN0KSwgc28gdGhpcyBhcnJheVxuXHRcdFx0XHRcdC8vIHdpbGwgbm90IGJlIGNvbmZ1c2VkIHdpdGggYSBsZWZ0b3ZlciBjYXB0dXJlIG9iamVjdC5cblx0XHRcdFx0XHRzYXZlZCA9IHNsaWNlLmNhbGwoIGFyZ3VtZW50cyApO1xuXHRcdFx0XHRcdGRhdGFQcml2LnNldCggdGhpcywgdHlwZSwgc2F2ZWQgKTtcblxuXHRcdFx0XHRcdC8vIFRyaWdnZXIgdGhlIG5hdGl2ZSBldmVudCBhbmQgY2FwdHVyZSBpdHMgcmVzdWx0XG5cdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPD05IC0gMTErXG5cdFx0XHRcdFx0Ly8gZm9jdXMoKSBhbmQgYmx1cigpIGFyZSBhc3luY2hyb25vdXNcblx0XHRcdFx0XHRub3RBc3luYyA9IGV4cGVjdFN5bmMoIHRoaXMsIHR5cGUgKTtcblx0XHRcdFx0XHR0aGlzWyB0eXBlIF0oKTtcblx0XHRcdFx0XHRyZXN1bHQgPSBkYXRhUHJpdi5nZXQoIHRoaXMsIHR5cGUgKTtcblx0XHRcdFx0XHRpZiAoIHNhdmVkICE9PSByZXN1bHQgfHwgbm90QXN5bmMgKSB7XG5cdFx0XHRcdFx0XHRkYXRhUHJpdi5zZXQoIHRoaXMsIHR5cGUsIGZhbHNlICk7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdHJlc3VsdCA9IHt9O1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZiAoIHNhdmVkICE9PSByZXN1bHQgKSB7XG5cblx0XHRcdFx0XHRcdC8vIENhbmNlbCB0aGUgb3V0ZXIgc3ludGhldGljIGV2ZW50XG5cdFx0XHRcdFx0XHRldmVudC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKTtcblx0XHRcdFx0XHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cblx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IENocm9tZSA4Nitcblx0XHRcdFx0XHRcdC8vIEluIENocm9tZSwgaWYgYW4gZWxlbWVudCBoYXZpbmcgYSBmb2N1c291dCBoYW5kbGVyIGlzIGJsdXJyZWQgYnlcblx0XHRcdFx0XHRcdC8vIGNsaWNraW5nIG91dHNpZGUgb2YgaXQsIGl0IGludm9rZXMgdGhlIGhhbmRsZXIgc3luY2hyb25vdXNseS4gSWZcblx0XHRcdFx0XHRcdC8vIHRoYXQgaGFuZGxlciBjYWxscyBgLnJlbW92ZSgpYCBvbiB0aGUgZWxlbWVudCwgdGhlIGRhdGEgaXMgY2xlYXJlZCxcblx0XHRcdFx0XHRcdC8vIGxlYXZpbmcgYHJlc3VsdGAgdW5kZWZpbmVkLiBXZSBuZWVkIHRvIGd1YXJkIGFnYWluc3QgdGhpcy5cblx0XHRcdFx0XHRcdHJldHVybiByZXN1bHQgJiYgcmVzdWx0LnZhbHVlO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBJZiB0aGlzIGlzIGFuIGlubmVyIHN5bnRoZXRpYyBldmVudCBmb3IgYW4gZXZlbnQgd2l0aCBhIGJ1YmJsaW5nIHN1cnJvZ2F0ZVxuXHRcdFx0XHQvLyAoZm9jdXMgb3IgYmx1ciksIGFzc3VtZSB0aGF0IHRoZSBzdXJyb2dhdGUgYWxyZWFkeSBwcm9wYWdhdGVkIGZyb20gdHJpZ2dlcmluZyB0aGVcblx0XHRcdFx0Ly8gbmF0aXZlIGV2ZW50IGFuZCBwcmV2ZW50IHRoYXQgZnJvbSBoYXBwZW5pbmcgYWdhaW4gaGVyZS5cblx0XHRcdFx0Ly8gVGhpcyB0ZWNobmljYWxseSBnZXRzIHRoZSBvcmRlcmluZyB3cm9uZyB3LnIudC4gdG8gYC50cmlnZ2VyKClgIChpbiB3aGljaCB0aGVcblx0XHRcdFx0Ly8gYnViYmxpbmcgc3Vycm9nYXRlIHByb3BhZ2F0ZXMgKmFmdGVyKiB0aGUgbm9uLWJ1YmJsaW5nIGJhc2UpLCBidXQgdGhhdCBzZWVtc1xuXHRcdFx0XHQvLyBsZXNzIGJhZCB0aGFuIGR1cGxpY2F0aW9uLlxuXHRcdFx0XHR9IGVsc2UgaWYgKCAoIGpRdWVyeS5ldmVudC5zcGVjaWFsWyB0eXBlIF0gfHwge30gKS5kZWxlZ2F0ZVR5cGUgKSB7XG5cdFx0XHRcdFx0ZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG5cdFx0XHRcdH1cblxuXHRcdFx0Ly8gSWYgdGhpcyBpcyBhIG5hdGl2ZSBldmVudCB0cmlnZ2VyZWQgYWJvdmUsIGV2ZXJ5dGhpbmcgaXMgbm93IGluIG9yZGVyXG5cdFx0XHQvLyBGaXJlIGFuIGlubmVyIHN5bnRoZXRpYyBldmVudCB3aXRoIHRoZSBvcmlnaW5hbCBhcmd1bWVudHNcblx0XHRcdH0gZWxzZSBpZiAoIHNhdmVkLmxlbmd0aCApIHtcblxuXHRcdFx0XHQvLyAuLi5hbmQgY2FwdHVyZSB0aGUgcmVzdWx0XG5cdFx0XHRcdGRhdGFQcml2LnNldCggdGhpcywgdHlwZSwge1xuXHRcdFx0XHRcdHZhbHVlOiBqUXVlcnkuZXZlbnQudHJpZ2dlcihcblxuXHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPD05IC0gMTErXG5cdFx0XHRcdFx0XHQvLyBFeHRlbmQgd2l0aCB0aGUgcHJvdG90eXBlIHRvIHJlc2V0IHRoZSBhYm92ZSBzdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKVxuXHRcdFx0XHRcdFx0alF1ZXJ5LmV4dGVuZCggc2F2ZWRbIDAgXSwgalF1ZXJ5LkV2ZW50LnByb3RvdHlwZSApLFxuXHRcdFx0XHRcdFx0c2F2ZWQuc2xpY2UoIDEgKSxcblx0XHRcdFx0XHRcdHRoaXNcblx0XHRcdFx0XHQpXG5cdFx0XHRcdH0gKTtcblxuXHRcdFx0XHQvLyBBYm9ydCBoYW5kbGluZyBvZiB0aGUgbmF0aXZlIGV2ZW50XG5cdFx0XHRcdGV2ZW50LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xuXHRcdFx0fVxuXHRcdH1cblx0fSApO1xufVxuXG5qUXVlcnkucmVtb3ZlRXZlbnQgPSBmdW5jdGlvbiggZWxlbSwgdHlwZSwgaGFuZGxlICkge1xuXG5cdC8vIFRoaXMgXCJpZlwiIGlzIG5lZWRlZCBmb3IgcGxhaW4gb2JqZWN0c1xuXHRpZiAoIGVsZW0ucmVtb3ZlRXZlbnRMaXN0ZW5lciApIHtcblx0XHRlbGVtLnJlbW92ZUV2ZW50TGlzdGVuZXIoIHR5cGUsIGhhbmRsZSApO1xuXHR9XG59O1xuXG5qUXVlcnkuRXZlbnQgPSBmdW5jdGlvbiggc3JjLCBwcm9wcyApIHtcblxuXHQvLyBBbGxvdyBpbnN0YW50aWF0aW9uIHdpdGhvdXQgdGhlICduZXcnIGtleXdvcmRcblx0aWYgKCAhKCB0aGlzIGluc3RhbmNlb2YgalF1ZXJ5LkV2ZW50ICkgKSB7XG5cdFx0cmV0dXJuIG5ldyBqUXVlcnkuRXZlbnQoIHNyYywgcHJvcHMgKTtcblx0fVxuXG5cdC8vIEV2ZW50IG9iamVjdFxuXHRpZiAoIHNyYyAmJiBzcmMudHlwZSApIHtcblx0XHR0aGlzLm9yaWdpbmFsRXZlbnQgPSBzcmM7XG5cdFx0dGhpcy50eXBlID0gc3JjLnR5cGU7XG5cblx0XHQvLyBFdmVudHMgYnViYmxpbmcgdXAgdGhlIGRvY3VtZW50IG1heSBoYXZlIGJlZW4gbWFya2VkIGFzIHByZXZlbnRlZFxuXHRcdC8vIGJ5IGEgaGFuZGxlciBsb3dlciBkb3duIHRoZSB0cmVlOyByZWZsZWN0IHRoZSBjb3JyZWN0IHZhbHVlLlxuXHRcdHRoaXMuaXNEZWZhdWx0UHJldmVudGVkID0gc3JjLmRlZmF1bHRQcmV2ZW50ZWQgfHxcblx0XHRcdFx0c3JjLmRlZmF1bHRQcmV2ZW50ZWQgPT09IHVuZGVmaW5lZCAmJlxuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD0yLjMgb25seVxuXHRcdFx0XHRzcmMucmV0dXJuVmFsdWUgPT09IGZhbHNlID9cblx0XHRcdHJldHVyblRydWUgOlxuXHRcdFx0cmV0dXJuRmFsc2U7XG5cblx0XHQvLyBDcmVhdGUgdGFyZ2V0IHByb3BlcnRpZXNcblx0XHQvLyBTdXBwb3J0OiBTYWZhcmkgPD02IC0gNyBvbmx5XG5cdFx0Ly8gVGFyZ2V0IHNob3VsZCBub3QgYmUgYSB0ZXh0IG5vZGUgKCM1MDQsICMxMzE0Mylcblx0XHR0aGlzLnRhcmdldCA9ICggc3JjLnRhcmdldCAmJiBzcmMudGFyZ2V0Lm5vZGVUeXBlID09PSAzICkgP1xuXHRcdFx0c3JjLnRhcmdldC5wYXJlbnROb2RlIDpcblx0XHRcdHNyYy50YXJnZXQ7XG5cblx0XHR0aGlzLmN1cnJlbnRUYXJnZXQgPSBzcmMuY3VycmVudFRhcmdldDtcblx0XHR0aGlzLnJlbGF0ZWRUYXJnZXQgPSBzcmMucmVsYXRlZFRhcmdldDtcblxuXHQvLyBFdmVudCB0eXBlXG5cdH0gZWxzZSB7XG5cdFx0dGhpcy50eXBlID0gc3JjO1xuXHR9XG5cblx0Ly8gUHV0IGV4cGxpY2l0bHkgcHJvdmlkZWQgcHJvcGVydGllcyBvbnRvIHRoZSBldmVudCBvYmplY3Rcblx0aWYgKCBwcm9wcyApIHtcblx0XHRqUXVlcnkuZXh0ZW5kKCB0aGlzLCBwcm9wcyApO1xuXHR9XG5cblx0Ly8gQ3JlYXRlIGEgdGltZXN0YW1wIGlmIGluY29taW5nIGV2ZW50IGRvZXNuJ3QgaGF2ZSBvbmVcblx0dGhpcy50aW1lU3RhbXAgPSBzcmMgJiYgc3JjLnRpbWVTdGFtcCB8fCBEYXRlLm5vdygpO1xuXG5cdC8vIE1hcmsgaXQgYXMgZml4ZWRcblx0dGhpc1sgalF1ZXJ5LmV4cGFuZG8gXSA9IHRydWU7XG59O1xuXG4vLyBqUXVlcnkuRXZlbnQgaXMgYmFzZWQgb24gRE9NMyBFdmVudHMgYXMgc3BlY2lmaWVkIGJ5IHRoZSBFQ01BU2NyaXB0IExhbmd1YWdlIEJpbmRpbmdcbi8vIGh0dHBzOi8vd3d3LnczLm9yZy9UUi8yMDAzL1dELURPTS1MZXZlbC0zLUV2ZW50cy0yMDAzMDMzMS9lY21hLXNjcmlwdC1iaW5kaW5nLmh0bWxcbmpRdWVyeS5FdmVudC5wcm90b3R5cGUgPSB7XG5cdGNvbnN0cnVjdG9yOiBqUXVlcnkuRXZlbnQsXG5cdGlzRGVmYXVsdFByZXZlbnRlZDogcmV0dXJuRmFsc2UsXG5cdGlzUHJvcGFnYXRpb25TdG9wcGVkOiByZXR1cm5GYWxzZSxcblx0aXNJbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQ6IHJldHVybkZhbHNlLFxuXHRpc1NpbXVsYXRlZDogZmFsc2UsXG5cblx0cHJldmVudERlZmF1bHQ6IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBlID0gdGhpcy5vcmlnaW5hbEV2ZW50O1xuXG5cdFx0dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQgPSByZXR1cm5UcnVlO1xuXG5cdFx0aWYgKCBlICYmICF0aGlzLmlzU2ltdWxhdGVkICkge1xuXHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdH1cblx0fSxcblx0c3RvcFByb3BhZ2F0aW9uOiBmdW5jdGlvbigpIHtcblx0XHR2YXIgZSA9IHRoaXMub3JpZ2luYWxFdmVudDtcblxuXHRcdHRoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQgPSByZXR1cm5UcnVlO1xuXG5cdFx0aWYgKCBlICYmICF0aGlzLmlzU2ltdWxhdGVkICkge1xuXHRcdFx0ZS5zdG9wUHJvcGFnYXRpb24oKTtcblx0XHR9XG5cdH0sXG5cdHN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbjogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIGUgPSB0aGlzLm9yaWdpbmFsRXZlbnQ7XG5cblx0XHR0aGlzLmlzSW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkID0gcmV0dXJuVHJ1ZTtcblxuXHRcdGlmICggZSAmJiAhdGhpcy5pc1NpbXVsYXRlZCApIHtcblx0XHRcdGUuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG5cdFx0fVxuXG5cdFx0dGhpcy5zdG9wUHJvcGFnYXRpb24oKTtcblx0fVxufTtcblxuLy8gSW5jbHVkZXMgYWxsIGNvbW1vbiBldmVudCBwcm9wcyBpbmNsdWRpbmcgS2V5RXZlbnQgYW5kIE1vdXNlRXZlbnQgc3BlY2lmaWMgcHJvcHNcbmpRdWVyeS5lYWNoKCB7XG5cdGFsdEtleTogdHJ1ZSxcblx0YnViYmxlczogdHJ1ZSxcblx0Y2FuY2VsYWJsZTogdHJ1ZSxcblx0Y2hhbmdlZFRvdWNoZXM6IHRydWUsXG5cdGN0cmxLZXk6IHRydWUsXG5cdGRldGFpbDogdHJ1ZSxcblx0ZXZlbnRQaGFzZTogdHJ1ZSxcblx0bWV0YUtleTogdHJ1ZSxcblx0cGFnZVg6IHRydWUsXG5cdHBhZ2VZOiB0cnVlLFxuXHRzaGlmdEtleTogdHJ1ZSxcblx0dmlldzogdHJ1ZSxcblx0XCJjaGFyXCI6IHRydWUsXG5cdGNvZGU6IHRydWUsXG5cdGNoYXJDb2RlOiB0cnVlLFxuXHRrZXk6IHRydWUsXG5cdGtleUNvZGU6IHRydWUsXG5cdGJ1dHRvbjogdHJ1ZSxcblx0YnV0dG9uczogdHJ1ZSxcblx0Y2xpZW50WDogdHJ1ZSxcblx0Y2xpZW50WTogdHJ1ZSxcblx0b2Zmc2V0WDogdHJ1ZSxcblx0b2Zmc2V0WTogdHJ1ZSxcblx0cG9pbnRlcklkOiB0cnVlLFxuXHRwb2ludGVyVHlwZTogdHJ1ZSxcblx0c2NyZWVuWDogdHJ1ZSxcblx0c2NyZWVuWTogdHJ1ZSxcblx0dGFyZ2V0VG91Y2hlczogdHJ1ZSxcblx0dG9FbGVtZW50OiB0cnVlLFxuXHR0b3VjaGVzOiB0cnVlLFxuXHR3aGljaDogdHJ1ZVxufSwgalF1ZXJ5LmV2ZW50LmFkZFByb3AgKTtcblxualF1ZXJ5LmVhY2goIHsgZm9jdXM6IFwiZm9jdXNpblwiLCBibHVyOiBcImZvY3Vzb3V0XCIgfSwgZnVuY3Rpb24oIHR5cGUsIGRlbGVnYXRlVHlwZSApIHtcblx0alF1ZXJ5LmV2ZW50LnNwZWNpYWxbIHR5cGUgXSA9IHtcblxuXHRcdC8vIFV0aWxpemUgbmF0aXZlIGV2ZW50IGlmIHBvc3NpYmxlIHNvIGJsdXIvZm9jdXMgc2VxdWVuY2UgaXMgY29ycmVjdFxuXHRcdHNldHVwOiBmdW5jdGlvbigpIHtcblxuXHRcdFx0Ly8gQ2xhaW0gdGhlIGZpcnN0IGhhbmRsZXJcblx0XHRcdC8vIGRhdGFQcml2LnNldCggdGhpcywgXCJmb2N1c1wiLCAuLi4gKVxuXHRcdFx0Ly8gZGF0YVByaXYuc2V0KCB0aGlzLCBcImJsdXJcIiwgLi4uIClcblx0XHRcdGxldmVyYWdlTmF0aXZlKCB0aGlzLCB0eXBlLCBleHBlY3RTeW5jICk7XG5cblx0XHRcdC8vIFJldHVybiBmYWxzZSB0byBhbGxvdyBub3JtYWwgcHJvY2Vzc2luZyBpbiB0aGUgY2FsbGVyXG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fSxcblx0XHR0cmlnZ2VyOiBmdW5jdGlvbigpIHtcblxuXHRcdFx0Ly8gRm9yY2Ugc2V0dXAgYmVmb3JlIHRyaWdnZXJcblx0XHRcdGxldmVyYWdlTmF0aXZlKCB0aGlzLCB0eXBlICk7XG5cblx0XHRcdC8vIFJldHVybiBub24tZmFsc2UgdG8gYWxsb3cgbm9ybWFsIGV2ZW50LXBhdGggcHJvcGFnYXRpb25cblx0XHRcdHJldHVybiB0cnVlO1xuXHRcdH0sXG5cblx0XHQvLyBTdXBwcmVzcyBuYXRpdmUgZm9jdXMgb3IgYmx1ciBhcyBpdCdzIGFscmVhZHkgYmVpbmcgZmlyZWRcblx0XHQvLyBpbiBsZXZlcmFnZU5hdGl2ZS5cblx0XHRfZGVmYXVsdDogZnVuY3Rpb24oKSB7XG5cdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHR9LFxuXG5cdFx0ZGVsZWdhdGVUeXBlOiBkZWxlZ2F0ZVR5cGVcblx0fTtcbn0gKTtcblxuLy8gQ3JlYXRlIG1vdXNlZW50ZXIvbGVhdmUgZXZlbnRzIHVzaW5nIG1vdXNlb3Zlci9vdXQgYW5kIGV2ZW50LXRpbWUgY2hlY2tzXG4vLyBzbyB0aGF0IGV2ZW50IGRlbGVnYXRpb24gd29ya3MgaW4galF1ZXJ5LlxuLy8gRG8gdGhlIHNhbWUgZm9yIHBvaW50ZXJlbnRlci9wb2ludGVybGVhdmUgYW5kIHBvaW50ZXJvdmVyL3BvaW50ZXJvdXRcbi8vXG4vLyBTdXBwb3J0OiBTYWZhcmkgNyBvbmx5XG4vLyBTYWZhcmkgc2VuZHMgbW91c2VlbnRlciB0b28gb2Z0ZW47IHNlZTpcbi8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTQ3MDI1OFxuLy8gZm9yIHRoZSBkZXNjcmlwdGlvbiBvZiB0aGUgYnVnIChpdCBleGlzdGVkIGluIG9sZGVyIENocm9tZSB2ZXJzaW9ucyBhcyB3ZWxsKS5cbmpRdWVyeS5lYWNoKCB7XG5cdG1vdXNlZW50ZXI6IFwibW91c2VvdmVyXCIsXG5cdG1vdXNlbGVhdmU6IFwibW91c2VvdXRcIixcblx0cG9pbnRlcmVudGVyOiBcInBvaW50ZXJvdmVyXCIsXG5cdHBvaW50ZXJsZWF2ZTogXCJwb2ludGVyb3V0XCJcbn0sIGZ1bmN0aW9uKCBvcmlnLCBmaXggKSB7XG5cdGpRdWVyeS5ldmVudC5zcGVjaWFsWyBvcmlnIF0gPSB7XG5cdFx0ZGVsZWdhdGVUeXBlOiBmaXgsXG5cdFx0YmluZFR5cGU6IGZpeCxcblxuXHRcdGhhbmRsZTogZnVuY3Rpb24oIGV2ZW50ICkge1xuXHRcdFx0dmFyIHJldCxcblx0XHRcdFx0dGFyZ2V0ID0gdGhpcyxcblx0XHRcdFx0cmVsYXRlZCA9IGV2ZW50LnJlbGF0ZWRUYXJnZXQsXG5cdFx0XHRcdGhhbmRsZU9iaiA9IGV2ZW50LmhhbmRsZU9iajtcblxuXHRcdFx0Ly8gRm9yIG1vdXNlZW50ZXIvbGVhdmUgY2FsbCB0aGUgaGFuZGxlciBpZiByZWxhdGVkIGlzIG91dHNpZGUgdGhlIHRhcmdldC5cblx0XHRcdC8vIE5COiBObyByZWxhdGVkVGFyZ2V0IGlmIHRoZSBtb3VzZSBsZWZ0L2VudGVyZWQgdGhlIGJyb3dzZXIgd2luZG93XG5cdFx0XHRpZiAoICFyZWxhdGVkIHx8ICggcmVsYXRlZCAhPT0gdGFyZ2V0ICYmICFqUXVlcnkuY29udGFpbnMoIHRhcmdldCwgcmVsYXRlZCApICkgKSB7XG5cdFx0XHRcdGV2ZW50LnR5cGUgPSBoYW5kbGVPYmoub3JpZ1R5cGU7XG5cdFx0XHRcdHJldCA9IGhhbmRsZU9iai5oYW5kbGVyLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTtcblx0XHRcdFx0ZXZlbnQudHlwZSA9IGZpeDtcblx0XHRcdH1cblx0XHRcdHJldHVybiByZXQ7XG5cdFx0fVxuXHR9O1xufSApO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cblx0b246IGZ1bmN0aW9uKCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuICkge1xuXHRcdHJldHVybiBvbiggdGhpcywgdHlwZXMsIHNlbGVjdG9yLCBkYXRhLCBmbiApO1xuXHR9LFxuXHRvbmU6IGZ1bmN0aW9uKCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuICkge1xuXHRcdHJldHVybiBvbiggdGhpcywgdHlwZXMsIHNlbGVjdG9yLCBkYXRhLCBmbiwgMSApO1xuXHR9LFxuXHRvZmY6IGZ1bmN0aW9uKCB0eXBlcywgc2VsZWN0b3IsIGZuICkge1xuXHRcdHZhciBoYW5kbGVPYmosIHR5cGU7XG5cdFx0aWYgKCB0eXBlcyAmJiB0eXBlcy5wcmV2ZW50RGVmYXVsdCAmJiB0eXBlcy5oYW5kbGVPYmogKSB7XG5cblx0XHRcdC8vICggZXZlbnQgKSAgZGlzcGF0Y2hlZCBqUXVlcnkuRXZlbnRcblx0XHRcdGhhbmRsZU9iaiA9IHR5cGVzLmhhbmRsZU9iajtcblx0XHRcdGpRdWVyeSggdHlwZXMuZGVsZWdhdGVUYXJnZXQgKS5vZmYoXG5cdFx0XHRcdGhhbmRsZU9iai5uYW1lc3BhY2UgP1xuXHRcdFx0XHRcdGhhbmRsZU9iai5vcmlnVHlwZSArIFwiLlwiICsgaGFuZGxlT2JqLm5hbWVzcGFjZSA6XG5cdFx0XHRcdFx0aGFuZGxlT2JqLm9yaWdUeXBlLFxuXHRcdFx0XHRoYW5kbGVPYmouc2VsZWN0b3IsXG5cdFx0XHRcdGhhbmRsZU9iai5oYW5kbGVyXG5cdFx0XHQpO1xuXHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0fVxuXHRcdGlmICggdHlwZW9mIHR5cGVzID09PSBcIm9iamVjdFwiICkge1xuXG5cdFx0XHQvLyAoIHR5cGVzLW9iamVjdCBbLCBzZWxlY3Rvcl0gKVxuXHRcdFx0Zm9yICggdHlwZSBpbiB0eXBlcyApIHtcblx0XHRcdFx0dGhpcy5vZmYoIHR5cGUsIHNlbGVjdG9yLCB0eXBlc1sgdHlwZSBdICk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gdGhpcztcblx0XHR9XG5cdFx0aWYgKCBzZWxlY3RvciA9PT0gZmFsc2UgfHwgdHlwZW9mIHNlbGVjdG9yID09PSBcImZ1bmN0aW9uXCIgKSB7XG5cblx0XHRcdC8vICggdHlwZXMgWywgZm5dIClcblx0XHRcdGZuID0gc2VsZWN0b3I7XG5cdFx0XHRzZWxlY3RvciA9IHVuZGVmaW5lZDtcblx0XHR9XG5cdFx0aWYgKCBmbiA9PT0gZmFsc2UgKSB7XG5cdFx0XHRmbiA9IHJldHVybkZhbHNlO1xuXHRcdH1cblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdGpRdWVyeS5ldmVudC5yZW1vdmUoIHRoaXMsIHR5cGVzLCBmbiwgc2VsZWN0b3IgKTtcblx0XHR9ICk7XG5cdH1cbn0gKTtcblxuXG52YXJcblxuXHQvLyBTdXBwb3J0OiBJRSA8PTEwIC0gMTEsIEVkZ2UgMTIgLSAxMyBvbmx5XG5cdC8vIEluIElFL0VkZ2UgdXNpbmcgcmVnZXggZ3JvdXBzIGhlcmUgY2F1c2VzIHNldmVyZSBzbG93ZG93bnMuXG5cdC8vIFNlZSBodHRwczovL2Nvbm5lY3QubWljcm9zb2Z0LmNvbS9JRS9mZWVkYmFjay9kZXRhaWxzLzE3MzY1MTIvXG5cdHJub0lubmVyaHRtbCA9IC88c2NyaXB0fDxzdHlsZXw8bGluay9pLFxuXG5cdC8vIGNoZWNrZWQ9XCJjaGVja2VkXCIgb3IgY2hlY2tlZFxuXHRyY2hlY2tlZCA9IC9jaGVja2VkXFxzKig/OltePV18PVxccyouY2hlY2tlZC4pL2ksXG5cdHJjbGVhblNjcmlwdCA9IC9eXFxzKjwhKD86XFxbQ0RBVEFcXFt8LS0pfCg/OlxcXVxcXXwtLSk+XFxzKiQvZztcblxuLy8gUHJlZmVyIGEgdGJvZHkgb3ZlciBpdHMgcGFyZW50IHRhYmxlIGZvciBjb250YWluaW5nIG5ldyByb3dzXG5mdW5jdGlvbiBtYW5pcHVsYXRpb25UYXJnZXQoIGVsZW0sIGNvbnRlbnQgKSB7XG5cdGlmICggbm9kZU5hbWUoIGVsZW0sIFwidGFibGVcIiApICYmXG5cdFx0bm9kZU5hbWUoIGNvbnRlbnQubm9kZVR5cGUgIT09IDExID8gY29udGVudCA6IGNvbnRlbnQuZmlyc3RDaGlsZCwgXCJ0clwiICkgKSB7XG5cblx0XHRyZXR1cm4galF1ZXJ5KCBlbGVtICkuY2hpbGRyZW4oIFwidGJvZHlcIiApWyAwIF0gfHwgZWxlbTtcblx0fVxuXG5cdHJldHVybiBlbGVtO1xufVxuXG4vLyBSZXBsYWNlL3Jlc3RvcmUgdGhlIHR5cGUgYXR0cmlidXRlIG9mIHNjcmlwdCBlbGVtZW50cyBmb3Igc2FmZSBET00gbWFuaXB1bGF0aW9uXG5mdW5jdGlvbiBkaXNhYmxlU2NyaXB0KCBlbGVtICkge1xuXHRlbGVtLnR5cGUgPSAoIGVsZW0uZ2V0QXR0cmlidXRlKCBcInR5cGVcIiApICE9PSBudWxsICkgKyBcIi9cIiArIGVsZW0udHlwZTtcblx0cmV0dXJuIGVsZW07XG59XG5mdW5jdGlvbiByZXN0b3JlU2NyaXB0KCBlbGVtICkge1xuXHRpZiAoICggZWxlbS50eXBlIHx8IFwiXCIgKS5zbGljZSggMCwgNSApID09PSBcInRydWUvXCIgKSB7XG5cdFx0ZWxlbS50eXBlID0gZWxlbS50eXBlLnNsaWNlKCA1ICk7XG5cdH0gZWxzZSB7XG5cdFx0ZWxlbS5yZW1vdmVBdHRyaWJ1dGUoIFwidHlwZVwiICk7XG5cdH1cblxuXHRyZXR1cm4gZWxlbTtcbn1cblxuZnVuY3Rpb24gY2xvbmVDb3B5RXZlbnQoIHNyYywgZGVzdCApIHtcblx0dmFyIGksIGwsIHR5cGUsIHBkYXRhT2xkLCB1ZGF0YU9sZCwgdWRhdGFDdXIsIGV2ZW50cztcblxuXHRpZiAoIGRlc3Qubm9kZVR5cGUgIT09IDEgKSB7XG5cdFx0cmV0dXJuO1xuXHR9XG5cblx0Ly8gMS4gQ29weSBwcml2YXRlIGRhdGE6IGV2ZW50cywgaGFuZGxlcnMsIGV0Yy5cblx0aWYgKCBkYXRhUHJpdi5oYXNEYXRhKCBzcmMgKSApIHtcblx0XHRwZGF0YU9sZCA9IGRhdGFQcml2LmdldCggc3JjICk7XG5cdFx0ZXZlbnRzID0gcGRhdGFPbGQuZXZlbnRzO1xuXG5cdFx0aWYgKCBldmVudHMgKSB7XG5cdFx0XHRkYXRhUHJpdi5yZW1vdmUoIGRlc3QsIFwiaGFuZGxlIGV2ZW50c1wiICk7XG5cblx0XHRcdGZvciAoIHR5cGUgaW4gZXZlbnRzICkge1xuXHRcdFx0XHRmb3IgKCBpID0gMCwgbCA9IGV2ZW50c1sgdHlwZSBdLmxlbmd0aDsgaSA8IGw7IGkrKyApIHtcblx0XHRcdFx0XHRqUXVlcnkuZXZlbnQuYWRkKCBkZXN0LCB0eXBlLCBldmVudHNbIHR5cGUgXVsgaSBdICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyAyLiBDb3B5IHVzZXIgZGF0YVxuXHRpZiAoIGRhdGFVc2VyLmhhc0RhdGEoIHNyYyApICkge1xuXHRcdHVkYXRhT2xkID0gZGF0YVVzZXIuYWNjZXNzKCBzcmMgKTtcblx0XHR1ZGF0YUN1ciA9IGpRdWVyeS5leHRlbmQoIHt9LCB1ZGF0YU9sZCApO1xuXG5cdFx0ZGF0YVVzZXIuc2V0KCBkZXN0LCB1ZGF0YUN1ciApO1xuXHR9XG59XG5cbi8vIEZpeCBJRSBidWdzLCBzZWUgc3VwcG9ydCB0ZXN0c1xuZnVuY3Rpb24gZml4SW5wdXQoIHNyYywgZGVzdCApIHtcblx0dmFyIG5vZGVOYW1lID0gZGVzdC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO1xuXG5cdC8vIEZhaWxzIHRvIHBlcnNpc3QgdGhlIGNoZWNrZWQgc3RhdGUgb2YgYSBjbG9uZWQgY2hlY2tib3ggb3IgcmFkaW8gYnV0dG9uLlxuXHRpZiAoIG5vZGVOYW1lID09PSBcImlucHV0XCIgJiYgcmNoZWNrYWJsZVR5cGUudGVzdCggc3JjLnR5cGUgKSApIHtcblx0XHRkZXN0LmNoZWNrZWQgPSBzcmMuY2hlY2tlZDtcblxuXHQvLyBGYWlscyB0byByZXR1cm4gdGhlIHNlbGVjdGVkIG9wdGlvbiB0byB0aGUgZGVmYXVsdCBzZWxlY3RlZCBzdGF0ZSB3aGVuIGNsb25pbmcgb3B0aW9uc1xuXHR9IGVsc2UgaWYgKCBub2RlTmFtZSA9PT0gXCJpbnB1dFwiIHx8IG5vZGVOYW1lID09PSBcInRleHRhcmVhXCIgKSB7XG5cdFx0ZGVzdC5kZWZhdWx0VmFsdWUgPSBzcmMuZGVmYXVsdFZhbHVlO1xuXHR9XG59XG5cbmZ1bmN0aW9uIGRvbU1hbmlwKCBjb2xsZWN0aW9uLCBhcmdzLCBjYWxsYmFjaywgaWdub3JlZCApIHtcblxuXHQvLyBGbGF0dGVuIGFueSBuZXN0ZWQgYXJyYXlzXG5cdGFyZ3MgPSBmbGF0KCBhcmdzICk7XG5cblx0dmFyIGZyYWdtZW50LCBmaXJzdCwgc2NyaXB0cywgaGFzU2NyaXB0cywgbm9kZSwgZG9jLFxuXHRcdGkgPSAwLFxuXHRcdGwgPSBjb2xsZWN0aW9uLmxlbmd0aCxcblx0XHRpTm9DbG9uZSA9IGwgLSAxLFxuXHRcdHZhbHVlID0gYXJnc1sgMCBdLFxuXHRcdHZhbHVlSXNGdW5jdGlvbiA9IGlzRnVuY3Rpb24oIHZhbHVlICk7XG5cblx0Ly8gV2UgY2FuJ3QgY2xvbmVOb2RlIGZyYWdtZW50cyB0aGF0IGNvbnRhaW4gY2hlY2tlZCwgaW4gV2ViS2l0XG5cdGlmICggdmFsdWVJc0Z1bmN0aW9uIHx8XG5cdFx0XHQoIGwgPiAxICYmIHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIiAmJlxuXHRcdFx0XHQhc3VwcG9ydC5jaGVja0Nsb25lICYmIHJjaGVja2VkLnRlc3QoIHZhbHVlICkgKSApIHtcblx0XHRyZXR1cm4gY29sbGVjdGlvbi5lYWNoKCBmdW5jdGlvbiggaW5kZXggKSB7XG5cdFx0XHR2YXIgc2VsZiA9IGNvbGxlY3Rpb24uZXEoIGluZGV4ICk7XG5cdFx0XHRpZiAoIHZhbHVlSXNGdW5jdGlvbiApIHtcblx0XHRcdFx0YXJnc1sgMCBdID0gdmFsdWUuY2FsbCggdGhpcywgaW5kZXgsIHNlbGYuaHRtbCgpICk7XG5cdFx0XHR9XG5cdFx0XHRkb21NYW5pcCggc2VsZiwgYXJncywgY2FsbGJhY2ssIGlnbm9yZWQgKTtcblx0XHR9ICk7XG5cdH1cblxuXHRpZiAoIGwgKSB7XG5cdFx0ZnJhZ21lbnQgPSBidWlsZEZyYWdtZW50KCBhcmdzLCBjb2xsZWN0aW9uWyAwIF0ub3duZXJEb2N1bWVudCwgZmFsc2UsIGNvbGxlY3Rpb24sIGlnbm9yZWQgKTtcblx0XHRmaXJzdCA9IGZyYWdtZW50LmZpcnN0Q2hpbGQ7XG5cblx0XHRpZiAoIGZyYWdtZW50LmNoaWxkTm9kZXMubGVuZ3RoID09PSAxICkge1xuXHRcdFx0ZnJhZ21lbnQgPSBmaXJzdDtcblx0XHR9XG5cblx0XHQvLyBSZXF1aXJlIGVpdGhlciBuZXcgY29udGVudCBvciBhbiBpbnRlcmVzdCBpbiBpZ25vcmVkIGVsZW1lbnRzIHRvIGludm9rZSB0aGUgY2FsbGJhY2tcblx0XHRpZiAoIGZpcnN0IHx8IGlnbm9yZWQgKSB7XG5cdFx0XHRzY3JpcHRzID0galF1ZXJ5Lm1hcCggZ2V0QWxsKCBmcmFnbWVudCwgXCJzY3JpcHRcIiApLCBkaXNhYmxlU2NyaXB0ICk7XG5cdFx0XHRoYXNTY3JpcHRzID0gc2NyaXB0cy5sZW5ndGg7XG5cblx0XHRcdC8vIFVzZSB0aGUgb3JpZ2luYWwgZnJhZ21lbnQgZm9yIHRoZSBsYXN0IGl0ZW1cblx0XHRcdC8vIGluc3RlYWQgb2YgdGhlIGZpcnN0IGJlY2F1c2UgaXQgY2FuIGVuZCB1cFxuXHRcdFx0Ly8gYmVpbmcgZW1wdGllZCBpbmNvcnJlY3RseSBpbiBjZXJ0YWluIHNpdHVhdGlvbnMgKCM4MDcwKS5cblx0XHRcdGZvciAoIDsgaSA8IGw7IGkrKyApIHtcblx0XHRcdFx0bm9kZSA9IGZyYWdtZW50O1xuXG5cdFx0XHRcdGlmICggaSAhPT0gaU5vQ2xvbmUgKSB7XG5cdFx0XHRcdFx0bm9kZSA9IGpRdWVyeS5jbG9uZSggbm9kZSwgdHJ1ZSwgdHJ1ZSApO1xuXG5cdFx0XHRcdFx0Ly8gS2VlcCByZWZlcmVuY2VzIHRvIGNsb25lZCBzY3JpcHRzIGZvciBsYXRlciByZXN0b3JhdGlvblxuXHRcdFx0XHRcdGlmICggaGFzU2NyaXB0cyApIHtcblxuXHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCA8PTQuMCBvbmx5LCBQaGFudG9tSlMgMSBvbmx5XG5cdFx0XHRcdFx0XHQvLyBwdXNoLmFwcGx5KF8sIGFycmF5bGlrZSkgdGhyb3dzIG9uIGFuY2llbnQgV2ViS2l0XG5cdFx0XHRcdFx0XHRqUXVlcnkubWVyZ2UoIHNjcmlwdHMsIGdldEFsbCggbm9kZSwgXCJzY3JpcHRcIiApICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0Y2FsbGJhY2suY2FsbCggY29sbGVjdGlvblsgaSBdLCBub2RlLCBpICk7XG5cdFx0XHR9XG5cblx0XHRcdGlmICggaGFzU2NyaXB0cyApIHtcblx0XHRcdFx0ZG9jID0gc2NyaXB0c1sgc2NyaXB0cy5sZW5ndGggLSAxIF0ub3duZXJEb2N1bWVudDtcblxuXHRcdFx0XHQvLyBSZWVuYWJsZSBzY3JpcHRzXG5cdFx0XHRcdGpRdWVyeS5tYXAoIHNjcmlwdHMsIHJlc3RvcmVTY3JpcHQgKTtcblxuXHRcdFx0XHQvLyBFdmFsdWF0ZSBleGVjdXRhYmxlIHNjcmlwdHMgb24gZmlyc3QgZG9jdW1lbnQgaW5zZXJ0aW9uXG5cdFx0XHRcdGZvciAoIGkgPSAwOyBpIDwgaGFzU2NyaXB0czsgaSsrICkge1xuXHRcdFx0XHRcdG5vZGUgPSBzY3JpcHRzWyBpIF07XG5cdFx0XHRcdFx0aWYgKCByc2NyaXB0VHlwZS50ZXN0KCBub2RlLnR5cGUgfHwgXCJcIiApICYmXG5cdFx0XHRcdFx0XHQhZGF0YVByaXYuYWNjZXNzKCBub2RlLCBcImdsb2JhbEV2YWxcIiApICYmXG5cdFx0XHRcdFx0XHRqUXVlcnkuY29udGFpbnMoIGRvYywgbm9kZSApICkge1xuXG5cdFx0XHRcdFx0XHRpZiAoIG5vZGUuc3JjICYmICggbm9kZS50eXBlIHx8IFwiXCIgKS50b0xvd2VyQ2FzZSgpICAhPT0gXCJtb2R1bGVcIiApIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBPcHRpb25hbCBBSkFYIGRlcGVuZGVuY3ksIGJ1dCB3b24ndCBydW4gc2NyaXB0cyBpZiBub3QgcHJlc2VudFxuXHRcdFx0XHRcdFx0XHRpZiAoIGpRdWVyeS5fZXZhbFVybCAmJiAhbm9kZS5ub01vZHVsZSApIHtcblx0XHRcdFx0XHRcdFx0XHRqUXVlcnkuX2V2YWxVcmwoIG5vZGUuc3JjLCB7XG5cdFx0XHRcdFx0XHRcdFx0XHRub25jZTogbm9kZS5ub25jZSB8fCBub2RlLmdldEF0dHJpYnV0ZSggXCJub25jZVwiIClcblx0XHRcdFx0XHRcdFx0XHR9LCBkb2MgKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0RE9NRXZhbCggbm9kZS50ZXh0Q29udGVudC5yZXBsYWNlKCByY2xlYW5TY3JpcHQsIFwiXCIgKSwgbm9kZSwgZG9jICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIGNvbGxlY3Rpb247XG59XG5cbmZ1bmN0aW9uIHJlbW92ZSggZWxlbSwgc2VsZWN0b3IsIGtlZXBEYXRhICkge1xuXHR2YXIgbm9kZSxcblx0XHRub2RlcyA9IHNlbGVjdG9yID8galF1ZXJ5LmZpbHRlciggc2VsZWN0b3IsIGVsZW0gKSA6IGVsZW0sXG5cdFx0aSA9IDA7XG5cblx0Zm9yICggOyAoIG5vZGUgPSBub2Rlc1sgaSBdICkgIT0gbnVsbDsgaSsrICkge1xuXHRcdGlmICggIWtlZXBEYXRhICYmIG5vZGUubm9kZVR5cGUgPT09IDEgKSB7XG5cdFx0XHRqUXVlcnkuY2xlYW5EYXRhKCBnZXRBbGwoIG5vZGUgKSApO1xuXHRcdH1cblxuXHRcdGlmICggbm9kZS5wYXJlbnROb2RlICkge1xuXHRcdFx0aWYgKCBrZWVwRGF0YSAmJiBpc0F0dGFjaGVkKCBub2RlICkgKSB7XG5cdFx0XHRcdHNldEdsb2JhbEV2YWwoIGdldEFsbCggbm9kZSwgXCJzY3JpcHRcIiApICk7XG5cdFx0XHR9XG5cdFx0XHRub2RlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoIG5vZGUgKTtcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gZWxlbTtcbn1cblxualF1ZXJ5LmV4dGVuZCgge1xuXHRodG1sUHJlZmlsdGVyOiBmdW5jdGlvbiggaHRtbCApIHtcblx0XHRyZXR1cm4gaHRtbDtcblx0fSxcblxuXHRjbG9uZTogZnVuY3Rpb24oIGVsZW0sIGRhdGFBbmRFdmVudHMsIGRlZXBEYXRhQW5kRXZlbnRzICkge1xuXHRcdHZhciBpLCBsLCBzcmNFbGVtZW50cywgZGVzdEVsZW1lbnRzLFxuXHRcdFx0Y2xvbmUgPSBlbGVtLmNsb25lTm9kZSggdHJ1ZSApLFxuXHRcdFx0aW5QYWdlID0gaXNBdHRhY2hlZCggZWxlbSApO1xuXG5cdFx0Ly8gRml4IElFIGNsb25pbmcgaXNzdWVzXG5cdFx0aWYgKCAhc3VwcG9ydC5ub0Nsb25lQ2hlY2tlZCAmJiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgfHwgZWxlbS5ub2RlVHlwZSA9PT0gMTEgKSAmJlxuXHRcdFx0XHQhalF1ZXJ5LmlzWE1MRG9jKCBlbGVtICkgKSB7XG5cblx0XHRcdC8vIFdlIGVzY2hldyBTaXp6bGUgaGVyZSBmb3IgcGVyZm9ybWFuY2UgcmVhc29uczogaHR0cHM6Ly9qc3BlcmYuY29tL2dldGFsbC12cy1zaXp6bGUvMlxuXHRcdFx0ZGVzdEVsZW1lbnRzID0gZ2V0QWxsKCBjbG9uZSApO1xuXHRcdFx0c3JjRWxlbWVudHMgPSBnZXRBbGwoIGVsZW0gKTtcblxuXHRcdFx0Zm9yICggaSA9IDAsIGwgPSBzcmNFbGVtZW50cy5sZW5ndGg7IGkgPCBsOyBpKysgKSB7XG5cdFx0XHRcdGZpeElucHV0KCBzcmNFbGVtZW50c1sgaSBdLCBkZXN0RWxlbWVudHNbIGkgXSApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIENvcHkgdGhlIGV2ZW50cyBmcm9tIHRoZSBvcmlnaW5hbCB0byB0aGUgY2xvbmVcblx0XHRpZiAoIGRhdGFBbmRFdmVudHMgKSB7XG5cdFx0XHRpZiAoIGRlZXBEYXRhQW5kRXZlbnRzICkge1xuXHRcdFx0XHRzcmNFbGVtZW50cyA9IHNyY0VsZW1lbnRzIHx8IGdldEFsbCggZWxlbSApO1xuXHRcdFx0XHRkZXN0RWxlbWVudHMgPSBkZXN0RWxlbWVudHMgfHwgZ2V0QWxsKCBjbG9uZSApO1xuXG5cdFx0XHRcdGZvciAoIGkgPSAwLCBsID0gc3JjRWxlbWVudHMubGVuZ3RoOyBpIDwgbDsgaSsrICkge1xuXHRcdFx0XHRcdGNsb25lQ29weUV2ZW50KCBzcmNFbGVtZW50c1sgaSBdLCBkZXN0RWxlbWVudHNbIGkgXSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRjbG9uZUNvcHlFdmVudCggZWxlbSwgY2xvbmUgKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBQcmVzZXJ2ZSBzY3JpcHQgZXZhbHVhdGlvbiBoaXN0b3J5XG5cdFx0ZGVzdEVsZW1lbnRzID0gZ2V0QWxsKCBjbG9uZSwgXCJzY3JpcHRcIiApO1xuXHRcdGlmICggZGVzdEVsZW1lbnRzLmxlbmd0aCA+IDAgKSB7XG5cdFx0XHRzZXRHbG9iYWxFdmFsKCBkZXN0RWxlbWVudHMsICFpblBhZ2UgJiYgZ2V0QWxsKCBlbGVtLCBcInNjcmlwdFwiICkgKTtcblx0XHR9XG5cblx0XHQvLyBSZXR1cm4gdGhlIGNsb25lZCBzZXRcblx0XHRyZXR1cm4gY2xvbmU7XG5cdH0sXG5cblx0Y2xlYW5EYXRhOiBmdW5jdGlvbiggZWxlbXMgKSB7XG5cdFx0dmFyIGRhdGEsIGVsZW0sIHR5cGUsXG5cdFx0XHRzcGVjaWFsID0galF1ZXJ5LmV2ZW50LnNwZWNpYWwsXG5cdFx0XHRpID0gMDtcblxuXHRcdGZvciAoIDsgKCBlbGVtID0gZWxlbXNbIGkgXSApICE9PSB1bmRlZmluZWQ7IGkrKyApIHtcblx0XHRcdGlmICggYWNjZXB0RGF0YSggZWxlbSApICkge1xuXHRcdFx0XHRpZiAoICggZGF0YSA9IGVsZW1bIGRhdGFQcml2LmV4cGFuZG8gXSApICkge1xuXHRcdFx0XHRcdGlmICggZGF0YS5ldmVudHMgKSB7XG5cdFx0XHRcdFx0XHRmb3IgKCB0eXBlIGluIGRhdGEuZXZlbnRzICkge1xuXHRcdFx0XHRcdFx0XHRpZiAoIHNwZWNpYWxbIHR5cGUgXSApIHtcblx0XHRcdFx0XHRcdFx0XHRqUXVlcnkuZXZlbnQucmVtb3ZlKCBlbGVtLCB0eXBlICk7XG5cblx0XHRcdFx0XHRcdFx0Ly8gVGhpcyBpcyBhIHNob3J0Y3V0IHRvIGF2b2lkIGpRdWVyeS5ldmVudC5yZW1vdmUncyBvdmVyaGVhZFxuXHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRcdGpRdWVyeS5yZW1vdmVFdmVudCggZWxlbSwgdHlwZSwgZGF0YS5oYW5kbGUgKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdC8vIFN1cHBvcnQ6IENocm9tZSA8PTM1IC0gNDUrXG5cdFx0XHRcdFx0Ly8gQXNzaWduIHVuZGVmaW5lZCBpbnN0ZWFkIG9mIHVzaW5nIGRlbGV0ZSwgc2VlIERhdGEjcmVtb3ZlXG5cdFx0XHRcdFx0ZWxlbVsgZGF0YVByaXYuZXhwYW5kbyBdID0gdW5kZWZpbmVkO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmICggZWxlbVsgZGF0YVVzZXIuZXhwYW5kbyBdICkge1xuXG5cdFx0XHRcdFx0Ly8gU3VwcG9ydDogQ2hyb21lIDw9MzUgLSA0NStcblx0XHRcdFx0XHQvLyBBc3NpZ24gdW5kZWZpbmVkIGluc3RlYWQgb2YgdXNpbmcgZGVsZXRlLCBzZWUgRGF0YSNyZW1vdmVcblx0XHRcdFx0XHRlbGVtWyBkYXRhVXNlci5leHBhbmRvIF0gPSB1bmRlZmluZWQ7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cbn0gKTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRkZXRhY2g6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHRyZXR1cm4gcmVtb3ZlKCB0aGlzLCBzZWxlY3RvciwgdHJ1ZSApO1xuXHR9LFxuXG5cdHJlbW92ZTogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHJldHVybiByZW1vdmUoIHRoaXMsIHNlbGVjdG9yICk7XG5cdH0sXG5cblx0dGV4dDogZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdHJldHVybiBhY2Nlc3MoIHRoaXMsIGZ1bmN0aW9uKCB2YWx1ZSApIHtcblx0XHRcdHJldHVybiB2YWx1ZSA9PT0gdW5kZWZpbmVkID9cblx0XHRcdFx0alF1ZXJ5LnRleHQoIHRoaXMgKSA6XG5cdFx0XHRcdHRoaXMuZW1wdHkoKS5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRpZiAoIHRoaXMubm9kZVR5cGUgPT09IDEgfHwgdGhpcy5ub2RlVHlwZSA9PT0gMTEgfHwgdGhpcy5ub2RlVHlwZSA9PT0gOSApIHtcblx0XHRcdFx0XHRcdHRoaXMudGV4dENvbnRlbnQgPSB2YWx1ZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0gKTtcblx0XHR9LCBudWxsLCB2YWx1ZSwgYXJndW1lbnRzLmxlbmd0aCApO1xuXHR9LFxuXG5cdGFwcGVuZDogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIGRvbU1hbmlwKCB0aGlzLCBhcmd1bWVudHMsIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0aWYgKCB0aGlzLm5vZGVUeXBlID09PSAxIHx8IHRoaXMubm9kZVR5cGUgPT09IDExIHx8IHRoaXMubm9kZVR5cGUgPT09IDkgKSB7XG5cdFx0XHRcdHZhciB0YXJnZXQgPSBtYW5pcHVsYXRpb25UYXJnZXQoIHRoaXMsIGVsZW0gKTtcblx0XHRcdFx0dGFyZ2V0LmFwcGVuZENoaWxkKCBlbGVtICk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9LFxuXG5cdHByZXBlbmQ6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBkb21NYW5pcCggdGhpcywgYXJndW1lbnRzLCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdGlmICggdGhpcy5ub2RlVHlwZSA9PT0gMSB8fCB0aGlzLm5vZGVUeXBlID09PSAxMSB8fCB0aGlzLm5vZGVUeXBlID09PSA5ICkge1xuXHRcdFx0XHR2YXIgdGFyZ2V0ID0gbWFuaXB1bGF0aW9uVGFyZ2V0KCB0aGlzLCBlbGVtICk7XG5cdFx0XHRcdHRhcmdldC5pbnNlcnRCZWZvcmUoIGVsZW0sIHRhcmdldC5maXJzdENoaWxkICk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9LFxuXG5cdGJlZm9yZTogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIGRvbU1hbmlwKCB0aGlzLCBhcmd1bWVudHMsIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0aWYgKCB0aGlzLnBhcmVudE5vZGUgKSB7XG5cdFx0XHRcdHRoaXMucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoIGVsZW0sIHRoaXMgKTtcblx0XHRcdH1cblx0XHR9ICk7XG5cdH0sXG5cblx0YWZ0ZXI6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBkb21NYW5pcCggdGhpcywgYXJndW1lbnRzLCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdGlmICggdGhpcy5wYXJlbnROb2RlICkge1xuXHRcdFx0XHR0aGlzLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKCBlbGVtLCB0aGlzLm5leHRTaWJsaW5nICk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9LFxuXG5cdGVtcHR5OiBmdW5jdGlvbigpIHtcblx0XHR2YXIgZWxlbSxcblx0XHRcdGkgPSAwO1xuXG5cdFx0Zm9yICggOyAoIGVsZW0gPSB0aGlzWyBpIF0gKSAhPSBudWxsOyBpKysgKSB7XG5cdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7XG5cblx0XHRcdFx0Ly8gUHJldmVudCBtZW1vcnkgbGVha3Ncblx0XHRcdFx0alF1ZXJ5LmNsZWFuRGF0YSggZ2V0QWxsKCBlbGVtLCBmYWxzZSApICk7XG5cblx0XHRcdFx0Ly8gUmVtb3ZlIGFueSByZW1haW5pbmcgbm9kZXNcblx0XHRcdFx0ZWxlbS50ZXh0Q29udGVudCA9IFwiXCI7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXM7XG5cdH0sXG5cblx0Y2xvbmU6IGZ1bmN0aW9uKCBkYXRhQW5kRXZlbnRzLCBkZWVwRGF0YUFuZEV2ZW50cyApIHtcblx0XHRkYXRhQW5kRXZlbnRzID0gZGF0YUFuZEV2ZW50cyA9PSBudWxsID8gZmFsc2UgOiBkYXRhQW5kRXZlbnRzO1xuXHRcdGRlZXBEYXRhQW5kRXZlbnRzID0gZGVlcERhdGFBbmRFdmVudHMgPT0gbnVsbCA/IGRhdGFBbmRFdmVudHMgOiBkZWVwRGF0YUFuZEV2ZW50cztcblxuXHRcdHJldHVybiB0aGlzLm1hcCggZnVuY3Rpb24oKSB7XG5cdFx0XHRyZXR1cm4galF1ZXJ5LmNsb25lKCB0aGlzLCBkYXRhQW5kRXZlbnRzLCBkZWVwRGF0YUFuZEV2ZW50cyApO1xuXHRcdH0gKTtcblx0fSxcblxuXHRodG1sOiBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0cmV0dXJuIGFjY2VzcyggdGhpcywgZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdFx0dmFyIGVsZW0gPSB0aGlzWyAwIF0gfHwge30sXG5cdFx0XHRcdGkgPSAwLFxuXHRcdFx0XHRsID0gdGhpcy5sZW5ndGg7XG5cblx0XHRcdGlmICggdmFsdWUgPT09IHVuZGVmaW5lZCAmJiBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXHRcdFx0XHRyZXR1cm4gZWxlbS5pbm5lckhUTUw7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFNlZSBpZiB3ZSBjYW4gdGFrZSBhIHNob3J0Y3V0IGFuZCBqdXN0IHVzZSBpbm5lckhUTUxcblx0XHRcdGlmICggdHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiICYmICFybm9Jbm5lcmh0bWwudGVzdCggdmFsdWUgKSAmJlxuXHRcdFx0XHQhd3JhcE1hcFsgKCBydGFnTmFtZS5leGVjKCB2YWx1ZSApIHx8IFsgXCJcIiwgXCJcIiBdIClbIDEgXS50b0xvd2VyQ2FzZSgpIF0gKSB7XG5cblx0XHRcdFx0dmFsdWUgPSBqUXVlcnkuaHRtbFByZWZpbHRlciggdmFsdWUgKTtcblxuXHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdGZvciAoIDsgaSA8IGw7IGkrKyApIHtcblx0XHRcdFx0XHRcdGVsZW0gPSB0aGlzWyBpIF0gfHwge307XG5cblx0XHRcdFx0XHRcdC8vIFJlbW92ZSBlbGVtZW50IG5vZGVzIGFuZCBwcmV2ZW50IG1lbW9yeSBsZWFrc1xuXHRcdFx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXHRcdFx0XHRcdFx0XHRqUXVlcnkuY2xlYW5EYXRhKCBnZXRBbGwoIGVsZW0sIGZhbHNlICkgKTtcblx0XHRcdFx0XHRcdFx0ZWxlbS5pbm5lckhUTUwgPSB2YWx1ZTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRlbGVtID0gMDtcblxuXHRcdFx0XHQvLyBJZiB1c2luZyBpbm5lckhUTUwgdGhyb3dzIGFuIGV4Y2VwdGlvbiwgdXNlIHRoZSBmYWxsYmFjayBtZXRob2Rcblx0XHRcdFx0fSBjYXRjaCAoIGUgKSB7fVxuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIGVsZW0gKSB7XG5cdFx0XHRcdHRoaXMuZW1wdHkoKS5hcHBlbmQoIHZhbHVlICk7XG5cdFx0XHR9XG5cdFx0fSwgbnVsbCwgdmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggKTtcblx0fSxcblxuXHRyZXBsYWNlV2l0aDogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIGlnbm9yZWQgPSBbXTtcblxuXHRcdC8vIE1ha2UgdGhlIGNoYW5nZXMsIHJlcGxhY2luZyBlYWNoIG5vbi1pZ25vcmVkIGNvbnRleHQgZWxlbWVudCB3aXRoIHRoZSBuZXcgY29udGVudFxuXHRcdHJldHVybiBkb21NYW5pcCggdGhpcywgYXJndW1lbnRzLCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHZhciBwYXJlbnQgPSB0aGlzLnBhcmVudE5vZGU7XG5cblx0XHRcdGlmICggalF1ZXJ5LmluQXJyYXkoIHRoaXMsIGlnbm9yZWQgKSA8IDAgKSB7XG5cdFx0XHRcdGpRdWVyeS5jbGVhbkRhdGEoIGdldEFsbCggdGhpcyApICk7XG5cdFx0XHRcdGlmICggcGFyZW50ICkge1xuXHRcdFx0XHRcdHBhcmVudC5yZXBsYWNlQ2hpbGQoIGVsZW0sIHRoaXMgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0Ly8gRm9yY2UgY2FsbGJhY2sgaW52b2NhdGlvblxuXHRcdH0sIGlnbm9yZWQgKTtcblx0fVxufSApO1xuXG5qUXVlcnkuZWFjaCgge1xuXHRhcHBlbmRUbzogXCJhcHBlbmRcIixcblx0cHJlcGVuZFRvOiBcInByZXBlbmRcIixcblx0aW5zZXJ0QmVmb3JlOiBcImJlZm9yZVwiLFxuXHRpbnNlcnRBZnRlcjogXCJhZnRlclwiLFxuXHRyZXBsYWNlQWxsOiBcInJlcGxhY2VXaXRoXCJcbn0sIGZ1bmN0aW9uKCBuYW1lLCBvcmlnaW5hbCApIHtcblx0alF1ZXJ5LmZuWyBuYW1lIF0gPSBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0dmFyIGVsZW1zLFxuXHRcdFx0cmV0ID0gW10sXG5cdFx0XHRpbnNlcnQgPSBqUXVlcnkoIHNlbGVjdG9yICksXG5cdFx0XHRsYXN0ID0gaW5zZXJ0Lmxlbmd0aCAtIDEsXG5cdFx0XHRpID0gMDtcblxuXHRcdGZvciAoIDsgaSA8PSBsYXN0OyBpKysgKSB7XG5cdFx0XHRlbGVtcyA9IGkgPT09IGxhc3QgPyB0aGlzIDogdGhpcy5jbG9uZSggdHJ1ZSApO1xuXHRcdFx0alF1ZXJ5KCBpbnNlcnRbIGkgXSApWyBvcmlnaW5hbCBdKCBlbGVtcyApO1xuXG5cdFx0XHQvLyBTdXBwb3J0OiBBbmRyb2lkIDw9NC4wIG9ubHksIFBoYW50b21KUyAxIG9ubHlcblx0XHRcdC8vIC5nZXQoKSBiZWNhdXNlIHB1c2guYXBwbHkoXywgYXJyYXlsaWtlKSB0aHJvd3Mgb24gYW5jaWVudCBXZWJLaXRcblx0XHRcdHB1c2guYXBwbHkoIHJldCwgZWxlbXMuZ2V0KCkgKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIHJldCApO1xuXHR9O1xufSApO1xudmFyIHJudW1ub25weCA9IG5ldyBSZWdFeHAoIFwiXihcIiArIHBudW0gKyBcIikoPyFweClbYS16JV0rJFwiLCBcImlcIiApO1xuXG52YXIgZ2V0U3R5bGVzID0gZnVuY3Rpb24oIGVsZW0gKSB7XG5cblx0XHQvLyBTdXBwb3J0OiBJRSA8PTExIG9ubHksIEZpcmVmb3ggPD0zMCAoIzE1MDk4LCAjMTQxNTApXG5cdFx0Ly8gSUUgdGhyb3dzIG9uIGVsZW1lbnRzIGNyZWF0ZWQgaW4gcG9wdXBzXG5cdFx0Ly8gRkYgbWVhbndoaWxlIHRocm93cyBvbiBmcmFtZSBlbGVtZW50cyB0aHJvdWdoIFwiZGVmYXVsdFZpZXcuZ2V0Q29tcHV0ZWRTdHlsZVwiXG5cdFx0dmFyIHZpZXcgPSBlbGVtLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXc7XG5cblx0XHRpZiAoICF2aWV3IHx8ICF2aWV3Lm9wZW5lciApIHtcblx0XHRcdHZpZXcgPSB3aW5kb3c7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHZpZXcuZ2V0Q29tcHV0ZWRTdHlsZSggZWxlbSApO1xuXHR9O1xuXG52YXIgc3dhcCA9IGZ1bmN0aW9uKCBlbGVtLCBvcHRpb25zLCBjYWxsYmFjayApIHtcblx0dmFyIHJldCwgbmFtZSxcblx0XHRvbGQgPSB7fTtcblxuXHQvLyBSZW1lbWJlciB0aGUgb2xkIHZhbHVlcywgYW5kIGluc2VydCB0aGUgbmV3IG9uZXNcblx0Zm9yICggbmFtZSBpbiBvcHRpb25zICkge1xuXHRcdG9sZFsgbmFtZSBdID0gZWxlbS5zdHlsZVsgbmFtZSBdO1xuXHRcdGVsZW0uc3R5bGVbIG5hbWUgXSA9IG9wdGlvbnNbIG5hbWUgXTtcblx0fVxuXG5cdHJldCA9IGNhbGxiYWNrLmNhbGwoIGVsZW0gKTtcblxuXHQvLyBSZXZlcnQgdGhlIG9sZCB2YWx1ZXNcblx0Zm9yICggbmFtZSBpbiBvcHRpb25zICkge1xuXHRcdGVsZW0uc3R5bGVbIG5hbWUgXSA9IG9sZFsgbmFtZSBdO1xuXHR9XG5cblx0cmV0dXJuIHJldDtcbn07XG5cblxudmFyIHJib3hTdHlsZSA9IG5ldyBSZWdFeHAoIGNzc0V4cGFuZC5qb2luKCBcInxcIiApLCBcImlcIiApO1xuXG5cblxuKCBmdW5jdGlvbigpIHtcblxuXHQvLyBFeGVjdXRpbmcgYm90aCBwaXhlbFBvc2l0aW9uICYgYm94U2l6aW5nUmVsaWFibGUgdGVzdHMgcmVxdWlyZSBvbmx5IG9uZSBsYXlvdXRcblx0Ly8gc28gdGhleSdyZSBleGVjdXRlZCBhdCB0aGUgc2FtZSB0aW1lIHRvIHNhdmUgdGhlIHNlY29uZCBjb21wdXRhdGlvbi5cblx0ZnVuY3Rpb24gY29tcHV0ZVN0eWxlVGVzdHMoKSB7XG5cblx0XHQvLyBUaGlzIGlzIGEgc2luZ2xldG9uLCB3ZSBuZWVkIHRvIGV4ZWN1dGUgaXQgb25seSBvbmNlXG5cdFx0aWYgKCAhZGl2ICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGNvbnRhaW5lci5zdHlsZS5jc3NUZXh0ID0gXCJwb3NpdGlvbjphYnNvbHV0ZTtsZWZ0Oi0xMTExMXB4O3dpZHRoOjYwcHg7XCIgK1xuXHRcdFx0XCJtYXJnaW4tdG9wOjFweDtwYWRkaW5nOjA7Ym9yZGVyOjBcIjtcblx0XHRkaXYuc3R5bGUuY3NzVGV4dCA9XG5cdFx0XHRcInBvc2l0aW9uOnJlbGF0aXZlO2Rpc3BsYXk6YmxvY2s7Ym94LXNpemluZzpib3JkZXItYm94O292ZXJmbG93OnNjcm9sbDtcIiArXG5cdFx0XHRcIm1hcmdpbjphdXRvO2JvcmRlcjoxcHg7cGFkZGluZzoxcHg7XCIgK1xuXHRcdFx0XCJ3aWR0aDo2MCU7dG9wOjElXCI7XG5cdFx0ZG9jdW1lbnRFbGVtZW50LmFwcGVuZENoaWxkKCBjb250YWluZXIgKS5hcHBlbmRDaGlsZCggZGl2ICk7XG5cblx0XHR2YXIgZGl2U3R5bGUgPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSggZGl2ICk7XG5cdFx0cGl4ZWxQb3NpdGlvblZhbCA9IGRpdlN0eWxlLnRvcCAhPT0gXCIxJVwiO1xuXG5cdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCA0LjAgLSA0LjMgb25seSwgRmlyZWZveCA8PTMgLSA0NFxuXHRcdHJlbGlhYmxlTWFyZ2luTGVmdFZhbCA9IHJvdW5kUGl4ZWxNZWFzdXJlcyggZGl2U3R5bGUubWFyZ2luTGVmdCApID09PSAxMjtcblxuXHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgNC4wIC0gNC4zIG9ubHksIFNhZmFyaSA8PTkuMSAtIDEwLjEsIGlPUyA8PTcuMCAtIDkuM1xuXHRcdC8vIFNvbWUgc3R5bGVzIGNvbWUgYmFjayB3aXRoIHBlcmNlbnRhZ2UgdmFsdWVzLCBldmVuIHRob3VnaCB0aGV5IHNob3VsZG4ndFxuXHRcdGRpdi5zdHlsZS5yaWdodCA9IFwiNjAlXCI7XG5cdFx0cGl4ZWxCb3hTdHlsZXNWYWwgPSByb3VuZFBpeGVsTWVhc3VyZXMoIGRpdlN0eWxlLnJpZ2h0ICkgPT09IDM2O1xuXG5cdFx0Ly8gU3VwcG9ydDogSUUgOSAtIDExIG9ubHlcblx0XHQvLyBEZXRlY3QgbWlzcmVwb3J0aW5nIG9mIGNvbnRlbnQgZGltZW5zaW9ucyBmb3IgYm94LXNpemluZzpib3JkZXItYm94IGVsZW1lbnRzXG5cdFx0Ym94U2l6aW5nUmVsaWFibGVWYWwgPSByb3VuZFBpeGVsTWVhc3VyZXMoIGRpdlN0eWxlLndpZHRoICkgPT09IDM2O1xuXG5cdFx0Ly8gU3VwcG9ydDogSUUgOSBvbmx5XG5cdFx0Ly8gRGV0ZWN0IG92ZXJmbG93OnNjcm9sbCBzY3Jld2luZXNzIChnaC0zNjk5KVxuXHRcdC8vIFN1cHBvcnQ6IENocm9tZSA8PTY0XG5cdFx0Ly8gRG9uJ3QgZ2V0IHRyaWNrZWQgd2hlbiB6b29tIGFmZmVjdHMgb2Zmc2V0V2lkdGggKGdoLTQwMjkpXG5cdFx0ZGl2LnN0eWxlLnBvc2l0aW9uID0gXCJhYnNvbHV0ZVwiO1xuXHRcdHNjcm9sbGJveFNpemVWYWwgPSByb3VuZFBpeGVsTWVhc3VyZXMoIGRpdi5vZmZzZXRXaWR0aCAvIDMgKSA9PT0gMTI7XG5cblx0XHRkb2N1bWVudEVsZW1lbnQucmVtb3ZlQ2hpbGQoIGNvbnRhaW5lciApO1xuXG5cdFx0Ly8gTnVsbGlmeSB0aGUgZGl2IHNvIGl0IHdvdWxkbid0IGJlIHN0b3JlZCBpbiB0aGUgbWVtb3J5IGFuZFxuXHRcdC8vIGl0IHdpbGwgYWxzbyBiZSBhIHNpZ24gdGhhdCBjaGVja3MgYWxyZWFkeSBwZXJmb3JtZWRcblx0XHRkaXYgPSBudWxsO1xuXHR9XG5cblx0ZnVuY3Rpb24gcm91bmRQaXhlbE1lYXN1cmVzKCBtZWFzdXJlICkge1xuXHRcdHJldHVybiBNYXRoLnJvdW5kKCBwYXJzZUZsb2F0KCBtZWFzdXJlICkgKTtcblx0fVxuXG5cdHZhciBwaXhlbFBvc2l0aW9uVmFsLCBib3hTaXppbmdSZWxpYWJsZVZhbCwgc2Nyb2xsYm94U2l6ZVZhbCwgcGl4ZWxCb3hTdHlsZXNWYWwsXG5cdFx0cmVsaWFibGVUckRpbWVuc2lvbnNWYWwsIHJlbGlhYmxlTWFyZ2luTGVmdFZhbCxcblx0XHRjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImRpdlwiICksXG5cdFx0ZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJkaXZcIiApO1xuXG5cdC8vIEZpbmlzaCBlYXJseSBpbiBsaW1pdGVkIChub24tYnJvd3NlcikgZW52aXJvbm1lbnRzXG5cdGlmICggIWRpdi5zdHlsZSApIHtcblx0XHRyZXR1cm47XG5cdH1cblxuXHQvLyBTdXBwb3J0OiBJRSA8PTkgLSAxMSBvbmx5XG5cdC8vIFN0eWxlIG9mIGNsb25lZCBlbGVtZW50IGFmZmVjdHMgc291cmNlIGVsZW1lbnQgY2xvbmVkICgjODkwOClcblx0ZGl2LnN0eWxlLmJhY2tncm91bmRDbGlwID0gXCJjb250ZW50LWJveFwiO1xuXHRkaXYuY2xvbmVOb2RlKCB0cnVlICkuc3R5bGUuYmFja2dyb3VuZENsaXAgPSBcIlwiO1xuXHRzdXBwb3J0LmNsZWFyQ2xvbmVTdHlsZSA9IGRpdi5zdHlsZS5iYWNrZ3JvdW5kQ2xpcCA9PT0gXCJjb250ZW50LWJveFwiO1xuXG5cdGpRdWVyeS5leHRlbmQoIHN1cHBvcnQsIHtcblx0XHRib3hTaXppbmdSZWxpYWJsZTogZnVuY3Rpb24oKSB7XG5cdFx0XHRjb21wdXRlU3R5bGVUZXN0cygpO1xuXHRcdFx0cmV0dXJuIGJveFNpemluZ1JlbGlhYmxlVmFsO1xuXHRcdH0sXG5cdFx0cGl4ZWxCb3hTdHlsZXM6IGZ1bmN0aW9uKCkge1xuXHRcdFx0Y29tcHV0ZVN0eWxlVGVzdHMoKTtcblx0XHRcdHJldHVybiBwaXhlbEJveFN0eWxlc1ZhbDtcblx0XHR9LFxuXHRcdHBpeGVsUG9zaXRpb246IGZ1bmN0aW9uKCkge1xuXHRcdFx0Y29tcHV0ZVN0eWxlVGVzdHMoKTtcblx0XHRcdHJldHVybiBwaXhlbFBvc2l0aW9uVmFsO1xuXHRcdH0sXG5cdFx0cmVsaWFibGVNYXJnaW5MZWZ0OiBmdW5jdGlvbigpIHtcblx0XHRcdGNvbXB1dGVTdHlsZVRlc3RzKCk7XG5cdFx0XHRyZXR1cm4gcmVsaWFibGVNYXJnaW5MZWZ0VmFsO1xuXHRcdH0sXG5cdFx0c2Nyb2xsYm94U2l6ZTogZnVuY3Rpb24oKSB7XG5cdFx0XHRjb21wdXRlU3R5bGVUZXN0cygpO1xuXHRcdFx0cmV0dXJuIHNjcm9sbGJveFNpemVWYWw7XG5cdFx0fSxcblxuXHRcdC8vIFN1cHBvcnQ6IElFIDkgLSAxMSssIEVkZ2UgMTUgLSAxOCtcblx0XHQvLyBJRS9FZGdlIG1pc3JlcG9ydCBgZ2V0Q29tcHV0ZWRTdHlsZWAgb2YgdGFibGUgcm93cyB3aXRoIHdpZHRoL2hlaWdodFxuXHRcdC8vIHNldCBpbiBDU1Mgd2hpbGUgYG9mZnNldCpgIHByb3BlcnRpZXMgcmVwb3J0IGNvcnJlY3QgdmFsdWVzLlxuXHRcdC8vIEJlaGF2aW9yIGluIElFIDkgaXMgbW9yZSBzdWJ0bGUgdGhhbiBpbiBuZXdlciB2ZXJzaW9ucyAmIGl0IHBhc3Nlc1xuXHRcdC8vIHNvbWUgdmVyc2lvbnMgb2YgdGhpcyB0ZXN0OyBtYWtlIHN1cmUgbm90IHRvIG1ha2UgaXQgcGFzcyB0aGVyZSFcblx0XHQvL1xuXHRcdC8vIFN1cHBvcnQ6IEZpcmVmb3ggNzArXG5cdFx0Ly8gT25seSBGaXJlZm94IGluY2x1ZGVzIGJvcmRlciB3aWR0aHNcblx0XHQvLyBpbiBjb21wdXRlZCBkaW1lbnNpb25zLiAoZ2gtNDUyOSlcblx0XHRyZWxpYWJsZVRyRGltZW5zaW9uczogZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgdGFibGUsIHRyLCB0ckNoaWxkLCB0clN0eWxlO1xuXHRcdFx0aWYgKCByZWxpYWJsZVRyRGltZW5zaW9uc1ZhbCA9PSBudWxsICkge1xuXHRcdFx0XHR0YWJsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwidGFibGVcIiApO1xuXHRcdFx0XHR0ciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwidHJcIiApO1xuXHRcdFx0XHR0ckNoaWxkID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJkaXZcIiApO1xuXG5cdFx0XHRcdHRhYmxlLnN0eWxlLmNzc1RleHQgPSBcInBvc2l0aW9uOmFic29sdXRlO2xlZnQ6LTExMTExcHg7Ym9yZGVyLWNvbGxhcHNlOnNlcGFyYXRlXCI7XG5cdFx0XHRcdHRyLnN0eWxlLmNzc1RleHQgPSBcImJvcmRlcjoxcHggc29saWRcIjtcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBDaHJvbWUgODYrXG5cdFx0XHRcdC8vIEhlaWdodCBzZXQgdGhyb3VnaCBjc3NUZXh0IGRvZXMgbm90IGdldCBhcHBsaWVkLlxuXHRcdFx0XHQvLyBDb21wdXRlZCBoZWlnaHQgdGhlbiBjb21lcyBiYWNrIGFzIDAuXG5cdFx0XHRcdHRyLnN0eWxlLmhlaWdodCA9IFwiMXB4XCI7XG5cdFx0XHRcdHRyQ2hpbGQuc3R5bGUuaGVpZ2h0ID0gXCI5cHhcIjtcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBBbmRyb2lkIDggQ2hyb21lIDg2K1xuXHRcdFx0XHQvLyBJbiBvdXIgYm9keUJhY2tncm91bmQuaHRtbCBpZnJhbWUsXG5cdFx0XHRcdC8vIGRpc3BsYXkgZm9yIGFsbCBkaXYgZWxlbWVudHMgaXMgc2V0IHRvIFwiaW5saW5lXCIsXG5cdFx0XHRcdC8vIHdoaWNoIGNhdXNlcyBhIHByb2JsZW0gb25seSBpbiBBbmRyb2lkIDggQ2hyb21lIDg2LlxuXHRcdFx0XHQvLyBFbnN1cmluZyB0aGUgZGl2IGlzIGRpc3BsYXk6IGJsb2NrXG5cdFx0XHRcdC8vIGdldHMgYXJvdW5kIHRoaXMgaXNzdWUuXG5cdFx0XHRcdHRyQ2hpbGQuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcblxuXHRcdFx0XHRkb2N1bWVudEVsZW1lbnRcblx0XHRcdFx0XHQuYXBwZW5kQ2hpbGQoIHRhYmxlIClcblx0XHRcdFx0XHQuYXBwZW5kQ2hpbGQoIHRyIClcblx0XHRcdFx0XHQuYXBwZW5kQ2hpbGQoIHRyQ2hpbGQgKTtcblxuXHRcdFx0XHR0clN0eWxlID0gd2luZG93LmdldENvbXB1dGVkU3R5bGUoIHRyICk7XG5cdFx0XHRcdHJlbGlhYmxlVHJEaW1lbnNpb25zVmFsID0gKCBwYXJzZUludCggdHJTdHlsZS5oZWlnaHQsIDEwICkgK1xuXHRcdFx0XHRcdHBhcnNlSW50KCB0clN0eWxlLmJvcmRlclRvcFdpZHRoLCAxMCApICtcblx0XHRcdFx0XHRwYXJzZUludCggdHJTdHlsZS5ib3JkZXJCb3R0b21XaWR0aCwgMTAgKSApID09PSB0ci5vZmZzZXRIZWlnaHQ7XG5cblx0XHRcdFx0ZG9jdW1lbnRFbGVtZW50LnJlbW92ZUNoaWxkKCB0YWJsZSApO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHJlbGlhYmxlVHJEaW1lbnNpb25zVmFsO1xuXHRcdH1cblx0fSApO1xufSApKCk7XG5cblxuZnVuY3Rpb24gY3VyQ1NTKCBlbGVtLCBuYW1lLCBjb21wdXRlZCApIHtcblx0dmFyIHdpZHRoLCBtaW5XaWR0aCwgbWF4V2lkdGgsIHJldCxcblxuXHRcdC8vIFN1cHBvcnQ6IEZpcmVmb3ggNTErXG5cdFx0Ly8gUmV0cmlldmluZyBzdHlsZSBiZWZvcmUgY29tcHV0ZWQgc29tZWhvd1xuXHRcdC8vIGZpeGVzIGFuIGlzc3VlIHdpdGggZ2V0dGluZyB3cm9uZyB2YWx1ZXNcblx0XHQvLyBvbiBkZXRhY2hlZCBlbGVtZW50c1xuXHRcdHN0eWxlID0gZWxlbS5zdHlsZTtcblxuXHRjb21wdXRlZCA9IGNvbXB1dGVkIHx8IGdldFN0eWxlcyggZWxlbSApO1xuXG5cdC8vIGdldFByb3BlcnR5VmFsdWUgaXMgbmVlZGVkIGZvcjpcblx0Ly8gICAuY3NzKCdmaWx0ZXInKSAoSUUgOSBvbmx5LCAjMTI1MzcpXG5cdC8vICAgLmNzcygnLS1jdXN0b21Qcm9wZXJ0eSkgKCMzMTQ0KVxuXHRpZiAoIGNvbXB1dGVkICkge1xuXHRcdHJldCA9IGNvbXB1dGVkLmdldFByb3BlcnR5VmFsdWUoIG5hbWUgKSB8fCBjb21wdXRlZFsgbmFtZSBdO1xuXG5cdFx0aWYgKCByZXQgPT09IFwiXCIgJiYgIWlzQXR0YWNoZWQoIGVsZW0gKSApIHtcblx0XHRcdHJldCA9IGpRdWVyeS5zdHlsZSggZWxlbSwgbmFtZSApO1xuXHRcdH1cblxuXHRcdC8vIEEgdHJpYnV0ZSB0byB0aGUgXCJhd2Vzb21lIGhhY2sgYnkgRGVhbiBFZHdhcmRzXCJcblx0XHQvLyBBbmRyb2lkIEJyb3dzZXIgcmV0dXJucyBwZXJjZW50YWdlIGZvciBzb21lIHZhbHVlcyxcblx0XHQvLyBidXQgd2lkdGggc2VlbXMgdG8gYmUgcmVsaWFibHkgcGl4ZWxzLlxuXHRcdC8vIFRoaXMgaXMgYWdhaW5zdCB0aGUgQ1NTT00gZHJhZnQgc3BlYzpcblx0XHQvLyBodHRwczovL2RyYWZ0cy5jc3N3Zy5vcmcvY3Nzb20vI3Jlc29sdmVkLXZhbHVlc1xuXHRcdGlmICggIXN1cHBvcnQucGl4ZWxCb3hTdHlsZXMoKSAmJiBybnVtbm9ucHgudGVzdCggcmV0ICkgJiYgcmJveFN0eWxlLnRlc3QoIG5hbWUgKSApIHtcblxuXHRcdFx0Ly8gUmVtZW1iZXIgdGhlIG9yaWdpbmFsIHZhbHVlc1xuXHRcdFx0d2lkdGggPSBzdHlsZS53aWR0aDtcblx0XHRcdG1pbldpZHRoID0gc3R5bGUubWluV2lkdGg7XG5cdFx0XHRtYXhXaWR0aCA9IHN0eWxlLm1heFdpZHRoO1xuXG5cdFx0XHQvLyBQdXQgaW4gdGhlIG5ldyB2YWx1ZXMgdG8gZ2V0IGEgY29tcHV0ZWQgdmFsdWUgb3V0XG5cdFx0XHRzdHlsZS5taW5XaWR0aCA9IHN0eWxlLm1heFdpZHRoID0gc3R5bGUud2lkdGggPSByZXQ7XG5cdFx0XHRyZXQgPSBjb21wdXRlZC53aWR0aDtcblxuXHRcdFx0Ly8gUmV2ZXJ0IHRoZSBjaGFuZ2VkIHZhbHVlc1xuXHRcdFx0c3R5bGUud2lkdGggPSB3aWR0aDtcblx0XHRcdHN0eWxlLm1pbldpZHRoID0gbWluV2lkdGg7XG5cdFx0XHRzdHlsZS5tYXhXaWR0aCA9IG1heFdpZHRoO1xuXHRcdH1cblx0fVxuXG5cdHJldHVybiByZXQgIT09IHVuZGVmaW5lZCA/XG5cblx0XHQvLyBTdXBwb3J0OiBJRSA8PTkgLSAxMSBvbmx5XG5cdFx0Ly8gSUUgcmV0dXJucyB6SW5kZXggdmFsdWUgYXMgYW4gaW50ZWdlci5cblx0XHRyZXQgKyBcIlwiIDpcblx0XHRyZXQ7XG59XG5cblxuZnVuY3Rpb24gYWRkR2V0SG9va0lmKCBjb25kaXRpb25GbiwgaG9va0ZuICkge1xuXG5cdC8vIERlZmluZSB0aGUgaG9vaywgd2UnbGwgY2hlY2sgb24gdGhlIGZpcnN0IHJ1biBpZiBpdCdzIHJlYWxseSBuZWVkZWQuXG5cdHJldHVybiB7XG5cdFx0Z2V0OiBmdW5jdGlvbigpIHtcblx0XHRcdGlmICggY29uZGl0aW9uRm4oKSApIHtcblxuXHRcdFx0XHQvLyBIb29rIG5vdCBuZWVkZWQgKG9yIGl0J3Mgbm90IHBvc3NpYmxlIHRvIHVzZSBpdCBkdWVcblx0XHRcdFx0Ly8gdG8gbWlzc2luZyBkZXBlbmRlbmN5KSwgcmVtb3ZlIGl0LlxuXHRcdFx0XHRkZWxldGUgdGhpcy5nZXQ7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gSG9vayBuZWVkZWQ7IHJlZGVmaW5lIGl0IHNvIHRoYXQgdGhlIHN1cHBvcnQgdGVzdCBpcyBub3QgZXhlY3V0ZWQgYWdhaW4uXG5cdFx0XHRyZXR1cm4gKCB0aGlzLmdldCA9IGhvb2tGbiApLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTtcblx0XHR9XG5cdH07XG59XG5cblxudmFyIGNzc1ByZWZpeGVzID0gWyBcIldlYmtpdFwiLCBcIk1velwiLCBcIm1zXCIgXSxcblx0ZW1wdHlTdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiZGl2XCIgKS5zdHlsZSxcblx0dmVuZG9yUHJvcHMgPSB7fTtcblxuLy8gUmV0dXJuIGEgdmVuZG9yLXByZWZpeGVkIHByb3BlcnR5IG9yIHVuZGVmaW5lZFxuZnVuY3Rpb24gdmVuZG9yUHJvcE5hbWUoIG5hbWUgKSB7XG5cblx0Ly8gQ2hlY2sgZm9yIHZlbmRvciBwcmVmaXhlZCBuYW1lc1xuXHR2YXIgY2FwTmFtZSA9IG5hbWVbIDAgXS50b1VwcGVyQ2FzZSgpICsgbmFtZS5zbGljZSggMSApLFxuXHRcdGkgPSBjc3NQcmVmaXhlcy5sZW5ndGg7XG5cblx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0bmFtZSA9IGNzc1ByZWZpeGVzWyBpIF0gKyBjYXBOYW1lO1xuXHRcdGlmICggbmFtZSBpbiBlbXB0eVN0eWxlICkge1xuXHRcdFx0cmV0dXJuIG5hbWU7XG5cdFx0fVxuXHR9XG59XG5cbi8vIFJldHVybiBhIHBvdGVudGlhbGx5LW1hcHBlZCBqUXVlcnkuY3NzUHJvcHMgb3IgdmVuZG9yIHByZWZpeGVkIHByb3BlcnR5XG5mdW5jdGlvbiBmaW5hbFByb3BOYW1lKCBuYW1lICkge1xuXHR2YXIgZmluYWwgPSBqUXVlcnkuY3NzUHJvcHNbIG5hbWUgXSB8fCB2ZW5kb3JQcm9wc1sgbmFtZSBdO1xuXG5cdGlmICggZmluYWwgKSB7XG5cdFx0cmV0dXJuIGZpbmFsO1xuXHR9XG5cdGlmICggbmFtZSBpbiBlbXB0eVN0eWxlICkge1xuXHRcdHJldHVybiBuYW1lO1xuXHR9XG5cdHJldHVybiB2ZW5kb3JQcm9wc1sgbmFtZSBdID0gdmVuZG9yUHJvcE5hbWUoIG5hbWUgKSB8fCBuYW1lO1xufVxuXG5cbnZhclxuXG5cdC8vIFN3YXBwYWJsZSBpZiBkaXNwbGF5IGlzIG5vbmUgb3Igc3RhcnRzIHdpdGggdGFibGVcblx0Ly8gZXhjZXB0IFwidGFibGVcIiwgXCJ0YWJsZS1jZWxsXCIsIG9yIFwidGFibGUtY2FwdGlvblwiXG5cdC8vIFNlZSBoZXJlIGZvciBkaXNwbGF5IHZhbHVlczogaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9DU1MvZGlzcGxheVxuXHRyZGlzcGxheXN3YXAgPSAvXihub25lfHRhYmxlKD8hLWNbZWFdKS4rKS8sXG5cdHJjdXN0b21Qcm9wID0gL14tLS8sXG5cdGNzc1Nob3cgPSB7IHBvc2l0aW9uOiBcImFic29sdXRlXCIsIHZpc2liaWxpdHk6IFwiaGlkZGVuXCIsIGRpc3BsYXk6IFwiYmxvY2tcIiB9LFxuXHRjc3NOb3JtYWxUcmFuc2Zvcm0gPSB7XG5cdFx0bGV0dGVyU3BhY2luZzogXCIwXCIsXG5cdFx0Zm9udFdlaWdodDogXCI0MDBcIlxuXHR9O1xuXG5mdW5jdGlvbiBzZXRQb3NpdGl2ZU51bWJlciggX2VsZW0sIHZhbHVlLCBzdWJ0cmFjdCApIHtcblxuXHQvLyBBbnkgcmVsYXRpdmUgKCsvLSkgdmFsdWVzIGhhdmUgYWxyZWFkeSBiZWVuXG5cdC8vIG5vcm1hbGl6ZWQgYXQgdGhpcyBwb2ludFxuXHR2YXIgbWF0Y2hlcyA9IHJjc3NOdW0uZXhlYyggdmFsdWUgKTtcblx0cmV0dXJuIG1hdGNoZXMgP1xuXG5cdFx0Ly8gR3VhcmQgYWdhaW5zdCB1bmRlZmluZWQgXCJzdWJ0cmFjdFwiLCBlLmcuLCB3aGVuIHVzZWQgYXMgaW4gY3NzSG9va3Ncblx0XHRNYXRoLm1heCggMCwgbWF0Y2hlc1sgMiBdIC0gKCBzdWJ0cmFjdCB8fCAwICkgKSArICggbWF0Y2hlc1sgMyBdIHx8IFwicHhcIiApIDpcblx0XHR2YWx1ZTtcbn1cblxuZnVuY3Rpb24gYm94TW9kZWxBZGp1c3RtZW50KCBlbGVtLCBkaW1lbnNpb24sIGJveCwgaXNCb3JkZXJCb3gsIHN0eWxlcywgY29tcHV0ZWRWYWwgKSB7XG5cdHZhciBpID0gZGltZW5zaW9uID09PSBcIndpZHRoXCIgPyAxIDogMCxcblx0XHRleHRyYSA9IDAsXG5cdFx0ZGVsdGEgPSAwO1xuXG5cdC8vIEFkanVzdG1lbnQgbWF5IG5vdCBiZSBuZWNlc3Nhcnlcblx0aWYgKCBib3ggPT09ICggaXNCb3JkZXJCb3ggPyBcImJvcmRlclwiIDogXCJjb250ZW50XCIgKSApIHtcblx0XHRyZXR1cm4gMDtcblx0fVxuXG5cdGZvciAoIDsgaSA8IDQ7IGkgKz0gMiApIHtcblxuXHRcdC8vIEJvdGggYm94IG1vZGVscyBleGNsdWRlIG1hcmdpblxuXHRcdGlmICggYm94ID09PSBcIm1hcmdpblwiICkge1xuXHRcdFx0ZGVsdGEgKz0galF1ZXJ5LmNzcyggZWxlbSwgYm94ICsgY3NzRXhwYW5kWyBpIF0sIHRydWUsIHN0eWxlcyApO1xuXHRcdH1cblxuXHRcdC8vIElmIHdlIGdldCBoZXJlIHdpdGggYSBjb250ZW50LWJveCwgd2UncmUgc2Vla2luZyBcInBhZGRpbmdcIiBvciBcImJvcmRlclwiIG9yIFwibWFyZ2luXCJcblx0XHRpZiAoICFpc0JvcmRlckJveCApIHtcblxuXHRcdFx0Ly8gQWRkIHBhZGRpbmdcblx0XHRcdGRlbHRhICs9IGpRdWVyeS5jc3MoIGVsZW0sIFwicGFkZGluZ1wiICsgY3NzRXhwYW5kWyBpIF0sIHRydWUsIHN0eWxlcyApO1xuXG5cdFx0XHQvLyBGb3IgXCJib3JkZXJcIiBvciBcIm1hcmdpblwiLCBhZGQgYm9yZGVyXG5cdFx0XHRpZiAoIGJveCAhPT0gXCJwYWRkaW5nXCIgKSB7XG5cdFx0XHRcdGRlbHRhICs9IGpRdWVyeS5jc3MoIGVsZW0sIFwiYm9yZGVyXCIgKyBjc3NFeHBhbmRbIGkgXSArIFwiV2lkdGhcIiwgdHJ1ZSwgc3R5bGVzICk7XG5cblx0XHRcdC8vIEJ1dCBzdGlsbCBrZWVwIHRyYWNrIG9mIGl0IG90aGVyd2lzZVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0ZXh0cmEgKz0galF1ZXJ5LmNzcyggZWxlbSwgXCJib3JkZXJcIiArIGNzc0V4cGFuZFsgaSBdICsgXCJXaWR0aFwiLCB0cnVlLCBzdHlsZXMgKTtcblx0XHRcdH1cblxuXHRcdC8vIElmIHdlIGdldCBoZXJlIHdpdGggYSBib3JkZXItYm94IChjb250ZW50ICsgcGFkZGluZyArIGJvcmRlciksIHdlJ3JlIHNlZWtpbmcgXCJjb250ZW50XCIgb3Jcblx0XHQvLyBcInBhZGRpbmdcIiBvciBcIm1hcmdpblwiXG5cdFx0fSBlbHNlIHtcblxuXHRcdFx0Ly8gRm9yIFwiY29udGVudFwiLCBzdWJ0cmFjdCBwYWRkaW5nXG5cdFx0XHRpZiAoIGJveCA9PT0gXCJjb250ZW50XCIgKSB7XG5cdFx0XHRcdGRlbHRhIC09IGpRdWVyeS5jc3MoIGVsZW0sIFwicGFkZGluZ1wiICsgY3NzRXhwYW5kWyBpIF0sIHRydWUsIHN0eWxlcyApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBGb3IgXCJjb250ZW50XCIgb3IgXCJwYWRkaW5nXCIsIHN1YnRyYWN0IGJvcmRlclxuXHRcdFx0aWYgKCBib3ggIT09IFwibWFyZ2luXCIgKSB7XG5cdFx0XHRcdGRlbHRhIC09IGpRdWVyeS5jc3MoIGVsZW0sIFwiYm9yZGVyXCIgKyBjc3NFeHBhbmRbIGkgXSArIFwiV2lkdGhcIiwgdHJ1ZSwgc3R5bGVzICk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Ly8gQWNjb3VudCBmb3IgcG9zaXRpdmUgY29udGVudC1ib3ggc2Nyb2xsIGd1dHRlciB3aGVuIHJlcXVlc3RlZCBieSBwcm92aWRpbmcgY29tcHV0ZWRWYWxcblx0aWYgKCAhaXNCb3JkZXJCb3ggJiYgY29tcHV0ZWRWYWwgPj0gMCApIHtcblxuXHRcdC8vIG9mZnNldFdpZHRoL29mZnNldEhlaWdodCBpcyBhIHJvdW5kZWQgc3VtIG9mIGNvbnRlbnQsIHBhZGRpbmcsIHNjcm9sbCBndXR0ZXIsIGFuZCBib3JkZXJcblx0XHQvLyBBc3N1bWluZyBpbnRlZ2VyIHNjcm9sbCBndXR0ZXIsIHN1YnRyYWN0IHRoZSByZXN0IGFuZCByb3VuZCBkb3duXG5cdFx0ZGVsdGEgKz0gTWF0aC5tYXgoIDAsIE1hdGguY2VpbChcblx0XHRcdGVsZW1bIFwib2Zmc2V0XCIgKyBkaW1lbnNpb25bIDAgXS50b1VwcGVyQ2FzZSgpICsgZGltZW5zaW9uLnNsaWNlKCAxICkgXSAtXG5cdFx0XHRjb21wdXRlZFZhbCAtXG5cdFx0XHRkZWx0YSAtXG5cdFx0XHRleHRyYSAtXG5cdFx0XHQwLjVcblxuXHRcdC8vIElmIG9mZnNldFdpZHRoL29mZnNldEhlaWdodCBpcyB1bmtub3duLCB0aGVuIHdlIGNhbid0IGRldGVybWluZSBjb250ZW50LWJveCBzY3JvbGwgZ3V0dGVyXG5cdFx0Ly8gVXNlIGFuIGV4cGxpY2l0IHplcm8gdG8gYXZvaWQgTmFOIChnaC0zOTY0KVxuXHRcdCkgKSB8fCAwO1xuXHR9XG5cblx0cmV0dXJuIGRlbHRhO1xufVxuXG5mdW5jdGlvbiBnZXRXaWR0aE9ySGVpZ2h0KCBlbGVtLCBkaW1lbnNpb24sIGV4dHJhICkge1xuXG5cdC8vIFN0YXJ0IHdpdGggY29tcHV0ZWQgc3R5bGVcblx0dmFyIHN0eWxlcyA9IGdldFN0eWxlcyggZWxlbSApLFxuXG5cdFx0Ly8gVG8gYXZvaWQgZm9yY2luZyBhIHJlZmxvdywgb25seSBmZXRjaCBib3hTaXppbmcgaWYgd2UgbmVlZCBpdCAoZ2gtNDMyMikuXG5cdFx0Ly8gRmFrZSBjb250ZW50LWJveCB1bnRpbCB3ZSBrbm93IGl0J3MgbmVlZGVkIHRvIGtub3cgdGhlIHRydWUgdmFsdWUuXG5cdFx0Ym94U2l6aW5nTmVlZGVkID0gIXN1cHBvcnQuYm94U2l6aW5nUmVsaWFibGUoKSB8fCBleHRyYSxcblx0XHRpc0JvcmRlckJveCA9IGJveFNpemluZ05lZWRlZCAmJlxuXHRcdFx0alF1ZXJ5LmNzcyggZWxlbSwgXCJib3hTaXppbmdcIiwgZmFsc2UsIHN0eWxlcyApID09PSBcImJvcmRlci1ib3hcIixcblx0XHR2YWx1ZUlzQm9yZGVyQm94ID0gaXNCb3JkZXJCb3gsXG5cblx0XHR2YWwgPSBjdXJDU1MoIGVsZW0sIGRpbWVuc2lvbiwgc3R5bGVzICksXG5cdFx0b2Zmc2V0UHJvcCA9IFwib2Zmc2V0XCIgKyBkaW1lbnNpb25bIDAgXS50b1VwcGVyQ2FzZSgpICsgZGltZW5zaW9uLnNsaWNlKCAxICk7XG5cblx0Ly8gU3VwcG9ydDogRmlyZWZveCA8PTU0XG5cdC8vIFJldHVybiBhIGNvbmZvdW5kaW5nIG5vbi1waXhlbCB2YWx1ZSBvciBmZWlnbiBpZ25vcmFuY2UsIGFzIGFwcHJvcHJpYXRlLlxuXHRpZiAoIHJudW1ub25weC50ZXN0KCB2YWwgKSApIHtcblx0XHRpZiAoICFleHRyYSApIHtcblx0XHRcdHJldHVybiB2YWw7XG5cdFx0fVxuXHRcdHZhbCA9IFwiYXV0b1wiO1xuXHR9XG5cblxuXHQvLyBTdXBwb3J0OiBJRSA5IC0gMTEgb25seVxuXHQvLyBVc2Ugb2Zmc2V0V2lkdGgvb2Zmc2V0SGVpZ2h0IGZvciB3aGVuIGJveCBzaXppbmcgaXMgdW5yZWxpYWJsZS5cblx0Ly8gSW4gdGhvc2UgY2FzZXMsIHRoZSBjb21wdXRlZCB2YWx1ZSBjYW4gYmUgdHJ1c3RlZCB0byBiZSBib3JkZXItYm94LlxuXHRpZiAoICggIXN1cHBvcnQuYm94U2l6aW5nUmVsaWFibGUoKSAmJiBpc0JvcmRlckJveCB8fFxuXG5cdFx0Ly8gU3VwcG9ydDogSUUgMTAgLSAxMSssIEVkZ2UgMTUgLSAxOCtcblx0XHQvLyBJRS9FZGdlIG1pc3JlcG9ydCBgZ2V0Q29tcHV0ZWRTdHlsZWAgb2YgdGFibGUgcm93cyB3aXRoIHdpZHRoL2hlaWdodFxuXHRcdC8vIHNldCBpbiBDU1Mgd2hpbGUgYG9mZnNldCpgIHByb3BlcnRpZXMgcmVwb3J0IGNvcnJlY3QgdmFsdWVzLlxuXHRcdC8vIEludGVyZXN0aW5nbHksIGluIHNvbWUgY2FzZXMgSUUgOSBkb2Vzbid0IHN1ZmZlciBmcm9tIHRoaXMgaXNzdWUuXG5cdFx0IXN1cHBvcnQucmVsaWFibGVUckRpbWVuc2lvbnMoKSAmJiBub2RlTmFtZSggZWxlbSwgXCJ0clwiICkgfHxcblxuXHRcdC8vIEZhbGwgYmFjayB0byBvZmZzZXRXaWR0aC9vZmZzZXRIZWlnaHQgd2hlbiB2YWx1ZSBpcyBcImF1dG9cIlxuXHRcdC8vIFRoaXMgaGFwcGVucyBmb3IgaW5saW5lIGVsZW1lbnRzIHdpdGggbm8gZXhwbGljaXQgc2V0dGluZyAoZ2gtMzU3MSlcblx0XHR2YWwgPT09IFwiYXV0b1wiIHx8XG5cblx0XHQvLyBTdXBwb3J0OiBBbmRyb2lkIDw9NC4xIC0gNC4zIG9ubHlcblx0XHQvLyBBbHNvIHVzZSBvZmZzZXRXaWR0aC9vZmZzZXRIZWlnaHQgZm9yIG1pc3JlcG9ydGVkIGlubGluZSBkaW1lbnNpb25zIChnaC0zNjAyKVxuXHRcdCFwYXJzZUZsb2F0KCB2YWwgKSAmJiBqUXVlcnkuY3NzKCBlbGVtLCBcImRpc3BsYXlcIiwgZmFsc2UsIHN0eWxlcyApID09PSBcImlubGluZVwiICkgJiZcblxuXHRcdC8vIE1ha2Ugc3VyZSB0aGUgZWxlbWVudCBpcyB2aXNpYmxlICYgY29ubmVjdGVkXG5cdFx0ZWxlbS5nZXRDbGllbnRSZWN0cygpLmxlbmd0aCApIHtcblxuXHRcdGlzQm9yZGVyQm94ID0galF1ZXJ5LmNzcyggZWxlbSwgXCJib3hTaXppbmdcIiwgZmFsc2UsIHN0eWxlcyApID09PSBcImJvcmRlci1ib3hcIjtcblxuXHRcdC8vIFdoZXJlIGF2YWlsYWJsZSwgb2Zmc2V0V2lkdGgvb2Zmc2V0SGVpZ2h0IGFwcHJveGltYXRlIGJvcmRlciBib3ggZGltZW5zaW9ucy5cblx0XHQvLyBXaGVyZSBub3QgYXZhaWxhYmxlIChlLmcuLCBTVkcpLCBhc3N1bWUgdW5yZWxpYWJsZSBib3gtc2l6aW5nIGFuZCBpbnRlcnByZXQgdGhlXG5cdFx0Ly8gcmV0cmlldmVkIHZhbHVlIGFzIGEgY29udGVudCBib3ggZGltZW5zaW9uLlxuXHRcdHZhbHVlSXNCb3JkZXJCb3ggPSBvZmZzZXRQcm9wIGluIGVsZW07XG5cdFx0aWYgKCB2YWx1ZUlzQm9yZGVyQm94ICkge1xuXHRcdFx0dmFsID0gZWxlbVsgb2Zmc2V0UHJvcCBdO1xuXHRcdH1cblx0fVxuXG5cdC8vIE5vcm1hbGl6ZSBcIlwiIGFuZCBhdXRvXG5cdHZhbCA9IHBhcnNlRmxvYXQoIHZhbCApIHx8IDA7XG5cblx0Ly8gQWRqdXN0IGZvciB0aGUgZWxlbWVudCdzIGJveCBtb2RlbFxuXHRyZXR1cm4gKCB2YWwgK1xuXHRcdGJveE1vZGVsQWRqdXN0bWVudChcblx0XHRcdGVsZW0sXG5cdFx0XHRkaW1lbnNpb24sXG5cdFx0XHRleHRyYSB8fCAoIGlzQm9yZGVyQm94ID8gXCJib3JkZXJcIiA6IFwiY29udGVudFwiICksXG5cdFx0XHR2YWx1ZUlzQm9yZGVyQm94LFxuXHRcdFx0c3R5bGVzLFxuXG5cdFx0XHQvLyBQcm92aWRlIHRoZSBjdXJyZW50IGNvbXB1dGVkIHNpemUgdG8gcmVxdWVzdCBzY3JvbGwgZ3V0dGVyIGNhbGN1bGF0aW9uIChnaC0zNTg5KVxuXHRcdFx0dmFsXG5cdFx0KVxuXHQpICsgXCJweFwiO1xufVxuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cblx0Ly8gQWRkIGluIHN0eWxlIHByb3BlcnR5IGhvb2tzIGZvciBvdmVycmlkaW5nIHRoZSBkZWZhdWx0XG5cdC8vIGJlaGF2aW9yIG9mIGdldHRpbmcgYW5kIHNldHRpbmcgYSBzdHlsZSBwcm9wZXJ0eVxuXHRjc3NIb29rczoge1xuXHRcdG9wYWNpdHk6IHtcblx0XHRcdGdldDogZnVuY3Rpb24oIGVsZW0sIGNvbXB1dGVkICkge1xuXHRcdFx0XHRpZiAoIGNvbXB1dGVkICkge1xuXG5cdFx0XHRcdFx0Ly8gV2Ugc2hvdWxkIGFsd2F5cyBnZXQgYSBudW1iZXIgYmFjayBmcm9tIG9wYWNpdHlcblx0XHRcdFx0XHR2YXIgcmV0ID0gY3VyQ1NTKCBlbGVtLCBcIm9wYWNpdHlcIiApO1xuXHRcdFx0XHRcdHJldHVybiByZXQgPT09IFwiXCIgPyBcIjFcIiA6IHJldDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fSxcblxuXHQvLyBEb24ndCBhdXRvbWF0aWNhbGx5IGFkZCBcInB4XCIgdG8gdGhlc2UgcG9zc2libHktdW5pdGxlc3MgcHJvcGVydGllc1xuXHRjc3NOdW1iZXI6IHtcblx0XHRcImFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50XCI6IHRydWUsXG5cdFx0XCJjb2x1bW5Db3VudFwiOiB0cnVlLFxuXHRcdFwiZmlsbE9wYWNpdHlcIjogdHJ1ZSxcblx0XHRcImZsZXhHcm93XCI6IHRydWUsXG5cdFx0XCJmbGV4U2hyaW5rXCI6IHRydWUsXG5cdFx0XCJmb250V2VpZ2h0XCI6IHRydWUsXG5cdFx0XCJncmlkQXJlYVwiOiB0cnVlLFxuXHRcdFwiZ3JpZENvbHVtblwiOiB0cnVlLFxuXHRcdFwiZ3JpZENvbHVtbkVuZFwiOiB0cnVlLFxuXHRcdFwiZ3JpZENvbHVtblN0YXJ0XCI6IHRydWUsXG5cdFx0XCJncmlkUm93XCI6IHRydWUsXG5cdFx0XCJncmlkUm93RW5kXCI6IHRydWUsXG5cdFx0XCJncmlkUm93U3RhcnRcIjogdHJ1ZSxcblx0XHRcImxpbmVIZWlnaHRcIjogdHJ1ZSxcblx0XHRcIm9wYWNpdHlcIjogdHJ1ZSxcblx0XHRcIm9yZGVyXCI6IHRydWUsXG5cdFx0XCJvcnBoYW5zXCI6IHRydWUsXG5cdFx0XCJ3aWRvd3NcIjogdHJ1ZSxcblx0XHRcInpJbmRleFwiOiB0cnVlLFxuXHRcdFwiem9vbVwiOiB0cnVlXG5cdH0sXG5cblx0Ly8gQWRkIGluIHByb3BlcnRpZXMgd2hvc2UgbmFtZXMgeW91IHdpc2ggdG8gZml4IGJlZm9yZVxuXHQvLyBzZXR0aW5nIG9yIGdldHRpbmcgdGhlIHZhbHVlXG5cdGNzc1Byb3BzOiB7fSxcblxuXHQvLyBHZXQgYW5kIHNldCB0aGUgc3R5bGUgcHJvcGVydHkgb24gYSBET00gTm9kZVxuXHRzdHlsZTogZnVuY3Rpb24oIGVsZW0sIG5hbWUsIHZhbHVlLCBleHRyYSApIHtcblxuXHRcdC8vIERvbid0IHNldCBzdHlsZXMgb24gdGV4dCBhbmQgY29tbWVudCBub2Rlc1xuXHRcdGlmICggIWVsZW0gfHwgZWxlbS5ub2RlVHlwZSA9PT0gMyB8fCBlbGVtLm5vZGVUeXBlID09PSA4IHx8ICFlbGVtLnN0eWxlICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vIE1ha2Ugc3VyZSB0aGF0IHdlJ3JlIHdvcmtpbmcgd2l0aCB0aGUgcmlnaHQgbmFtZVxuXHRcdHZhciByZXQsIHR5cGUsIGhvb2tzLFxuXHRcdFx0b3JpZ05hbWUgPSBjYW1lbENhc2UoIG5hbWUgKSxcblx0XHRcdGlzQ3VzdG9tUHJvcCA9IHJjdXN0b21Qcm9wLnRlc3QoIG5hbWUgKSxcblx0XHRcdHN0eWxlID0gZWxlbS5zdHlsZTtcblxuXHRcdC8vIE1ha2Ugc3VyZSB0aGF0IHdlJ3JlIHdvcmtpbmcgd2l0aCB0aGUgcmlnaHQgbmFtZS4gV2UgZG9uJ3Rcblx0XHQvLyB3YW50IHRvIHF1ZXJ5IHRoZSB2YWx1ZSBpZiBpdCBpcyBhIENTUyBjdXN0b20gcHJvcGVydHlcblx0XHQvLyBzaW5jZSB0aGV5IGFyZSB1c2VyLWRlZmluZWQuXG5cdFx0aWYgKCAhaXNDdXN0b21Qcm9wICkge1xuXHRcdFx0bmFtZSA9IGZpbmFsUHJvcE5hbWUoIG9yaWdOYW1lICk7XG5cdFx0fVxuXG5cdFx0Ly8gR2V0cyBob29rIGZvciB0aGUgcHJlZml4ZWQgdmVyc2lvbiwgdGhlbiB1bnByZWZpeGVkIHZlcnNpb25cblx0XHRob29rcyA9IGpRdWVyeS5jc3NIb29rc1sgbmFtZSBdIHx8IGpRdWVyeS5jc3NIb29rc1sgb3JpZ05hbWUgXTtcblxuXHRcdC8vIENoZWNrIGlmIHdlJ3JlIHNldHRpbmcgYSB2YWx1ZVxuXHRcdGlmICggdmFsdWUgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdHR5cGUgPSB0eXBlb2YgdmFsdWU7XG5cblx0XHRcdC8vIENvbnZlcnQgXCIrPVwiIG9yIFwiLT1cIiB0byByZWxhdGl2ZSBudW1iZXJzICgjNzM0NSlcblx0XHRcdGlmICggdHlwZSA9PT0gXCJzdHJpbmdcIiAmJiAoIHJldCA9IHJjc3NOdW0uZXhlYyggdmFsdWUgKSApICYmIHJldFsgMSBdICkge1xuXHRcdFx0XHR2YWx1ZSA9IGFkanVzdENTUyggZWxlbSwgbmFtZSwgcmV0ICk7XG5cblx0XHRcdFx0Ly8gRml4ZXMgYnVnICM5MjM3XG5cdFx0XHRcdHR5cGUgPSBcIm51bWJlclwiO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBNYWtlIHN1cmUgdGhhdCBudWxsIGFuZCBOYU4gdmFsdWVzIGFyZW4ndCBzZXQgKCM3MTE2KVxuXHRcdFx0aWYgKCB2YWx1ZSA9PSBudWxsIHx8IHZhbHVlICE9PSB2YWx1ZSApIHtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBJZiBhIG51bWJlciB3YXMgcGFzc2VkIGluLCBhZGQgdGhlIHVuaXQgKGV4Y2VwdCBmb3IgY2VydGFpbiBDU1MgcHJvcGVydGllcylcblx0XHRcdC8vIFRoZSBpc0N1c3RvbVByb3AgY2hlY2sgY2FuIGJlIHJlbW92ZWQgaW4galF1ZXJ5IDQuMCB3aGVuIHdlIG9ubHkgYXV0by1hcHBlbmRcblx0XHRcdC8vIFwicHhcIiB0byBhIGZldyBoYXJkY29kZWQgdmFsdWVzLlxuXHRcdFx0aWYgKCB0eXBlID09PSBcIm51bWJlclwiICYmICFpc0N1c3RvbVByb3AgKSB7XG5cdFx0XHRcdHZhbHVlICs9IHJldCAmJiByZXRbIDMgXSB8fCAoIGpRdWVyeS5jc3NOdW1iZXJbIG9yaWdOYW1lIF0gPyBcIlwiIDogXCJweFwiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIGJhY2tncm91bmQtKiBwcm9wcyBhZmZlY3Qgb3JpZ2luYWwgY2xvbmUncyB2YWx1ZXNcblx0XHRcdGlmICggIXN1cHBvcnQuY2xlYXJDbG9uZVN0eWxlICYmIHZhbHVlID09PSBcIlwiICYmIG5hbWUuaW5kZXhPZiggXCJiYWNrZ3JvdW5kXCIgKSA9PT0gMCApIHtcblx0XHRcdFx0c3R5bGVbIG5hbWUgXSA9IFwiaW5oZXJpdFwiO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBJZiBhIGhvb2sgd2FzIHByb3ZpZGVkLCB1c2UgdGhhdCB2YWx1ZSwgb3RoZXJ3aXNlIGp1c3Qgc2V0IHRoZSBzcGVjaWZpZWQgdmFsdWVcblx0XHRcdGlmICggIWhvb2tzIHx8ICEoIFwic2V0XCIgaW4gaG9va3MgKSB8fFxuXHRcdFx0XHQoIHZhbHVlID0gaG9va3Muc2V0KCBlbGVtLCB2YWx1ZSwgZXh0cmEgKSApICE9PSB1bmRlZmluZWQgKSB7XG5cblx0XHRcdFx0aWYgKCBpc0N1c3RvbVByb3AgKSB7XG5cdFx0XHRcdFx0c3R5bGUuc2V0UHJvcGVydHkoIG5hbWUsIHZhbHVlICk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0c3R5bGVbIG5hbWUgXSA9IHZhbHVlO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHR9IGVsc2Uge1xuXG5cdFx0XHQvLyBJZiBhIGhvb2sgd2FzIHByb3ZpZGVkIGdldCB0aGUgbm9uLWNvbXB1dGVkIHZhbHVlIGZyb20gdGhlcmVcblx0XHRcdGlmICggaG9va3MgJiYgXCJnZXRcIiBpbiBob29rcyAmJlxuXHRcdFx0XHQoIHJldCA9IGhvb2tzLmdldCggZWxlbSwgZmFsc2UsIGV4dHJhICkgKSAhPT0gdW5kZWZpbmVkICkge1xuXG5cdFx0XHRcdHJldHVybiByZXQ7XG5cdFx0XHR9XG5cblx0XHRcdC8vIE90aGVyd2lzZSBqdXN0IGdldCB0aGUgdmFsdWUgZnJvbSB0aGUgc3R5bGUgb2JqZWN0XG5cdFx0XHRyZXR1cm4gc3R5bGVbIG5hbWUgXTtcblx0XHR9XG5cdH0sXG5cblx0Y3NzOiBmdW5jdGlvbiggZWxlbSwgbmFtZSwgZXh0cmEsIHN0eWxlcyApIHtcblx0XHR2YXIgdmFsLCBudW0sIGhvb2tzLFxuXHRcdFx0b3JpZ05hbWUgPSBjYW1lbENhc2UoIG5hbWUgKSxcblx0XHRcdGlzQ3VzdG9tUHJvcCA9IHJjdXN0b21Qcm9wLnRlc3QoIG5hbWUgKTtcblxuXHRcdC8vIE1ha2Ugc3VyZSB0aGF0IHdlJ3JlIHdvcmtpbmcgd2l0aCB0aGUgcmlnaHQgbmFtZS4gV2UgZG9uJ3Rcblx0XHQvLyB3YW50IHRvIG1vZGlmeSB0aGUgdmFsdWUgaWYgaXQgaXMgYSBDU1MgY3VzdG9tIHByb3BlcnR5XG5cdFx0Ly8gc2luY2UgdGhleSBhcmUgdXNlci1kZWZpbmVkLlxuXHRcdGlmICggIWlzQ3VzdG9tUHJvcCApIHtcblx0XHRcdG5hbWUgPSBmaW5hbFByb3BOYW1lKCBvcmlnTmFtZSApO1xuXHRcdH1cblxuXHRcdC8vIFRyeSBwcmVmaXhlZCBuYW1lIGZvbGxvd2VkIGJ5IHRoZSB1bnByZWZpeGVkIG5hbWVcblx0XHRob29rcyA9IGpRdWVyeS5jc3NIb29rc1sgbmFtZSBdIHx8IGpRdWVyeS5jc3NIb29rc1sgb3JpZ05hbWUgXTtcblxuXHRcdC8vIElmIGEgaG9vayB3YXMgcHJvdmlkZWQgZ2V0IHRoZSBjb21wdXRlZCB2YWx1ZSBmcm9tIHRoZXJlXG5cdFx0aWYgKCBob29rcyAmJiBcImdldFwiIGluIGhvb2tzICkge1xuXHRcdFx0dmFsID0gaG9va3MuZ2V0KCBlbGVtLCB0cnVlLCBleHRyYSApO1xuXHRcdH1cblxuXHRcdC8vIE90aGVyd2lzZSwgaWYgYSB3YXkgdG8gZ2V0IHRoZSBjb21wdXRlZCB2YWx1ZSBleGlzdHMsIHVzZSB0aGF0XG5cdFx0aWYgKCB2YWwgPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdHZhbCA9IGN1ckNTUyggZWxlbSwgbmFtZSwgc3R5bGVzICk7XG5cdFx0fVxuXG5cdFx0Ly8gQ29udmVydCBcIm5vcm1hbFwiIHRvIGNvbXB1dGVkIHZhbHVlXG5cdFx0aWYgKCB2YWwgPT09IFwibm9ybWFsXCIgJiYgbmFtZSBpbiBjc3NOb3JtYWxUcmFuc2Zvcm0gKSB7XG5cdFx0XHR2YWwgPSBjc3NOb3JtYWxUcmFuc2Zvcm1bIG5hbWUgXTtcblx0XHR9XG5cblx0XHQvLyBNYWtlIG51bWVyaWMgaWYgZm9yY2VkIG9yIGEgcXVhbGlmaWVyIHdhcyBwcm92aWRlZCBhbmQgdmFsIGxvb2tzIG51bWVyaWNcblx0XHRpZiAoIGV4dHJhID09PSBcIlwiIHx8IGV4dHJhICkge1xuXHRcdFx0bnVtID0gcGFyc2VGbG9hdCggdmFsICk7XG5cdFx0XHRyZXR1cm4gZXh0cmEgPT09IHRydWUgfHwgaXNGaW5pdGUoIG51bSApID8gbnVtIHx8IDAgOiB2YWw7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHZhbDtcblx0fVxufSApO1xuXG5qUXVlcnkuZWFjaCggWyBcImhlaWdodFwiLCBcIndpZHRoXCIgXSwgZnVuY3Rpb24oIF9pLCBkaW1lbnNpb24gKSB7XG5cdGpRdWVyeS5jc3NIb29rc1sgZGltZW5zaW9uIF0gPSB7XG5cdFx0Z2V0OiBmdW5jdGlvbiggZWxlbSwgY29tcHV0ZWQsIGV4dHJhICkge1xuXHRcdFx0aWYgKCBjb21wdXRlZCApIHtcblxuXHRcdFx0XHQvLyBDZXJ0YWluIGVsZW1lbnRzIGNhbiBoYXZlIGRpbWVuc2lvbiBpbmZvIGlmIHdlIGludmlzaWJseSBzaG93IHRoZW1cblx0XHRcdFx0Ly8gYnV0IGl0IG11c3QgaGF2ZSBhIGN1cnJlbnQgZGlzcGxheSBzdHlsZSB0aGF0IHdvdWxkIGJlbmVmaXRcblx0XHRcdFx0cmV0dXJuIHJkaXNwbGF5c3dhcC50ZXN0KCBqUXVlcnkuY3NzKCBlbGVtLCBcImRpc3BsYXlcIiApICkgJiZcblxuXHRcdFx0XHRcdC8vIFN1cHBvcnQ6IFNhZmFyaSA4K1xuXHRcdFx0XHRcdC8vIFRhYmxlIGNvbHVtbnMgaW4gU2FmYXJpIGhhdmUgbm9uLXplcm8gb2Zmc2V0V2lkdGggJiB6ZXJvXG5cdFx0XHRcdFx0Ly8gZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkud2lkdGggdW5sZXNzIGRpc3BsYXkgaXMgY2hhbmdlZC5cblx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8PTExIG9ubHlcblx0XHRcdFx0XHQvLyBSdW5uaW5nIGdldEJvdW5kaW5nQ2xpZW50UmVjdCBvbiBhIGRpc2Nvbm5lY3RlZCBub2RlXG5cdFx0XHRcdFx0Ly8gaW4gSUUgdGhyb3dzIGFuIGVycm9yLlxuXHRcdFx0XHRcdCggIWVsZW0uZ2V0Q2xpZW50UmVjdHMoKS5sZW5ndGggfHwgIWVsZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkud2lkdGggKSA/XG5cdFx0XHRcdFx0c3dhcCggZWxlbSwgY3NzU2hvdywgZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZ2V0V2lkdGhPckhlaWdodCggZWxlbSwgZGltZW5zaW9uLCBleHRyYSApO1xuXHRcdFx0XHRcdH0gKSA6XG5cdFx0XHRcdFx0Z2V0V2lkdGhPckhlaWdodCggZWxlbSwgZGltZW5zaW9uLCBleHRyYSApO1xuXHRcdFx0fVxuXHRcdH0sXG5cblx0XHRzZXQ6IGZ1bmN0aW9uKCBlbGVtLCB2YWx1ZSwgZXh0cmEgKSB7XG5cdFx0XHR2YXIgbWF0Y2hlcyxcblx0XHRcdFx0c3R5bGVzID0gZ2V0U3R5bGVzKCBlbGVtICksXG5cblx0XHRcdFx0Ly8gT25seSByZWFkIHN0eWxlcy5wb3NpdGlvbiBpZiB0aGUgdGVzdCBoYXMgYSBjaGFuY2UgdG8gZmFpbFxuXHRcdFx0XHQvLyB0byBhdm9pZCBmb3JjaW5nIGEgcmVmbG93LlxuXHRcdFx0XHRzY3JvbGxib3hTaXplQnVnZ3kgPSAhc3VwcG9ydC5zY3JvbGxib3hTaXplKCkgJiZcblx0XHRcdFx0XHRzdHlsZXMucG9zaXRpb24gPT09IFwiYWJzb2x1dGVcIixcblxuXHRcdFx0XHQvLyBUbyBhdm9pZCBmb3JjaW5nIGEgcmVmbG93LCBvbmx5IGZldGNoIGJveFNpemluZyBpZiB3ZSBuZWVkIGl0IChnaC0zOTkxKVxuXHRcdFx0XHRib3hTaXppbmdOZWVkZWQgPSBzY3JvbGxib3hTaXplQnVnZ3kgfHwgZXh0cmEsXG5cdFx0XHRcdGlzQm9yZGVyQm94ID0gYm94U2l6aW5nTmVlZGVkICYmXG5cdFx0XHRcdFx0alF1ZXJ5LmNzcyggZWxlbSwgXCJib3hTaXppbmdcIiwgZmFsc2UsIHN0eWxlcyApID09PSBcImJvcmRlci1ib3hcIixcblx0XHRcdFx0c3VidHJhY3QgPSBleHRyYSA/XG5cdFx0XHRcdFx0Ym94TW9kZWxBZGp1c3RtZW50KFxuXHRcdFx0XHRcdFx0ZWxlbSxcblx0XHRcdFx0XHRcdGRpbWVuc2lvbixcblx0XHRcdFx0XHRcdGV4dHJhLFxuXHRcdFx0XHRcdFx0aXNCb3JkZXJCb3gsXG5cdFx0XHRcdFx0XHRzdHlsZXNcblx0XHRcdFx0XHQpIDpcblx0XHRcdFx0XHQwO1xuXG5cdFx0XHQvLyBBY2NvdW50IGZvciB1bnJlbGlhYmxlIGJvcmRlci1ib3ggZGltZW5zaW9ucyBieSBjb21wYXJpbmcgb2Zmc2V0KiB0byBjb21wdXRlZCBhbmRcblx0XHRcdC8vIGZha2luZyBhIGNvbnRlbnQtYm94IHRvIGdldCBib3JkZXIgYW5kIHBhZGRpbmcgKGdoLTM2OTkpXG5cdFx0XHRpZiAoIGlzQm9yZGVyQm94ICYmIHNjcm9sbGJveFNpemVCdWdneSApIHtcblx0XHRcdFx0c3VidHJhY3QgLT0gTWF0aC5jZWlsKFxuXHRcdFx0XHRcdGVsZW1bIFwib2Zmc2V0XCIgKyBkaW1lbnNpb25bIDAgXS50b1VwcGVyQ2FzZSgpICsgZGltZW5zaW9uLnNsaWNlKCAxICkgXSAtXG5cdFx0XHRcdFx0cGFyc2VGbG9hdCggc3R5bGVzWyBkaW1lbnNpb24gXSApIC1cblx0XHRcdFx0XHRib3hNb2RlbEFkanVzdG1lbnQoIGVsZW0sIGRpbWVuc2lvbiwgXCJib3JkZXJcIiwgZmFsc2UsIHN0eWxlcyApIC1cblx0XHRcdFx0XHQwLjVcblx0XHRcdFx0KTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQ29udmVydCB0byBwaXhlbHMgaWYgdmFsdWUgYWRqdXN0bWVudCBpcyBuZWVkZWRcblx0XHRcdGlmICggc3VidHJhY3QgJiYgKCBtYXRjaGVzID0gcmNzc051bS5leGVjKCB2YWx1ZSApICkgJiZcblx0XHRcdFx0KCBtYXRjaGVzWyAzIF0gfHwgXCJweFwiICkgIT09IFwicHhcIiApIHtcblxuXHRcdFx0XHRlbGVtLnN0eWxlWyBkaW1lbnNpb24gXSA9IHZhbHVlO1xuXHRcdFx0XHR2YWx1ZSA9IGpRdWVyeS5jc3MoIGVsZW0sIGRpbWVuc2lvbiApO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gc2V0UG9zaXRpdmVOdW1iZXIoIGVsZW0sIHZhbHVlLCBzdWJ0cmFjdCApO1xuXHRcdH1cblx0fTtcbn0gKTtcblxualF1ZXJ5LmNzc0hvb2tzLm1hcmdpbkxlZnQgPSBhZGRHZXRIb29rSWYoIHN1cHBvcnQucmVsaWFibGVNYXJnaW5MZWZ0LFxuXHRmdW5jdGlvbiggZWxlbSwgY29tcHV0ZWQgKSB7XG5cdFx0aWYgKCBjb21wdXRlZCApIHtcblx0XHRcdHJldHVybiAoIHBhcnNlRmxvYXQoIGN1ckNTUyggZWxlbSwgXCJtYXJnaW5MZWZ0XCIgKSApIHx8XG5cdFx0XHRcdGVsZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkubGVmdCAtXG5cdFx0XHRcdFx0c3dhcCggZWxlbSwgeyBtYXJnaW5MZWZ0OiAwIH0sIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIGVsZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkubGVmdDtcblx0XHRcdFx0XHR9IClcblx0XHRcdCkgKyBcInB4XCI7XG5cdFx0fVxuXHR9XG4pO1xuXG4vLyBUaGVzZSBob29rcyBhcmUgdXNlZCBieSBhbmltYXRlIHRvIGV4cGFuZCBwcm9wZXJ0aWVzXG5qUXVlcnkuZWFjaCgge1xuXHRtYXJnaW46IFwiXCIsXG5cdHBhZGRpbmc6IFwiXCIsXG5cdGJvcmRlcjogXCJXaWR0aFwiXG59LCBmdW5jdGlvbiggcHJlZml4LCBzdWZmaXggKSB7XG5cdGpRdWVyeS5jc3NIb29rc1sgcHJlZml4ICsgc3VmZml4IF0gPSB7XG5cdFx0ZXhwYW5kOiBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0XHR2YXIgaSA9IDAsXG5cdFx0XHRcdGV4cGFuZGVkID0ge30sXG5cblx0XHRcdFx0Ly8gQXNzdW1lcyBhIHNpbmdsZSBudW1iZXIgaWYgbm90IGEgc3RyaW5nXG5cdFx0XHRcdHBhcnRzID0gdHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiID8gdmFsdWUuc3BsaXQoIFwiIFwiICkgOiBbIHZhbHVlIF07XG5cblx0XHRcdGZvciAoIDsgaSA8IDQ7IGkrKyApIHtcblx0XHRcdFx0ZXhwYW5kZWRbIHByZWZpeCArIGNzc0V4cGFuZFsgaSBdICsgc3VmZml4IF0gPVxuXHRcdFx0XHRcdHBhcnRzWyBpIF0gfHwgcGFydHNbIGkgLSAyIF0gfHwgcGFydHNbIDAgXTtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIGV4cGFuZGVkO1xuXHRcdH1cblx0fTtcblxuXHRpZiAoIHByZWZpeCAhPT0gXCJtYXJnaW5cIiApIHtcblx0XHRqUXVlcnkuY3NzSG9va3NbIHByZWZpeCArIHN1ZmZpeCBdLnNldCA9IHNldFBvc2l0aXZlTnVtYmVyO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0Y3NzOiBmdW5jdGlvbiggbmFtZSwgdmFsdWUgKSB7XG5cdFx0cmV0dXJuIGFjY2VzcyggdGhpcywgZnVuY3Rpb24oIGVsZW0sIG5hbWUsIHZhbHVlICkge1xuXHRcdFx0dmFyIHN0eWxlcywgbGVuLFxuXHRcdFx0XHRtYXAgPSB7fSxcblx0XHRcdFx0aSA9IDA7XG5cblx0XHRcdGlmICggQXJyYXkuaXNBcnJheSggbmFtZSApICkge1xuXHRcdFx0XHRzdHlsZXMgPSBnZXRTdHlsZXMoIGVsZW0gKTtcblx0XHRcdFx0bGVuID0gbmFtZS5sZW5ndGg7XG5cblx0XHRcdFx0Zm9yICggOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0XHRcdFx0bWFwWyBuYW1lWyBpIF0gXSA9IGpRdWVyeS5jc3MoIGVsZW0sIG5hbWVbIGkgXSwgZmFsc2UsIHN0eWxlcyApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIG1hcDtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIHZhbHVlICE9PSB1bmRlZmluZWQgP1xuXHRcdFx0XHRqUXVlcnkuc3R5bGUoIGVsZW0sIG5hbWUsIHZhbHVlICkgOlxuXHRcdFx0XHRqUXVlcnkuY3NzKCBlbGVtLCBuYW1lICk7XG5cdFx0fSwgbmFtZSwgdmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggPiAxICk7XG5cdH1cbn0gKTtcblxuXG5mdW5jdGlvbiBUd2VlbiggZWxlbSwgb3B0aW9ucywgcHJvcCwgZW5kLCBlYXNpbmcgKSB7XG5cdHJldHVybiBuZXcgVHdlZW4ucHJvdG90eXBlLmluaXQoIGVsZW0sIG9wdGlvbnMsIHByb3AsIGVuZCwgZWFzaW5nICk7XG59XG5qUXVlcnkuVHdlZW4gPSBUd2VlbjtcblxuVHdlZW4ucHJvdG90eXBlID0ge1xuXHRjb25zdHJ1Y3RvcjogVHdlZW4sXG5cdGluaXQ6IGZ1bmN0aW9uKCBlbGVtLCBvcHRpb25zLCBwcm9wLCBlbmQsIGVhc2luZywgdW5pdCApIHtcblx0XHR0aGlzLmVsZW0gPSBlbGVtO1xuXHRcdHRoaXMucHJvcCA9IHByb3A7XG5cdFx0dGhpcy5lYXNpbmcgPSBlYXNpbmcgfHwgalF1ZXJ5LmVhc2luZy5fZGVmYXVsdDtcblx0XHR0aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xuXHRcdHRoaXMuc3RhcnQgPSB0aGlzLm5vdyA9IHRoaXMuY3VyKCk7XG5cdFx0dGhpcy5lbmQgPSBlbmQ7XG5cdFx0dGhpcy51bml0ID0gdW5pdCB8fCAoIGpRdWVyeS5jc3NOdW1iZXJbIHByb3AgXSA/IFwiXCIgOiBcInB4XCIgKTtcblx0fSxcblx0Y3VyOiBmdW5jdGlvbigpIHtcblx0XHR2YXIgaG9va3MgPSBUd2Vlbi5wcm9wSG9va3NbIHRoaXMucHJvcCBdO1xuXG5cdFx0cmV0dXJuIGhvb2tzICYmIGhvb2tzLmdldCA/XG5cdFx0XHRob29rcy5nZXQoIHRoaXMgKSA6XG5cdFx0XHRUd2Vlbi5wcm9wSG9va3MuX2RlZmF1bHQuZ2V0KCB0aGlzICk7XG5cdH0sXG5cdHJ1bjogZnVuY3Rpb24oIHBlcmNlbnQgKSB7XG5cdFx0dmFyIGVhc2VkLFxuXHRcdFx0aG9va3MgPSBUd2Vlbi5wcm9wSG9va3NbIHRoaXMucHJvcCBdO1xuXG5cdFx0aWYgKCB0aGlzLm9wdGlvbnMuZHVyYXRpb24gKSB7XG5cdFx0XHR0aGlzLnBvcyA9IGVhc2VkID0galF1ZXJ5LmVhc2luZ1sgdGhpcy5lYXNpbmcgXShcblx0XHRcdFx0cGVyY2VudCwgdGhpcy5vcHRpb25zLmR1cmF0aW9uICogcGVyY2VudCwgMCwgMSwgdGhpcy5vcHRpb25zLmR1cmF0aW9uXG5cdFx0XHQpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHR0aGlzLnBvcyA9IGVhc2VkID0gcGVyY2VudDtcblx0XHR9XG5cdFx0dGhpcy5ub3cgPSAoIHRoaXMuZW5kIC0gdGhpcy5zdGFydCApICogZWFzZWQgKyB0aGlzLnN0YXJ0O1xuXG5cdFx0aWYgKCB0aGlzLm9wdGlvbnMuc3RlcCApIHtcblx0XHRcdHRoaXMub3B0aW9ucy5zdGVwLmNhbGwoIHRoaXMuZWxlbSwgdGhpcy5ub3csIHRoaXMgKTtcblx0XHR9XG5cblx0XHRpZiAoIGhvb2tzICYmIGhvb2tzLnNldCApIHtcblx0XHRcdGhvb2tzLnNldCggdGhpcyApO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRUd2Vlbi5wcm9wSG9va3MuX2RlZmF1bHQuc2V0KCB0aGlzICk7XG5cdFx0fVxuXHRcdHJldHVybiB0aGlzO1xuXHR9XG59O1xuXG5Ud2Vlbi5wcm90b3R5cGUuaW5pdC5wcm90b3R5cGUgPSBUd2Vlbi5wcm90b3R5cGU7XG5cblR3ZWVuLnByb3BIb29rcyA9IHtcblx0X2RlZmF1bHQ6IHtcblx0XHRnZXQ6IGZ1bmN0aW9uKCB0d2VlbiApIHtcblx0XHRcdHZhciByZXN1bHQ7XG5cblx0XHRcdC8vIFVzZSBhIHByb3BlcnR5IG9uIHRoZSBlbGVtZW50IGRpcmVjdGx5IHdoZW4gaXQgaXMgbm90IGEgRE9NIGVsZW1lbnQsXG5cdFx0XHQvLyBvciB3aGVuIHRoZXJlIGlzIG5vIG1hdGNoaW5nIHN0eWxlIHByb3BlcnR5IHRoYXQgZXhpc3RzLlxuXHRcdFx0aWYgKCB0d2Vlbi5lbGVtLm5vZGVUeXBlICE9PSAxIHx8XG5cdFx0XHRcdHR3ZWVuLmVsZW1bIHR3ZWVuLnByb3AgXSAhPSBudWxsICYmIHR3ZWVuLmVsZW0uc3R5bGVbIHR3ZWVuLnByb3AgXSA9PSBudWxsICkge1xuXHRcdFx0XHRyZXR1cm4gdHdlZW4uZWxlbVsgdHdlZW4ucHJvcCBdO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBQYXNzaW5nIGFuIGVtcHR5IHN0cmluZyBhcyBhIDNyZCBwYXJhbWV0ZXIgdG8gLmNzcyB3aWxsIGF1dG9tYXRpY2FsbHlcblx0XHRcdC8vIGF0dGVtcHQgYSBwYXJzZUZsb2F0IGFuZCBmYWxsYmFjayB0byBhIHN0cmluZyBpZiB0aGUgcGFyc2UgZmFpbHMuXG5cdFx0XHQvLyBTaW1wbGUgdmFsdWVzIHN1Y2ggYXMgXCIxMHB4XCIgYXJlIHBhcnNlZCB0byBGbG9hdDtcblx0XHRcdC8vIGNvbXBsZXggdmFsdWVzIHN1Y2ggYXMgXCJyb3RhdGUoMXJhZClcIiBhcmUgcmV0dXJuZWQgYXMtaXMuXG5cdFx0XHRyZXN1bHQgPSBqUXVlcnkuY3NzKCB0d2Vlbi5lbGVtLCB0d2Vlbi5wcm9wLCBcIlwiICk7XG5cblx0XHRcdC8vIEVtcHR5IHN0cmluZ3MsIG51bGwsIHVuZGVmaW5lZCBhbmQgXCJhdXRvXCIgYXJlIGNvbnZlcnRlZCB0byAwLlxuXHRcdFx0cmV0dXJuICFyZXN1bHQgfHwgcmVzdWx0ID09PSBcImF1dG9cIiA/IDAgOiByZXN1bHQ7XG5cdFx0fSxcblx0XHRzZXQ6IGZ1bmN0aW9uKCB0d2VlbiApIHtcblxuXHRcdFx0Ly8gVXNlIHN0ZXAgaG9vayBmb3IgYmFjayBjb21wYXQuXG5cdFx0XHQvLyBVc2UgY3NzSG9vayBpZiBpdHMgdGhlcmUuXG5cdFx0XHQvLyBVc2UgLnN0eWxlIGlmIGF2YWlsYWJsZSBhbmQgdXNlIHBsYWluIHByb3BlcnRpZXMgd2hlcmUgYXZhaWxhYmxlLlxuXHRcdFx0aWYgKCBqUXVlcnkuZnguc3RlcFsgdHdlZW4ucHJvcCBdICkge1xuXHRcdFx0XHRqUXVlcnkuZnguc3RlcFsgdHdlZW4ucHJvcCBdKCB0d2VlbiApO1xuXHRcdFx0fSBlbHNlIGlmICggdHdlZW4uZWxlbS5ub2RlVHlwZSA9PT0gMSAmJiAoXG5cdFx0XHRcdGpRdWVyeS5jc3NIb29rc1sgdHdlZW4ucHJvcCBdIHx8XG5cdFx0XHRcdFx0dHdlZW4uZWxlbS5zdHlsZVsgZmluYWxQcm9wTmFtZSggdHdlZW4ucHJvcCApIF0gIT0gbnVsbCApICkge1xuXHRcdFx0XHRqUXVlcnkuc3R5bGUoIHR3ZWVuLmVsZW0sIHR3ZWVuLnByb3AsIHR3ZWVuLm5vdyArIHR3ZWVuLnVuaXQgKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHR3ZWVuLmVsZW1bIHR3ZWVuLnByb3AgXSA9IHR3ZWVuLm5vdztcblx0XHRcdH1cblx0XHR9XG5cdH1cbn07XG5cbi8vIFN1cHBvcnQ6IElFIDw9OSBvbmx5XG4vLyBQYW5pYyBiYXNlZCBhcHByb2FjaCB0byBzZXR0aW5nIHRoaW5ncyBvbiBkaXNjb25uZWN0ZWQgbm9kZXNcblR3ZWVuLnByb3BIb29rcy5zY3JvbGxUb3AgPSBUd2Vlbi5wcm9wSG9va3Muc2Nyb2xsTGVmdCA9IHtcblx0c2V0OiBmdW5jdGlvbiggdHdlZW4gKSB7XG5cdFx0aWYgKCB0d2Vlbi5lbGVtLm5vZGVUeXBlICYmIHR3ZWVuLmVsZW0ucGFyZW50Tm9kZSApIHtcblx0XHRcdHR3ZWVuLmVsZW1bIHR3ZWVuLnByb3AgXSA9IHR3ZWVuLm5vdztcblx0XHR9XG5cdH1cbn07XG5cbmpRdWVyeS5lYXNpbmcgPSB7XG5cdGxpbmVhcjogZnVuY3Rpb24oIHAgKSB7XG5cdFx0cmV0dXJuIHA7XG5cdH0sXG5cdHN3aW5nOiBmdW5jdGlvbiggcCApIHtcblx0XHRyZXR1cm4gMC41IC0gTWF0aC5jb3MoIHAgKiBNYXRoLlBJICkgLyAyO1xuXHR9LFxuXHRfZGVmYXVsdDogXCJzd2luZ1wiXG59O1xuXG5qUXVlcnkuZnggPSBUd2Vlbi5wcm90b3R5cGUuaW5pdDtcblxuLy8gQmFjayBjb21wYXQgPDEuOCBleHRlbnNpb24gcG9pbnRcbmpRdWVyeS5meC5zdGVwID0ge307XG5cblxuXG5cbnZhclxuXHRmeE5vdywgaW5Qcm9ncmVzcyxcblx0cmZ4dHlwZXMgPSAvXig/OnRvZ2dsZXxzaG93fGhpZGUpJC8sXG5cdHJydW4gPSAvcXVldWVIb29rcyQvO1xuXG5mdW5jdGlvbiBzY2hlZHVsZSgpIHtcblx0aWYgKCBpblByb2dyZXNzICkge1xuXHRcdGlmICggZG9jdW1lbnQuaGlkZGVuID09PSBmYWxzZSAmJiB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lICkge1xuXHRcdFx0d2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSggc2NoZWR1bGUgKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0d2luZG93LnNldFRpbWVvdXQoIHNjaGVkdWxlLCBqUXVlcnkuZnguaW50ZXJ2YWwgKTtcblx0XHR9XG5cblx0XHRqUXVlcnkuZngudGljaygpO1xuXHR9XG59XG5cbi8vIEFuaW1hdGlvbnMgY3JlYXRlZCBzeW5jaHJvbm91c2x5IHdpbGwgcnVuIHN5bmNocm9ub3VzbHlcbmZ1bmN0aW9uIGNyZWF0ZUZ4Tm93KCkge1xuXHR3aW5kb3cuc2V0VGltZW91dCggZnVuY3Rpb24oKSB7XG5cdFx0ZnhOb3cgPSB1bmRlZmluZWQ7XG5cdH0gKTtcblx0cmV0dXJuICggZnhOb3cgPSBEYXRlLm5vdygpICk7XG59XG5cbi8vIEdlbmVyYXRlIHBhcmFtZXRlcnMgdG8gY3JlYXRlIGEgc3RhbmRhcmQgYW5pbWF0aW9uXG5mdW5jdGlvbiBnZW5GeCggdHlwZSwgaW5jbHVkZVdpZHRoICkge1xuXHR2YXIgd2hpY2gsXG5cdFx0aSA9IDAsXG5cdFx0YXR0cnMgPSB7IGhlaWdodDogdHlwZSB9O1xuXG5cdC8vIElmIHdlIGluY2x1ZGUgd2lkdGgsIHN0ZXAgdmFsdWUgaXMgMSB0byBkbyBhbGwgY3NzRXhwYW5kIHZhbHVlcyxcblx0Ly8gb3RoZXJ3aXNlIHN0ZXAgdmFsdWUgaXMgMiB0byBza2lwIG92ZXIgTGVmdCBhbmQgUmlnaHRcblx0aW5jbHVkZVdpZHRoID0gaW5jbHVkZVdpZHRoID8gMSA6IDA7XG5cdGZvciAoIDsgaSA8IDQ7IGkgKz0gMiAtIGluY2x1ZGVXaWR0aCApIHtcblx0XHR3aGljaCA9IGNzc0V4cGFuZFsgaSBdO1xuXHRcdGF0dHJzWyBcIm1hcmdpblwiICsgd2hpY2ggXSA9IGF0dHJzWyBcInBhZGRpbmdcIiArIHdoaWNoIF0gPSB0eXBlO1xuXHR9XG5cblx0aWYgKCBpbmNsdWRlV2lkdGggKSB7XG5cdFx0YXR0cnMub3BhY2l0eSA9IGF0dHJzLndpZHRoID0gdHlwZTtcblx0fVxuXG5cdHJldHVybiBhdHRycztcbn1cblxuZnVuY3Rpb24gY3JlYXRlVHdlZW4oIHZhbHVlLCBwcm9wLCBhbmltYXRpb24gKSB7XG5cdHZhciB0d2Vlbixcblx0XHRjb2xsZWN0aW9uID0gKCBBbmltYXRpb24udHdlZW5lcnNbIHByb3AgXSB8fCBbXSApLmNvbmNhdCggQW5pbWF0aW9uLnR3ZWVuZXJzWyBcIipcIiBdICksXG5cdFx0aW5kZXggPSAwLFxuXHRcdGxlbmd0aCA9IGNvbGxlY3Rpb24ubGVuZ3RoO1xuXHRmb3IgKCA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrICkge1xuXHRcdGlmICggKCB0d2VlbiA9IGNvbGxlY3Rpb25bIGluZGV4IF0uY2FsbCggYW5pbWF0aW9uLCBwcm9wLCB2YWx1ZSApICkgKSB7XG5cblx0XHRcdC8vIFdlJ3JlIGRvbmUgd2l0aCB0aGlzIHByb3BlcnR5XG5cdFx0XHRyZXR1cm4gdHdlZW47XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIGRlZmF1bHRQcmVmaWx0ZXIoIGVsZW0sIHByb3BzLCBvcHRzICkge1xuXHR2YXIgcHJvcCwgdmFsdWUsIHRvZ2dsZSwgaG9va3MsIG9sZGZpcmUsIHByb3BUd2VlbiwgcmVzdG9yZURpc3BsYXksIGRpc3BsYXksXG5cdFx0aXNCb3ggPSBcIndpZHRoXCIgaW4gcHJvcHMgfHwgXCJoZWlnaHRcIiBpbiBwcm9wcyxcblx0XHRhbmltID0gdGhpcyxcblx0XHRvcmlnID0ge30sXG5cdFx0c3R5bGUgPSBlbGVtLnN0eWxlLFxuXHRcdGhpZGRlbiA9IGVsZW0ubm9kZVR5cGUgJiYgaXNIaWRkZW5XaXRoaW5UcmVlKCBlbGVtICksXG5cdFx0ZGF0YVNob3cgPSBkYXRhUHJpdi5nZXQoIGVsZW0sIFwiZnhzaG93XCIgKTtcblxuXHQvLyBRdWV1ZS1za2lwcGluZyBhbmltYXRpb25zIGhpamFjayB0aGUgZnggaG9va3Ncblx0aWYgKCAhb3B0cy5xdWV1ZSApIHtcblx0XHRob29rcyA9IGpRdWVyeS5fcXVldWVIb29rcyggZWxlbSwgXCJmeFwiICk7XG5cdFx0aWYgKCBob29rcy51bnF1ZXVlZCA9PSBudWxsICkge1xuXHRcdFx0aG9va3MudW5xdWV1ZWQgPSAwO1xuXHRcdFx0b2xkZmlyZSA9IGhvb2tzLmVtcHR5LmZpcmU7XG5cdFx0XHRob29rcy5lbXB0eS5maXJlID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGlmICggIWhvb2tzLnVucXVldWVkICkge1xuXHRcdFx0XHRcdG9sZGZpcmUoKTtcblx0XHRcdFx0fVxuXHRcdFx0fTtcblx0XHR9XG5cdFx0aG9va3MudW5xdWV1ZWQrKztcblxuXHRcdGFuaW0uYWx3YXlzKCBmdW5jdGlvbigpIHtcblxuXHRcdFx0Ly8gRW5zdXJlIHRoZSBjb21wbGV0ZSBoYW5kbGVyIGlzIGNhbGxlZCBiZWZvcmUgdGhpcyBjb21wbGV0ZXNcblx0XHRcdGFuaW0uYWx3YXlzKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0aG9va3MudW5xdWV1ZWQtLTtcblx0XHRcdFx0aWYgKCAhalF1ZXJ5LnF1ZXVlKCBlbGVtLCBcImZ4XCIgKS5sZW5ndGggKSB7XG5cdFx0XHRcdFx0aG9va3MuZW1wdHkuZmlyZSgpO1xuXHRcdFx0XHR9XG5cdFx0XHR9ICk7XG5cdFx0fSApO1xuXHR9XG5cblx0Ly8gRGV0ZWN0IHNob3cvaGlkZSBhbmltYXRpb25zXG5cdGZvciAoIHByb3AgaW4gcHJvcHMgKSB7XG5cdFx0dmFsdWUgPSBwcm9wc1sgcHJvcCBdO1xuXHRcdGlmICggcmZ4dHlwZXMudGVzdCggdmFsdWUgKSApIHtcblx0XHRcdGRlbGV0ZSBwcm9wc1sgcHJvcCBdO1xuXHRcdFx0dG9nZ2xlID0gdG9nZ2xlIHx8IHZhbHVlID09PSBcInRvZ2dsZVwiO1xuXHRcdFx0aWYgKCB2YWx1ZSA9PT0gKCBoaWRkZW4gPyBcImhpZGVcIiA6IFwic2hvd1wiICkgKSB7XG5cblx0XHRcdFx0Ly8gUHJldGVuZCB0byBiZSBoaWRkZW4gaWYgdGhpcyBpcyBhIFwic2hvd1wiIGFuZFxuXHRcdFx0XHQvLyB0aGVyZSBpcyBzdGlsbCBkYXRhIGZyb20gYSBzdG9wcGVkIHNob3cvaGlkZVxuXHRcdFx0XHRpZiAoIHZhbHVlID09PSBcInNob3dcIiAmJiBkYXRhU2hvdyAmJiBkYXRhU2hvd1sgcHJvcCBdICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdFx0aGlkZGVuID0gdHJ1ZTtcblxuXHRcdFx0XHQvLyBJZ25vcmUgYWxsIG90aGVyIG5vLW9wIHNob3cvaGlkZSBkYXRhXG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0Y29udGludWU7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdG9yaWdbIHByb3AgXSA9IGRhdGFTaG93ICYmIGRhdGFTaG93WyBwcm9wIF0gfHwgalF1ZXJ5LnN0eWxlKCBlbGVtLCBwcm9wICk7XG5cdFx0fVxuXHR9XG5cblx0Ly8gQmFpbCBvdXQgaWYgdGhpcyBpcyBhIG5vLW9wIGxpa2UgLmhpZGUoKS5oaWRlKClcblx0cHJvcFR3ZWVuID0gIWpRdWVyeS5pc0VtcHR5T2JqZWN0KCBwcm9wcyApO1xuXHRpZiAoICFwcm9wVHdlZW4gJiYgalF1ZXJ5LmlzRW1wdHlPYmplY3QoIG9yaWcgKSApIHtcblx0XHRyZXR1cm47XG5cdH1cblxuXHQvLyBSZXN0cmljdCBcIm92ZXJmbG93XCIgYW5kIFwiZGlzcGxheVwiIHN0eWxlcyBkdXJpbmcgYm94IGFuaW1hdGlvbnNcblx0aWYgKCBpc0JveCAmJiBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXG5cdFx0Ly8gU3VwcG9ydDogSUUgPD05IC0gMTEsIEVkZ2UgMTIgLSAxNVxuXHRcdC8vIFJlY29yZCBhbGwgMyBvdmVyZmxvdyBhdHRyaWJ1dGVzIGJlY2F1c2UgSUUgZG9lcyBub3QgaW5mZXIgdGhlIHNob3J0aGFuZFxuXHRcdC8vIGZyb20gaWRlbnRpY2FsbHktdmFsdWVkIG92ZXJmbG93WCBhbmQgb3ZlcmZsb3dZIGFuZCBFZGdlIGp1c3QgbWlycm9yc1xuXHRcdC8vIHRoZSBvdmVyZmxvd1ggdmFsdWUgdGhlcmUuXG5cdFx0b3B0cy5vdmVyZmxvdyA9IFsgc3R5bGUub3ZlcmZsb3csIHN0eWxlLm92ZXJmbG93WCwgc3R5bGUub3ZlcmZsb3dZIF07XG5cblx0XHQvLyBJZGVudGlmeSBhIGRpc3BsYXkgdHlwZSwgcHJlZmVycmluZyBvbGQgc2hvdy9oaWRlIGRhdGEgb3ZlciB0aGUgQ1NTIGNhc2NhZGVcblx0XHRyZXN0b3JlRGlzcGxheSA9IGRhdGFTaG93ICYmIGRhdGFTaG93LmRpc3BsYXk7XG5cdFx0aWYgKCByZXN0b3JlRGlzcGxheSA9PSBudWxsICkge1xuXHRcdFx0cmVzdG9yZURpc3BsYXkgPSBkYXRhUHJpdi5nZXQoIGVsZW0sIFwiZGlzcGxheVwiICk7XG5cdFx0fVxuXHRcdGRpc3BsYXkgPSBqUXVlcnkuY3NzKCBlbGVtLCBcImRpc3BsYXlcIiApO1xuXHRcdGlmICggZGlzcGxheSA9PT0gXCJub25lXCIgKSB7XG5cdFx0XHRpZiAoIHJlc3RvcmVEaXNwbGF5ICkge1xuXHRcdFx0XHRkaXNwbGF5ID0gcmVzdG9yZURpc3BsYXk7XG5cdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdC8vIEdldCBub25lbXB0eSB2YWx1ZShzKSBieSB0ZW1wb3JhcmlseSBmb3JjaW5nIHZpc2liaWxpdHlcblx0XHRcdFx0c2hvd0hpZGUoIFsgZWxlbSBdLCB0cnVlICk7XG5cdFx0XHRcdHJlc3RvcmVEaXNwbGF5ID0gZWxlbS5zdHlsZS5kaXNwbGF5IHx8IHJlc3RvcmVEaXNwbGF5O1xuXHRcdFx0XHRkaXNwbGF5ID0galF1ZXJ5LmNzcyggZWxlbSwgXCJkaXNwbGF5XCIgKTtcblx0XHRcdFx0c2hvd0hpZGUoIFsgZWxlbSBdICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gQW5pbWF0ZSBpbmxpbmUgZWxlbWVudHMgYXMgaW5saW5lLWJsb2NrXG5cdFx0aWYgKCBkaXNwbGF5ID09PSBcImlubGluZVwiIHx8IGRpc3BsYXkgPT09IFwiaW5saW5lLWJsb2NrXCIgJiYgcmVzdG9yZURpc3BsYXkgIT0gbnVsbCApIHtcblx0XHRcdGlmICggalF1ZXJ5LmNzcyggZWxlbSwgXCJmbG9hdFwiICkgPT09IFwibm9uZVwiICkge1xuXG5cdFx0XHRcdC8vIFJlc3RvcmUgdGhlIG9yaWdpbmFsIGRpc3BsYXkgdmFsdWUgYXQgdGhlIGVuZCBvZiBwdXJlIHNob3cvaGlkZSBhbmltYXRpb25zXG5cdFx0XHRcdGlmICggIXByb3BUd2VlbiApIHtcblx0XHRcdFx0XHRhbmltLmRvbmUoIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0c3R5bGUuZGlzcGxheSA9IHJlc3RvcmVEaXNwbGF5O1xuXHRcdFx0XHRcdH0gKTtcblx0XHRcdFx0XHRpZiAoIHJlc3RvcmVEaXNwbGF5ID09IG51bGwgKSB7XG5cdFx0XHRcdFx0XHRkaXNwbGF5ID0gc3R5bGUuZGlzcGxheTtcblx0XHRcdFx0XHRcdHJlc3RvcmVEaXNwbGF5ID0gZGlzcGxheSA9PT0gXCJub25lXCIgPyBcIlwiIDogZGlzcGxheTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0c3R5bGUuZGlzcGxheSA9IFwiaW5saW5lLWJsb2NrXCI7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0aWYgKCBvcHRzLm92ZXJmbG93ICkge1xuXHRcdHN0eWxlLm92ZXJmbG93ID0gXCJoaWRkZW5cIjtcblx0XHRhbmltLmFsd2F5cyggZnVuY3Rpb24oKSB7XG5cdFx0XHRzdHlsZS5vdmVyZmxvdyA9IG9wdHMub3ZlcmZsb3dbIDAgXTtcblx0XHRcdHN0eWxlLm92ZXJmbG93WCA9IG9wdHMub3ZlcmZsb3dbIDEgXTtcblx0XHRcdHN0eWxlLm92ZXJmbG93WSA9IG9wdHMub3ZlcmZsb3dbIDIgXTtcblx0XHR9ICk7XG5cdH1cblxuXHQvLyBJbXBsZW1lbnQgc2hvdy9oaWRlIGFuaW1hdGlvbnNcblx0cHJvcFR3ZWVuID0gZmFsc2U7XG5cdGZvciAoIHByb3AgaW4gb3JpZyApIHtcblxuXHRcdC8vIEdlbmVyYWwgc2hvdy9oaWRlIHNldHVwIGZvciB0aGlzIGVsZW1lbnQgYW5pbWF0aW9uXG5cdFx0aWYgKCAhcHJvcFR3ZWVuICkge1xuXHRcdFx0aWYgKCBkYXRhU2hvdyApIHtcblx0XHRcdFx0aWYgKCBcImhpZGRlblwiIGluIGRhdGFTaG93ICkge1xuXHRcdFx0XHRcdGhpZGRlbiA9IGRhdGFTaG93LmhpZGRlbjtcblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0ZGF0YVNob3cgPSBkYXRhUHJpdi5hY2Nlc3MoIGVsZW0sIFwiZnhzaG93XCIsIHsgZGlzcGxheTogcmVzdG9yZURpc3BsYXkgfSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTdG9yZSBoaWRkZW4vdmlzaWJsZSBmb3IgdG9nZ2xlIHNvIGAuc3RvcCgpLnRvZ2dsZSgpYCBcInJldmVyc2VzXCJcblx0XHRcdGlmICggdG9nZ2xlICkge1xuXHRcdFx0XHRkYXRhU2hvdy5oaWRkZW4gPSAhaGlkZGVuO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTaG93IGVsZW1lbnRzIGJlZm9yZSBhbmltYXRpbmcgdGhlbVxuXHRcdFx0aWYgKCBoaWRkZW4gKSB7XG5cdFx0XHRcdHNob3dIaWRlKCBbIGVsZW0gXSwgdHJ1ZSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvKiBlc2xpbnQtZGlzYWJsZSBuby1sb29wLWZ1bmMgKi9cblxuXHRcdFx0YW5pbS5kb25lKCBmdW5jdGlvbigpIHtcblxuXHRcdFx0XHQvKiBlc2xpbnQtZW5hYmxlIG5vLWxvb3AtZnVuYyAqL1xuXG5cdFx0XHRcdC8vIFRoZSBmaW5hbCBzdGVwIG9mIGEgXCJoaWRlXCIgYW5pbWF0aW9uIGlzIGFjdHVhbGx5IGhpZGluZyB0aGUgZWxlbWVudFxuXHRcdFx0XHRpZiAoICFoaWRkZW4gKSB7XG5cdFx0XHRcdFx0c2hvd0hpZGUoIFsgZWxlbSBdICk7XG5cdFx0XHRcdH1cblx0XHRcdFx0ZGF0YVByaXYucmVtb3ZlKCBlbGVtLCBcImZ4c2hvd1wiICk7XG5cdFx0XHRcdGZvciAoIHByb3AgaW4gb3JpZyApIHtcblx0XHRcdFx0XHRqUXVlcnkuc3R5bGUoIGVsZW0sIHByb3AsIG9yaWdbIHByb3AgXSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9ICk7XG5cdFx0fVxuXG5cdFx0Ly8gUGVyLXByb3BlcnR5IHNldHVwXG5cdFx0cHJvcFR3ZWVuID0gY3JlYXRlVHdlZW4oIGhpZGRlbiA/IGRhdGFTaG93WyBwcm9wIF0gOiAwLCBwcm9wLCBhbmltICk7XG5cdFx0aWYgKCAhKCBwcm9wIGluIGRhdGFTaG93ICkgKSB7XG5cdFx0XHRkYXRhU2hvd1sgcHJvcCBdID0gcHJvcFR3ZWVuLnN0YXJ0O1xuXHRcdFx0aWYgKCBoaWRkZW4gKSB7XG5cdFx0XHRcdHByb3BUd2Vlbi5lbmQgPSBwcm9wVHdlZW4uc3RhcnQ7XG5cdFx0XHRcdHByb3BUd2Vlbi5zdGFydCA9IDA7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIHByb3BGaWx0ZXIoIHByb3BzLCBzcGVjaWFsRWFzaW5nICkge1xuXHR2YXIgaW5kZXgsIG5hbWUsIGVhc2luZywgdmFsdWUsIGhvb2tzO1xuXG5cdC8vIGNhbWVsQ2FzZSwgc3BlY2lhbEVhc2luZyBhbmQgZXhwYW5kIGNzc0hvb2sgcGFzc1xuXHRmb3IgKCBpbmRleCBpbiBwcm9wcyApIHtcblx0XHRuYW1lID0gY2FtZWxDYXNlKCBpbmRleCApO1xuXHRcdGVhc2luZyA9IHNwZWNpYWxFYXNpbmdbIG5hbWUgXTtcblx0XHR2YWx1ZSA9IHByb3BzWyBpbmRleCBdO1xuXHRcdGlmICggQXJyYXkuaXNBcnJheSggdmFsdWUgKSApIHtcblx0XHRcdGVhc2luZyA9IHZhbHVlWyAxIF07XG5cdFx0XHR2YWx1ZSA9IHByb3BzWyBpbmRleCBdID0gdmFsdWVbIDAgXTtcblx0XHR9XG5cblx0XHRpZiAoIGluZGV4ICE9PSBuYW1lICkge1xuXHRcdFx0cHJvcHNbIG5hbWUgXSA9IHZhbHVlO1xuXHRcdFx0ZGVsZXRlIHByb3BzWyBpbmRleCBdO1xuXHRcdH1cblxuXHRcdGhvb2tzID0galF1ZXJ5LmNzc0hvb2tzWyBuYW1lIF07XG5cdFx0aWYgKCBob29rcyAmJiBcImV4cGFuZFwiIGluIGhvb2tzICkge1xuXHRcdFx0dmFsdWUgPSBob29rcy5leHBhbmQoIHZhbHVlICk7XG5cdFx0XHRkZWxldGUgcHJvcHNbIG5hbWUgXTtcblxuXHRcdFx0Ly8gTm90IHF1aXRlICQuZXh0ZW5kLCB0aGlzIHdvbid0IG92ZXJ3cml0ZSBleGlzdGluZyBrZXlzLlxuXHRcdFx0Ly8gUmV1c2luZyAnaW5kZXgnIGJlY2F1c2Ugd2UgaGF2ZSB0aGUgY29ycmVjdCBcIm5hbWVcIlxuXHRcdFx0Zm9yICggaW5kZXggaW4gdmFsdWUgKSB7XG5cdFx0XHRcdGlmICggISggaW5kZXggaW4gcHJvcHMgKSApIHtcblx0XHRcdFx0XHRwcm9wc1sgaW5kZXggXSA9IHZhbHVlWyBpbmRleCBdO1xuXHRcdFx0XHRcdHNwZWNpYWxFYXNpbmdbIGluZGV4IF0gPSBlYXNpbmc7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9IGVsc2Uge1xuXHRcdFx0c3BlY2lhbEVhc2luZ1sgbmFtZSBdID0gZWFzaW5nO1xuXHRcdH1cblx0fVxufVxuXG5mdW5jdGlvbiBBbmltYXRpb24oIGVsZW0sIHByb3BlcnRpZXMsIG9wdGlvbnMgKSB7XG5cdHZhciByZXN1bHQsXG5cdFx0c3RvcHBlZCxcblx0XHRpbmRleCA9IDAsXG5cdFx0bGVuZ3RoID0gQW5pbWF0aW9uLnByZWZpbHRlcnMubGVuZ3RoLFxuXHRcdGRlZmVycmVkID0galF1ZXJ5LkRlZmVycmVkKCkuYWx3YXlzKCBmdW5jdGlvbigpIHtcblxuXHRcdFx0Ly8gRG9uJ3QgbWF0Y2ggZWxlbSBpbiB0aGUgOmFuaW1hdGVkIHNlbGVjdG9yXG5cdFx0XHRkZWxldGUgdGljay5lbGVtO1xuXHRcdH0gKSxcblx0XHR0aWNrID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRpZiAoIHN0b3BwZWQgKSB7XG5cdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdH1cblx0XHRcdHZhciBjdXJyZW50VGltZSA9IGZ4Tm93IHx8IGNyZWF0ZUZ4Tm93KCksXG5cdFx0XHRcdHJlbWFpbmluZyA9IE1hdGgubWF4KCAwLCBhbmltYXRpb24uc3RhcnRUaW1lICsgYW5pbWF0aW9uLmR1cmF0aW9uIC0gY3VycmVudFRpbWUgKSxcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBBbmRyb2lkIDIuMyBvbmx5XG5cdFx0XHRcdC8vIEFyY2hhaWMgY3Jhc2ggYnVnIHdvbid0IGFsbG93IHVzIHRvIHVzZSBgMSAtICggMC41IHx8IDAgKWAgKCMxMjQ5Nylcblx0XHRcdFx0dGVtcCA9IHJlbWFpbmluZyAvIGFuaW1hdGlvbi5kdXJhdGlvbiB8fCAwLFxuXHRcdFx0XHRwZXJjZW50ID0gMSAtIHRlbXAsXG5cdFx0XHRcdGluZGV4ID0gMCxcblx0XHRcdFx0bGVuZ3RoID0gYW5pbWF0aW9uLnR3ZWVucy5sZW5ndGg7XG5cblx0XHRcdGZvciAoIDsgaW5kZXggPCBsZW5ndGg7IGluZGV4KysgKSB7XG5cdFx0XHRcdGFuaW1hdGlvbi50d2VlbnNbIGluZGV4IF0ucnVuKCBwZXJjZW50ICk7XG5cdFx0XHR9XG5cblx0XHRcdGRlZmVycmVkLm5vdGlmeVdpdGgoIGVsZW0sIFsgYW5pbWF0aW9uLCBwZXJjZW50LCByZW1haW5pbmcgXSApO1xuXG5cdFx0XHQvLyBJZiB0aGVyZSdzIG1vcmUgdG8gZG8sIHlpZWxkXG5cdFx0XHRpZiAoIHBlcmNlbnQgPCAxICYmIGxlbmd0aCApIHtcblx0XHRcdFx0cmV0dXJuIHJlbWFpbmluZztcblx0XHRcdH1cblxuXHRcdFx0Ly8gSWYgdGhpcyB3YXMgYW4gZW1wdHkgYW5pbWF0aW9uLCBzeW50aGVzaXplIGEgZmluYWwgcHJvZ3Jlc3Mgbm90aWZpY2F0aW9uXG5cdFx0XHRpZiAoICFsZW5ndGggKSB7XG5cdFx0XHRcdGRlZmVycmVkLm5vdGlmeVdpdGgoIGVsZW0sIFsgYW5pbWF0aW9uLCAxLCAwIF0gKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gUmVzb2x2ZSB0aGUgYW5pbWF0aW9uIGFuZCByZXBvcnQgaXRzIGNvbmNsdXNpb25cblx0XHRcdGRlZmVycmVkLnJlc29sdmVXaXRoKCBlbGVtLCBbIGFuaW1hdGlvbiBdICk7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fSxcblx0XHRhbmltYXRpb24gPSBkZWZlcnJlZC5wcm9taXNlKCB7XG5cdFx0XHRlbGVtOiBlbGVtLFxuXHRcdFx0cHJvcHM6IGpRdWVyeS5leHRlbmQoIHt9LCBwcm9wZXJ0aWVzICksXG5cdFx0XHRvcHRzOiBqUXVlcnkuZXh0ZW5kKCB0cnVlLCB7XG5cdFx0XHRcdHNwZWNpYWxFYXNpbmc6IHt9LFxuXHRcdFx0XHRlYXNpbmc6IGpRdWVyeS5lYXNpbmcuX2RlZmF1bHRcblx0XHRcdH0sIG9wdGlvbnMgKSxcblx0XHRcdG9yaWdpbmFsUHJvcGVydGllczogcHJvcGVydGllcyxcblx0XHRcdG9yaWdpbmFsT3B0aW9uczogb3B0aW9ucyxcblx0XHRcdHN0YXJ0VGltZTogZnhOb3cgfHwgY3JlYXRlRnhOb3coKSxcblx0XHRcdGR1cmF0aW9uOiBvcHRpb25zLmR1cmF0aW9uLFxuXHRcdFx0dHdlZW5zOiBbXSxcblx0XHRcdGNyZWF0ZVR3ZWVuOiBmdW5jdGlvbiggcHJvcCwgZW5kICkge1xuXHRcdFx0XHR2YXIgdHdlZW4gPSBqUXVlcnkuVHdlZW4oIGVsZW0sIGFuaW1hdGlvbi5vcHRzLCBwcm9wLCBlbmQsXG5cdFx0XHRcdFx0YW5pbWF0aW9uLm9wdHMuc3BlY2lhbEVhc2luZ1sgcHJvcCBdIHx8IGFuaW1hdGlvbi5vcHRzLmVhc2luZyApO1xuXHRcdFx0XHRhbmltYXRpb24udHdlZW5zLnB1c2goIHR3ZWVuICk7XG5cdFx0XHRcdHJldHVybiB0d2Vlbjtcblx0XHRcdH0sXG5cdFx0XHRzdG9wOiBmdW5jdGlvbiggZ290b0VuZCApIHtcblx0XHRcdFx0dmFyIGluZGV4ID0gMCxcblxuXHRcdFx0XHRcdC8vIElmIHdlIGFyZSBnb2luZyB0byB0aGUgZW5kLCB3ZSB3YW50IHRvIHJ1biBhbGwgdGhlIHR3ZWVuc1xuXHRcdFx0XHRcdC8vIG90aGVyd2lzZSB3ZSBza2lwIHRoaXMgcGFydFxuXHRcdFx0XHRcdGxlbmd0aCA9IGdvdG9FbmQgPyBhbmltYXRpb24udHdlZW5zLmxlbmd0aCA6IDA7XG5cdFx0XHRcdGlmICggc3RvcHBlZCApIHtcblx0XHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdFx0fVxuXHRcdFx0XHRzdG9wcGVkID0gdHJ1ZTtcblx0XHRcdFx0Zm9yICggOyBpbmRleCA8IGxlbmd0aDsgaW5kZXgrKyApIHtcblx0XHRcdFx0XHRhbmltYXRpb24udHdlZW5zWyBpbmRleCBdLnJ1biggMSApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gUmVzb2x2ZSB3aGVuIHdlIHBsYXllZCB0aGUgbGFzdCBmcmFtZTsgb3RoZXJ3aXNlLCByZWplY3Rcblx0XHRcdFx0aWYgKCBnb3RvRW5kICkge1xuXHRcdFx0XHRcdGRlZmVycmVkLm5vdGlmeVdpdGgoIGVsZW0sIFsgYW5pbWF0aW9uLCAxLCAwIF0gKTtcblx0XHRcdFx0XHRkZWZlcnJlZC5yZXNvbHZlV2l0aCggZWxlbSwgWyBhbmltYXRpb24sIGdvdG9FbmQgXSApO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGRlZmVycmVkLnJlamVjdFdpdGgoIGVsZW0sIFsgYW5pbWF0aW9uLCBnb3RvRW5kIF0gKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH1cblx0XHR9ICksXG5cdFx0cHJvcHMgPSBhbmltYXRpb24ucHJvcHM7XG5cblx0cHJvcEZpbHRlciggcHJvcHMsIGFuaW1hdGlvbi5vcHRzLnNwZWNpYWxFYXNpbmcgKTtcblxuXHRmb3IgKCA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrICkge1xuXHRcdHJlc3VsdCA9IEFuaW1hdGlvbi5wcmVmaWx0ZXJzWyBpbmRleCBdLmNhbGwoIGFuaW1hdGlvbiwgZWxlbSwgcHJvcHMsIGFuaW1hdGlvbi5vcHRzICk7XG5cdFx0aWYgKCByZXN1bHQgKSB7XG5cdFx0XHRpZiAoIGlzRnVuY3Rpb24oIHJlc3VsdC5zdG9wICkgKSB7XG5cdFx0XHRcdGpRdWVyeS5fcXVldWVIb29rcyggYW5pbWF0aW9uLmVsZW0sIGFuaW1hdGlvbi5vcHRzLnF1ZXVlICkuc3RvcCA9XG5cdFx0XHRcdFx0cmVzdWx0LnN0b3AuYmluZCggcmVzdWx0ICk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gcmVzdWx0O1xuXHRcdH1cblx0fVxuXG5cdGpRdWVyeS5tYXAoIHByb3BzLCBjcmVhdGVUd2VlbiwgYW5pbWF0aW9uICk7XG5cblx0aWYgKCBpc0Z1bmN0aW9uKCBhbmltYXRpb24ub3B0cy5zdGFydCApICkge1xuXHRcdGFuaW1hdGlvbi5vcHRzLnN0YXJ0LmNhbGwoIGVsZW0sIGFuaW1hdGlvbiApO1xuXHR9XG5cblx0Ly8gQXR0YWNoIGNhbGxiYWNrcyBmcm9tIG9wdGlvbnNcblx0YW5pbWF0aW9uXG5cdFx0LnByb2dyZXNzKCBhbmltYXRpb24ub3B0cy5wcm9ncmVzcyApXG5cdFx0LmRvbmUoIGFuaW1hdGlvbi5vcHRzLmRvbmUsIGFuaW1hdGlvbi5vcHRzLmNvbXBsZXRlIClcblx0XHQuZmFpbCggYW5pbWF0aW9uLm9wdHMuZmFpbCApXG5cdFx0LmFsd2F5cyggYW5pbWF0aW9uLm9wdHMuYWx3YXlzICk7XG5cblx0alF1ZXJ5LmZ4LnRpbWVyKFxuXHRcdGpRdWVyeS5leHRlbmQoIHRpY2ssIHtcblx0XHRcdGVsZW06IGVsZW0sXG5cdFx0XHRhbmltOiBhbmltYXRpb24sXG5cdFx0XHRxdWV1ZTogYW5pbWF0aW9uLm9wdHMucXVldWVcblx0XHR9IClcblx0KTtcblxuXHRyZXR1cm4gYW5pbWF0aW9uO1xufVxuXG5qUXVlcnkuQW5pbWF0aW9uID0galF1ZXJ5LmV4dGVuZCggQW5pbWF0aW9uLCB7XG5cblx0dHdlZW5lcnM6IHtcblx0XHRcIipcIjogWyBmdW5jdGlvbiggcHJvcCwgdmFsdWUgKSB7XG5cdFx0XHR2YXIgdHdlZW4gPSB0aGlzLmNyZWF0ZVR3ZWVuKCBwcm9wLCB2YWx1ZSApO1xuXHRcdFx0YWRqdXN0Q1NTKCB0d2Vlbi5lbGVtLCBwcm9wLCByY3NzTnVtLmV4ZWMoIHZhbHVlICksIHR3ZWVuICk7XG5cdFx0XHRyZXR1cm4gdHdlZW47XG5cdFx0fSBdXG5cdH0sXG5cblx0dHdlZW5lcjogZnVuY3Rpb24oIHByb3BzLCBjYWxsYmFjayApIHtcblx0XHRpZiAoIGlzRnVuY3Rpb24oIHByb3BzICkgKSB7XG5cdFx0XHRjYWxsYmFjayA9IHByb3BzO1xuXHRcdFx0cHJvcHMgPSBbIFwiKlwiIF07XG5cdFx0fSBlbHNlIHtcblx0XHRcdHByb3BzID0gcHJvcHMubWF0Y2goIHJub3RodG1sd2hpdGUgKTtcblx0XHR9XG5cblx0XHR2YXIgcHJvcCxcblx0XHRcdGluZGV4ID0gMCxcblx0XHRcdGxlbmd0aCA9IHByb3BzLmxlbmd0aDtcblxuXHRcdGZvciAoIDsgaW5kZXggPCBsZW5ndGg7IGluZGV4KysgKSB7XG5cdFx0XHRwcm9wID0gcHJvcHNbIGluZGV4IF07XG5cdFx0XHRBbmltYXRpb24udHdlZW5lcnNbIHByb3AgXSA9IEFuaW1hdGlvbi50d2VlbmVyc1sgcHJvcCBdIHx8IFtdO1xuXHRcdFx0QW5pbWF0aW9uLnR3ZWVuZXJzWyBwcm9wIF0udW5zaGlmdCggY2FsbGJhY2sgKTtcblx0XHR9XG5cdH0sXG5cblx0cHJlZmlsdGVyczogWyBkZWZhdWx0UHJlZmlsdGVyIF0sXG5cblx0cHJlZmlsdGVyOiBmdW5jdGlvbiggY2FsbGJhY2ssIHByZXBlbmQgKSB7XG5cdFx0aWYgKCBwcmVwZW5kICkge1xuXHRcdFx0QW5pbWF0aW9uLnByZWZpbHRlcnMudW5zaGlmdCggY2FsbGJhY2sgKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0QW5pbWF0aW9uLnByZWZpbHRlcnMucHVzaCggY2FsbGJhY2sgKTtcblx0XHR9XG5cdH1cbn0gKTtcblxualF1ZXJ5LnNwZWVkID0gZnVuY3Rpb24oIHNwZWVkLCBlYXNpbmcsIGZuICkge1xuXHR2YXIgb3B0ID0gc3BlZWQgJiYgdHlwZW9mIHNwZWVkID09PSBcIm9iamVjdFwiID8galF1ZXJ5LmV4dGVuZCgge30sIHNwZWVkICkgOiB7XG5cdFx0Y29tcGxldGU6IGZuIHx8ICFmbiAmJiBlYXNpbmcgfHxcblx0XHRcdGlzRnVuY3Rpb24oIHNwZWVkICkgJiYgc3BlZWQsXG5cdFx0ZHVyYXRpb246IHNwZWVkLFxuXHRcdGVhc2luZzogZm4gJiYgZWFzaW5nIHx8IGVhc2luZyAmJiAhaXNGdW5jdGlvbiggZWFzaW5nICkgJiYgZWFzaW5nXG5cdH07XG5cblx0Ly8gR28gdG8gdGhlIGVuZCBzdGF0ZSBpZiBmeCBhcmUgb2ZmXG5cdGlmICggalF1ZXJ5LmZ4Lm9mZiApIHtcblx0XHRvcHQuZHVyYXRpb24gPSAwO1xuXG5cdH0gZWxzZSB7XG5cdFx0aWYgKCB0eXBlb2Ygb3B0LmR1cmF0aW9uICE9PSBcIm51bWJlclwiICkge1xuXHRcdFx0aWYgKCBvcHQuZHVyYXRpb24gaW4galF1ZXJ5LmZ4LnNwZWVkcyApIHtcblx0XHRcdFx0b3B0LmR1cmF0aW9uID0galF1ZXJ5LmZ4LnNwZWVkc1sgb3B0LmR1cmF0aW9uIF07XG5cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdG9wdC5kdXJhdGlvbiA9IGpRdWVyeS5meC5zcGVlZHMuX2RlZmF1bHQ7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Ly8gTm9ybWFsaXplIG9wdC5xdWV1ZSAtIHRydWUvdW5kZWZpbmVkL251bGwgLT4gXCJmeFwiXG5cdGlmICggb3B0LnF1ZXVlID09IG51bGwgfHwgb3B0LnF1ZXVlID09PSB0cnVlICkge1xuXHRcdG9wdC5xdWV1ZSA9IFwiZnhcIjtcblx0fVxuXG5cdC8vIFF1ZXVlaW5nXG5cdG9wdC5vbGQgPSBvcHQuY29tcGxldGU7XG5cblx0b3B0LmNvbXBsZXRlID0gZnVuY3Rpb24oKSB7XG5cdFx0aWYgKCBpc0Z1bmN0aW9uKCBvcHQub2xkICkgKSB7XG5cdFx0XHRvcHQub2xkLmNhbGwoIHRoaXMgKTtcblx0XHR9XG5cblx0XHRpZiAoIG9wdC5xdWV1ZSApIHtcblx0XHRcdGpRdWVyeS5kZXF1ZXVlKCB0aGlzLCBvcHQucXVldWUgKTtcblx0XHR9XG5cdH07XG5cblx0cmV0dXJuIG9wdDtcbn07XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0ZmFkZVRvOiBmdW5jdGlvbiggc3BlZWQsIHRvLCBlYXNpbmcsIGNhbGxiYWNrICkge1xuXG5cdFx0Ly8gU2hvdyBhbnkgaGlkZGVuIGVsZW1lbnRzIGFmdGVyIHNldHRpbmcgb3BhY2l0eSB0byAwXG5cdFx0cmV0dXJuIHRoaXMuZmlsdGVyKCBpc0hpZGRlbldpdGhpblRyZWUgKS5jc3MoIFwib3BhY2l0eVwiLCAwICkuc2hvdygpXG5cblx0XHRcdC8vIEFuaW1hdGUgdG8gdGhlIHZhbHVlIHNwZWNpZmllZFxuXHRcdFx0LmVuZCgpLmFuaW1hdGUoIHsgb3BhY2l0eTogdG8gfSwgc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKTtcblx0fSxcblx0YW5pbWF0ZTogZnVuY3Rpb24oIHByb3AsIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICkge1xuXHRcdHZhciBlbXB0eSA9IGpRdWVyeS5pc0VtcHR5T2JqZWN0KCBwcm9wICksXG5cdFx0XHRvcHRhbGwgPSBqUXVlcnkuc3BlZWQoIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICksXG5cdFx0XHRkb0FuaW1hdGlvbiA9IGZ1bmN0aW9uKCkge1xuXG5cdFx0XHRcdC8vIE9wZXJhdGUgb24gYSBjb3B5IG9mIHByb3Agc28gcGVyLXByb3BlcnR5IGVhc2luZyB3b24ndCBiZSBsb3N0XG5cdFx0XHRcdHZhciBhbmltID0gQW5pbWF0aW9uKCB0aGlzLCBqUXVlcnkuZXh0ZW5kKCB7fSwgcHJvcCApLCBvcHRhbGwgKTtcblxuXHRcdFx0XHQvLyBFbXB0eSBhbmltYXRpb25zLCBvciBmaW5pc2hpbmcgcmVzb2x2ZXMgaW1tZWRpYXRlbHlcblx0XHRcdFx0aWYgKCBlbXB0eSB8fCBkYXRhUHJpdi5nZXQoIHRoaXMsIFwiZmluaXNoXCIgKSApIHtcblx0XHRcdFx0XHRhbmltLnN0b3AoIHRydWUgKTtcblx0XHRcdFx0fVxuXHRcdFx0fTtcblxuXHRcdGRvQW5pbWF0aW9uLmZpbmlzaCA9IGRvQW5pbWF0aW9uO1xuXG5cdFx0cmV0dXJuIGVtcHR5IHx8IG9wdGFsbC5xdWV1ZSA9PT0gZmFsc2UgP1xuXHRcdFx0dGhpcy5lYWNoKCBkb0FuaW1hdGlvbiApIDpcblx0XHRcdHRoaXMucXVldWUoIG9wdGFsbC5xdWV1ZSwgZG9BbmltYXRpb24gKTtcblx0fSxcblx0c3RvcDogZnVuY3Rpb24oIHR5cGUsIGNsZWFyUXVldWUsIGdvdG9FbmQgKSB7XG5cdFx0dmFyIHN0b3BRdWV1ZSA9IGZ1bmN0aW9uKCBob29rcyApIHtcblx0XHRcdHZhciBzdG9wID0gaG9va3Muc3RvcDtcblx0XHRcdGRlbGV0ZSBob29rcy5zdG9wO1xuXHRcdFx0c3RvcCggZ290b0VuZCApO1xuXHRcdH07XG5cblx0XHRpZiAoIHR5cGVvZiB0eXBlICE9PSBcInN0cmluZ1wiICkge1xuXHRcdFx0Z290b0VuZCA9IGNsZWFyUXVldWU7XG5cdFx0XHRjbGVhclF1ZXVlID0gdHlwZTtcblx0XHRcdHR5cGUgPSB1bmRlZmluZWQ7XG5cdFx0fVxuXHRcdGlmICggY2xlYXJRdWV1ZSApIHtcblx0XHRcdHRoaXMucXVldWUoIHR5cGUgfHwgXCJmeFwiLCBbXSApO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIGRlcXVldWUgPSB0cnVlLFxuXHRcdFx0XHRpbmRleCA9IHR5cGUgIT0gbnVsbCAmJiB0eXBlICsgXCJxdWV1ZUhvb2tzXCIsXG5cdFx0XHRcdHRpbWVycyA9IGpRdWVyeS50aW1lcnMsXG5cdFx0XHRcdGRhdGEgPSBkYXRhUHJpdi5nZXQoIHRoaXMgKTtcblxuXHRcdFx0aWYgKCBpbmRleCApIHtcblx0XHRcdFx0aWYgKCBkYXRhWyBpbmRleCBdICYmIGRhdGFbIGluZGV4IF0uc3RvcCApIHtcblx0XHRcdFx0XHRzdG9wUXVldWUoIGRhdGFbIGluZGV4IF0gKTtcblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0Zm9yICggaW5kZXggaW4gZGF0YSApIHtcblx0XHRcdFx0XHRpZiAoIGRhdGFbIGluZGV4IF0gJiYgZGF0YVsgaW5kZXggXS5zdG9wICYmIHJydW4udGVzdCggaW5kZXggKSApIHtcblx0XHRcdFx0XHRcdHN0b3BRdWV1ZSggZGF0YVsgaW5kZXggXSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHRmb3IgKCBpbmRleCA9IHRpbWVycy5sZW5ndGg7IGluZGV4LS07ICkge1xuXHRcdFx0XHRpZiAoIHRpbWVyc1sgaW5kZXggXS5lbGVtID09PSB0aGlzICYmXG5cdFx0XHRcdFx0KCB0eXBlID09IG51bGwgfHwgdGltZXJzWyBpbmRleCBdLnF1ZXVlID09PSB0eXBlICkgKSB7XG5cblx0XHRcdFx0XHR0aW1lcnNbIGluZGV4IF0uYW5pbS5zdG9wKCBnb3RvRW5kICk7XG5cdFx0XHRcdFx0ZGVxdWV1ZSA9IGZhbHNlO1xuXHRcdFx0XHRcdHRpbWVycy5zcGxpY2UoIGluZGV4LCAxICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gU3RhcnQgdGhlIG5leHQgaW4gdGhlIHF1ZXVlIGlmIHRoZSBsYXN0IHN0ZXAgd2Fzbid0IGZvcmNlZC5cblx0XHRcdC8vIFRpbWVycyBjdXJyZW50bHkgd2lsbCBjYWxsIHRoZWlyIGNvbXBsZXRlIGNhbGxiYWNrcywgd2hpY2hcblx0XHRcdC8vIHdpbGwgZGVxdWV1ZSBidXQgb25seSBpZiB0aGV5IHdlcmUgZ290b0VuZC5cblx0XHRcdGlmICggZGVxdWV1ZSB8fCAhZ290b0VuZCApIHtcblx0XHRcdFx0alF1ZXJ5LmRlcXVldWUoIHRoaXMsIHR5cGUgKTtcblx0XHRcdH1cblx0XHR9ICk7XG5cdH0sXG5cdGZpbmlzaDogZnVuY3Rpb24oIHR5cGUgKSB7XG5cdFx0aWYgKCB0eXBlICE9PSBmYWxzZSApIHtcblx0XHRcdHR5cGUgPSB0eXBlIHx8IFwiZnhcIjtcblx0XHR9XG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgaW5kZXgsXG5cdFx0XHRcdGRhdGEgPSBkYXRhUHJpdi5nZXQoIHRoaXMgKSxcblx0XHRcdFx0cXVldWUgPSBkYXRhWyB0eXBlICsgXCJxdWV1ZVwiIF0sXG5cdFx0XHRcdGhvb2tzID0gZGF0YVsgdHlwZSArIFwicXVldWVIb29rc1wiIF0sXG5cdFx0XHRcdHRpbWVycyA9IGpRdWVyeS50aW1lcnMsXG5cdFx0XHRcdGxlbmd0aCA9IHF1ZXVlID8gcXVldWUubGVuZ3RoIDogMDtcblxuXHRcdFx0Ly8gRW5hYmxlIGZpbmlzaGluZyBmbGFnIG9uIHByaXZhdGUgZGF0YVxuXHRcdFx0ZGF0YS5maW5pc2ggPSB0cnVlO1xuXG5cdFx0XHQvLyBFbXB0eSB0aGUgcXVldWUgZmlyc3Rcblx0XHRcdGpRdWVyeS5xdWV1ZSggdGhpcywgdHlwZSwgW10gKTtcblxuXHRcdFx0aWYgKCBob29rcyAmJiBob29rcy5zdG9wICkge1xuXHRcdFx0XHRob29rcy5zdG9wLmNhbGwoIHRoaXMsIHRydWUgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gTG9vayBmb3IgYW55IGFjdGl2ZSBhbmltYXRpb25zLCBhbmQgZmluaXNoIHRoZW1cblx0XHRcdGZvciAoIGluZGV4ID0gdGltZXJzLmxlbmd0aDsgaW5kZXgtLTsgKSB7XG5cdFx0XHRcdGlmICggdGltZXJzWyBpbmRleCBdLmVsZW0gPT09IHRoaXMgJiYgdGltZXJzWyBpbmRleCBdLnF1ZXVlID09PSB0eXBlICkge1xuXHRcdFx0XHRcdHRpbWVyc1sgaW5kZXggXS5hbmltLnN0b3AoIHRydWUgKTtcblx0XHRcdFx0XHR0aW1lcnMuc3BsaWNlKCBpbmRleCwgMSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIExvb2sgZm9yIGFueSBhbmltYXRpb25zIGluIHRoZSBvbGQgcXVldWUgYW5kIGZpbmlzaCB0aGVtXG5cdFx0XHRmb3IgKCBpbmRleCA9IDA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrICkge1xuXHRcdFx0XHRpZiAoIHF1ZXVlWyBpbmRleCBdICYmIHF1ZXVlWyBpbmRleCBdLmZpbmlzaCApIHtcblx0XHRcdFx0XHRxdWV1ZVsgaW5kZXggXS5maW5pc2guY2FsbCggdGhpcyApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIFR1cm4gb2ZmIGZpbmlzaGluZyBmbGFnXG5cdFx0XHRkZWxldGUgZGF0YS5maW5pc2g7XG5cdFx0fSApO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5lYWNoKCBbIFwidG9nZ2xlXCIsIFwic2hvd1wiLCBcImhpZGVcIiBdLCBmdW5jdGlvbiggX2ksIG5hbWUgKSB7XG5cdHZhciBjc3NGbiA9IGpRdWVyeS5mblsgbmFtZSBdO1xuXHRqUXVlcnkuZm5bIG5hbWUgXSA9IGZ1bmN0aW9uKCBzcGVlZCwgZWFzaW5nLCBjYWxsYmFjayApIHtcblx0XHRyZXR1cm4gc3BlZWQgPT0gbnVsbCB8fCB0eXBlb2Ygc3BlZWQgPT09IFwiYm9vbGVhblwiID9cblx0XHRcdGNzc0ZuLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKSA6XG5cdFx0XHR0aGlzLmFuaW1hdGUoIGdlbkZ4KCBuYW1lLCB0cnVlICksIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICk7XG5cdH07XG59ICk7XG5cbi8vIEdlbmVyYXRlIHNob3J0Y3V0cyBmb3IgY3VzdG9tIGFuaW1hdGlvbnNcbmpRdWVyeS5lYWNoKCB7XG5cdHNsaWRlRG93bjogZ2VuRngoIFwic2hvd1wiICksXG5cdHNsaWRlVXA6IGdlbkZ4KCBcImhpZGVcIiApLFxuXHRzbGlkZVRvZ2dsZTogZ2VuRngoIFwidG9nZ2xlXCIgKSxcblx0ZmFkZUluOiB7IG9wYWNpdHk6IFwic2hvd1wiIH0sXG5cdGZhZGVPdXQ6IHsgb3BhY2l0eTogXCJoaWRlXCIgfSxcblx0ZmFkZVRvZ2dsZTogeyBvcGFjaXR5OiBcInRvZ2dsZVwiIH1cbn0sIGZ1bmN0aW9uKCBuYW1lLCBwcm9wcyApIHtcblx0alF1ZXJ5LmZuWyBuYW1lIF0gPSBmdW5jdGlvbiggc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKSB7XG5cdFx0cmV0dXJuIHRoaXMuYW5pbWF0ZSggcHJvcHMsIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICk7XG5cdH07XG59ICk7XG5cbmpRdWVyeS50aW1lcnMgPSBbXTtcbmpRdWVyeS5meC50aWNrID0gZnVuY3Rpb24oKSB7XG5cdHZhciB0aW1lcixcblx0XHRpID0gMCxcblx0XHR0aW1lcnMgPSBqUXVlcnkudGltZXJzO1xuXG5cdGZ4Tm93ID0gRGF0ZS5ub3coKTtcblxuXHRmb3IgKCA7IGkgPCB0aW1lcnMubGVuZ3RoOyBpKysgKSB7XG5cdFx0dGltZXIgPSB0aW1lcnNbIGkgXTtcblxuXHRcdC8vIFJ1biB0aGUgdGltZXIgYW5kIHNhZmVseSByZW1vdmUgaXQgd2hlbiBkb25lIChhbGxvd2luZyBmb3IgZXh0ZXJuYWwgcmVtb3ZhbClcblx0XHRpZiAoICF0aW1lcigpICYmIHRpbWVyc1sgaSBdID09PSB0aW1lciApIHtcblx0XHRcdHRpbWVycy5zcGxpY2UoIGktLSwgMSApO1xuXHRcdH1cblx0fVxuXG5cdGlmICggIXRpbWVycy5sZW5ndGggKSB7XG5cdFx0alF1ZXJ5LmZ4LnN0b3AoKTtcblx0fVxuXHRmeE5vdyA9IHVuZGVmaW5lZDtcbn07XG5cbmpRdWVyeS5meC50aW1lciA9IGZ1bmN0aW9uKCB0aW1lciApIHtcblx0alF1ZXJ5LnRpbWVycy5wdXNoKCB0aW1lciApO1xuXHRqUXVlcnkuZnguc3RhcnQoKTtcbn07XG5cbmpRdWVyeS5meC5pbnRlcnZhbCA9IDEzO1xualF1ZXJ5LmZ4LnN0YXJ0ID0gZnVuY3Rpb24oKSB7XG5cdGlmICggaW5Qcm9ncmVzcyApIHtcblx0XHRyZXR1cm47XG5cdH1cblxuXHRpblByb2dyZXNzID0gdHJ1ZTtcblx0c2NoZWR1bGUoKTtcbn07XG5cbmpRdWVyeS5meC5zdG9wID0gZnVuY3Rpb24oKSB7XG5cdGluUHJvZ3Jlc3MgPSBudWxsO1xufTtcblxualF1ZXJ5LmZ4LnNwZWVkcyA9IHtcblx0c2xvdzogNjAwLFxuXHRmYXN0OiAyMDAsXG5cblx0Ly8gRGVmYXVsdCBzcGVlZFxuXHRfZGVmYXVsdDogNDAwXG59O1xuXG5cbi8vIEJhc2VkIG9mZiBvZiB0aGUgcGx1Z2luIGJ5IENsaW50IEhlbGZlcnMsIHdpdGggcGVybWlzc2lvbi5cbi8vIGh0dHBzOi8vd2ViLmFyY2hpdmUub3JnL3dlYi8yMDEwMDMyNDAxNDc0Ny9odHRwOi8vYmxpbmRzaWduYWxzLmNvbS9pbmRleC5waHAvMjAwOS8wNy9qcXVlcnktZGVsYXkvXG5qUXVlcnkuZm4uZGVsYXkgPSBmdW5jdGlvbiggdGltZSwgdHlwZSApIHtcblx0dGltZSA9IGpRdWVyeS5meCA/IGpRdWVyeS5meC5zcGVlZHNbIHRpbWUgXSB8fCB0aW1lIDogdGltZTtcblx0dHlwZSA9IHR5cGUgfHwgXCJmeFwiO1xuXG5cdHJldHVybiB0aGlzLnF1ZXVlKCB0eXBlLCBmdW5jdGlvbiggbmV4dCwgaG9va3MgKSB7XG5cdFx0dmFyIHRpbWVvdXQgPSB3aW5kb3cuc2V0VGltZW91dCggbmV4dCwgdGltZSApO1xuXHRcdGhvb2tzLnN0b3AgPSBmdW5jdGlvbigpIHtcblx0XHRcdHdpbmRvdy5jbGVhclRpbWVvdXQoIHRpbWVvdXQgKTtcblx0XHR9O1xuXHR9ICk7XG59O1xuXG5cbiggZnVuY3Rpb24oKSB7XG5cdHZhciBpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiaW5wdXRcIiApLFxuXHRcdHNlbGVjdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwic2VsZWN0XCIgKSxcblx0XHRvcHQgPSBzZWxlY3QuYXBwZW5kQ2hpbGQoIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwib3B0aW9uXCIgKSApO1xuXG5cdGlucHV0LnR5cGUgPSBcImNoZWNrYm94XCI7XG5cblx0Ly8gU3VwcG9ydDogQW5kcm9pZCA8PTQuMyBvbmx5XG5cdC8vIERlZmF1bHQgdmFsdWUgZm9yIGEgY2hlY2tib3ggc2hvdWxkIGJlIFwib25cIlxuXHRzdXBwb3J0LmNoZWNrT24gPSBpbnB1dC52YWx1ZSAhPT0gXCJcIjtcblxuXHQvLyBTdXBwb3J0OiBJRSA8PTExIG9ubHlcblx0Ly8gTXVzdCBhY2Nlc3Mgc2VsZWN0ZWRJbmRleCB0byBtYWtlIGRlZmF1bHQgb3B0aW9ucyBzZWxlY3Rcblx0c3VwcG9ydC5vcHRTZWxlY3RlZCA9IG9wdC5zZWxlY3RlZDtcblxuXHQvLyBTdXBwb3J0OiBJRSA8PTExIG9ubHlcblx0Ly8gQW4gaW5wdXQgbG9zZXMgaXRzIHZhbHVlIGFmdGVyIGJlY29taW5nIGEgcmFkaW9cblx0aW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImlucHV0XCIgKTtcblx0aW5wdXQudmFsdWUgPSBcInRcIjtcblx0aW5wdXQudHlwZSA9IFwicmFkaW9cIjtcblx0c3VwcG9ydC5yYWRpb1ZhbHVlID0gaW5wdXQudmFsdWUgPT09IFwidFwiO1xufSApKCk7XG5cblxudmFyIGJvb2xIb29rLFxuXHRhdHRySGFuZGxlID0galF1ZXJ5LmV4cHIuYXR0ckhhbmRsZTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRhdHRyOiBmdW5jdGlvbiggbmFtZSwgdmFsdWUgKSB7XG5cdFx0cmV0dXJuIGFjY2VzcyggdGhpcywgalF1ZXJ5LmF0dHIsIG5hbWUsIHZhbHVlLCBhcmd1bWVudHMubGVuZ3RoID4gMSApO1xuXHR9LFxuXG5cdHJlbW92ZUF0dHI6IGZ1bmN0aW9uKCBuYW1lICkge1xuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0alF1ZXJ5LnJlbW92ZUF0dHIoIHRoaXMsIG5hbWUgKTtcblx0XHR9ICk7XG5cdH1cbn0gKTtcblxualF1ZXJ5LmV4dGVuZCgge1xuXHRhdHRyOiBmdW5jdGlvbiggZWxlbSwgbmFtZSwgdmFsdWUgKSB7XG5cdFx0dmFyIHJldCwgaG9va3MsXG5cdFx0XHRuVHlwZSA9IGVsZW0ubm9kZVR5cGU7XG5cblx0XHQvLyBEb24ndCBnZXQvc2V0IGF0dHJpYnV0ZXMgb24gdGV4dCwgY29tbWVudCBhbmQgYXR0cmlidXRlIG5vZGVzXG5cdFx0aWYgKCBuVHlwZSA9PT0gMyB8fCBuVHlwZSA9PT0gOCB8fCBuVHlwZSA9PT0gMiApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBGYWxsYmFjayB0byBwcm9wIHdoZW4gYXR0cmlidXRlcyBhcmUgbm90IHN1cHBvcnRlZFxuXHRcdGlmICggdHlwZW9mIGVsZW0uZ2V0QXR0cmlidXRlID09PSBcInVuZGVmaW5lZFwiICkge1xuXHRcdFx0cmV0dXJuIGpRdWVyeS5wcm9wKCBlbGVtLCBuYW1lLCB2YWx1ZSApO1xuXHRcdH1cblxuXHRcdC8vIEF0dHJpYnV0ZSBob29rcyBhcmUgZGV0ZXJtaW5lZCBieSB0aGUgbG93ZXJjYXNlIHZlcnNpb25cblx0XHQvLyBHcmFiIG5lY2Vzc2FyeSBob29rIGlmIG9uZSBpcyBkZWZpbmVkXG5cdFx0aWYgKCBuVHlwZSAhPT0gMSB8fCAhalF1ZXJ5LmlzWE1MRG9jKCBlbGVtICkgKSB7XG5cdFx0XHRob29rcyA9IGpRdWVyeS5hdHRySG9va3NbIG5hbWUudG9Mb3dlckNhc2UoKSBdIHx8XG5cdFx0XHRcdCggalF1ZXJ5LmV4cHIubWF0Y2guYm9vbC50ZXN0KCBuYW1lICkgPyBib29sSG9vayA6IHVuZGVmaW5lZCApO1xuXHRcdH1cblxuXHRcdGlmICggdmFsdWUgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdGlmICggdmFsdWUgPT09IG51bGwgKSB7XG5cdFx0XHRcdGpRdWVyeS5yZW1vdmVBdHRyKCBlbGVtLCBuYW1lICk7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0aWYgKCBob29rcyAmJiBcInNldFwiIGluIGhvb2tzICYmXG5cdFx0XHRcdCggcmV0ID0gaG9va3Muc2V0KCBlbGVtLCB2YWx1ZSwgbmFtZSApICkgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0cmV0dXJuIHJldDtcblx0XHRcdH1cblxuXHRcdFx0ZWxlbS5zZXRBdHRyaWJ1dGUoIG5hbWUsIHZhbHVlICsgXCJcIiApO1xuXHRcdFx0cmV0dXJuIHZhbHVlO1xuXHRcdH1cblxuXHRcdGlmICggaG9va3MgJiYgXCJnZXRcIiBpbiBob29rcyAmJiAoIHJldCA9IGhvb2tzLmdldCggZWxlbSwgbmFtZSApICkgIT09IG51bGwgKSB7XG5cdFx0XHRyZXR1cm4gcmV0O1xuXHRcdH1cblxuXHRcdHJldCA9IGpRdWVyeS5maW5kLmF0dHIoIGVsZW0sIG5hbWUgKTtcblxuXHRcdC8vIE5vbi1leGlzdGVudCBhdHRyaWJ1dGVzIHJldHVybiBudWxsLCB3ZSBub3JtYWxpemUgdG8gdW5kZWZpbmVkXG5cdFx0cmV0dXJuIHJldCA9PSBudWxsID8gdW5kZWZpbmVkIDogcmV0O1xuXHR9LFxuXG5cdGF0dHJIb29rczoge1xuXHRcdHR5cGU6IHtcblx0XHRcdHNldDogZnVuY3Rpb24oIGVsZW0sIHZhbHVlICkge1xuXHRcdFx0XHRpZiAoICFzdXBwb3J0LnJhZGlvVmFsdWUgJiYgdmFsdWUgPT09IFwicmFkaW9cIiAmJlxuXHRcdFx0XHRcdG5vZGVOYW1lKCBlbGVtLCBcImlucHV0XCIgKSApIHtcblx0XHRcdFx0XHR2YXIgdmFsID0gZWxlbS52YWx1ZTtcblx0XHRcdFx0XHRlbGVtLnNldEF0dHJpYnV0ZSggXCJ0eXBlXCIsIHZhbHVlICk7XG5cdFx0XHRcdFx0aWYgKCB2YWwgKSB7XG5cdFx0XHRcdFx0XHRlbGVtLnZhbHVlID0gdmFsO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRyZXR1cm4gdmFsdWU7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH0sXG5cblx0cmVtb3ZlQXR0cjogZnVuY3Rpb24oIGVsZW0sIHZhbHVlICkge1xuXHRcdHZhciBuYW1lLFxuXHRcdFx0aSA9IDAsXG5cblx0XHRcdC8vIEF0dHJpYnV0ZSBuYW1lcyBjYW4gY29udGFpbiBub24tSFRNTCB3aGl0ZXNwYWNlIGNoYXJhY3RlcnNcblx0XHRcdC8vIGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvbXVsdGlwYWdlL3N5bnRheC5odG1sI2F0dHJpYnV0ZXMtMlxuXHRcdFx0YXR0ck5hbWVzID0gdmFsdWUgJiYgdmFsdWUubWF0Y2goIHJub3RodG1sd2hpdGUgKTtcblxuXHRcdGlmICggYXR0ck5hbWVzICYmIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7XG5cdFx0XHR3aGlsZSAoICggbmFtZSA9IGF0dHJOYW1lc1sgaSsrIF0gKSApIHtcblx0XHRcdFx0ZWxlbS5yZW1vdmVBdHRyaWJ1dGUoIG5hbWUgKTtcblx0XHRcdH1cblx0XHR9XG5cdH1cbn0gKTtcblxuLy8gSG9va3MgZm9yIGJvb2xlYW4gYXR0cmlidXRlc1xuYm9vbEhvb2sgPSB7XG5cdHNldDogZnVuY3Rpb24oIGVsZW0sIHZhbHVlLCBuYW1lICkge1xuXHRcdGlmICggdmFsdWUgPT09IGZhbHNlICkge1xuXG5cdFx0XHQvLyBSZW1vdmUgYm9vbGVhbiBhdHRyaWJ1dGVzIHdoZW4gc2V0IHRvIGZhbHNlXG5cdFx0XHRqUXVlcnkucmVtb3ZlQXR0ciggZWxlbSwgbmFtZSApO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRlbGVtLnNldEF0dHJpYnV0ZSggbmFtZSwgbmFtZSApO1xuXHRcdH1cblx0XHRyZXR1cm4gbmFtZTtcblx0fVxufTtcblxualF1ZXJ5LmVhY2goIGpRdWVyeS5leHByLm1hdGNoLmJvb2wuc291cmNlLm1hdGNoKCAvXFx3Ky9nICksIGZ1bmN0aW9uKCBfaSwgbmFtZSApIHtcblx0dmFyIGdldHRlciA9IGF0dHJIYW5kbGVbIG5hbWUgXSB8fCBqUXVlcnkuZmluZC5hdHRyO1xuXG5cdGF0dHJIYW5kbGVbIG5hbWUgXSA9IGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCBpc1hNTCApIHtcblx0XHR2YXIgcmV0LCBoYW5kbGUsXG5cdFx0XHRsb3dlcmNhc2VOYW1lID0gbmFtZS50b0xvd2VyQ2FzZSgpO1xuXG5cdFx0aWYgKCAhaXNYTUwgKSB7XG5cblx0XHRcdC8vIEF2b2lkIGFuIGluZmluaXRlIGxvb3AgYnkgdGVtcG9yYXJpbHkgcmVtb3ZpbmcgdGhpcyBmdW5jdGlvbiBmcm9tIHRoZSBnZXR0ZXJcblx0XHRcdGhhbmRsZSA9IGF0dHJIYW5kbGVbIGxvd2VyY2FzZU5hbWUgXTtcblx0XHRcdGF0dHJIYW5kbGVbIGxvd2VyY2FzZU5hbWUgXSA9IHJldDtcblx0XHRcdHJldCA9IGdldHRlciggZWxlbSwgbmFtZSwgaXNYTUwgKSAhPSBudWxsID9cblx0XHRcdFx0bG93ZXJjYXNlTmFtZSA6XG5cdFx0XHRcdG51bGw7XG5cdFx0XHRhdHRySGFuZGxlWyBsb3dlcmNhc2VOYW1lIF0gPSBoYW5kbGU7XG5cdFx0fVxuXHRcdHJldHVybiByZXQ7XG5cdH07XG59ICk7XG5cblxuXG5cbnZhciByZm9jdXNhYmxlID0gL14oPzppbnB1dHxzZWxlY3R8dGV4dGFyZWF8YnV0dG9uKSQvaSxcblx0cmNsaWNrYWJsZSA9IC9eKD86YXxhcmVhKSQvaTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRwcm9wOiBmdW5jdGlvbiggbmFtZSwgdmFsdWUgKSB7XG5cdFx0cmV0dXJuIGFjY2VzcyggdGhpcywgalF1ZXJ5LnByb3AsIG5hbWUsIHZhbHVlLCBhcmd1bWVudHMubGVuZ3RoID4gMSApO1xuXHR9LFxuXG5cdHJlbW92ZVByb3A6IGZ1bmN0aW9uKCBuYW1lICkge1xuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0ZGVsZXRlIHRoaXNbIGpRdWVyeS5wcm9wRml4WyBuYW1lIF0gfHwgbmFtZSBdO1xuXHRcdH0gKTtcblx0fVxufSApO1xuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cdHByb3A6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCB2YWx1ZSApIHtcblx0XHR2YXIgcmV0LCBob29rcyxcblx0XHRcdG5UeXBlID0gZWxlbS5ub2RlVHlwZTtcblxuXHRcdC8vIERvbid0IGdldC9zZXQgcHJvcGVydGllcyBvbiB0ZXh0LCBjb21tZW50IGFuZCBhdHRyaWJ1dGUgbm9kZXNcblx0XHRpZiAoIG5UeXBlID09PSAzIHx8IG5UeXBlID09PSA4IHx8IG5UeXBlID09PSAyICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGlmICggblR5cGUgIT09IDEgfHwgIWpRdWVyeS5pc1hNTERvYyggZWxlbSApICkge1xuXG5cdFx0XHQvLyBGaXggbmFtZSBhbmQgYXR0YWNoIGhvb2tzXG5cdFx0XHRuYW1lID0galF1ZXJ5LnByb3BGaXhbIG5hbWUgXSB8fCBuYW1lO1xuXHRcdFx0aG9va3MgPSBqUXVlcnkucHJvcEhvb2tzWyBuYW1lIF07XG5cdFx0fVxuXG5cdFx0aWYgKCB2YWx1ZSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0aWYgKCBob29rcyAmJiBcInNldFwiIGluIGhvb2tzICYmXG5cdFx0XHRcdCggcmV0ID0gaG9va3Muc2V0KCBlbGVtLCB2YWx1ZSwgbmFtZSApICkgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0cmV0dXJuIHJldDtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuICggZWxlbVsgbmFtZSBdID0gdmFsdWUgKTtcblx0XHR9XG5cblx0XHRpZiAoIGhvb2tzICYmIFwiZ2V0XCIgaW4gaG9va3MgJiYgKCByZXQgPSBob29rcy5nZXQoIGVsZW0sIG5hbWUgKSApICE9PSBudWxsICkge1xuXHRcdFx0cmV0dXJuIHJldDtcblx0XHR9XG5cblx0XHRyZXR1cm4gZWxlbVsgbmFtZSBdO1xuXHR9LFxuXG5cdHByb3BIb29rczoge1xuXHRcdHRhYkluZGV4OiB7XG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCBlbGVtICkge1xuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9OSAtIDExIG9ubHlcblx0XHRcdFx0Ly8gZWxlbS50YWJJbmRleCBkb2Vzbid0IGFsd2F5cyByZXR1cm4gdGhlXG5cdFx0XHRcdC8vIGNvcnJlY3QgdmFsdWUgd2hlbiBpdCBoYXNuJ3QgYmVlbiBleHBsaWNpdGx5IHNldFxuXHRcdFx0XHQvLyBodHRwczovL3dlYi5hcmNoaXZlLm9yZy93ZWIvMjAxNDExMTYyMzMzNDcvaHR0cDovL2ZsdWlkcHJvamVjdC5vcmcvYmxvZy8yMDA4LzAxLzA5L2dldHRpbmctc2V0dGluZy1hbmQtcmVtb3ZpbmctdGFiaW5kZXgtdmFsdWVzLXdpdGgtamF2YXNjcmlwdC9cblx0XHRcdFx0Ly8gVXNlIHByb3BlciBhdHRyaWJ1dGUgcmV0cmlldmFsKCMxMjA3Milcblx0XHRcdFx0dmFyIHRhYmluZGV4ID0galF1ZXJ5LmZpbmQuYXR0ciggZWxlbSwgXCJ0YWJpbmRleFwiICk7XG5cblx0XHRcdFx0aWYgKCB0YWJpbmRleCApIHtcblx0XHRcdFx0XHRyZXR1cm4gcGFyc2VJbnQoIHRhYmluZGV4LCAxMCApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0aWYgKFxuXHRcdFx0XHRcdHJmb2N1c2FibGUudGVzdCggZWxlbS5ub2RlTmFtZSApIHx8XG5cdFx0XHRcdFx0cmNsaWNrYWJsZS50ZXN0KCBlbGVtLm5vZGVOYW1lICkgJiZcblx0XHRcdFx0XHRlbGVtLmhyZWZcblx0XHRcdFx0KSB7XG5cdFx0XHRcdFx0cmV0dXJuIDA7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gLTE7XG5cdFx0XHR9XG5cdFx0fVxuXHR9LFxuXG5cdHByb3BGaXg6IHtcblx0XHRcImZvclwiOiBcImh0bWxGb3JcIixcblx0XHRcImNsYXNzXCI6IFwiY2xhc3NOYW1lXCJcblx0fVxufSApO1xuXG4vLyBTdXBwb3J0OiBJRSA8PTExIG9ubHlcbi8vIEFjY2Vzc2luZyB0aGUgc2VsZWN0ZWRJbmRleCBwcm9wZXJ0eVxuLy8gZm9yY2VzIHRoZSBicm93c2VyIHRvIHJlc3BlY3Qgc2V0dGluZyBzZWxlY3RlZFxuLy8gb24gdGhlIG9wdGlvblxuLy8gVGhlIGdldHRlciBlbnN1cmVzIGEgZGVmYXVsdCBvcHRpb24gaXMgc2VsZWN0ZWRcbi8vIHdoZW4gaW4gYW4gb3B0Z3JvdXBcbi8vIGVzbGludCBydWxlIFwibm8tdW51c2VkLWV4cHJlc3Npb25zXCIgaXMgZGlzYWJsZWQgZm9yIHRoaXMgY29kZVxuLy8gc2luY2UgaXQgY29uc2lkZXJzIHN1Y2ggYWNjZXNzaW9ucyBub29wXG5pZiAoICFzdXBwb3J0Lm9wdFNlbGVjdGVkICkge1xuXHRqUXVlcnkucHJvcEhvb2tzLnNlbGVjdGVkID0ge1xuXHRcdGdldDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cblx0XHRcdC8qIGVzbGludCBuby11bnVzZWQtZXhwcmVzc2lvbnM6IFwib2ZmXCIgKi9cblxuXHRcdFx0dmFyIHBhcmVudCA9IGVsZW0ucGFyZW50Tm9kZTtcblx0XHRcdGlmICggcGFyZW50ICYmIHBhcmVudC5wYXJlbnROb2RlICkge1xuXHRcdFx0XHRwYXJlbnQucGFyZW50Tm9kZS5zZWxlY3RlZEluZGV4O1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIG51bGw7XG5cdFx0fSxcblx0XHRzZXQ6IGZ1bmN0aW9uKCBlbGVtICkge1xuXG5cdFx0XHQvKiBlc2xpbnQgbm8tdW51c2VkLWV4cHJlc3Npb25zOiBcIm9mZlwiICovXG5cblx0XHRcdHZhciBwYXJlbnQgPSBlbGVtLnBhcmVudE5vZGU7XG5cdFx0XHRpZiAoIHBhcmVudCApIHtcblx0XHRcdFx0cGFyZW50LnNlbGVjdGVkSW5kZXg7XG5cblx0XHRcdFx0aWYgKCBwYXJlbnQucGFyZW50Tm9kZSApIHtcblx0XHRcdFx0XHRwYXJlbnQucGFyZW50Tm9kZS5zZWxlY3RlZEluZGV4O1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xufVxuXG5qUXVlcnkuZWFjaCggW1xuXHRcInRhYkluZGV4XCIsXG5cdFwicmVhZE9ubHlcIixcblx0XCJtYXhMZW5ndGhcIixcblx0XCJjZWxsU3BhY2luZ1wiLFxuXHRcImNlbGxQYWRkaW5nXCIsXG5cdFwicm93U3BhblwiLFxuXHRcImNvbFNwYW5cIixcblx0XCJ1c2VNYXBcIixcblx0XCJmcmFtZUJvcmRlclwiLFxuXHRcImNvbnRlbnRFZGl0YWJsZVwiXG5dLCBmdW5jdGlvbigpIHtcblx0alF1ZXJ5LnByb3BGaXhbIHRoaXMudG9Mb3dlckNhc2UoKSBdID0gdGhpcztcbn0gKTtcblxuXG5cblxuXHQvLyBTdHJpcCBhbmQgY29sbGFwc2Ugd2hpdGVzcGFjZSBhY2NvcmRpbmcgdG8gSFRNTCBzcGVjXG5cdC8vIGh0dHBzOi8vaW5mcmEuc3BlYy53aGF0d2cub3JnLyNzdHJpcC1hbmQtY29sbGFwc2UtYXNjaWktd2hpdGVzcGFjZVxuXHRmdW5jdGlvbiBzdHJpcEFuZENvbGxhcHNlKCB2YWx1ZSApIHtcblx0XHR2YXIgdG9rZW5zID0gdmFsdWUubWF0Y2goIHJub3RodG1sd2hpdGUgKSB8fCBbXTtcblx0XHRyZXR1cm4gdG9rZW5zLmpvaW4oIFwiIFwiICk7XG5cdH1cblxuXG5mdW5jdGlvbiBnZXRDbGFzcyggZWxlbSApIHtcblx0cmV0dXJuIGVsZW0uZ2V0QXR0cmlidXRlICYmIGVsZW0uZ2V0QXR0cmlidXRlKCBcImNsYXNzXCIgKSB8fCBcIlwiO1xufVxuXG5mdW5jdGlvbiBjbGFzc2VzVG9BcnJheSggdmFsdWUgKSB7XG5cdGlmICggQXJyYXkuaXNBcnJheSggdmFsdWUgKSApIHtcblx0XHRyZXR1cm4gdmFsdWU7XG5cdH1cblx0aWYgKCB0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0cmV0dXJuIHZhbHVlLm1hdGNoKCBybm90aHRtbHdoaXRlICkgfHwgW107XG5cdH1cblx0cmV0dXJuIFtdO1xufVxuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdGFkZENsYXNzOiBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0dmFyIGNsYXNzZXMsIGVsZW0sIGN1ciwgY3VyVmFsdWUsIGNsYXp6LCBqLCBmaW5hbFZhbHVlLFxuXHRcdFx0aSA9IDA7XG5cblx0XHRpZiAoIGlzRnVuY3Rpb24oIHZhbHVlICkgKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbiggaiApIHtcblx0XHRcdFx0alF1ZXJ5KCB0aGlzICkuYWRkQ2xhc3MoIHZhbHVlLmNhbGwoIHRoaXMsIGosIGdldENsYXNzKCB0aGlzICkgKSApO1xuXHRcdFx0fSApO1xuXHRcdH1cblxuXHRcdGNsYXNzZXMgPSBjbGFzc2VzVG9BcnJheSggdmFsdWUgKTtcblxuXHRcdGlmICggY2xhc3Nlcy5sZW5ndGggKSB7XG5cdFx0XHR3aGlsZSAoICggZWxlbSA9IHRoaXNbIGkrKyBdICkgKSB7XG5cdFx0XHRcdGN1clZhbHVlID0gZ2V0Q2xhc3MoIGVsZW0gKTtcblx0XHRcdFx0Y3VyID0gZWxlbS5ub2RlVHlwZSA9PT0gMSAmJiAoIFwiIFwiICsgc3RyaXBBbmRDb2xsYXBzZSggY3VyVmFsdWUgKSArIFwiIFwiICk7XG5cblx0XHRcdFx0aWYgKCBjdXIgKSB7XG5cdFx0XHRcdFx0aiA9IDA7XG5cdFx0XHRcdFx0d2hpbGUgKCAoIGNsYXp6ID0gY2xhc3Nlc1sgaisrIF0gKSApIHtcblx0XHRcdFx0XHRcdGlmICggY3VyLmluZGV4T2YoIFwiIFwiICsgY2xhenogKyBcIiBcIiApIDwgMCApIHtcblx0XHRcdFx0XHRcdFx0Y3VyICs9IGNsYXp6ICsgXCIgXCI7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gT25seSBhc3NpZ24gaWYgZGlmZmVyZW50IHRvIGF2b2lkIHVubmVlZGVkIHJlbmRlcmluZy5cblx0XHRcdFx0XHRmaW5hbFZhbHVlID0gc3RyaXBBbmRDb2xsYXBzZSggY3VyICk7XG5cdFx0XHRcdFx0aWYgKCBjdXJWYWx1ZSAhPT0gZmluYWxWYWx1ZSApIHtcblx0XHRcdFx0XHRcdGVsZW0uc2V0QXR0cmlidXRlKCBcImNsYXNzXCIsIGZpbmFsVmFsdWUgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcztcblx0fSxcblxuXHRyZW1vdmVDbGFzczogZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdHZhciBjbGFzc2VzLCBlbGVtLCBjdXIsIGN1clZhbHVlLCBjbGF6eiwgaiwgZmluYWxWYWx1ZSxcblx0XHRcdGkgPSAwO1xuXG5cdFx0aWYgKCBpc0Z1bmN0aW9uKCB2YWx1ZSApICkge1xuXHRcdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oIGogKSB7XG5cdFx0XHRcdGpRdWVyeSggdGhpcyApLnJlbW92ZUNsYXNzKCB2YWx1ZS5jYWxsKCB0aGlzLCBqLCBnZXRDbGFzcyggdGhpcyApICkgKTtcblx0XHRcdH0gKTtcblx0XHR9XG5cblx0XHRpZiAoICFhcmd1bWVudHMubGVuZ3RoICkge1xuXHRcdFx0cmV0dXJuIHRoaXMuYXR0ciggXCJjbGFzc1wiLCBcIlwiICk7XG5cdFx0fVxuXG5cdFx0Y2xhc3NlcyA9IGNsYXNzZXNUb0FycmF5KCB2YWx1ZSApO1xuXG5cdFx0aWYgKCBjbGFzc2VzLmxlbmd0aCApIHtcblx0XHRcdHdoaWxlICggKCBlbGVtID0gdGhpc1sgaSsrIF0gKSApIHtcblx0XHRcdFx0Y3VyVmFsdWUgPSBnZXRDbGFzcyggZWxlbSApO1xuXG5cdFx0XHRcdC8vIFRoaXMgZXhwcmVzc2lvbiBpcyBoZXJlIGZvciBiZXR0ZXIgY29tcHJlc3NpYmlsaXR5IChzZWUgYWRkQ2xhc3MpXG5cdFx0XHRcdGN1ciA9IGVsZW0ubm9kZVR5cGUgPT09IDEgJiYgKCBcIiBcIiArIHN0cmlwQW5kQ29sbGFwc2UoIGN1clZhbHVlICkgKyBcIiBcIiApO1xuXG5cdFx0XHRcdGlmICggY3VyICkge1xuXHRcdFx0XHRcdGogPSAwO1xuXHRcdFx0XHRcdHdoaWxlICggKCBjbGF6eiA9IGNsYXNzZXNbIGorKyBdICkgKSB7XG5cblx0XHRcdFx0XHRcdC8vIFJlbW92ZSAqYWxsKiBpbnN0YW5jZXNcblx0XHRcdFx0XHRcdHdoaWxlICggY3VyLmluZGV4T2YoIFwiIFwiICsgY2xhenogKyBcIiBcIiApID4gLTEgKSB7XG5cdFx0XHRcdFx0XHRcdGN1ciA9IGN1ci5yZXBsYWNlKCBcIiBcIiArIGNsYXp6ICsgXCIgXCIsIFwiIFwiICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gT25seSBhc3NpZ24gaWYgZGlmZmVyZW50IHRvIGF2b2lkIHVubmVlZGVkIHJlbmRlcmluZy5cblx0XHRcdFx0XHRmaW5hbFZhbHVlID0gc3RyaXBBbmRDb2xsYXBzZSggY3VyICk7XG5cdFx0XHRcdFx0aWYgKCBjdXJWYWx1ZSAhPT0gZmluYWxWYWx1ZSApIHtcblx0XHRcdFx0XHRcdGVsZW0uc2V0QXR0cmlidXRlKCBcImNsYXNzXCIsIGZpbmFsVmFsdWUgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcztcblx0fSxcblxuXHR0b2dnbGVDbGFzczogZnVuY3Rpb24oIHZhbHVlLCBzdGF0ZVZhbCApIHtcblx0XHR2YXIgdHlwZSA9IHR5cGVvZiB2YWx1ZSxcblx0XHRcdGlzVmFsaWRWYWx1ZSA9IHR5cGUgPT09IFwic3RyaW5nXCIgfHwgQXJyYXkuaXNBcnJheSggdmFsdWUgKTtcblxuXHRcdGlmICggdHlwZW9mIHN0YXRlVmFsID09PSBcImJvb2xlYW5cIiAmJiBpc1ZhbGlkVmFsdWUgKSB7XG5cdFx0XHRyZXR1cm4gc3RhdGVWYWwgPyB0aGlzLmFkZENsYXNzKCB2YWx1ZSApIDogdGhpcy5yZW1vdmVDbGFzcyggdmFsdWUgKTtcblx0XHR9XG5cblx0XHRpZiAoIGlzRnVuY3Rpb24oIHZhbHVlICkgKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbiggaSApIHtcblx0XHRcdFx0alF1ZXJ5KCB0aGlzICkudG9nZ2xlQ2xhc3MoXG5cdFx0XHRcdFx0dmFsdWUuY2FsbCggdGhpcywgaSwgZ2V0Q2xhc3MoIHRoaXMgKSwgc3RhdGVWYWwgKSxcblx0XHRcdFx0XHRzdGF0ZVZhbFxuXHRcdFx0XHQpO1xuXHRcdFx0fSApO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIGNsYXNzTmFtZSwgaSwgc2VsZiwgY2xhc3NOYW1lcztcblxuXHRcdFx0aWYgKCBpc1ZhbGlkVmFsdWUgKSB7XG5cblx0XHRcdFx0Ly8gVG9nZ2xlIGluZGl2aWR1YWwgY2xhc3MgbmFtZXNcblx0XHRcdFx0aSA9IDA7XG5cdFx0XHRcdHNlbGYgPSBqUXVlcnkoIHRoaXMgKTtcblx0XHRcdFx0Y2xhc3NOYW1lcyA9IGNsYXNzZXNUb0FycmF5KCB2YWx1ZSApO1xuXG5cdFx0XHRcdHdoaWxlICggKCBjbGFzc05hbWUgPSBjbGFzc05hbWVzWyBpKysgXSApICkge1xuXG5cdFx0XHRcdFx0Ly8gQ2hlY2sgZWFjaCBjbGFzc05hbWUgZ2l2ZW4sIHNwYWNlIHNlcGFyYXRlZCBsaXN0XG5cdFx0XHRcdFx0aWYgKCBzZWxmLmhhc0NsYXNzKCBjbGFzc05hbWUgKSApIHtcblx0XHRcdFx0XHRcdHNlbGYucmVtb3ZlQ2xhc3MoIGNsYXNzTmFtZSApO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRzZWxmLmFkZENsYXNzKCBjbGFzc05hbWUgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0Ly8gVG9nZ2xlIHdob2xlIGNsYXNzIG5hbWVcblx0XHRcdH0gZWxzZSBpZiAoIHZhbHVlID09PSB1bmRlZmluZWQgfHwgdHlwZSA9PT0gXCJib29sZWFuXCIgKSB7XG5cdFx0XHRcdGNsYXNzTmFtZSA9IGdldENsYXNzKCB0aGlzICk7XG5cdFx0XHRcdGlmICggY2xhc3NOYW1lICkge1xuXG5cdFx0XHRcdFx0Ly8gU3RvcmUgY2xhc3NOYW1lIGlmIHNldFxuXHRcdFx0XHRcdGRhdGFQcml2LnNldCggdGhpcywgXCJfX2NsYXNzTmFtZV9fXCIsIGNsYXNzTmFtZSApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gSWYgdGhlIGVsZW1lbnQgaGFzIGEgY2xhc3MgbmFtZSBvciBpZiB3ZSdyZSBwYXNzZWQgYGZhbHNlYCxcblx0XHRcdFx0Ly8gdGhlbiByZW1vdmUgdGhlIHdob2xlIGNsYXNzbmFtZSAoaWYgdGhlcmUgd2FzIG9uZSwgdGhlIGFib3ZlIHNhdmVkIGl0KS5cblx0XHRcdFx0Ly8gT3RoZXJ3aXNlIGJyaW5nIGJhY2sgd2hhdGV2ZXIgd2FzIHByZXZpb3VzbHkgc2F2ZWQgKGlmIGFueXRoaW5nKSxcblx0XHRcdFx0Ly8gZmFsbGluZyBiYWNrIHRvIHRoZSBlbXB0eSBzdHJpbmcgaWYgbm90aGluZyB3YXMgc3RvcmVkLlxuXHRcdFx0XHRpZiAoIHRoaXMuc2V0QXR0cmlidXRlICkge1xuXHRcdFx0XHRcdHRoaXMuc2V0QXR0cmlidXRlKCBcImNsYXNzXCIsXG5cdFx0XHRcdFx0XHRjbGFzc05hbWUgfHwgdmFsdWUgPT09IGZhbHNlID9cblx0XHRcdFx0XHRcdFx0XCJcIiA6XG5cdFx0XHRcdFx0XHRcdGRhdGFQcml2LmdldCggdGhpcywgXCJfX2NsYXNzTmFtZV9fXCIgKSB8fCBcIlwiXG5cdFx0XHRcdFx0KTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0gKTtcblx0fSxcblxuXHRoYXNDbGFzczogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHZhciBjbGFzc05hbWUsIGVsZW0sXG5cdFx0XHRpID0gMDtcblxuXHRcdGNsYXNzTmFtZSA9IFwiIFwiICsgc2VsZWN0b3IgKyBcIiBcIjtcblx0XHR3aGlsZSAoICggZWxlbSA9IHRoaXNbIGkrKyBdICkgKSB7XG5cdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgJiZcblx0XHRcdFx0KCBcIiBcIiArIHN0cmlwQW5kQ29sbGFwc2UoIGdldENsYXNzKCBlbGVtICkgKSArIFwiIFwiICkuaW5kZXhPZiggY2xhc3NOYW1lICkgPiAtMSApIHtcblx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG59ICk7XG5cblxuXG5cbnZhciBycmV0dXJuID0gL1xcci9nO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdHZhbDogZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdHZhciBob29rcywgcmV0LCB2YWx1ZUlzRnVuY3Rpb24sXG5cdFx0XHRlbGVtID0gdGhpc1sgMCBdO1xuXG5cdFx0aWYgKCAhYXJndW1lbnRzLmxlbmd0aCApIHtcblx0XHRcdGlmICggZWxlbSApIHtcblx0XHRcdFx0aG9va3MgPSBqUXVlcnkudmFsSG9va3NbIGVsZW0udHlwZSBdIHx8XG5cdFx0XHRcdFx0alF1ZXJ5LnZhbEhvb2tzWyBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgXTtcblxuXHRcdFx0XHRpZiAoIGhvb2tzICYmXG5cdFx0XHRcdFx0XCJnZXRcIiBpbiBob29rcyAmJlxuXHRcdFx0XHRcdCggcmV0ID0gaG9va3MuZ2V0KCBlbGVtLCBcInZhbHVlXCIgKSApICE9PSB1bmRlZmluZWRcblx0XHRcdFx0KSB7XG5cdFx0XHRcdFx0cmV0dXJuIHJldDtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldCA9IGVsZW0udmFsdWU7XG5cblx0XHRcdFx0Ly8gSGFuZGxlIG1vc3QgY29tbW9uIHN0cmluZyBjYXNlc1xuXHRcdFx0XHRpZiAoIHR5cGVvZiByZXQgPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHJldC5yZXBsYWNlKCBycmV0dXJuLCBcIlwiICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBIYW5kbGUgY2FzZXMgd2hlcmUgdmFsdWUgaXMgbnVsbC91bmRlZiBvciBudW1iZXJcblx0XHRcdFx0cmV0dXJuIHJldCA9PSBudWxsID8gXCJcIiA6IHJldDtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdHZhbHVlSXNGdW5jdGlvbiA9IGlzRnVuY3Rpb24oIHZhbHVlICk7XG5cblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbiggaSApIHtcblx0XHRcdHZhciB2YWw7XG5cblx0XHRcdGlmICggdGhpcy5ub2RlVHlwZSAhPT0gMSApIHtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIHZhbHVlSXNGdW5jdGlvbiApIHtcblx0XHRcdFx0dmFsID0gdmFsdWUuY2FsbCggdGhpcywgaSwgalF1ZXJ5KCB0aGlzICkudmFsKCkgKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHZhbCA9IHZhbHVlO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBUcmVhdCBudWxsL3VuZGVmaW5lZCBhcyBcIlwiOyBjb252ZXJ0IG51bWJlcnMgdG8gc3RyaW5nXG5cdFx0XHRpZiAoIHZhbCA9PSBudWxsICkge1xuXHRcdFx0XHR2YWwgPSBcIlwiO1xuXG5cdFx0XHR9IGVsc2UgaWYgKCB0eXBlb2YgdmFsID09PSBcIm51bWJlclwiICkge1xuXHRcdFx0XHR2YWwgKz0gXCJcIjtcblxuXHRcdFx0fSBlbHNlIGlmICggQXJyYXkuaXNBcnJheSggdmFsICkgKSB7XG5cdFx0XHRcdHZhbCA9IGpRdWVyeS5tYXAoIHZhbCwgZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdFx0XHRcdHJldHVybiB2YWx1ZSA9PSBudWxsID8gXCJcIiA6IHZhbHVlICsgXCJcIjtcblx0XHRcdFx0fSApO1xuXHRcdFx0fVxuXG5cdFx0XHRob29rcyA9IGpRdWVyeS52YWxIb29rc1sgdGhpcy50eXBlIF0gfHwgalF1ZXJ5LnZhbEhvb2tzWyB0aGlzLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgXTtcblxuXHRcdFx0Ly8gSWYgc2V0IHJldHVybnMgdW5kZWZpbmVkLCBmYWxsIGJhY2sgdG8gbm9ybWFsIHNldHRpbmdcblx0XHRcdGlmICggIWhvb2tzIHx8ICEoIFwic2V0XCIgaW4gaG9va3MgKSB8fCBob29rcy5zZXQoIHRoaXMsIHZhbCwgXCJ2YWx1ZVwiICkgPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0dGhpcy52YWx1ZSA9IHZhbDtcblx0XHRcdH1cblx0XHR9ICk7XG5cdH1cbn0gKTtcblxualF1ZXJ5LmV4dGVuZCgge1xuXHR2YWxIb29rczoge1xuXHRcdG9wdGlvbjoge1xuXHRcdFx0Z2V0OiBmdW5jdGlvbiggZWxlbSApIHtcblxuXHRcdFx0XHR2YXIgdmFsID0galF1ZXJ5LmZpbmQuYXR0ciggZWxlbSwgXCJ2YWx1ZVwiICk7XG5cdFx0XHRcdHJldHVybiB2YWwgIT0gbnVsbCA/XG5cdFx0XHRcdFx0dmFsIDpcblxuXHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9MTAgLSAxMSBvbmx5XG5cdFx0XHRcdFx0Ly8gb3B0aW9uLnRleHQgdGhyb3dzIGV4Y2VwdGlvbnMgKCMxNDY4NiwgIzE0ODU4KVxuXHRcdFx0XHRcdC8vIFN0cmlwIGFuZCBjb2xsYXBzZSB3aGl0ZXNwYWNlXG5cdFx0XHRcdFx0Ly8gaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy8jc3RyaXAtYW5kLWNvbGxhcHNlLXdoaXRlc3BhY2Vcblx0XHRcdFx0XHRzdHJpcEFuZENvbGxhcHNlKCBqUXVlcnkudGV4dCggZWxlbSApICk7XG5cdFx0XHR9XG5cdFx0fSxcblx0XHRzZWxlY3Q6IHtcblx0XHRcdGdldDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdHZhciB2YWx1ZSwgb3B0aW9uLCBpLFxuXHRcdFx0XHRcdG9wdGlvbnMgPSBlbGVtLm9wdGlvbnMsXG5cdFx0XHRcdFx0aW5kZXggPSBlbGVtLnNlbGVjdGVkSW5kZXgsXG5cdFx0XHRcdFx0b25lID0gZWxlbS50eXBlID09PSBcInNlbGVjdC1vbmVcIixcblx0XHRcdFx0XHR2YWx1ZXMgPSBvbmUgPyBudWxsIDogW10sXG5cdFx0XHRcdFx0bWF4ID0gb25lID8gaW5kZXggKyAxIDogb3B0aW9ucy5sZW5ndGg7XG5cblx0XHRcdFx0aWYgKCBpbmRleCA8IDAgKSB7XG5cdFx0XHRcdFx0aSA9IG1heDtcblxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGkgPSBvbmUgPyBpbmRleCA6IDA7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBMb29wIHRocm91Z2ggYWxsIHRoZSBzZWxlY3RlZCBvcHRpb25zXG5cdFx0XHRcdGZvciAoIDsgaSA8IG1heDsgaSsrICkge1xuXHRcdFx0XHRcdG9wdGlvbiA9IG9wdGlvbnNbIGkgXTtcblxuXHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9OSBvbmx5XG5cdFx0XHRcdFx0Ly8gSUU4LTkgZG9lc24ndCB1cGRhdGUgc2VsZWN0ZWQgYWZ0ZXIgZm9ybSByZXNldCAoIzI1NTEpXG5cdFx0XHRcdFx0aWYgKCAoIG9wdGlvbi5zZWxlY3RlZCB8fCBpID09PSBpbmRleCApICYmXG5cblx0XHRcdFx0XHRcdFx0Ly8gRG9uJ3QgcmV0dXJuIG9wdGlvbnMgdGhhdCBhcmUgZGlzYWJsZWQgb3IgaW4gYSBkaXNhYmxlZCBvcHRncm91cFxuXHRcdFx0XHRcdFx0XHQhb3B0aW9uLmRpc2FibGVkICYmXG5cdFx0XHRcdFx0XHRcdCggIW9wdGlvbi5wYXJlbnROb2RlLmRpc2FibGVkIHx8XG5cdFx0XHRcdFx0XHRcdFx0IW5vZGVOYW1lKCBvcHRpb24ucGFyZW50Tm9kZSwgXCJvcHRncm91cFwiICkgKSApIHtcblxuXHRcdFx0XHRcdFx0Ly8gR2V0IHRoZSBzcGVjaWZpYyB2YWx1ZSBmb3IgdGhlIG9wdGlvblxuXHRcdFx0XHRcdFx0dmFsdWUgPSBqUXVlcnkoIG9wdGlvbiApLnZhbCgpO1xuXG5cdFx0XHRcdFx0XHQvLyBXZSBkb24ndCBuZWVkIGFuIGFycmF5IGZvciBvbmUgc2VsZWN0c1xuXHRcdFx0XHRcdFx0aWYgKCBvbmUgKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiB2YWx1ZTtcblx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0Ly8gTXVsdGktU2VsZWN0cyByZXR1cm4gYW4gYXJyYXlcblx0XHRcdFx0XHRcdHZhbHVlcy5wdXNoKCB2YWx1ZSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybiB2YWx1ZXM7XG5cdFx0XHR9LFxuXG5cdFx0XHRzZXQ6IGZ1bmN0aW9uKCBlbGVtLCB2YWx1ZSApIHtcblx0XHRcdFx0dmFyIG9wdGlvblNldCwgb3B0aW9uLFxuXHRcdFx0XHRcdG9wdGlvbnMgPSBlbGVtLm9wdGlvbnMsXG5cdFx0XHRcdFx0dmFsdWVzID0galF1ZXJ5Lm1ha2VBcnJheSggdmFsdWUgKSxcblx0XHRcdFx0XHRpID0gb3B0aW9ucy5sZW5ndGg7XG5cblx0XHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdFx0b3B0aW9uID0gb3B0aW9uc1sgaSBdO1xuXG5cdFx0XHRcdFx0LyogZXNsaW50LWRpc2FibGUgbm8tY29uZC1hc3NpZ24gKi9cblxuXHRcdFx0XHRcdGlmICggb3B0aW9uLnNlbGVjdGVkID1cblx0XHRcdFx0XHRcdGpRdWVyeS5pbkFycmF5KCBqUXVlcnkudmFsSG9va3Mub3B0aW9uLmdldCggb3B0aW9uICksIHZhbHVlcyApID4gLTFcblx0XHRcdFx0XHQpIHtcblx0XHRcdFx0XHRcdG9wdGlvblNldCA9IHRydWU7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0LyogZXNsaW50LWVuYWJsZSBuby1jb25kLWFzc2lnbiAqL1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gRm9yY2UgYnJvd3NlcnMgdG8gYmVoYXZlIGNvbnNpc3RlbnRseSB3aGVuIG5vbi1tYXRjaGluZyB2YWx1ZSBpcyBzZXRcblx0XHRcdFx0aWYgKCAhb3B0aW9uU2V0ICkge1xuXHRcdFx0XHRcdGVsZW0uc2VsZWN0ZWRJbmRleCA9IC0xO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiB2YWx1ZXM7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59ICk7XG5cbi8vIFJhZGlvcyBhbmQgY2hlY2tib3hlcyBnZXR0ZXIvc2V0dGVyXG5qUXVlcnkuZWFjaCggWyBcInJhZGlvXCIsIFwiY2hlY2tib3hcIiBdLCBmdW5jdGlvbigpIHtcblx0alF1ZXJ5LnZhbEhvb2tzWyB0aGlzIF0gPSB7XG5cdFx0c2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUgKSB7XG5cdFx0XHRpZiAoIEFycmF5LmlzQXJyYXkoIHZhbHVlICkgKSB7XG5cdFx0XHRcdHJldHVybiAoIGVsZW0uY2hlY2tlZCA9IGpRdWVyeS5pbkFycmF5KCBqUXVlcnkoIGVsZW0gKS52YWwoKSwgdmFsdWUgKSA+IC0xICk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xuXHRpZiAoICFzdXBwb3J0LmNoZWNrT24gKSB7XG5cdFx0alF1ZXJ5LnZhbEhvb2tzWyB0aGlzIF0uZ2V0ID0gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gZWxlbS5nZXRBdHRyaWJ1dGUoIFwidmFsdWVcIiApID09PSBudWxsID8gXCJvblwiIDogZWxlbS52YWx1ZTtcblx0XHR9O1xuXHR9XG59ICk7XG5cblxuXG5cbi8vIFJldHVybiBqUXVlcnkgZm9yIGF0dHJpYnV0ZXMtb25seSBpbmNsdXNpb25cblxuXG5zdXBwb3J0LmZvY3VzaW4gPSBcIm9uZm9jdXNpblwiIGluIHdpbmRvdztcblxuXG52YXIgcmZvY3VzTW9ycGggPSAvXig/OmZvY3VzaW5mb2N1c3xmb2N1c291dGJsdXIpJC8sXG5cdHN0b3BQcm9wYWdhdGlvbkNhbGxiYWNrID0gZnVuY3Rpb24oIGUgKSB7XG5cdFx0ZS5zdG9wUHJvcGFnYXRpb24oKTtcblx0fTtcblxualF1ZXJ5LmV4dGVuZCggalF1ZXJ5LmV2ZW50LCB7XG5cblx0dHJpZ2dlcjogZnVuY3Rpb24oIGV2ZW50LCBkYXRhLCBlbGVtLCBvbmx5SGFuZGxlcnMgKSB7XG5cblx0XHR2YXIgaSwgY3VyLCB0bXAsIGJ1YmJsZVR5cGUsIG9udHlwZSwgaGFuZGxlLCBzcGVjaWFsLCBsYXN0RWxlbWVudCxcblx0XHRcdGV2ZW50UGF0aCA9IFsgZWxlbSB8fCBkb2N1bWVudCBdLFxuXHRcdFx0dHlwZSA9IGhhc093bi5jYWxsKCBldmVudCwgXCJ0eXBlXCIgKSA/IGV2ZW50LnR5cGUgOiBldmVudCxcblx0XHRcdG5hbWVzcGFjZXMgPSBoYXNPd24uY2FsbCggZXZlbnQsIFwibmFtZXNwYWNlXCIgKSA/IGV2ZW50Lm5hbWVzcGFjZS5zcGxpdCggXCIuXCIgKSA6IFtdO1xuXG5cdFx0Y3VyID0gbGFzdEVsZW1lbnQgPSB0bXAgPSBlbGVtID0gZWxlbSB8fCBkb2N1bWVudDtcblxuXHRcdC8vIERvbid0IGRvIGV2ZW50cyBvbiB0ZXh0IGFuZCBjb21tZW50IG5vZGVzXG5cdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAzIHx8IGVsZW0ubm9kZVR5cGUgPT09IDggKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gZm9jdXMvYmx1ciBtb3JwaHMgdG8gZm9jdXNpbi9vdXQ7IGVuc3VyZSB3ZSdyZSBub3QgZmlyaW5nIHRoZW0gcmlnaHQgbm93XG5cdFx0aWYgKCByZm9jdXNNb3JwaC50ZXN0KCB0eXBlICsgalF1ZXJ5LmV2ZW50LnRyaWdnZXJlZCApICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGlmICggdHlwZS5pbmRleE9mKCBcIi5cIiApID4gLTEgKSB7XG5cblx0XHRcdC8vIE5hbWVzcGFjZWQgdHJpZ2dlcjsgY3JlYXRlIGEgcmVnZXhwIHRvIG1hdGNoIGV2ZW50IHR5cGUgaW4gaGFuZGxlKClcblx0XHRcdG5hbWVzcGFjZXMgPSB0eXBlLnNwbGl0KCBcIi5cIiApO1xuXHRcdFx0dHlwZSA9IG5hbWVzcGFjZXMuc2hpZnQoKTtcblx0XHRcdG5hbWVzcGFjZXMuc29ydCgpO1xuXHRcdH1cblx0XHRvbnR5cGUgPSB0eXBlLmluZGV4T2YoIFwiOlwiICkgPCAwICYmIFwib25cIiArIHR5cGU7XG5cblx0XHQvLyBDYWxsZXIgY2FuIHBhc3MgaW4gYSBqUXVlcnkuRXZlbnQgb2JqZWN0LCBPYmplY3QsIG9yIGp1c3QgYW4gZXZlbnQgdHlwZSBzdHJpbmdcblx0XHRldmVudCA9IGV2ZW50WyBqUXVlcnkuZXhwYW5kbyBdID9cblx0XHRcdGV2ZW50IDpcblx0XHRcdG5ldyBqUXVlcnkuRXZlbnQoIHR5cGUsIHR5cGVvZiBldmVudCA9PT0gXCJvYmplY3RcIiAmJiBldmVudCApO1xuXG5cdFx0Ly8gVHJpZ2dlciBiaXRtYXNrOiAmIDEgZm9yIG5hdGl2ZSBoYW5kbGVyczsgJiAyIGZvciBqUXVlcnkgKGFsd2F5cyB0cnVlKVxuXHRcdGV2ZW50LmlzVHJpZ2dlciA9IG9ubHlIYW5kbGVycyA/IDIgOiAzO1xuXHRcdGV2ZW50Lm5hbWVzcGFjZSA9IG5hbWVzcGFjZXMuam9pbiggXCIuXCIgKTtcblx0XHRldmVudC5ybmFtZXNwYWNlID0gZXZlbnQubmFtZXNwYWNlID9cblx0XHRcdG5ldyBSZWdFeHAoIFwiKF58XFxcXC4pXCIgKyBuYW1lc3BhY2VzLmpvaW4oIFwiXFxcXC4oPzouKlxcXFwufClcIiApICsgXCIoXFxcXC58JClcIiApIDpcblx0XHRcdG51bGw7XG5cblx0XHQvLyBDbGVhbiB1cCB0aGUgZXZlbnQgaW4gY2FzZSBpdCBpcyBiZWluZyByZXVzZWRcblx0XHRldmVudC5yZXN1bHQgPSB1bmRlZmluZWQ7XG5cdFx0aWYgKCAhZXZlbnQudGFyZ2V0ICkge1xuXHRcdFx0ZXZlbnQudGFyZ2V0ID0gZWxlbTtcblx0XHR9XG5cblx0XHQvLyBDbG9uZSBhbnkgaW5jb21pbmcgZGF0YSBhbmQgcHJlcGVuZCB0aGUgZXZlbnQsIGNyZWF0aW5nIHRoZSBoYW5kbGVyIGFyZyBsaXN0XG5cdFx0ZGF0YSA9IGRhdGEgPT0gbnVsbCA/XG5cdFx0XHRbIGV2ZW50IF0gOlxuXHRcdFx0alF1ZXJ5Lm1ha2VBcnJheSggZGF0YSwgWyBldmVudCBdICk7XG5cblx0XHQvLyBBbGxvdyBzcGVjaWFsIGV2ZW50cyB0byBkcmF3IG91dHNpZGUgdGhlIGxpbmVzXG5cdFx0c3BlY2lhbCA9IGpRdWVyeS5ldmVudC5zcGVjaWFsWyB0eXBlIF0gfHwge307XG5cdFx0aWYgKCAhb25seUhhbmRsZXJzICYmIHNwZWNpYWwudHJpZ2dlciAmJiBzcGVjaWFsLnRyaWdnZXIuYXBwbHkoIGVsZW0sIGRhdGEgKSA9PT0gZmFsc2UgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gRGV0ZXJtaW5lIGV2ZW50IHByb3BhZ2F0aW9uIHBhdGggaW4gYWR2YW5jZSwgcGVyIFczQyBldmVudHMgc3BlYyAoIzk5NTEpXG5cdFx0Ly8gQnViYmxlIHVwIHRvIGRvY3VtZW50LCB0aGVuIHRvIHdpbmRvdzsgd2F0Y2ggZm9yIGEgZ2xvYmFsIG93bmVyRG9jdW1lbnQgdmFyICgjOTcyNClcblx0XHRpZiAoICFvbmx5SGFuZGxlcnMgJiYgIXNwZWNpYWwubm9CdWJibGUgJiYgIWlzV2luZG93KCBlbGVtICkgKSB7XG5cblx0XHRcdGJ1YmJsZVR5cGUgPSBzcGVjaWFsLmRlbGVnYXRlVHlwZSB8fCB0eXBlO1xuXHRcdFx0aWYgKCAhcmZvY3VzTW9ycGgudGVzdCggYnViYmxlVHlwZSArIHR5cGUgKSApIHtcblx0XHRcdFx0Y3VyID0gY3VyLnBhcmVudE5vZGU7XG5cdFx0XHR9XG5cdFx0XHRmb3IgKCA7IGN1cjsgY3VyID0gY3VyLnBhcmVudE5vZGUgKSB7XG5cdFx0XHRcdGV2ZW50UGF0aC5wdXNoKCBjdXIgKTtcblx0XHRcdFx0dG1wID0gY3VyO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBPbmx5IGFkZCB3aW5kb3cgaWYgd2UgZ290IHRvIGRvY3VtZW50IChlLmcuLCBub3QgcGxhaW4gb2JqIG9yIGRldGFjaGVkIERPTSlcblx0XHRcdGlmICggdG1wID09PSAoIGVsZW0ub3duZXJEb2N1bWVudCB8fCBkb2N1bWVudCApICkge1xuXHRcdFx0XHRldmVudFBhdGgucHVzaCggdG1wLmRlZmF1bHRWaWV3IHx8IHRtcC5wYXJlbnRXaW5kb3cgfHwgd2luZG93ICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gRmlyZSBoYW5kbGVycyBvbiB0aGUgZXZlbnQgcGF0aFxuXHRcdGkgPSAwO1xuXHRcdHdoaWxlICggKCBjdXIgPSBldmVudFBhdGhbIGkrKyBdICkgJiYgIWV2ZW50LmlzUHJvcGFnYXRpb25TdG9wcGVkKCkgKSB7XG5cdFx0XHRsYXN0RWxlbWVudCA9IGN1cjtcblx0XHRcdGV2ZW50LnR5cGUgPSBpID4gMSA/XG5cdFx0XHRcdGJ1YmJsZVR5cGUgOlxuXHRcdFx0XHRzcGVjaWFsLmJpbmRUeXBlIHx8IHR5cGU7XG5cblx0XHRcdC8vIGpRdWVyeSBoYW5kbGVyXG5cdFx0XHRoYW5kbGUgPSAoIGRhdGFQcml2LmdldCggY3VyLCBcImV2ZW50c1wiICkgfHwgT2JqZWN0LmNyZWF0ZSggbnVsbCApIClbIGV2ZW50LnR5cGUgXSAmJlxuXHRcdFx0XHRkYXRhUHJpdi5nZXQoIGN1ciwgXCJoYW5kbGVcIiApO1xuXHRcdFx0aWYgKCBoYW5kbGUgKSB7XG5cdFx0XHRcdGhhbmRsZS5hcHBseSggY3VyLCBkYXRhICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIE5hdGl2ZSBoYW5kbGVyXG5cdFx0XHRoYW5kbGUgPSBvbnR5cGUgJiYgY3VyWyBvbnR5cGUgXTtcblx0XHRcdGlmICggaGFuZGxlICYmIGhhbmRsZS5hcHBseSAmJiBhY2NlcHREYXRhKCBjdXIgKSApIHtcblx0XHRcdFx0ZXZlbnQucmVzdWx0ID0gaGFuZGxlLmFwcGx5KCBjdXIsIGRhdGEgKTtcblx0XHRcdFx0aWYgKCBldmVudC5yZXN1bHQgPT09IGZhbHNlICkge1xuXHRcdFx0XHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdFx0ZXZlbnQudHlwZSA9IHR5cGU7XG5cblx0XHQvLyBJZiBub2JvZHkgcHJldmVudGVkIHRoZSBkZWZhdWx0IGFjdGlvbiwgZG8gaXQgbm93XG5cdFx0aWYgKCAhb25seUhhbmRsZXJzICYmICFldmVudC5pc0RlZmF1bHRQcmV2ZW50ZWQoKSApIHtcblxuXHRcdFx0aWYgKCAoICFzcGVjaWFsLl9kZWZhdWx0IHx8XG5cdFx0XHRcdHNwZWNpYWwuX2RlZmF1bHQuYXBwbHkoIGV2ZW50UGF0aC5wb3AoKSwgZGF0YSApID09PSBmYWxzZSApICYmXG5cdFx0XHRcdGFjY2VwdERhdGEoIGVsZW0gKSApIHtcblxuXHRcdFx0XHQvLyBDYWxsIGEgbmF0aXZlIERPTSBtZXRob2Qgb24gdGhlIHRhcmdldCB3aXRoIHRoZSBzYW1lIG5hbWUgYXMgdGhlIGV2ZW50LlxuXHRcdFx0XHQvLyBEb24ndCBkbyBkZWZhdWx0IGFjdGlvbnMgb24gd2luZG93LCB0aGF0J3Mgd2hlcmUgZ2xvYmFsIHZhcmlhYmxlcyBiZSAoIzYxNzApXG5cdFx0XHRcdGlmICggb250eXBlICYmIGlzRnVuY3Rpb24oIGVsZW1bIHR5cGUgXSApICYmICFpc1dpbmRvdyggZWxlbSApICkge1xuXG5cdFx0XHRcdFx0Ly8gRG9uJ3QgcmUtdHJpZ2dlciBhbiBvbkZPTyBldmVudCB3aGVuIHdlIGNhbGwgaXRzIEZPTygpIG1ldGhvZFxuXHRcdFx0XHRcdHRtcCA9IGVsZW1bIG9udHlwZSBdO1xuXG5cdFx0XHRcdFx0aWYgKCB0bXAgKSB7XG5cdFx0XHRcdFx0XHRlbGVtWyBvbnR5cGUgXSA9IG51bGw7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gUHJldmVudCByZS10cmlnZ2VyaW5nIG9mIHRoZSBzYW1lIGV2ZW50LCBzaW5jZSB3ZSBhbHJlYWR5IGJ1YmJsZWQgaXQgYWJvdmVcblx0XHRcdFx0XHRqUXVlcnkuZXZlbnQudHJpZ2dlcmVkID0gdHlwZTtcblxuXHRcdFx0XHRcdGlmICggZXZlbnQuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSApIHtcblx0XHRcdFx0XHRcdGxhc3RFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoIHR5cGUsIHN0b3BQcm9wYWdhdGlvbkNhbGxiYWNrICk7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0ZWxlbVsgdHlwZSBdKCk7XG5cblx0XHRcdFx0XHRpZiAoIGV2ZW50LmlzUHJvcGFnYXRpb25TdG9wcGVkKCkgKSB7XG5cdFx0XHRcdFx0XHRsYXN0RWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCB0eXBlLCBzdG9wUHJvcGFnYXRpb25DYWxsYmFjayApO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdGpRdWVyeS5ldmVudC50cmlnZ2VyZWQgPSB1bmRlZmluZWQ7XG5cblx0XHRcdFx0XHRpZiAoIHRtcCApIHtcblx0XHRcdFx0XHRcdGVsZW1bIG9udHlwZSBdID0gdG1wO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBldmVudC5yZXN1bHQ7XG5cdH0sXG5cblx0Ly8gUGlnZ3liYWNrIG9uIGEgZG9ub3IgZXZlbnQgdG8gc2ltdWxhdGUgYSBkaWZmZXJlbnQgb25lXG5cdC8vIFVzZWQgb25seSBmb3IgYGZvY3VzKGluIHwgb3V0KWAgZXZlbnRzXG5cdHNpbXVsYXRlOiBmdW5jdGlvbiggdHlwZSwgZWxlbSwgZXZlbnQgKSB7XG5cdFx0dmFyIGUgPSBqUXVlcnkuZXh0ZW5kKFxuXHRcdFx0bmV3IGpRdWVyeS5FdmVudCgpLFxuXHRcdFx0ZXZlbnQsXG5cdFx0XHR7XG5cdFx0XHRcdHR5cGU6IHR5cGUsXG5cdFx0XHRcdGlzU2ltdWxhdGVkOiB0cnVlXG5cdFx0XHR9XG5cdFx0KTtcblxuXHRcdGpRdWVyeS5ldmVudC50cmlnZ2VyKCBlLCBudWxsLCBlbGVtICk7XG5cdH1cblxufSApO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cblx0dHJpZ2dlcjogZnVuY3Rpb24oIHR5cGUsIGRhdGEgKSB7XG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRqUXVlcnkuZXZlbnQudHJpZ2dlciggdHlwZSwgZGF0YSwgdGhpcyApO1xuXHRcdH0gKTtcblx0fSxcblx0dHJpZ2dlckhhbmRsZXI6IGZ1bmN0aW9uKCB0eXBlLCBkYXRhICkge1xuXHRcdHZhciBlbGVtID0gdGhpc1sgMCBdO1xuXHRcdGlmICggZWxlbSApIHtcblx0XHRcdHJldHVybiBqUXVlcnkuZXZlbnQudHJpZ2dlciggdHlwZSwgZGF0YSwgZWxlbSwgdHJ1ZSApO1xuXHRcdH1cblx0fVxufSApO1xuXG5cbi8vIFN1cHBvcnQ6IEZpcmVmb3ggPD00NFxuLy8gRmlyZWZveCBkb2Vzbid0IGhhdmUgZm9jdXMoaW4gfCBvdXQpIGV2ZW50c1xuLy8gUmVsYXRlZCB0aWNrZXQgLSBodHRwczovL2J1Z3ppbGxhLm1vemlsbGEub3JnL3Nob3dfYnVnLmNnaT9pZD02ODc3ODdcbi8vXG4vLyBTdXBwb3J0OiBDaHJvbWUgPD00OCAtIDQ5LCBTYWZhcmkgPD05LjAgLSA5LjFcbi8vIGZvY3VzKGluIHwgb3V0KSBldmVudHMgZmlyZSBhZnRlciBmb2N1cyAmIGJsdXIgZXZlbnRzLFxuLy8gd2hpY2ggaXMgc3BlYyB2aW9sYXRpb24gLSBodHRwOi8vd3d3LnczLm9yZy9UUi9ET00tTGV2ZWwtMy1FdmVudHMvI2V2ZW50cy1mb2N1c2V2ZW50LWV2ZW50LW9yZGVyXG4vLyBSZWxhdGVkIHRpY2tldCAtIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTQ0OTg1N1xuaWYgKCAhc3VwcG9ydC5mb2N1c2luICkge1xuXHRqUXVlcnkuZWFjaCggeyBmb2N1czogXCJmb2N1c2luXCIsIGJsdXI6IFwiZm9jdXNvdXRcIiB9LCBmdW5jdGlvbiggb3JpZywgZml4ICkge1xuXG5cdFx0Ly8gQXR0YWNoIGEgc2luZ2xlIGNhcHR1cmluZyBoYW5kbGVyIG9uIHRoZSBkb2N1bWVudCB3aGlsZSBzb21lb25lIHdhbnRzIGZvY3VzaW4vZm9jdXNvdXRcblx0XHR2YXIgaGFuZGxlciA9IGZ1bmN0aW9uKCBldmVudCApIHtcblx0XHRcdGpRdWVyeS5ldmVudC5zaW11bGF0ZSggZml4LCBldmVudC50YXJnZXQsIGpRdWVyeS5ldmVudC5maXgoIGV2ZW50ICkgKTtcblx0XHR9O1xuXG5cdFx0alF1ZXJ5LmV2ZW50LnNwZWNpYWxbIGZpeCBdID0ge1xuXHRcdFx0c2V0dXA6IGZ1bmN0aW9uKCkge1xuXG5cdFx0XHRcdC8vIEhhbmRsZTogcmVndWxhciBub2RlcyAodmlhIGB0aGlzLm93bmVyRG9jdW1lbnRgKSwgd2luZG93XG5cdFx0XHRcdC8vICh2aWEgYHRoaXMuZG9jdW1lbnRgKSAmIGRvY3VtZW50ICh2aWEgYHRoaXNgKS5cblx0XHRcdFx0dmFyIGRvYyA9IHRoaXMub3duZXJEb2N1bWVudCB8fCB0aGlzLmRvY3VtZW50IHx8IHRoaXMsXG5cdFx0XHRcdFx0YXR0YWNoZXMgPSBkYXRhUHJpdi5hY2Nlc3MoIGRvYywgZml4ICk7XG5cblx0XHRcdFx0aWYgKCAhYXR0YWNoZXMgKSB7XG5cdFx0XHRcdFx0ZG9jLmFkZEV2ZW50TGlzdGVuZXIoIG9yaWcsIGhhbmRsZXIsIHRydWUgKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRkYXRhUHJpdi5hY2Nlc3MoIGRvYywgZml4LCAoIGF0dGFjaGVzIHx8IDAgKSArIDEgKTtcblx0XHRcdH0sXG5cdFx0XHR0ZWFyZG93bjogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHZhciBkb2MgPSB0aGlzLm93bmVyRG9jdW1lbnQgfHwgdGhpcy5kb2N1bWVudCB8fCB0aGlzLFxuXHRcdFx0XHRcdGF0dGFjaGVzID0gZGF0YVByaXYuYWNjZXNzKCBkb2MsIGZpeCApIC0gMTtcblxuXHRcdFx0XHRpZiAoICFhdHRhY2hlcyApIHtcblx0XHRcdFx0XHRkb2MucmVtb3ZlRXZlbnRMaXN0ZW5lciggb3JpZywgaGFuZGxlciwgdHJ1ZSApO1xuXHRcdFx0XHRcdGRhdGFQcml2LnJlbW92ZSggZG9jLCBmaXggKTtcblxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGRhdGFQcml2LmFjY2VzcyggZG9jLCBmaXgsIGF0dGFjaGVzICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9O1xuXHR9ICk7XG59XG52YXIgbG9jYXRpb24gPSB3aW5kb3cubG9jYXRpb247XG5cbnZhciBub25jZSA9IHsgZ3VpZDogRGF0ZS5ub3coKSB9O1xuXG52YXIgcnF1ZXJ5ID0gKCAvXFw/LyApO1xuXG5cblxuLy8gQ3Jvc3MtYnJvd3NlciB4bWwgcGFyc2luZ1xualF1ZXJ5LnBhcnNlWE1MID0gZnVuY3Rpb24oIGRhdGEgKSB7XG5cdHZhciB4bWwsIHBhcnNlckVycm9yRWxlbTtcblx0aWYgKCAhZGF0YSB8fCB0eXBlb2YgZGF0YSAhPT0gXCJzdHJpbmdcIiApIHtcblx0XHRyZXR1cm4gbnVsbDtcblx0fVxuXG5cdC8vIFN1cHBvcnQ6IElFIDkgLSAxMSBvbmx5XG5cdC8vIElFIHRocm93cyBvbiBwYXJzZUZyb21TdHJpbmcgd2l0aCBpbnZhbGlkIGlucHV0LlxuXHR0cnkge1xuXHRcdHhtbCA9ICggbmV3IHdpbmRvdy5ET01QYXJzZXIoKSApLnBhcnNlRnJvbVN0cmluZyggZGF0YSwgXCJ0ZXh0L3htbFwiICk7XG5cdH0gY2F0Y2ggKCBlICkge31cblxuXHRwYXJzZXJFcnJvckVsZW0gPSB4bWwgJiYgeG1sLmdldEVsZW1lbnRzQnlUYWdOYW1lKCBcInBhcnNlcmVycm9yXCIgKVsgMCBdO1xuXHRpZiAoICF4bWwgfHwgcGFyc2VyRXJyb3JFbGVtICkge1xuXHRcdGpRdWVyeS5lcnJvciggXCJJbnZhbGlkIFhNTDogXCIgKyAoXG5cdFx0XHRwYXJzZXJFcnJvckVsZW0gP1xuXHRcdFx0XHRqUXVlcnkubWFwKCBwYXJzZXJFcnJvckVsZW0uY2hpbGROb2RlcywgZnVuY3Rpb24oIGVsICkge1xuXHRcdFx0XHRcdHJldHVybiBlbC50ZXh0Q29udGVudDtcblx0XHRcdFx0fSApLmpvaW4oIFwiXFxuXCIgKSA6XG5cdFx0XHRcdGRhdGFcblx0XHQpICk7XG5cdH1cblx0cmV0dXJuIHhtbDtcbn07XG5cblxudmFyXG5cdHJicmFja2V0ID0gL1xcW1xcXSQvLFxuXHRyQ1JMRiA9IC9cXHI/XFxuL2csXG5cdHJzdWJtaXR0ZXJUeXBlcyA9IC9eKD86c3VibWl0fGJ1dHRvbnxpbWFnZXxyZXNldHxmaWxlKSQvaSxcblx0cnN1Ym1pdHRhYmxlID0gL14oPzppbnB1dHxzZWxlY3R8dGV4dGFyZWF8a2V5Z2VuKS9pO1xuXG5mdW5jdGlvbiBidWlsZFBhcmFtcyggcHJlZml4LCBvYmosIHRyYWRpdGlvbmFsLCBhZGQgKSB7XG5cdHZhciBuYW1lO1xuXG5cdGlmICggQXJyYXkuaXNBcnJheSggb2JqICkgKSB7XG5cblx0XHQvLyBTZXJpYWxpemUgYXJyYXkgaXRlbS5cblx0XHRqUXVlcnkuZWFjaCggb2JqLCBmdW5jdGlvbiggaSwgdiApIHtcblx0XHRcdGlmICggdHJhZGl0aW9uYWwgfHwgcmJyYWNrZXQudGVzdCggcHJlZml4ICkgKSB7XG5cblx0XHRcdFx0Ly8gVHJlYXQgZWFjaCBhcnJheSBpdGVtIGFzIGEgc2NhbGFyLlxuXHRcdFx0XHRhZGQoIHByZWZpeCwgdiApO1xuXG5cdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdC8vIEl0ZW0gaXMgbm9uLXNjYWxhciAoYXJyYXkgb3Igb2JqZWN0KSwgZW5jb2RlIGl0cyBudW1lcmljIGluZGV4LlxuXHRcdFx0XHRidWlsZFBhcmFtcyhcblx0XHRcdFx0XHRwcmVmaXggKyBcIltcIiArICggdHlwZW9mIHYgPT09IFwib2JqZWN0XCIgJiYgdiAhPSBudWxsID8gaSA6IFwiXCIgKSArIFwiXVwiLFxuXHRcdFx0XHRcdHYsXG5cdFx0XHRcdFx0dHJhZGl0aW9uYWwsXG5cdFx0XHRcdFx0YWRkXG5cdFx0XHRcdCk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXG5cdH0gZWxzZSBpZiAoICF0cmFkaXRpb25hbCAmJiB0b1R5cGUoIG9iaiApID09PSBcIm9iamVjdFwiICkge1xuXG5cdFx0Ly8gU2VyaWFsaXplIG9iamVjdCBpdGVtLlxuXHRcdGZvciAoIG5hbWUgaW4gb2JqICkge1xuXHRcdFx0YnVpbGRQYXJhbXMoIHByZWZpeCArIFwiW1wiICsgbmFtZSArIFwiXVwiLCBvYmpbIG5hbWUgXSwgdHJhZGl0aW9uYWwsIGFkZCApO1xuXHRcdH1cblxuXHR9IGVsc2Uge1xuXG5cdFx0Ly8gU2VyaWFsaXplIHNjYWxhciBpdGVtLlxuXHRcdGFkZCggcHJlZml4LCBvYmogKTtcblx0fVxufVxuXG4vLyBTZXJpYWxpemUgYW4gYXJyYXkgb2YgZm9ybSBlbGVtZW50cyBvciBhIHNldCBvZlxuLy8ga2V5L3ZhbHVlcyBpbnRvIGEgcXVlcnkgc3RyaW5nXG5qUXVlcnkucGFyYW0gPSBmdW5jdGlvbiggYSwgdHJhZGl0aW9uYWwgKSB7XG5cdHZhciBwcmVmaXgsXG5cdFx0cyA9IFtdLFxuXHRcdGFkZCA9IGZ1bmN0aW9uKCBrZXksIHZhbHVlT3JGdW5jdGlvbiApIHtcblxuXHRcdFx0Ly8gSWYgdmFsdWUgaXMgYSBmdW5jdGlvbiwgaW52b2tlIGl0IGFuZCB1c2UgaXRzIHJldHVybiB2YWx1ZVxuXHRcdFx0dmFyIHZhbHVlID0gaXNGdW5jdGlvbiggdmFsdWVPckZ1bmN0aW9uICkgP1xuXHRcdFx0XHR2YWx1ZU9yRnVuY3Rpb24oKSA6XG5cdFx0XHRcdHZhbHVlT3JGdW5jdGlvbjtcblxuXHRcdFx0c1sgcy5sZW5ndGggXSA9IGVuY29kZVVSSUNvbXBvbmVudCgga2V5ICkgKyBcIj1cIiArXG5cdFx0XHRcdGVuY29kZVVSSUNvbXBvbmVudCggdmFsdWUgPT0gbnVsbCA/IFwiXCIgOiB2YWx1ZSApO1xuXHRcdH07XG5cblx0aWYgKCBhID09IG51bGwgKSB7XG5cdFx0cmV0dXJuIFwiXCI7XG5cdH1cblxuXHQvLyBJZiBhbiBhcnJheSB3YXMgcGFzc2VkIGluLCBhc3N1bWUgdGhhdCBpdCBpcyBhbiBhcnJheSBvZiBmb3JtIGVsZW1lbnRzLlxuXHRpZiAoIEFycmF5LmlzQXJyYXkoIGEgKSB8fCAoIGEuanF1ZXJ5ICYmICFqUXVlcnkuaXNQbGFpbk9iamVjdCggYSApICkgKSB7XG5cblx0XHQvLyBTZXJpYWxpemUgdGhlIGZvcm0gZWxlbWVudHNcblx0XHRqUXVlcnkuZWFjaCggYSwgZnVuY3Rpb24oKSB7XG5cdFx0XHRhZGQoIHRoaXMubmFtZSwgdGhpcy52YWx1ZSApO1xuXHRcdH0gKTtcblxuXHR9IGVsc2Uge1xuXG5cdFx0Ly8gSWYgdHJhZGl0aW9uYWwsIGVuY29kZSB0aGUgXCJvbGRcIiB3YXkgKHRoZSB3YXkgMS4zLjIgb3Igb2xkZXJcblx0XHQvLyBkaWQgaXQpLCBvdGhlcndpc2UgZW5jb2RlIHBhcmFtcyByZWN1cnNpdmVseS5cblx0XHRmb3IgKCBwcmVmaXggaW4gYSApIHtcblx0XHRcdGJ1aWxkUGFyYW1zKCBwcmVmaXgsIGFbIHByZWZpeCBdLCB0cmFkaXRpb25hbCwgYWRkICk7XG5cdFx0fVxuXHR9XG5cblx0Ly8gUmV0dXJuIHRoZSByZXN1bHRpbmcgc2VyaWFsaXphdGlvblxuXHRyZXR1cm4gcy5qb2luKCBcIiZcIiApO1xufTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRzZXJpYWxpemU6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBqUXVlcnkucGFyYW0oIHRoaXMuc2VyaWFsaXplQXJyYXkoKSApO1xuXHR9LFxuXHRzZXJpYWxpemVBcnJheTogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHRoaXMubWFwKCBmdW5jdGlvbigpIHtcblxuXHRcdFx0Ly8gQ2FuIGFkZCBwcm9wSG9vayBmb3IgXCJlbGVtZW50c1wiIHRvIGZpbHRlciBvciBhZGQgZm9ybSBlbGVtZW50c1xuXHRcdFx0dmFyIGVsZW1lbnRzID0galF1ZXJ5LnByb3AoIHRoaXMsIFwiZWxlbWVudHNcIiApO1xuXHRcdFx0cmV0dXJuIGVsZW1lbnRzID8galF1ZXJ5Lm1ha2VBcnJheSggZWxlbWVudHMgKSA6IHRoaXM7XG5cdFx0fSApLmZpbHRlciggZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgdHlwZSA9IHRoaXMudHlwZTtcblxuXHRcdFx0Ly8gVXNlIC5pcyggXCI6ZGlzYWJsZWRcIiApIHNvIHRoYXQgZmllbGRzZXRbZGlzYWJsZWRdIHdvcmtzXG5cdFx0XHRyZXR1cm4gdGhpcy5uYW1lICYmICFqUXVlcnkoIHRoaXMgKS5pcyggXCI6ZGlzYWJsZWRcIiApICYmXG5cdFx0XHRcdHJzdWJtaXR0YWJsZS50ZXN0KCB0aGlzLm5vZGVOYW1lICkgJiYgIXJzdWJtaXR0ZXJUeXBlcy50ZXN0KCB0eXBlICkgJiZcblx0XHRcdFx0KCB0aGlzLmNoZWNrZWQgfHwgIXJjaGVja2FibGVUeXBlLnRlc3QoIHR5cGUgKSApO1xuXHRcdH0gKS5tYXAoIGZ1bmN0aW9uKCBfaSwgZWxlbSApIHtcblx0XHRcdHZhciB2YWwgPSBqUXVlcnkoIHRoaXMgKS52YWwoKTtcblxuXHRcdFx0aWYgKCB2YWwgPT0gbnVsbCApIHtcblx0XHRcdFx0cmV0dXJuIG51bGw7XG5cdFx0XHR9XG5cblx0XHRcdGlmICggQXJyYXkuaXNBcnJheSggdmFsICkgKSB7XG5cdFx0XHRcdHJldHVybiBqUXVlcnkubWFwKCB2YWwsIGZ1bmN0aW9uKCB2YWwgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHsgbmFtZTogZWxlbS5uYW1lLCB2YWx1ZTogdmFsLnJlcGxhY2UoIHJDUkxGLCBcIlxcclxcblwiICkgfTtcblx0XHRcdFx0fSApO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4geyBuYW1lOiBlbGVtLm5hbWUsIHZhbHVlOiB2YWwucmVwbGFjZSggckNSTEYsIFwiXFxyXFxuXCIgKSB9O1xuXHRcdH0gKS5nZXQoKTtcblx0fVxufSApO1xuXG5cbnZhclxuXHRyMjAgPSAvJTIwL2csXG5cdHJoYXNoID0gLyMuKiQvLFxuXHRyYW50aUNhY2hlID0gLyhbPyZdKV89W14mXSovLFxuXHRyaGVhZGVycyA9IC9eKC4qPyk6WyBcXHRdKihbXlxcclxcbl0qKSQvbWcsXG5cblx0Ly8gIzc2NTMsICM4MTI1LCAjODE1MjogbG9jYWwgcHJvdG9jb2wgZGV0ZWN0aW9uXG5cdHJsb2NhbFByb3RvY29sID0gL14oPzphYm91dHxhcHB8YXBwLXN0b3JhZ2V8ListZXh0ZW5zaW9ufGZpbGV8cmVzfHdpZGdldCk6JC8sXG5cdHJub0NvbnRlbnQgPSAvXig/OkdFVHxIRUFEKSQvLFxuXHRycHJvdG9jb2wgPSAvXlxcL1xcLy8sXG5cblx0LyogUHJlZmlsdGVyc1xuXHQgKiAxKSBUaGV5IGFyZSB1c2VmdWwgdG8gaW50cm9kdWNlIGN1c3RvbSBkYXRhVHlwZXMgKHNlZSBhamF4L2pzb25wLmpzIGZvciBhbiBleGFtcGxlKVxuXHQgKiAyKSBUaGVzZSBhcmUgY2FsbGVkOlxuXHQgKiAgICAtIEJFRk9SRSBhc2tpbmcgZm9yIGEgdHJhbnNwb3J0XG5cdCAqICAgIC0gQUZURVIgcGFyYW0gc2VyaWFsaXphdGlvbiAocy5kYXRhIGlzIGEgc3RyaW5nIGlmIHMucHJvY2Vzc0RhdGEgaXMgdHJ1ZSlcblx0ICogMykga2V5IGlzIHRoZSBkYXRhVHlwZVxuXHQgKiA0KSB0aGUgY2F0Y2hhbGwgc3ltYm9sIFwiKlwiIGNhbiBiZSB1c2VkXG5cdCAqIDUpIGV4ZWN1dGlvbiB3aWxsIHN0YXJ0IHdpdGggdHJhbnNwb3J0IGRhdGFUeXBlIGFuZCBUSEVOIGNvbnRpbnVlIGRvd24gdG8gXCIqXCIgaWYgbmVlZGVkXG5cdCAqL1xuXHRwcmVmaWx0ZXJzID0ge30sXG5cblx0LyogVHJhbnNwb3J0cyBiaW5kaW5nc1xuXHQgKiAxKSBrZXkgaXMgdGhlIGRhdGFUeXBlXG5cdCAqIDIpIHRoZSBjYXRjaGFsbCBzeW1ib2wgXCIqXCIgY2FuIGJlIHVzZWRcblx0ICogMykgc2VsZWN0aW9uIHdpbGwgc3RhcnQgd2l0aCB0cmFuc3BvcnQgZGF0YVR5cGUgYW5kIFRIRU4gZ28gdG8gXCIqXCIgaWYgbmVlZGVkXG5cdCAqL1xuXHR0cmFuc3BvcnRzID0ge30sXG5cblx0Ly8gQXZvaWQgY29tbWVudC1wcm9sb2cgY2hhciBzZXF1ZW5jZSAoIzEwMDk4KTsgbXVzdCBhcHBlYXNlIGxpbnQgYW5kIGV2YWRlIGNvbXByZXNzaW9uXG5cdGFsbFR5cGVzID0gXCIqL1wiLmNvbmNhdCggXCIqXCIgKSxcblxuXHQvLyBBbmNob3IgdGFnIGZvciBwYXJzaW5nIHRoZSBkb2N1bWVudCBvcmlnaW5cblx0b3JpZ2luQW5jaG9yID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJhXCIgKTtcblxub3JpZ2luQW5jaG9yLmhyZWYgPSBsb2NhdGlvbi5ocmVmO1xuXG4vLyBCYXNlIFwiY29uc3RydWN0b3JcIiBmb3IgalF1ZXJ5LmFqYXhQcmVmaWx0ZXIgYW5kIGpRdWVyeS5hamF4VHJhbnNwb3J0XG5mdW5jdGlvbiBhZGRUb1ByZWZpbHRlcnNPclRyYW5zcG9ydHMoIHN0cnVjdHVyZSApIHtcblxuXHQvLyBkYXRhVHlwZUV4cHJlc3Npb24gaXMgb3B0aW9uYWwgYW5kIGRlZmF1bHRzIHRvIFwiKlwiXG5cdHJldHVybiBmdW5jdGlvbiggZGF0YVR5cGVFeHByZXNzaW9uLCBmdW5jICkge1xuXG5cdFx0aWYgKCB0eXBlb2YgZGF0YVR5cGVFeHByZXNzaW9uICE9PSBcInN0cmluZ1wiICkge1xuXHRcdFx0ZnVuYyA9IGRhdGFUeXBlRXhwcmVzc2lvbjtcblx0XHRcdGRhdGFUeXBlRXhwcmVzc2lvbiA9IFwiKlwiO1xuXHRcdH1cblxuXHRcdHZhciBkYXRhVHlwZSxcblx0XHRcdGkgPSAwLFxuXHRcdFx0ZGF0YVR5cGVzID0gZGF0YVR5cGVFeHByZXNzaW9uLnRvTG93ZXJDYXNlKCkubWF0Y2goIHJub3RodG1sd2hpdGUgKSB8fCBbXTtcblxuXHRcdGlmICggaXNGdW5jdGlvbiggZnVuYyApICkge1xuXG5cdFx0XHQvLyBGb3IgZWFjaCBkYXRhVHlwZSBpbiB0aGUgZGF0YVR5cGVFeHByZXNzaW9uXG5cdFx0XHR3aGlsZSAoICggZGF0YVR5cGUgPSBkYXRhVHlwZXNbIGkrKyBdICkgKSB7XG5cblx0XHRcdFx0Ly8gUHJlcGVuZCBpZiByZXF1ZXN0ZWRcblx0XHRcdFx0aWYgKCBkYXRhVHlwZVsgMCBdID09PSBcIitcIiApIHtcblx0XHRcdFx0XHRkYXRhVHlwZSA9IGRhdGFUeXBlLnNsaWNlKCAxICkgfHwgXCIqXCI7XG5cdFx0XHRcdFx0KCBzdHJ1Y3R1cmVbIGRhdGFUeXBlIF0gPSBzdHJ1Y3R1cmVbIGRhdGFUeXBlIF0gfHwgW10gKS51bnNoaWZ0KCBmdW5jICk7XG5cblx0XHRcdFx0Ly8gT3RoZXJ3aXNlIGFwcGVuZFxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdCggc3RydWN0dXJlWyBkYXRhVHlwZSBdID0gc3RydWN0dXJlWyBkYXRhVHlwZSBdIHx8IFtdICkucHVzaCggZnVuYyApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xufVxuXG4vLyBCYXNlIGluc3BlY3Rpb24gZnVuY3Rpb24gZm9yIHByZWZpbHRlcnMgYW5kIHRyYW5zcG9ydHNcbmZ1bmN0aW9uIGluc3BlY3RQcmVmaWx0ZXJzT3JUcmFuc3BvcnRzKCBzdHJ1Y3R1cmUsIG9wdGlvbnMsIG9yaWdpbmFsT3B0aW9ucywganFYSFIgKSB7XG5cblx0dmFyIGluc3BlY3RlZCA9IHt9LFxuXHRcdHNlZWtpbmdUcmFuc3BvcnQgPSAoIHN0cnVjdHVyZSA9PT0gdHJhbnNwb3J0cyApO1xuXG5cdGZ1bmN0aW9uIGluc3BlY3QoIGRhdGFUeXBlICkge1xuXHRcdHZhciBzZWxlY3RlZDtcblx0XHRpbnNwZWN0ZWRbIGRhdGFUeXBlIF0gPSB0cnVlO1xuXHRcdGpRdWVyeS5lYWNoKCBzdHJ1Y3R1cmVbIGRhdGFUeXBlIF0gfHwgW10sIGZ1bmN0aW9uKCBfLCBwcmVmaWx0ZXJPckZhY3RvcnkgKSB7XG5cdFx0XHR2YXIgZGF0YVR5cGVPclRyYW5zcG9ydCA9IHByZWZpbHRlck9yRmFjdG9yeSggb3B0aW9ucywgb3JpZ2luYWxPcHRpb25zLCBqcVhIUiApO1xuXHRcdFx0aWYgKCB0eXBlb2YgZGF0YVR5cGVPclRyYW5zcG9ydCA9PT0gXCJzdHJpbmdcIiAmJlxuXHRcdFx0XHQhc2Vla2luZ1RyYW5zcG9ydCAmJiAhaW5zcGVjdGVkWyBkYXRhVHlwZU9yVHJhbnNwb3J0IF0gKSB7XG5cblx0XHRcdFx0b3B0aW9ucy5kYXRhVHlwZXMudW5zaGlmdCggZGF0YVR5cGVPclRyYW5zcG9ydCApO1xuXHRcdFx0XHRpbnNwZWN0KCBkYXRhVHlwZU9yVHJhbnNwb3J0ICk7XG5cdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdH0gZWxzZSBpZiAoIHNlZWtpbmdUcmFuc3BvcnQgKSB7XG5cdFx0XHRcdHJldHVybiAhKCBzZWxlY3RlZCA9IGRhdGFUeXBlT3JUcmFuc3BvcnQgKTtcblx0XHRcdH1cblx0XHR9ICk7XG5cdFx0cmV0dXJuIHNlbGVjdGVkO1xuXHR9XG5cblx0cmV0dXJuIGluc3BlY3QoIG9wdGlvbnMuZGF0YVR5cGVzWyAwIF0gKSB8fCAhaW5zcGVjdGVkWyBcIipcIiBdICYmIGluc3BlY3QoIFwiKlwiICk7XG59XG5cbi8vIEEgc3BlY2lhbCBleHRlbmQgZm9yIGFqYXggb3B0aW9uc1xuLy8gdGhhdCB0YWtlcyBcImZsYXRcIiBvcHRpb25zIChub3QgdG8gYmUgZGVlcCBleHRlbmRlZClcbi8vIEZpeGVzICM5ODg3XG5mdW5jdGlvbiBhamF4RXh0ZW5kKCB0YXJnZXQsIHNyYyApIHtcblx0dmFyIGtleSwgZGVlcCxcblx0XHRmbGF0T3B0aW9ucyA9IGpRdWVyeS5hamF4U2V0dGluZ3MuZmxhdE9wdGlvbnMgfHwge307XG5cblx0Zm9yICgga2V5IGluIHNyYyApIHtcblx0XHRpZiAoIHNyY1sga2V5IF0gIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdCggZmxhdE9wdGlvbnNbIGtleSBdID8gdGFyZ2V0IDogKCBkZWVwIHx8ICggZGVlcCA9IHt9ICkgKSApWyBrZXkgXSA9IHNyY1sga2V5IF07XG5cdFx0fVxuXHR9XG5cdGlmICggZGVlcCApIHtcblx0XHRqUXVlcnkuZXh0ZW5kKCB0cnVlLCB0YXJnZXQsIGRlZXAgKTtcblx0fVxuXG5cdHJldHVybiB0YXJnZXQ7XG59XG5cbi8qIEhhbmRsZXMgcmVzcG9uc2VzIHRvIGFuIGFqYXggcmVxdWVzdDpcbiAqIC0gZmluZHMgdGhlIHJpZ2h0IGRhdGFUeXBlIChtZWRpYXRlcyBiZXR3ZWVuIGNvbnRlbnQtdHlwZSBhbmQgZXhwZWN0ZWQgZGF0YVR5cGUpXG4gKiAtIHJldHVybnMgdGhlIGNvcnJlc3BvbmRpbmcgcmVzcG9uc2VcbiAqL1xuZnVuY3Rpb24gYWpheEhhbmRsZVJlc3BvbnNlcyggcywganFYSFIsIHJlc3BvbnNlcyApIHtcblxuXHR2YXIgY3QsIHR5cGUsIGZpbmFsRGF0YVR5cGUsIGZpcnN0RGF0YVR5cGUsXG5cdFx0Y29udGVudHMgPSBzLmNvbnRlbnRzLFxuXHRcdGRhdGFUeXBlcyA9IHMuZGF0YVR5cGVzO1xuXG5cdC8vIFJlbW92ZSBhdXRvIGRhdGFUeXBlIGFuZCBnZXQgY29udGVudC10eXBlIGluIHRoZSBwcm9jZXNzXG5cdHdoaWxlICggZGF0YVR5cGVzWyAwIF0gPT09IFwiKlwiICkge1xuXHRcdGRhdGFUeXBlcy5zaGlmdCgpO1xuXHRcdGlmICggY3QgPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdGN0ID0gcy5taW1lVHlwZSB8fCBqcVhIUi5nZXRSZXNwb25zZUhlYWRlciggXCJDb250ZW50LVR5cGVcIiApO1xuXHRcdH1cblx0fVxuXG5cdC8vIENoZWNrIGlmIHdlJ3JlIGRlYWxpbmcgd2l0aCBhIGtub3duIGNvbnRlbnQtdHlwZVxuXHRpZiAoIGN0ICkge1xuXHRcdGZvciAoIHR5cGUgaW4gY29udGVudHMgKSB7XG5cdFx0XHRpZiAoIGNvbnRlbnRzWyB0eXBlIF0gJiYgY29udGVudHNbIHR5cGUgXS50ZXN0KCBjdCApICkge1xuXHRcdFx0XHRkYXRhVHlwZXMudW5zaGlmdCggdHlwZSApO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyBDaGVjayB0byBzZWUgaWYgd2UgaGF2ZSBhIHJlc3BvbnNlIGZvciB0aGUgZXhwZWN0ZWQgZGF0YVR5cGVcblx0aWYgKCBkYXRhVHlwZXNbIDAgXSBpbiByZXNwb25zZXMgKSB7XG5cdFx0ZmluYWxEYXRhVHlwZSA9IGRhdGFUeXBlc1sgMCBdO1xuXHR9IGVsc2Uge1xuXG5cdFx0Ly8gVHJ5IGNvbnZlcnRpYmxlIGRhdGFUeXBlc1xuXHRcdGZvciAoIHR5cGUgaW4gcmVzcG9uc2VzICkge1xuXHRcdFx0aWYgKCAhZGF0YVR5cGVzWyAwIF0gfHwgcy5jb252ZXJ0ZXJzWyB0eXBlICsgXCIgXCIgKyBkYXRhVHlwZXNbIDAgXSBdICkge1xuXHRcdFx0XHRmaW5hbERhdGFUeXBlID0gdHlwZTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cdFx0XHRpZiAoICFmaXJzdERhdGFUeXBlICkge1xuXHRcdFx0XHRmaXJzdERhdGFUeXBlID0gdHlwZTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBPciBqdXN0IHVzZSBmaXJzdCBvbmVcblx0XHRmaW5hbERhdGFUeXBlID0gZmluYWxEYXRhVHlwZSB8fCBmaXJzdERhdGFUeXBlO1xuXHR9XG5cblx0Ly8gSWYgd2UgZm91bmQgYSBkYXRhVHlwZVxuXHQvLyBXZSBhZGQgdGhlIGRhdGFUeXBlIHRvIHRoZSBsaXN0IGlmIG5lZWRlZFxuXHQvLyBhbmQgcmV0dXJuIHRoZSBjb3JyZXNwb25kaW5nIHJlc3BvbnNlXG5cdGlmICggZmluYWxEYXRhVHlwZSApIHtcblx0XHRpZiAoIGZpbmFsRGF0YVR5cGUgIT09IGRhdGFUeXBlc1sgMCBdICkge1xuXHRcdFx0ZGF0YVR5cGVzLnVuc2hpZnQoIGZpbmFsRGF0YVR5cGUgKTtcblx0XHR9XG5cdFx0cmV0dXJuIHJlc3BvbnNlc1sgZmluYWxEYXRhVHlwZSBdO1xuXHR9XG59XG5cbi8qIENoYWluIGNvbnZlcnNpb25zIGdpdmVuIHRoZSByZXF1ZXN0IGFuZCB0aGUgb3JpZ2luYWwgcmVzcG9uc2VcbiAqIEFsc28gc2V0cyB0aGUgcmVzcG9uc2VYWFggZmllbGRzIG9uIHRoZSBqcVhIUiBpbnN0YW5jZVxuICovXG5mdW5jdGlvbiBhamF4Q29udmVydCggcywgcmVzcG9uc2UsIGpxWEhSLCBpc1N1Y2Nlc3MgKSB7XG5cdHZhciBjb252MiwgY3VycmVudCwgY29udiwgdG1wLCBwcmV2LFxuXHRcdGNvbnZlcnRlcnMgPSB7fSxcblxuXHRcdC8vIFdvcmsgd2l0aCBhIGNvcHkgb2YgZGF0YVR5cGVzIGluIGNhc2Ugd2UgbmVlZCB0byBtb2RpZnkgaXQgZm9yIGNvbnZlcnNpb25cblx0XHRkYXRhVHlwZXMgPSBzLmRhdGFUeXBlcy5zbGljZSgpO1xuXG5cdC8vIENyZWF0ZSBjb252ZXJ0ZXJzIG1hcCB3aXRoIGxvd2VyY2FzZWQga2V5c1xuXHRpZiAoIGRhdGFUeXBlc1sgMSBdICkge1xuXHRcdGZvciAoIGNvbnYgaW4gcy5jb252ZXJ0ZXJzICkge1xuXHRcdFx0Y29udmVydGVyc1sgY29udi50b0xvd2VyQ2FzZSgpIF0gPSBzLmNvbnZlcnRlcnNbIGNvbnYgXTtcblx0XHR9XG5cdH1cblxuXHRjdXJyZW50ID0gZGF0YVR5cGVzLnNoaWZ0KCk7XG5cblx0Ly8gQ29udmVydCB0byBlYWNoIHNlcXVlbnRpYWwgZGF0YVR5cGVcblx0d2hpbGUgKCBjdXJyZW50ICkge1xuXG5cdFx0aWYgKCBzLnJlc3BvbnNlRmllbGRzWyBjdXJyZW50IF0gKSB7XG5cdFx0XHRqcVhIUlsgcy5yZXNwb25zZUZpZWxkc1sgY3VycmVudCBdIF0gPSByZXNwb25zZTtcblx0XHR9XG5cblx0XHQvLyBBcHBseSB0aGUgZGF0YUZpbHRlciBpZiBwcm92aWRlZFxuXHRcdGlmICggIXByZXYgJiYgaXNTdWNjZXNzICYmIHMuZGF0YUZpbHRlciApIHtcblx0XHRcdHJlc3BvbnNlID0gcy5kYXRhRmlsdGVyKCByZXNwb25zZSwgcy5kYXRhVHlwZSApO1xuXHRcdH1cblxuXHRcdHByZXYgPSBjdXJyZW50O1xuXHRcdGN1cnJlbnQgPSBkYXRhVHlwZXMuc2hpZnQoKTtcblxuXHRcdGlmICggY3VycmVudCApIHtcblxuXHRcdFx0Ly8gVGhlcmUncyBvbmx5IHdvcmsgdG8gZG8gaWYgY3VycmVudCBkYXRhVHlwZSBpcyBub24tYXV0b1xuXHRcdFx0aWYgKCBjdXJyZW50ID09PSBcIipcIiApIHtcblxuXHRcdFx0XHRjdXJyZW50ID0gcHJldjtcblxuXHRcdFx0Ly8gQ29udmVydCByZXNwb25zZSBpZiBwcmV2IGRhdGFUeXBlIGlzIG5vbi1hdXRvIGFuZCBkaWZmZXJzIGZyb20gY3VycmVudFxuXHRcdFx0fSBlbHNlIGlmICggcHJldiAhPT0gXCIqXCIgJiYgcHJldiAhPT0gY3VycmVudCApIHtcblxuXHRcdFx0XHQvLyBTZWVrIGEgZGlyZWN0IGNvbnZlcnRlclxuXHRcdFx0XHRjb252ID0gY29udmVydGVyc1sgcHJldiArIFwiIFwiICsgY3VycmVudCBdIHx8IGNvbnZlcnRlcnNbIFwiKiBcIiArIGN1cnJlbnQgXTtcblxuXHRcdFx0XHQvLyBJZiBub25lIGZvdW5kLCBzZWVrIGEgcGFpclxuXHRcdFx0XHRpZiAoICFjb252ICkge1xuXHRcdFx0XHRcdGZvciAoIGNvbnYyIGluIGNvbnZlcnRlcnMgKSB7XG5cblx0XHRcdFx0XHRcdC8vIElmIGNvbnYyIG91dHB1dHMgY3VycmVudFxuXHRcdFx0XHRcdFx0dG1wID0gY29udjIuc3BsaXQoIFwiIFwiICk7XG5cdFx0XHRcdFx0XHRpZiAoIHRtcFsgMSBdID09PSBjdXJyZW50ICkge1xuXG5cdFx0XHRcdFx0XHRcdC8vIElmIHByZXYgY2FuIGJlIGNvbnZlcnRlZCB0byBhY2NlcHRlZCBpbnB1dFxuXHRcdFx0XHRcdFx0XHRjb252ID0gY29udmVydGVyc1sgcHJldiArIFwiIFwiICsgdG1wWyAwIF0gXSB8fFxuXHRcdFx0XHRcdFx0XHRcdGNvbnZlcnRlcnNbIFwiKiBcIiArIHRtcFsgMCBdIF07XG5cdFx0XHRcdFx0XHRcdGlmICggY29udiApIHtcblxuXHRcdFx0XHRcdFx0XHRcdC8vIENvbmRlbnNlIGVxdWl2YWxlbmNlIGNvbnZlcnRlcnNcblx0XHRcdFx0XHRcdFx0XHRpZiAoIGNvbnYgPT09IHRydWUgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRjb252ID0gY29udmVydGVyc1sgY29udjIgXTtcblxuXHRcdFx0XHRcdFx0XHRcdC8vIE90aGVyd2lzZSwgaW5zZXJ0IHRoZSBpbnRlcm1lZGlhdGUgZGF0YVR5cGVcblx0XHRcdFx0XHRcdFx0XHR9IGVsc2UgaWYgKCBjb252ZXJ0ZXJzWyBjb252MiBdICE9PSB0cnVlICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0Y3VycmVudCA9IHRtcFsgMCBdO1xuXHRcdFx0XHRcdFx0XHRcdFx0ZGF0YVR5cGVzLnVuc2hpZnQoIHRtcFsgMSBdICk7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gQXBwbHkgY29udmVydGVyIChpZiBub3QgYW4gZXF1aXZhbGVuY2UpXG5cdFx0XHRcdGlmICggY29udiAhPT0gdHJ1ZSApIHtcblxuXHRcdFx0XHRcdC8vIFVubGVzcyBlcnJvcnMgYXJlIGFsbG93ZWQgdG8gYnViYmxlLCBjYXRjaCBhbmQgcmV0dXJuIHRoZW1cblx0XHRcdFx0XHRpZiAoIGNvbnYgJiYgcy50aHJvd3MgKSB7XG5cdFx0XHRcdFx0XHRyZXNwb25zZSA9IGNvbnYoIHJlc3BvbnNlICk7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0XHRcdHJlc3BvbnNlID0gY29udiggcmVzcG9uc2UgKTtcblx0XHRcdFx0XHRcdH0gY2F0Y2ggKCBlICkge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4ge1xuXHRcdFx0XHRcdFx0XHRcdHN0YXRlOiBcInBhcnNlcmVycm9yXCIsXG5cdFx0XHRcdFx0XHRcdFx0ZXJyb3I6IGNvbnYgPyBlIDogXCJObyBjb252ZXJzaW9uIGZyb20gXCIgKyBwcmV2ICsgXCIgdG8gXCIgKyBjdXJyZW50XG5cdFx0XHRcdFx0XHRcdH07XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHsgc3RhdGU6IFwic3VjY2Vzc1wiLCBkYXRhOiByZXNwb25zZSB9O1xufVxuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cblx0Ly8gQ291bnRlciBmb3IgaG9sZGluZyB0aGUgbnVtYmVyIG9mIGFjdGl2ZSBxdWVyaWVzXG5cdGFjdGl2ZTogMCxcblxuXHQvLyBMYXN0LU1vZGlmaWVkIGhlYWRlciBjYWNoZSBmb3IgbmV4dCByZXF1ZXN0XG5cdGxhc3RNb2RpZmllZDoge30sXG5cdGV0YWc6IHt9LFxuXG5cdGFqYXhTZXR0aW5nczoge1xuXHRcdHVybDogbG9jYXRpb24uaHJlZixcblx0XHR0eXBlOiBcIkdFVFwiLFxuXHRcdGlzTG9jYWw6IHJsb2NhbFByb3RvY29sLnRlc3QoIGxvY2F0aW9uLnByb3RvY29sICksXG5cdFx0Z2xvYmFsOiB0cnVlLFxuXHRcdHByb2Nlc3NEYXRhOiB0cnVlLFxuXHRcdGFzeW5jOiB0cnVlLFxuXHRcdGNvbnRlbnRUeXBlOiBcImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOFwiLFxuXG5cdFx0Lypcblx0XHR0aW1lb3V0OiAwLFxuXHRcdGRhdGE6IG51bGwsXG5cdFx0ZGF0YVR5cGU6IG51bGwsXG5cdFx0dXNlcm5hbWU6IG51bGwsXG5cdFx0cGFzc3dvcmQ6IG51bGwsXG5cdFx0Y2FjaGU6IG51bGwsXG5cdFx0dGhyb3dzOiBmYWxzZSxcblx0XHR0cmFkaXRpb25hbDogZmFsc2UsXG5cdFx0aGVhZGVyczoge30sXG5cdFx0Ki9cblxuXHRcdGFjY2VwdHM6IHtcblx0XHRcdFwiKlwiOiBhbGxUeXBlcyxcblx0XHRcdHRleHQ6IFwidGV4dC9wbGFpblwiLFxuXHRcdFx0aHRtbDogXCJ0ZXh0L2h0bWxcIixcblx0XHRcdHhtbDogXCJhcHBsaWNhdGlvbi94bWwsIHRleHQveG1sXCIsXG5cdFx0XHRqc29uOiBcImFwcGxpY2F0aW9uL2pzb24sIHRleHQvamF2YXNjcmlwdFwiXG5cdFx0fSxcblxuXHRcdGNvbnRlbnRzOiB7XG5cdFx0XHR4bWw6IC9cXGJ4bWxcXGIvLFxuXHRcdFx0aHRtbDogL1xcYmh0bWwvLFxuXHRcdFx0anNvbjogL1xcYmpzb25cXGIvXG5cdFx0fSxcblxuXHRcdHJlc3BvbnNlRmllbGRzOiB7XG5cdFx0XHR4bWw6IFwicmVzcG9uc2VYTUxcIixcblx0XHRcdHRleHQ6IFwicmVzcG9uc2VUZXh0XCIsXG5cdFx0XHRqc29uOiBcInJlc3BvbnNlSlNPTlwiXG5cdFx0fSxcblxuXHRcdC8vIERhdGEgY29udmVydGVyc1xuXHRcdC8vIEtleXMgc2VwYXJhdGUgc291cmNlIChvciBjYXRjaGFsbCBcIipcIikgYW5kIGRlc3RpbmF0aW9uIHR5cGVzIHdpdGggYSBzaW5nbGUgc3BhY2Vcblx0XHRjb252ZXJ0ZXJzOiB7XG5cblx0XHRcdC8vIENvbnZlcnQgYW55dGhpbmcgdG8gdGV4dFxuXHRcdFx0XCIqIHRleHRcIjogU3RyaW5nLFxuXG5cdFx0XHQvLyBUZXh0IHRvIGh0bWwgKHRydWUgPSBubyB0cmFuc2Zvcm1hdGlvbilcblx0XHRcdFwidGV4dCBodG1sXCI6IHRydWUsXG5cblx0XHRcdC8vIEV2YWx1YXRlIHRleHQgYXMgYSBqc29uIGV4cHJlc3Npb25cblx0XHRcdFwidGV4dCBqc29uXCI6IEpTT04ucGFyc2UsXG5cblx0XHRcdC8vIFBhcnNlIHRleHQgYXMgeG1sXG5cdFx0XHRcInRleHQgeG1sXCI6IGpRdWVyeS5wYXJzZVhNTFxuXHRcdH0sXG5cblx0XHQvLyBGb3Igb3B0aW9ucyB0aGF0IHNob3VsZG4ndCBiZSBkZWVwIGV4dGVuZGVkOlxuXHRcdC8vIHlvdSBjYW4gYWRkIHlvdXIgb3duIGN1c3RvbSBvcHRpb25zIGhlcmUgaWZcblx0XHQvLyBhbmQgd2hlbiB5b3UgY3JlYXRlIG9uZSB0aGF0IHNob3VsZG4ndCBiZVxuXHRcdC8vIGRlZXAgZXh0ZW5kZWQgKHNlZSBhamF4RXh0ZW5kKVxuXHRcdGZsYXRPcHRpb25zOiB7XG5cdFx0XHR1cmw6IHRydWUsXG5cdFx0XHRjb250ZXh0OiB0cnVlXG5cdFx0fVxuXHR9LFxuXG5cdC8vIENyZWF0ZXMgYSBmdWxsIGZsZWRnZWQgc2V0dGluZ3Mgb2JqZWN0IGludG8gdGFyZ2V0XG5cdC8vIHdpdGggYm90aCBhamF4U2V0dGluZ3MgYW5kIHNldHRpbmdzIGZpZWxkcy5cblx0Ly8gSWYgdGFyZ2V0IGlzIG9taXR0ZWQsIHdyaXRlcyBpbnRvIGFqYXhTZXR0aW5ncy5cblx0YWpheFNldHVwOiBmdW5jdGlvbiggdGFyZ2V0LCBzZXR0aW5ncyApIHtcblx0XHRyZXR1cm4gc2V0dGluZ3MgP1xuXG5cdFx0XHQvLyBCdWlsZGluZyBhIHNldHRpbmdzIG9iamVjdFxuXHRcdFx0YWpheEV4dGVuZCggYWpheEV4dGVuZCggdGFyZ2V0LCBqUXVlcnkuYWpheFNldHRpbmdzICksIHNldHRpbmdzICkgOlxuXG5cdFx0XHQvLyBFeHRlbmRpbmcgYWpheFNldHRpbmdzXG5cdFx0XHRhamF4RXh0ZW5kKCBqUXVlcnkuYWpheFNldHRpbmdzLCB0YXJnZXQgKTtcblx0fSxcblxuXHRhamF4UHJlZmlsdGVyOiBhZGRUb1ByZWZpbHRlcnNPclRyYW5zcG9ydHMoIHByZWZpbHRlcnMgKSxcblx0YWpheFRyYW5zcG9ydDogYWRkVG9QcmVmaWx0ZXJzT3JUcmFuc3BvcnRzKCB0cmFuc3BvcnRzICksXG5cblx0Ly8gTWFpbiBtZXRob2Rcblx0YWpheDogZnVuY3Rpb24oIHVybCwgb3B0aW9ucyApIHtcblxuXHRcdC8vIElmIHVybCBpcyBhbiBvYmplY3QsIHNpbXVsYXRlIHByZS0xLjUgc2lnbmF0dXJlXG5cdFx0aWYgKCB0eXBlb2YgdXJsID09PSBcIm9iamVjdFwiICkge1xuXHRcdFx0b3B0aW9ucyA9IHVybDtcblx0XHRcdHVybCA9IHVuZGVmaW5lZDtcblx0XHR9XG5cblx0XHQvLyBGb3JjZSBvcHRpb25zIHRvIGJlIGFuIG9iamVjdFxuXHRcdG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuXG5cdFx0dmFyIHRyYW5zcG9ydCxcblxuXHRcdFx0Ly8gVVJMIHdpdGhvdXQgYW50aS1jYWNoZSBwYXJhbVxuXHRcdFx0Y2FjaGVVUkwsXG5cblx0XHRcdC8vIFJlc3BvbnNlIGhlYWRlcnNcblx0XHRcdHJlc3BvbnNlSGVhZGVyc1N0cmluZyxcblx0XHRcdHJlc3BvbnNlSGVhZGVycyxcblxuXHRcdFx0Ly8gdGltZW91dCBoYW5kbGVcblx0XHRcdHRpbWVvdXRUaW1lcixcblxuXHRcdFx0Ly8gVXJsIGNsZWFudXAgdmFyXG5cdFx0XHR1cmxBbmNob3IsXG5cblx0XHRcdC8vIFJlcXVlc3Qgc3RhdGUgKGJlY29tZXMgZmFsc2UgdXBvbiBzZW5kIGFuZCB0cnVlIHVwb24gY29tcGxldGlvbilcblx0XHRcdGNvbXBsZXRlZCxcblxuXHRcdFx0Ly8gVG8ga25vdyBpZiBnbG9iYWwgZXZlbnRzIGFyZSB0byBiZSBkaXNwYXRjaGVkXG5cdFx0XHRmaXJlR2xvYmFscyxcblxuXHRcdFx0Ly8gTG9vcCB2YXJpYWJsZVxuXHRcdFx0aSxcblxuXHRcdFx0Ly8gdW5jYWNoZWQgcGFydCBvZiB0aGUgdXJsXG5cdFx0XHR1bmNhY2hlZCxcblxuXHRcdFx0Ly8gQ3JlYXRlIHRoZSBmaW5hbCBvcHRpb25zIG9iamVjdFxuXHRcdFx0cyA9IGpRdWVyeS5hamF4U2V0dXAoIHt9LCBvcHRpb25zICksXG5cblx0XHRcdC8vIENhbGxiYWNrcyBjb250ZXh0XG5cdFx0XHRjYWxsYmFja0NvbnRleHQgPSBzLmNvbnRleHQgfHwgcyxcblxuXHRcdFx0Ly8gQ29udGV4dCBmb3IgZ2xvYmFsIGV2ZW50cyBpcyBjYWxsYmFja0NvbnRleHQgaWYgaXQgaXMgYSBET00gbm9kZSBvciBqUXVlcnkgY29sbGVjdGlvblxuXHRcdFx0Z2xvYmFsRXZlbnRDb250ZXh0ID0gcy5jb250ZXh0ICYmXG5cdFx0XHRcdCggY2FsbGJhY2tDb250ZXh0Lm5vZGVUeXBlIHx8IGNhbGxiYWNrQ29udGV4dC5qcXVlcnkgKSA/XG5cdFx0XHRcdGpRdWVyeSggY2FsbGJhY2tDb250ZXh0ICkgOlxuXHRcdFx0XHRqUXVlcnkuZXZlbnQsXG5cblx0XHRcdC8vIERlZmVycmVkc1xuXHRcdFx0ZGVmZXJyZWQgPSBqUXVlcnkuRGVmZXJyZWQoKSxcblx0XHRcdGNvbXBsZXRlRGVmZXJyZWQgPSBqUXVlcnkuQ2FsbGJhY2tzKCBcIm9uY2UgbWVtb3J5XCIgKSxcblxuXHRcdFx0Ly8gU3RhdHVzLWRlcGVuZGVudCBjYWxsYmFja3Ncblx0XHRcdHN0YXR1c0NvZGUgPSBzLnN0YXR1c0NvZGUgfHwge30sXG5cblx0XHRcdC8vIEhlYWRlcnMgKHRoZXkgYXJlIHNlbnQgYWxsIGF0IG9uY2UpXG5cdFx0XHRyZXF1ZXN0SGVhZGVycyA9IHt9LFxuXHRcdFx0cmVxdWVzdEhlYWRlcnNOYW1lcyA9IHt9LFxuXG5cdFx0XHQvLyBEZWZhdWx0IGFib3J0IG1lc3NhZ2Vcblx0XHRcdHN0ckFib3J0ID0gXCJjYW5jZWxlZFwiLFxuXG5cdFx0XHQvLyBGYWtlIHhoclxuXHRcdFx0anFYSFIgPSB7XG5cdFx0XHRcdHJlYWR5U3RhdGU6IDAsXG5cblx0XHRcdFx0Ly8gQnVpbGRzIGhlYWRlcnMgaGFzaHRhYmxlIGlmIG5lZWRlZFxuXHRcdFx0XHRnZXRSZXNwb25zZUhlYWRlcjogZnVuY3Rpb24oIGtleSApIHtcblx0XHRcdFx0XHR2YXIgbWF0Y2g7XG5cdFx0XHRcdFx0aWYgKCBjb21wbGV0ZWQgKSB7XG5cdFx0XHRcdFx0XHRpZiAoICFyZXNwb25zZUhlYWRlcnMgKSB7XG5cdFx0XHRcdFx0XHRcdHJlc3BvbnNlSGVhZGVycyA9IHt9O1xuXHRcdFx0XHRcdFx0XHR3aGlsZSAoICggbWF0Y2ggPSByaGVhZGVycy5leGVjKCByZXNwb25zZUhlYWRlcnNTdHJpbmcgKSApICkge1xuXHRcdFx0XHRcdFx0XHRcdHJlc3BvbnNlSGVhZGVyc1sgbWF0Y2hbIDEgXS50b0xvd2VyQ2FzZSgpICsgXCIgXCIgXSA9XG5cdFx0XHRcdFx0XHRcdFx0XHQoIHJlc3BvbnNlSGVhZGVyc1sgbWF0Y2hbIDEgXS50b0xvd2VyQ2FzZSgpICsgXCIgXCIgXSB8fCBbXSApXG5cdFx0XHRcdFx0XHRcdFx0XHRcdC5jb25jYXQoIG1hdGNoWyAyIF0gKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0bWF0Y2ggPSByZXNwb25zZUhlYWRlcnNbIGtleS50b0xvd2VyQ2FzZSgpICsgXCIgXCIgXTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cmV0dXJuIG1hdGNoID09IG51bGwgPyBudWxsIDogbWF0Y2guam9pbiggXCIsIFwiICk7XG5cdFx0XHRcdH0sXG5cblx0XHRcdFx0Ly8gUmF3IHN0cmluZ1xuXHRcdFx0XHRnZXRBbGxSZXNwb25zZUhlYWRlcnM6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdHJldHVybiBjb21wbGV0ZWQgPyByZXNwb25zZUhlYWRlcnNTdHJpbmcgOiBudWxsO1xuXHRcdFx0XHR9LFxuXG5cdFx0XHRcdC8vIENhY2hlcyB0aGUgaGVhZGVyXG5cdFx0XHRcdHNldFJlcXVlc3RIZWFkZXI6IGZ1bmN0aW9uKCBuYW1lLCB2YWx1ZSApIHtcblx0XHRcdFx0XHRpZiAoIGNvbXBsZXRlZCA9PSBudWxsICkge1xuXHRcdFx0XHRcdFx0bmFtZSA9IHJlcXVlc3RIZWFkZXJzTmFtZXNbIG5hbWUudG9Mb3dlckNhc2UoKSBdID1cblx0XHRcdFx0XHRcdFx0cmVxdWVzdEhlYWRlcnNOYW1lc1sgbmFtZS50b0xvd2VyQ2FzZSgpIF0gfHwgbmFtZTtcblx0XHRcdFx0XHRcdHJlcXVlc3RIZWFkZXJzWyBuYW1lIF0gPSB2YWx1ZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHRcdH0sXG5cblx0XHRcdFx0Ly8gT3ZlcnJpZGVzIHJlc3BvbnNlIGNvbnRlbnQtdHlwZSBoZWFkZXJcblx0XHRcdFx0b3ZlcnJpZGVNaW1lVHlwZTogZnVuY3Rpb24oIHR5cGUgKSB7XG5cdFx0XHRcdFx0aWYgKCBjb21wbGV0ZWQgPT0gbnVsbCApIHtcblx0XHRcdFx0XHRcdHMubWltZVR5cGUgPSB0eXBlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdFx0fSxcblxuXHRcdFx0XHQvLyBTdGF0dXMtZGVwZW5kZW50IGNhbGxiYWNrc1xuXHRcdFx0XHRzdGF0dXNDb2RlOiBmdW5jdGlvbiggbWFwICkge1xuXHRcdFx0XHRcdHZhciBjb2RlO1xuXHRcdFx0XHRcdGlmICggbWFwICkge1xuXHRcdFx0XHRcdFx0aWYgKCBjb21wbGV0ZWQgKSB7XG5cblx0XHRcdFx0XHRcdFx0Ly8gRXhlY3V0ZSB0aGUgYXBwcm9wcmlhdGUgY2FsbGJhY2tzXG5cdFx0XHRcdFx0XHRcdGpxWEhSLmFsd2F5cyggbWFwWyBqcVhIUi5zdGF0dXMgXSApO1xuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBMYXp5LWFkZCB0aGUgbmV3IGNhbGxiYWNrcyBpbiBhIHdheSB0aGF0IHByZXNlcnZlcyBvbGQgb25lc1xuXHRcdFx0XHRcdFx0XHRmb3IgKCBjb2RlIGluIG1hcCApIHtcblx0XHRcdFx0XHRcdFx0XHRzdGF0dXNDb2RlWyBjb2RlIF0gPSBbIHN0YXR1c0NvZGVbIGNvZGUgXSwgbWFwWyBjb2RlIF0gXTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdFx0fSxcblxuXHRcdFx0XHQvLyBDYW5jZWwgdGhlIHJlcXVlc3Rcblx0XHRcdFx0YWJvcnQ6IGZ1bmN0aW9uKCBzdGF0dXNUZXh0ICkge1xuXHRcdFx0XHRcdHZhciBmaW5hbFRleHQgPSBzdGF0dXNUZXh0IHx8IHN0ckFib3J0O1xuXHRcdFx0XHRcdGlmICggdHJhbnNwb3J0ICkge1xuXHRcdFx0XHRcdFx0dHJhbnNwb3J0LmFib3J0KCBmaW5hbFRleHQgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0ZG9uZSggMCwgZmluYWxUZXh0ICk7XG5cdFx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cblx0XHQvLyBBdHRhY2ggZGVmZXJyZWRzXG5cdFx0ZGVmZXJyZWQucHJvbWlzZSgganFYSFIgKTtcblxuXHRcdC8vIEFkZCBwcm90b2NvbCBpZiBub3QgcHJvdmlkZWQgKHByZWZpbHRlcnMgbWlnaHQgZXhwZWN0IGl0KVxuXHRcdC8vIEhhbmRsZSBmYWxzeSB1cmwgaW4gdGhlIHNldHRpbmdzIG9iamVjdCAoIzEwMDkzOiBjb25zaXN0ZW5jeSB3aXRoIG9sZCBzaWduYXR1cmUpXG5cdFx0Ly8gV2UgYWxzbyB1c2UgdGhlIHVybCBwYXJhbWV0ZXIgaWYgYXZhaWxhYmxlXG5cdFx0cy51cmwgPSAoICggdXJsIHx8IHMudXJsIHx8IGxvY2F0aW9uLmhyZWYgKSArIFwiXCIgKVxuXHRcdFx0LnJlcGxhY2UoIHJwcm90b2NvbCwgbG9jYXRpb24ucHJvdG9jb2wgKyBcIi8vXCIgKTtcblxuXHRcdC8vIEFsaWFzIG1ldGhvZCBvcHRpb24gdG8gdHlwZSBhcyBwZXIgdGlja2V0ICMxMjAwNFxuXHRcdHMudHlwZSA9IG9wdGlvbnMubWV0aG9kIHx8IG9wdGlvbnMudHlwZSB8fCBzLm1ldGhvZCB8fCBzLnR5cGU7XG5cblx0XHQvLyBFeHRyYWN0IGRhdGFUeXBlcyBsaXN0XG5cdFx0cy5kYXRhVHlwZXMgPSAoIHMuZGF0YVR5cGUgfHwgXCIqXCIgKS50b0xvd2VyQ2FzZSgpLm1hdGNoKCBybm90aHRtbHdoaXRlICkgfHwgWyBcIlwiIF07XG5cblx0XHQvLyBBIGNyb3NzLWRvbWFpbiByZXF1ZXN0IGlzIGluIG9yZGVyIHdoZW4gdGhlIG9yaWdpbiBkb2Vzbid0IG1hdGNoIHRoZSBjdXJyZW50IG9yaWdpbi5cblx0XHRpZiAoIHMuY3Jvc3NEb21haW4gPT0gbnVsbCApIHtcblx0XHRcdHVybEFuY2hvciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiYVwiICk7XG5cblx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9OCAtIDExLCBFZGdlIDEyIC0gMTVcblx0XHRcdC8vIElFIHRocm93cyBleGNlcHRpb24gb24gYWNjZXNzaW5nIHRoZSBocmVmIHByb3BlcnR5IGlmIHVybCBpcyBtYWxmb3JtZWQsXG5cdFx0XHQvLyBlLmcuIGh0dHA6Ly9leGFtcGxlLmNvbTo4MHgvXG5cdFx0XHR0cnkge1xuXHRcdFx0XHR1cmxBbmNob3IuaHJlZiA9IHMudXJsO1xuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9OCAtIDExIG9ubHlcblx0XHRcdFx0Ly8gQW5jaG9yJ3MgaG9zdCBwcm9wZXJ0eSBpc24ndCBjb3JyZWN0bHkgc2V0IHdoZW4gcy51cmwgaXMgcmVsYXRpdmVcblx0XHRcdFx0dXJsQW5jaG9yLmhyZWYgPSB1cmxBbmNob3IuaHJlZjtcblx0XHRcdFx0cy5jcm9zc0RvbWFpbiA9IG9yaWdpbkFuY2hvci5wcm90b2NvbCArIFwiLy9cIiArIG9yaWdpbkFuY2hvci5ob3N0ICE9PVxuXHRcdFx0XHRcdHVybEFuY2hvci5wcm90b2NvbCArIFwiLy9cIiArIHVybEFuY2hvci5ob3N0O1xuXHRcdFx0fSBjYXRjaCAoIGUgKSB7XG5cblx0XHRcdFx0Ly8gSWYgdGhlcmUgaXMgYW4gZXJyb3IgcGFyc2luZyB0aGUgVVJMLCBhc3N1bWUgaXQgaXMgY3Jvc3NEb21haW4sXG5cdFx0XHRcdC8vIGl0IGNhbiBiZSByZWplY3RlZCBieSB0aGUgdHJhbnNwb3J0IGlmIGl0IGlzIGludmFsaWRcblx0XHRcdFx0cy5jcm9zc0RvbWFpbiA9IHRydWU7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gQ29udmVydCBkYXRhIGlmIG5vdCBhbHJlYWR5IGEgc3RyaW5nXG5cdFx0aWYgKCBzLmRhdGEgJiYgcy5wcm9jZXNzRGF0YSAmJiB0eXBlb2Ygcy5kYXRhICE9PSBcInN0cmluZ1wiICkge1xuXHRcdFx0cy5kYXRhID0galF1ZXJ5LnBhcmFtKCBzLmRhdGEsIHMudHJhZGl0aW9uYWwgKTtcblx0XHR9XG5cblx0XHQvLyBBcHBseSBwcmVmaWx0ZXJzXG5cdFx0aW5zcGVjdFByZWZpbHRlcnNPclRyYW5zcG9ydHMoIHByZWZpbHRlcnMsIHMsIG9wdGlvbnMsIGpxWEhSICk7XG5cblx0XHQvLyBJZiByZXF1ZXN0IHdhcyBhYm9ydGVkIGluc2lkZSBhIHByZWZpbHRlciwgc3RvcCB0aGVyZVxuXHRcdGlmICggY29tcGxldGVkICkge1xuXHRcdFx0cmV0dXJuIGpxWEhSO1xuXHRcdH1cblxuXHRcdC8vIFdlIGNhbiBmaXJlIGdsb2JhbCBldmVudHMgYXMgb2Ygbm93IGlmIGFza2VkIHRvXG5cdFx0Ly8gRG9uJ3QgZmlyZSBldmVudHMgaWYgalF1ZXJ5LmV2ZW50IGlzIHVuZGVmaW5lZCBpbiBhbiBBTUQtdXNhZ2Ugc2NlbmFyaW8gKCMxNTExOClcblx0XHRmaXJlR2xvYmFscyA9IGpRdWVyeS5ldmVudCAmJiBzLmdsb2JhbDtcblxuXHRcdC8vIFdhdGNoIGZvciBhIG5ldyBzZXQgb2YgcmVxdWVzdHNcblx0XHRpZiAoIGZpcmVHbG9iYWxzICYmIGpRdWVyeS5hY3RpdmUrKyA9PT0gMCApIHtcblx0XHRcdGpRdWVyeS5ldmVudC50cmlnZ2VyKCBcImFqYXhTdGFydFwiICk7XG5cdFx0fVxuXG5cdFx0Ly8gVXBwZXJjYXNlIHRoZSB0eXBlXG5cdFx0cy50eXBlID0gcy50eXBlLnRvVXBwZXJDYXNlKCk7XG5cblx0XHQvLyBEZXRlcm1pbmUgaWYgcmVxdWVzdCBoYXMgY29udGVudFxuXHRcdHMuaGFzQ29udGVudCA9ICFybm9Db250ZW50LnRlc3QoIHMudHlwZSApO1xuXG5cdFx0Ly8gU2F2ZSB0aGUgVVJMIGluIGNhc2Ugd2UncmUgdG95aW5nIHdpdGggdGhlIElmLU1vZGlmaWVkLVNpbmNlXG5cdFx0Ly8gYW5kL29yIElmLU5vbmUtTWF0Y2ggaGVhZGVyIGxhdGVyIG9uXG5cdFx0Ly8gUmVtb3ZlIGhhc2ggdG8gc2ltcGxpZnkgdXJsIG1hbmlwdWxhdGlvblxuXHRcdGNhY2hlVVJMID0gcy51cmwucmVwbGFjZSggcmhhc2gsIFwiXCIgKTtcblxuXHRcdC8vIE1vcmUgb3B0aW9ucyBoYW5kbGluZyBmb3IgcmVxdWVzdHMgd2l0aCBubyBjb250ZW50XG5cdFx0aWYgKCAhcy5oYXNDb250ZW50ICkge1xuXG5cdFx0XHQvLyBSZW1lbWJlciB0aGUgaGFzaCBzbyB3ZSBjYW4gcHV0IGl0IGJhY2tcblx0XHRcdHVuY2FjaGVkID0gcy51cmwuc2xpY2UoIGNhY2hlVVJMLmxlbmd0aCApO1xuXG5cdFx0XHQvLyBJZiBkYXRhIGlzIGF2YWlsYWJsZSBhbmQgc2hvdWxkIGJlIHByb2Nlc3NlZCwgYXBwZW5kIGRhdGEgdG8gdXJsXG5cdFx0XHRpZiAoIHMuZGF0YSAmJiAoIHMucHJvY2Vzc0RhdGEgfHwgdHlwZW9mIHMuZGF0YSA9PT0gXCJzdHJpbmdcIiApICkge1xuXHRcdFx0XHRjYWNoZVVSTCArPSAoIHJxdWVyeS50ZXN0KCBjYWNoZVVSTCApID8gXCImXCIgOiBcIj9cIiApICsgcy5kYXRhO1xuXG5cdFx0XHRcdC8vICM5NjgyOiByZW1vdmUgZGF0YSBzbyB0aGF0IGl0J3Mgbm90IHVzZWQgaW4gYW4gZXZlbnR1YWwgcmV0cnlcblx0XHRcdFx0ZGVsZXRlIHMuZGF0YTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQWRkIG9yIHVwZGF0ZSBhbnRpLWNhY2hlIHBhcmFtIGlmIG5lZWRlZFxuXHRcdFx0aWYgKCBzLmNhY2hlID09PSBmYWxzZSApIHtcblx0XHRcdFx0Y2FjaGVVUkwgPSBjYWNoZVVSTC5yZXBsYWNlKCByYW50aUNhY2hlLCBcIiQxXCIgKTtcblx0XHRcdFx0dW5jYWNoZWQgPSAoIHJxdWVyeS50ZXN0KCBjYWNoZVVSTCApID8gXCImXCIgOiBcIj9cIiApICsgXCJfPVwiICsgKCBub25jZS5ndWlkKysgKSArXG5cdFx0XHRcdFx0dW5jYWNoZWQ7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFB1dCBoYXNoIGFuZCBhbnRpLWNhY2hlIG9uIHRoZSBVUkwgdGhhdCB3aWxsIGJlIHJlcXVlc3RlZCAoZ2gtMTczMilcblx0XHRcdHMudXJsID0gY2FjaGVVUkwgKyB1bmNhY2hlZDtcblxuXHRcdC8vIENoYW5nZSAnJTIwJyB0byAnKycgaWYgdGhpcyBpcyBlbmNvZGVkIGZvcm0gYm9keSBjb250ZW50IChnaC0yNjU4KVxuXHRcdH0gZWxzZSBpZiAoIHMuZGF0YSAmJiBzLnByb2Nlc3NEYXRhICYmXG5cdFx0XHQoIHMuY29udGVudFR5cGUgfHwgXCJcIiApLmluZGV4T2YoIFwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkXCIgKSA9PT0gMCApIHtcblx0XHRcdHMuZGF0YSA9IHMuZGF0YS5yZXBsYWNlKCByMjAsIFwiK1wiICk7XG5cdFx0fVxuXG5cdFx0Ly8gU2V0IHRoZSBJZi1Nb2RpZmllZC1TaW5jZSBhbmQvb3IgSWYtTm9uZS1NYXRjaCBoZWFkZXIsIGlmIGluIGlmTW9kaWZpZWQgbW9kZS5cblx0XHRpZiAoIHMuaWZNb2RpZmllZCApIHtcblx0XHRcdGlmICggalF1ZXJ5Lmxhc3RNb2RpZmllZFsgY2FjaGVVUkwgXSApIHtcblx0XHRcdFx0anFYSFIuc2V0UmVxdWVzdEhlYWRlciggXCJJZi1Nb2RpZmllZC1TaW5jZVwiLCBqUXVlcnkubGFzdE1vZGlmaWVkWyBjYWNoZVVSTCBdICk7XG5cdFx0XHR9XG5cdFx0XHRpZiAoIGpRdWVyeS5ldGFnWyBjYWNoZVVSTCBdICkge1xuXHRcdFx0XHRqcVhIUi5zZXRSZXF1ZXN0SGVhZGVyKCBcIklmLU5vbmUtTWF0Y2hcIiwgalF1ZXJ5LmV0YWdbIGNhY2hlVVJMIF0gKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBTZXQgdGhlIGNvcnJlY3QgaGVhZGVyLCBpZiBkYXRhIGlzIGJlaW5nIHNlbnRcblx0XHRpZiAoIHMuZGF0YSAmJiBzLmhhc0NvbnRlbnQgJiYgcy5jb250ZW50VHlwZSAhPT0gZmFsc2UgfHwgb3B0aW9ucy5jb250ZW50VHlwZSApIHtcblx0XHRcdGpxWEhSLnNldFJlcXVlc3RIZWFkZXIoIFwiQ29udGVudC1UeXBlXCIsIHMuY29udGVudFR5cGUgKTtcblx0XHR9XG5cblx0XHQvLyBTZXQgdGhlIEFjY2VwdHMgaGVhZGVyIGZvciB0aGUgc2VydmVyLCBkZXBlbmRpbmcgb24gdGhlIGRhdGFUeXBlXG5cdFx0anFYSFIuc2V0UmVxdWVzdEhlYWRlcihcblx0XHRcdFwiQWNjZXB0XCIsXG5cdFx0XHRzLmRhdGFUeXBlc1sgMCBdICYmIHMuYWNjZXB0c1sgcy5kYXRhVHlwZXNbIDAgXSBdID9cblx0XHRcdFx0cy5hY2NlcHRzWyBzLmRhdGFUeXBlc1sgMCBdIF0gK1xuXHRcdFx0XHRcdCggcy5kYXRhVHlwZXNbIDAgXSAhPT0gXCIqXCIgPyBcIiwgXCIgKyBhbGxUeXBlcyArIFwiOyBxPTAuMDFcIiA6IFwiXCIgKSA6XG5cdFx0XHRcdHMuYWNjZXB0c1sgXCIqXCIgXVxuXHRcdCk7XG5cblx0XHQvLyBDaGVjayBmb3IgaGVhZGVycyBvcHRpb25cblx0XHRmb3IgKCBpIGluIHMuaGVhZGVycyApIHtcblx0XHRcdGpxWEhSLnNldFJlcXVlc3RIZWFkZXIoIGksIHMuaGVhZGVyc1sgaSBdICk7XG5cdFx0fVxuXG5cdFx0Ly8gQWxsb3cgY3VzdG9tIGhlYWRlcnMvbWltZXR5cGVzIGFuZCBlYXJseSBhYm9ydFxuXHRcdGlmICggcy5iZWZvcmVTZW5kICYmXG5cdFx0XHQoIHMuYmVmb3JlU2VuZC5jYWxsKCBjYWxsYmFja0NvbnRleHQsIGpxWEhSLCBzICkgPT09IGZhbHNlIHx8IGNvbXBsZXRlZCApICkge1xuXG5cdFx0XHQvLyBBYm9ydCBpZiBub3QgZG9uZSBhbHJlYWR5IGFuZCByZXR1cm5cblx0XHRcdHJldHVybiBqcVhIUi5hYm9ydCgpO1xuXHRcdH1cblxuXHRcdC8vIEFib3J0aW5nIGlzIG5vIGxvbmdlciBhIGNhbmNlbGxhdGlvblxuXHRcdHN0ckFib3J0ID0gXCJhYm9ydFwiO1xuXG5cdFx0Ly8gSW5zdGFsbCBjYWxsYmFja3Mgb24gZGVmZXJyZWRzXG5cdFx0Y29tcGxldGVEZWZlcnJlZC5hZGQoIHMuY29tcGxldGUgKTtcblx0XHRqcVhIUi5kb25lKCBzLnN1Y2Nlc3MgKTtcblx0XHRqcVhIUi5mYWlsKCBzLmVycm9yICk7XG5cblx0XHQvLyBHZXQgdHJhbnNwb3J0XG5cdFx0dHJhbnNwb3J0ID0gaW5zcGVjdFByZWZpbHRlcnNPclRyYW5zcG9ydHMoIHRyYW5zcG9ydHMsIHMsIG9wdGlvbnMsIGpxWEhSICk7XG5cblx0XHQvLyBJZiBubyB0cmFuc3BvcnQsIHdlIGF1dG8tYWJvcnRcblx0XHRpZiAoICF0cmFuc3BvcnQgKSB7XG5cdFx0XHRkb25lKCAtMSwgXCJObyBUcmFuc3BvcnRcIiApO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRqcVhIUi5yZWFkeVN0YXRlID0gMTtcblxuXHRcdFx0Ly8gU2VuZCBnbG9iYWwgZXZlbnRcblx0XHRcdGlmICggZmlyZUdsb2JhbHMgKSB7XG5cdFx0XHRcdGdsb2JhbEV2ZW50Q29udGV4dC50cmlnZ2VyKCBcImFqYXhTZW5kXCIsIFsganFYSFIsIHMgXSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBJZiByZXF1ZXN0IHdhcyBhYm9ydGVkIGluc2lkZSBhamF4U2VuZCwgc3RvcCB0aGVyZVxuXHRcdFx0aWYgKCBjb21wbGV0ZWQgKSB7XG5cdFx0XHRcdHJldHVybiBqcVhIUjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gVGltZW91dFxuXHRcdFx0aWYgKCBzLmFzeW5jICYmIHMudGltZW91dCA+IDAgKSB7XG5cdFx0XHRcdHRpbWVvdXRUaW1lciA9IHdpbmRvdy5zZXRUaW1lb3V0KCBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRqcVhIUi5hYm9ydCggXCJ0aW1lb3V0XCIgKTtcblx0XHRcdFx0fSwgcy50aW1lb3V0ICk7XG5cdFx0XHR9XG5cblx0XHRcdHRyeSB7XG5cdFx0XHRcdGNvbXBsZXRlZCA9IGZhbHNlO1xuXHRcdFx0XHR0cmFuc3BvcnQuc2VuZCggcmVxdWVzdEhlYWRlcnMsIGRvbmUgKTtcblx0XHRcdH0gY2F0Y2ggKCBlICkge1xuXG5cdFx0XHRcdC8vIFJldGhyb3cgcG9zdC1jb21wbGV0aW9uIGV4Y2VwdGlvbnNcblx0XHRcdFx0aWYgKCBjb21wbGV0ZWQgKSB7XG5cdFx0XHRcdFx0dGhyb3cgZTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFByb3BhZ2F0ZSBvdGhlcnMgYXMgcmVzdWx0c1xuXHRcdFx0XHRkb25lKCAtMSwgZSApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIENhbGxiYWNrIGZvciB3aGVuIGV2ZXJ5dGhpbmcgaXMgZG9uZVxuXHRcdGZ1bmN0aW9uIGRvbmUoIHN0YXR1cywgbmF0aXZlU3RhdHVzVGV4dCwgcmVzcG9uc2VzLCBoZWFkZXJzICkge1xuXHRcdFx0dmFyIGlzU3VjY2Vzcywgc3VjY2VzcywgZXJyb3IsIHJlc3BvbnNlLCBtb2RpZmllZCxcblx0XHRcdFx0c3RhdHVzVGV4dCA9IG5hdGl2ZVN0YXR1c1RleHQ7XG5cblx0XHRcdC8vIElnbm9yZSByZXBlYXQgaW52b2NhdGlvbnNcblx0XHRcdGlmICggY29tcGxldGVkICkge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdGNvbXBsZXRlZCA9IHRydWU7XG5cblx0XHRcdC8vIENsZWFyIHRpbWVvdXQgaWYgaXQgZXhpc3RzXG5cdFx0XHRpZiAoIHRpbWVvdXRUaW1lciApIHtcblx0XHRcdFx0d2luZG93LmNsZWFyVGltZW91dCggdGltZW91dFRpbWVyICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIERlcmVmZXJlbmNlIHRyYW5zcG9ydCBmb3IgZWFybHkgZ2FyYmFnZSBjb2xsZWN0aW9uXG5cdFx0XHQvLyAobm8gbWF0dGVyIGhvdyBsb25nIHRoZSBqcVhIUiBvYmplY3Qgd2lsbCBiZSB1c2VkKVxuXHRcdFx0dHJhbnNwb3J0ID0gdW5kZWZpbmVkO1xuXG5cdFx0XHQvLyBDYWNoZSByZXNwb25zZSBoZWFkZXJzXG5cdFx0XHRyZXNwb25zZUhlYWRlcnNTdHJpbmcgPSBoZWFkZXJzIHx8IFwiXCI7XG5cblx0XHRcdC8vIFNldCByZWFkeVN0YXRlXG5cdFx0XHRqcVhIUi5yZWFkeVN0YXRlID0gc3RhdHVzID4gMCA/IDQgOiAwO1xuXG5cdFx0XHQvLyBEZXRlcm1pbmUgaWYgc3VjY2Vzc2Z1bFxuXHRcdFx0aXNTdWNjZXNzID0gc3RhdHVzID49IDIwMCAmJiBzdGF0dXMgPCAzMDAgfHwgc3RhdHVzID09PSAzMDQ7XG5cblx0XHRcdC8vIEdldCByZXNwb25zZSBkYXRhXG5cdFx0XHRpZiAoIHJlc3BvbnNlcyApIHtcblx0XHRcdFx0cmVzcG9uc2UgPSBhamF4SGFuZGxlUmVzcG9uc2VzKCBzLCBqcVhIUiwgcmVzcG9uc2VzICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFVzZSBhIG5vb3AgY29udmVydGVyIGZvciBtaXNzaW5nIHNjcmlwdCBidXQgbm90IGlmIGpzb25wXG5cdFx0XHRpZiAoICFpc1N1Y2Nlc3MgJiZcblx0XHRcdFx0alF1ZXJ5LmluQXJyYXkoIFwic2NyaXB0XCIsIHMuZGF0YVR5cGVzICkgPiAtMSAmJlxuXHRcdFx0XHRqUXVlcnkuaW5BcnJheSggXCJqc29uXCIsIHMuZGF0YVR5cGVzICkgPCAwICkge1xuXHRcdFx0XHRzLmNvbnZlcnRlcnNbIFwidGV4dCBzY3JpcHRcIiBdID0gZnVuY3Rpb24oKSB7fTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQ29udmVydCBubyBtYXR0ZXIgd2hhdCAodGhhdCB3YXkgcmVzcG9uc2VYWFggZmllbGRzIGFyZSBhbHdheXMgc2V0KVxuXHRcdFx0cmVzcG9uc2UgPSBhamF4Q29udmVydCggcywgcmVzcG9uc2UsIGpxWEhSLCBpc1N1Y2Nlc3MgKTtcblxuXHRcdFx0Ly8gSWYgc3VjY2Vzc2Z1bCwgaGFuZGxlIHR5cGUgY2hhaW5pbmdcblx0XHRcdGlmICggaXNTdWNjZXNzICkge1xuXG5cdFx0XHRcdC8vIFNldCB0aGUgSWYtTW9kaWZpZWQtU2luY2UgYW5kL29yIElmLU5vbmUtTWF0Y2ggaGVhZGVyLCBpZiBpbiBpZk1vZGlmaWVkIG1vZGUuXG5cdFx0XHRcdGlmICggcy5pZk1vZGlmaWVkICkge1xuXHRcdFx0XHRcdG1vZGlmaWVkID0ganFYSFIuZ2V0UmVzcG9uc2VIZWFkZXIoIFwiTGFzdC1Nb2RpZmllZFwiICk7XG5cdFx0XHRcdFx0aWYgKCBtb2RpZmllZCApIHtcblx0XHRcdFx0XHRcdGpRdWVyeS5sYXN0TW9kaWZpZWRbIGNhY2hlVVJMIF0gPSBtb2RpZmllZDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0bW9kaWZpZWQgPSBqcVhIUi5nZXRSZXNwb25zZUhlYWRlciggXCJldGFnXCIgKTtcblx0XHRcdFx0XHRpZiAoIG1vZGlmaWVkICkge1xuXHRcdFx0XHRcdFx0alF1ZXJ5LmV0YWdbIGNhY2hlVVJMIF0gPSBtb2RpZmllZDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBpZiBubyBjb250ZW50XG5cdFx0XHRcdGlmICggc3RhdHVzID09PSAyMDQgfHwgcy50eXBlID09PSBcIkhFQURcIiApIHtcblx0XHRcdFx0XHRzdGF0dXNUZXh0ID0gXCJub2NvbnRlbnRcIjtcblxuXHRcdFx0XHQvLyBpZiBub3QgbW9kaWZpZWRcblx0XHRcdFx0fSBlbHNlIGlmICggc3RhdHVzID09PSAzMDQgKSB7XG5cdFx0XHRcdFx0c3RhdHVzVGV4dCA9IFwibm90bW9kaWZpZWRcIjtcblxuXHRcdFx0XHQvLyBJZiB3ZSBoYXZlIGRhdGEsIGxldCdzIGNvbnZlcnQgaXRcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRzdGF0dXNUZXh0ID0gcmVzcG9uc2Uuc3RhdGU7XG5cdFx0XHRcdFx0c3VjY2VzcyA9IHJlc3BvbnNlLmRhdGE7XG5cdFx0XHRcdFx0ZXJyb3IgPSByZXNwb25zZS5lcnJvcjtcblx0XHRcdFx0XHRpc1N1Y2Nlc3MgPSAhZXJyb3I7XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSB7XG5cblx0XHRcdFx0Ly8gRXh0cmFjdCBlcnJvciBmcm9tIHN0YXR1c1RleHQgYW5kIG5vcm1hbGl6ZSBmb3Igbm9uLWFib3J0c1xuXHRcdFx0XHRlcnJvciA9IHN0YXR1c1RleHQ7XG5cdFx0XHRcdGlmICggc3RhdHVzIHx8ICFzdGF0dXNUZXh0ICkge1xuXHRcdFx0XHRcdHN0YXR1c1RleHQgPSBcImVycm9yXCI7XG5cdFx0XHRcdFx0aWYgKCBzdGF0dXMgPCAwICkge1xuXHRcdFx0XHRcdFx0c3RhdHVzID0gMDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gU2V0IGRhdGEgZm9yIHRoZSBmYWtlIHhociBvYmplY3Rcblx0XHRcdGpxWEhSLnN0YXR1cyA9IHN0YXR1cztcblx0XHRcdGpxWEhSLnN0YXR1c1RleHQgPSAoIG5hdGl2ZVN0YXR1c1RleHQgfHwgc3RhdHVzVGV4dCApICsgXCJcIjtcblxuXHRcdFx0Ly8gU3VjY2Vzcy9FcnJvclxuXHRcdFx0aWYgKCBpc1N1Y2Nlc3MgKSB7XG5cdFx0XHRcdGRlZmVycmVkLnJlc29sdmVXaXRoKCBjYWxsYmFja0NvbnRleHQsIFsgc3VjY2Vzcywgc3RhdHVzVGV4dCwganFYSFIgXSApO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0ZGVmZXJyZWQucmVqZWN0V2l0aCggY2FsbGJhY2tDb250ZXh0LCBbIGpxWEhSLCBzdGF0dXNUZXh0LCBlcnJvciBdICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFN0YXR1cy1kZXBlbmRlbnQgY2FsbGJhY2tzXG5cdFx0XHRqcVhIUi5zdGF0dXNDb2RlKCBzdGF0dXNDb2RlICk7XG5cdFx0XHRzdGF0dXNDb2RlID0gdW5kZWZpbmVkO1xuXG5cdFx0XHRpZiAoIGZpcmVHbG9iYWxzICkge1xuXHRcdFx0XHRnbG9iYWxFdmVudENvbnRleHQudHJpZ2dlciggaXNTdWNjZXNzID8gXCJhamF4U3VjY2Vzc1wiIDogXCJhamF4RXJyb3JcIixcblx0XHRcdFx0XHRbIGpxWEhSLCBzLCBpc1N1Y2Nlc3MgPyBzdWNjZXNzIDogZXJyb3IgXSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBDb21wbGV0ZVxuXHRcdFx0Y29tcGxldGVEZWZlcnJlZC5maXJlV2l0aCggY2FsbGJhY2tDb250ZXh0LCBbIGpxWEhSLCBzdGF0dXNUZXh0IF0gKTtcblxuXHRcdFx0aWYgKCBmaXJlR2xvYmFscyApIHtcblx0XHRcdFx0Z2xvYmFsRXZlbnRDb250ZXh0LnRyaWdnZXIoIFwiYWpheENvbXBsZXRlXCIsIFsganFYSFIsIHMgXSApO1xuXG5cdFx0XHRcdC8vIEhhbmRsZSB0aGUgZ2xvYmFsIEFKQVggY291bnRlclxuXHRcdFx0XHRpZiAoICEoIC0talF1ZXJ5LmFjdGl2ZSApICkge1xuXHRcdFx0XHRcdGpRdWVyeS5ldmVudC50cmlnZ2VyKCBcImFqYXhTdG9wXCIgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBqcVhIUjtcblx0fSxcblxuXHRnZXRKU09OOiBmdW5jdGlvbiggdXJsLCBkYXRhLCBjYWxsYmFjayApIHtcblx0XHRyZXR1cm4galF1ZXJ5LmdldCggdXJsLCBkYXRhLCBjYWxsYmFjaywgXCJqc29uXCIgKTtcblx0fSxcblxuXHRnZXRTY3JpcHQ6IGZ1bmN0aW9uKCB1cmwsIGNhbGxiYWNrICkge1xuXHRcdHJldHVybiBqUXVlcnkuZ2V0KCB1cmwsIHVuZGVmaW5lZCwgY2FsbGJhY2ssIFwic2NyaXB0XCIgKTtcblx0fVxufSApO1xuXG5qUXVlcnkuZWFjaCggWyBcImdldFwiLCBcInBvc3RcIiBdLCBmdW5jdGlvbiggX2ksIG1ldGhvZCApIHtcblx0alF1ZXJ5WyBtZXRob2QgXSA9IGZ1bmN0aW9uKCB1cmwsIGRhdGEsIGNhbGxiYWNrLCB0eXBlICkge1xuXG5cdFx0Ly8gU2hpZnQgYXJndW1lbnRzIGlmIGRhdGEgYXJndW1lbnQgd2FzIG9taXR0ZWRcblx0XHRpZiAoIGlzRnVuY3Rpb24oIGRhdGEgKSApIHtcblx0XHRcdHR5cGUgPSB0eXBlIHx8IGNhbGxiYWNrO1xuXHRcdFx0Y2FsbGJhY2sgPSBkYXRhO1xuXHRcdFx0ZGF0YSA9IHVuZGVmaW5lZDtcblx0XHR9XG5cblx0XHQvLyBUaGUgdXJsIGNhbiBiZSBhbiBvcHRpb25zIG9iamVjdCAod2hpY2ggdGhlbiBtdXN0IGhhdmUgLnVybClcblx0XHRyZXR1cm4galF1ZXJ5LmFqYXgoIGpRdWVyeS5leHRlbmQoIHtcblx0XHRcdHVybDogdXJsLFxuXHRcdFx0dHlwZTogbWV0aG9kLFxuXHRcdFx0ZGF0YVR5cGU6IHR5cGUsXG5cdFx0XHRkYXRhOiBkYXRhLFxuXHRcdFx0c3VjY2VzczogY2FsbGJhY2tcblx0XHR9LCBqUXVlcnkuaXNQbGFpbk9iamVjdCggdXJsICkgJiYgdXJsICkgKTtcblx0fTtcbn0gKTtcblxualF1ZXJ5LmFqYXhQcmVmaWx0ZXIoIGZ1bmN0aW9uKCBzICkge1xuXHR2YXIgaTtcblx0Zm9yICggaSBpbiBzLmhlYWRlcnMgKSB7XG5cdFx0aWYgKCBpLnRvTG93ZXJDYXNlKCkgPT09IFwiY29udGVudC10eXBlXCIgKSB7XG5cdFx0XHRzLmNvbnRlbnRUeXBlID0gcy5oZWFkZXJzWyBpIF0gfHwgXCJcIjtcblx0XHR9XG5cdH1cbn0gKTtcblxuXG5qUXVlcnkuX2V2YWxVcmwgPSBmdW5jdGlvbiggdXJsLCBvcHRpb25zLCBkb2MgKSB7XG5cdHJldHVybiBqUXVlcnkuYWpheCgge1xuXHRcdHVybDogdXJsLFxuXG5cdFx0Ly8gTWFrZSB0aGlzIGV4cGxpY2l0LCBzaW5jZSB1c2VyIGNhbiBvdmVycmlkZSB0aGlzIHRocm91Z2ggYWpheFNldHVwICgjMTEyNjQpXG5cdFx0dHlwZTogXCJHRVRcIixcblx0XHRkYXRhVHlwZTogXCJzY3JpcHRcIixcblx0XHRjYWNoZTogdHJ1ZSxcblx0XHRhc3luYzogZmFsc2UsXG5cdFx0Z2xvYmFsOiBmYWxzZSxcblxuXHRcdC8vIE9ubHkgZXZhbHVhdGUgdGhlIHJlc3BvbnNlIGlmIGl0IGlzIHN1Y2Nlc3NmdWwgKGdoLTQxMjYpXG5cdFx0Ly8gZGF0YUZpbHRlciBpcyBub3QgaW52b2tlZCBmb3IgZmFpbHVyZSByZXNwb25zZXMsIHNvIHVzaW5nIGl0IGluc3RlYWRcblx0XHQvLyBvZiB0aGUgZGVmYXVsdCBjb252ZXJ0ZXIgaXMga2x1ZGd5IGJ1dCBpdCB3b3Jrcy5cblx0XHRjb252ZXJ0ZXJzOiB7XG5cdFx0XHRcInRleHQgc2NyaXB0XCI6IGZ1bmN0aW9uKCkge31cblx0XHR9LFxuXHRcdGRhdGFGaWx0ZXI6IGZ1bmN0aW9uKCByZXNwb25zZSApIHtcblx0XHRcdGpRdWVyeS5nbG9iYWxFdmFsKCByZXNwb25zZSwgb3B0aW9ucywgZG9jICk7XG5cdFx0fVxuXHR9ICk7XG59O1xuXG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0d3JhcEFsbDogZnVuY3Rpb24oIGh0bWwgKSB7XG5cdFx0dmFyIHdyYXA7XG5cblx0XHRpZiAoIHRoaXNbIDAgXSApIHtcblx0XHRcdGlmICggaXNGdW5jdGlvbiggaHRtbCApICkge1xuXHRcdFx0XHRodG1sID0gaHRtbC5jYWxsKCB0aGlzWyAwIF0gKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gVGhlIGVsZW1lbnRzIHRvIHdyYXAgdGhlIHRhcmdldCBhcm91bmRcblx0XHRcdHdyYXAgPSBqUXVlcnkoIGh0bWwsIHRoaXNbIDAgXS5vd25lckRvY3VtZW50ICkuZXEoIDAgKS5jbG9uZSggdHJ1ZSApO1xuXG5cdFx0XHRpZiAoIHRoaXNbIDAgXS5wYXJlbnROb2RlICkge1xuXHRcdFx0XHR3cmFwLmluc2VydEJlZm9yZSggdGhpc1sgMCBdICk7XG5cdFx0XHR9XG5cblx0XHRcdHdyYXAubWFwKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0dmFyIGVsZW0gPSB0aGlzO1xuXG5cdFx0XHRcdHdoaWxlICggZWxlbS5maXJzdEVsZW1lbnRDaGlsZCApIHtcblx0XHRcdFx0XHRlbGVtID0gZWxlbS5maXJzdEVsZW1lbnRDaGlsZDtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybiBlbGVtO1xuXHRcdFx0fSApLmFwcGVuZCggdGhpcyApO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzO1xuXHR9LFxuXG5cdHdyYXBJbm5lcjogZnVuY3Rpb24oIGh0bWwgKSB7XG5cdFx0aWYgKCBpc0Z1bmN0aW9uKCBodG1sICkgKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbiggaSApIHtcblx0XHRcdFx0alF1ZXJ5KCB0aGlzICkud3JhcElubmVyKCBodG1sLmNhbGwoIHRoaXMsIGkgKSApO1xuXHRcdFx0fSApO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIHNlbGYgPSBqUXVlcnkoIHRoaXMgKSxcblx0XHRcdFx0Y29udGVudHMgPSBzZWxmLmNvbnRlbnRzKCk7XG5cblx0XHRcdGlmICggY29udGVudHMubGVuZ3RoICkge1xuXHRcdFx0XHRjb250ZW50cy53cmFwQWxsKCBodG1sICk7XG5cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHNlbGYuYXBwZW5kKCBodG1sICk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9LFxuXG5cdHdyYXA6IGZ1bmN0aW9uKCBodG1sICkge1xuXHRcdHZhciBodG1sSXNGdW5jdGlvbiA9IGlzRnVuY3Rpb24oIGh0bWwgKTtcblxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCBpICkge1xuXHRcdFx0alF1ZXJ5KCB0aGlzICkud3JhcEFsbCggaHRtbElzRnVuY3Rpb24gPyBodG1sLmNhbGwoIHRoaXMsIGkgKSA6IGh0bWwgKTtcblx0XHR9ICk7XG5cdH0sXG5cblx0dW53cmFwOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0dGhpcy5wYXJlbnQoIHNlbGVjdG9yICkubm90KCBcImJvZHlcIiApLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0alF1ZXJ5KCB0aGlzICkucmVwbGFjZVdpdGgoIHRoaXMuY2hpbGROb2RlcyApO1xuXHRcdH0gKTtcblx0XHRyZXR1cm4gdGhpcztcblx0fVxufSApO1xuXG5cbmpRdWVyeS5leHByLnBzZXVkb3MuaGlkZGVuID0gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdHJldHVybiAhalF1ZXJ5LmV4cHIucHNldWRvcy52aXNpYmxlKCBlbGVtICk7XG59O1xualF1ZXJ5LmV4cHIucHNldWRvcy52aXNpYmxlID0gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdHJldHVybiAhISggZWxlbS5vZmZzZXRXaWR0aCB8fCBlbGVtLm9mZnNldEhlaWdodCB8fCBlbGVtLmdldENsaWVudFJlY3RzKCkubGVuZ3RoICk7XG59O1xuXG5cblxuXG5qUXVlcnkuYWpheFNldHRpbmdzLnhociA9IGZ1bmN0aW9uKCkge1xuXHR0cnkge1xuXHRcdHJldHVybiBuZXcgd2luZG93LlhNTEh0dHBSZXF1ZXN0KCk7XG5cdH0gY2F0Y2ggKCBlICkge31cbn07XG5cbnZhciB4aHJTdWNjZXNzU3RhdHVzID0ge1xuXG5cdFx0Ly8gRmlsZSBwcm90b2NvbCBhbHdheXMgeWllbGRzIHN0YXR1cyBjb2RlIDAsIGFzc3VtZSAyMDBcblx0XHQwOiAyMDAsXG5cblx0XHQvLyBTdXBwb3J0OiBJRSA8PTkgb25seVxuXHRcdC8vICMxNDUwOiBzb21ldGltZXMgSUUgcmV0dXJucyAxMjIzIHdoZW4gaXQgc2hvdWxkIGJlIDIwNFxuXHRcdDEyMjM6IDIwNFxuXHR9LFxuXHR4aHJTdXBwb3J0ZWQgPSBqUXVlcnkuYWpheFNldHRpbmdzLnhocigpO1xuXG5zdXBwb3J0LmNvcnMgPSAhIXhoclN1cHBvcnRlZCAmJiAoIFwid2l0aENyZWRlbnRpYWxzXCIgaW4geGhyU3VwcG9ydGVkICk7XG5zdXBwb3J0LmFqYXggPSB4aHJTdXBwb3J0ZWQgPSAhIXhoclN1cHBvcnRlZDtcblxualF1ZXJ5LmFqYXhUcmFuc3BvcnQoIGZ1bmN0aW9uKCBvcHRpb25zICkge1xuXHR2YXIgY2FsbGJhY2ssIGVycm9yQ2FsbGJhY2s7XG5cblx0Ly8gQ3Jvc3MgZG9tYWluIG9ubHkgYWxsb3dlZCBpZiBzdXBwb3J0ZWQgdGhyb3VnaCBYTUxIdHRwUmVxdWVzdFxuXHRpZiAoIHN1cHBvcnQuY29ycyB8fCB4aHJTdXBwb3J0ZWQgJiYgIW9wdGlvbnMuY3Jvc3NEb21haW4gKSB7XG5cdFx0cmV0dXJuIHtcblx0XHRcdHNlbmQ6IGZ1bmN0aW9uKCBoZWFkZXJzLCBjb21wbGV0ZSApIHtcblx0XHRcdFx0dmFyIGksXG5cdFx0XHRcdFx0eGhyID0gb3B0aW9ucy54aHIoKTtcblxuXHRcdFx0XHR4aHIub3Blbihcblx0XHRcdFx0XHRvcHRpb25zLnR5cGUsXG5cdFx0XHRcdFx0b3B0aW9ucy51cmwsXG5cdFx0XHRcdFx0b3B0aW9ucy5hc3luYyxcblx0XHRcdFx0XHRvcHRpb25zLnVzZXJuYW1lLFxuXHRcdFx0XHRcdG9wdGlvbnMucGFzc3dvcmRcblx0XHRcdFx0KTtcblxuXHRcdFx0XHQvLyBBcHBseSBjdXN0b20gZmllbGRzIGlmIHByb3ZpZGVkXG5cdFx0XHRcdGlmICggb3B0aW9ucy54aHJGaWVsZHMgKSB7XG5cdFx0XHRcdFx0Zm9yICggaSBpbiBvcHRpb25zLnhockZpZWxkcyApIHtcblx0XHRcdFx0XHRcdHhoclsgaSBdID0gb3B0aW9ucy54aHJGaWVsZHNbIGkgXTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBPdmVycmlkZSBtaW1lIHR5cGUgaWYgbmVlZGVkXG5cdFx0XHRcdGlmICggb3B0aW9ucy5taW1lVHlwZSAmJiB4aHIub3ZlcnJpZGVNaW1lVHlwZSApIHtcblx0XHRcdFx0XHR4aHIub3ZlcnJpZGVNaW1lVHlwZSggb3B0aW9ucy5taW1lVHlwZSApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gWC1SZXF1ZXN0ZWQtV2l0aCBoZWFkZXJcblx0XHRcdFx0Ly8gRm9yIGNyb3NzLWRvbWFpbiByZXF1ZXN0cywgc2VlaW5nIGFzIGNvbmRpdGlvbnMgZm9yIGEgcHJlZmxpZ2h0IGFyZVxuXHRcdFx0XHQvLyBha2luIHRvIGEgamlnc2F3IHB1enpsZSwgd2Ugc2ltcGx5IG5ldmVyIHNldCBpdCB0byBiZSBzdXJlLlxuXHRcdFx0XHQvLyAoaXQgY2FuIGFsd2F5cyBiZSBzZXQgb24gYSBwZXItcmVxdWVzdCBiYXNpcyBvciBldmVuIHVzaW5nIGFqYXhTZXR1cClcblx0XHRcdFx0Ly8gRm9yIHNhbWUtZG9tYWluIHJlcXVlc3RzLCB3b24ndCBjaGFuZ2UgaGVhZGVyIGlmIGFscmVhZHkgcHJvdmlkZWQuXG5cdFx0XHRcdGlmICggIW9wdGlvbnMuY3Jvc3NEb21haW4gJiYgIWhlYWRlcnNbIFwiWC1SZXF1ZXN0ZWQtV2l0aFwiIF0gKSB7XG5cdFx0XHRcdFx0aGVhZGVyc1sgXCJYLVJlcXVlc3RlZC1XaXRoXCIgXSA9IFwiWE1MSHR0cFJlcXVlc3RcIjtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFNldCBoZWFkZXJzXG5cdFx0XHRcdGZvciAoIGkgaW4gaGVhZGVycyApIHtcblx0XHRcdFx0XHR4aHIuc2V0UmVxdWVzdEhlYWRlciggaSwgaGVhZGVyc1sgaSBdICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBDYWxsYmFja1xuXHRcdFx0XHRjYWxsYmFjayA9IGZ1bmN0aW9uKCB0eXBlICkge1xuXHRcdFx0XHRcdHJldHVybiBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdGlmICggY2FsbGJhY2sgKSB7XG5cdFx0XHRcdFx0XHRcdGNhbGxiYWNrID0gZXJyb3JDYWxsYmFjayA9IHhoci5vbmxvYWQgPVxuXHRcdFx0XHRcdFx0XHRcdHhoci5vbmVycm9yID0geGhyLm9uYWJvcnQgPSB4aHIub250aW1lb3V0ID1cblx0XHRcdFx0XHRcdFx0XHRcdHhoci5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBudWxsO1xuXG5cdFx0XHRcdFx0XHRcdGlmICggdHlwZSA9PT0gXCJhYm9ydFwiICkge1xuXHRcdFx0XHRcdFx0XHRcdHhoci5hYm9ydCgpO1xuXHRcdFx0XHRcdFx0XHR9IGVsc2UgaWYgKCB0eXBlID09PSBcImVycm9yXCIgKSB7XG5cblx0XHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8PTkgb25seVxuXHRcdFx0XHRcdFx0XHRcdC8vIE9uIGEgbWFudWFsIG5hdGl2ZSBhYm9ydCwgSUU5IHRocm93c1xuXHRcdFx0XHRcdFx0XHRcdC8vIGVycm9ycyBvbiBhbnkgcHJvcGVydHkgYWNjZXNzIHRoYXQgaXMgbm90IHJlYWR5U3RhdGVcblx0XHRcdFx0XHRcdFx0XHRpZiAoIHR5cGVvZiB4aHIuc3RhdHVzICE9PSBcIm51bWJlclwiICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0Y29tcGxldGUoIDAsIFwiZXJyb3JcIiApO1xuXHRcdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRjb21wbGV0ZShcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBGaWxlOiBwcm90b2NvbCBhbHdheXMgeWllbGRzIHN0YXR1cyAwOyBzZWUgIzg2MDUsICMxNDIwN1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR4aHIuc3RhdHVzLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHR4aHIuc3RhdHVzVGV4dFxuXHRcdFx0XHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdFx0Y29tcGxldGUoXG5cdFx0XHRcdFx0XHRcdFx0XHR4aHJTdWNjZXNzU3RhdHVzWyB4aHIuc3RhdHVzIF0gfHwgeGhyLnN0YXR1cyxcblx0XHRcdFx0XHRcdFx0XHRcdHhoci5zdGF0dXNUZXh0LFxuXG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8PTkgb25seVxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gSUU5IGhhcyBubyBYSFIyIGJ1dCB0aHJvd3Mgb24gYmluYXJ5ICh0cmFjLTExNDI2KVxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gRm9yIFhIUjIgbm9uLXRleHQsIGxldCB0aGUgY2FsbGVyIGhhbmRsZSBpdCAoZ2gtMjQ5OClcblx0XHRcdFx0XHRcdFx0XHRcdCggeGhyLnJlc3BvbnNlVHlwZSB8fCBcInRleHRcIiApICE9PSBcInRleHRcIiAgfHxcblx0XHRcdFx0XHRcdFx0XHRcdHR5cGVvZiB4aHIucmVzcG9uc2VUZXh0ICE9PSBcInN0cmluZ1wiID9cblx0XHRcdFx0XHRcdFx0XHRcdFx0eyBiaW5hcnk6IHhoci5yZXNwb25zZSB9IDpcblx0XHRcdFx0XHRcdFx0XHRcdFx0eyB0ZXh0OiB4aHIucmVzcG9uc2VUZXh0IH0sXG5cdFx0XHRcdFx0XHRcdFx0XHR4aHIuZ2V0QWxsUmVzcG9uc2VIZWFkZXJzKClcblx0XHRcdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fTtcblx0XHRcdFx0fTtcblxuXHRcdFx0XHQvLyBMaXN0ZW4gdG8gZXZlbnRzXG5cdFx0XHRcdHhoci5vbmxvYWQgPSBjYWxsYmFjaygpO1xuXHRcdFx0XHRlcnJvckNhbGxiYWNrID0geGhyLm9uZXJyb3IgPSB4aHIub250aW1lb3V0ID0gY2FsbGJhY2soIFwiZXJyb3JcIiApO1xuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDkgb25seVxuXHRcdFx0XHQvLyBVc2Ugb25yZWFkeXN0YXRlY2hhbmdlIHRvIHJlcGxhY2Ugb25hYm9ydFxuXHRcdFx0XHQvLyB0byBoYW5kbGUgdW5jYXVnaHQgYWJvcnRzXG5cdFx0XHRcdGlmICggeGhyLm9uYWJvcnQgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0XHR4aHIub25hYm9ydCA9IGVycm9yQ2FsbGJhY2s7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0eGhyLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uKCkge1xuXG5cdFx0XHRcdFx0XHQvLyBDaGVjayByZWFkeVN0YXRlIGJlZm9yZSB0aW1lb3V0IGFzIGl0IGNoYW5nZXNcblx0XHRcdFx0XHRcdGlmICggeGhyLnJlYWR5U3RhdGUgPT09IDQgKSB7XG5cblx0XHRcdFx0XHRcdFx0Ly8gQWxsb3cgb25lcnJvciB0byBiZSBjYWxsZWQgZmlyc3QsXG5cdFx0XHRcdFx0XHRcdC8vIGJ1dCB0aGF0IHdpbGwgbm90IGhhbmRsZSBhIG5hdGl2ZSBhYm9ydFxuXHRcdFx0XHRcdFx0XHQvLyBBbHNvLCBzYXZlIGVycm9yQ2FsbGJhY2sgdG8gYSB2YXJpYWJsZVxuXHRcdFx0XHRcdFx0XHQvLyBhcyB4aHIub25lcnJvciBjYW5ub3QgYmUgYWNjZXNzZWRcblx0XHRcdFx0XHRcdFx0d2luZG93LnNldFRpbWVvdXQoIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0XHRcdGlmICggY2FsbGJhY2sgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRlcnJvckNhbGxiYWNrKCk7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHR9ICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIENyZWF0ZSB0aGUgYWJvcnQgY2FsbGJhY2tcblx0XHRcdFx0Y2FsbGJhY2sgPSBjYWxsYmFjayggXCJhYm9ydFwiICk7XG5cblx0XHRcdFx0dHJ5IHtcblxuXHRcdFx0XHRcdC8vIERvIHNlbmQgdGhlIHJlcXVlc3QgKHRoaXMgbWF5IHJhaXNlIGFuIGV4Y2VwdGlvbilcblx0XHRcdFx0XHR4aHIuc2VuZCggb3B0aW9ucy5oYXNDb250ZW50ICYmIG9wdGlvbnMuZGF0YSB8fCBudWxsICk7XG5cdFx0XHRcdH0gY2F0Y2ggKCBlICkge1xuXG5cdFx0XHRcdFx0Ly8gIzE0NjgzOiBPbmx5IHJldGhyb3cgaWYgdGhpcyBoYXNuJ3QgYmVlbiBub3RpZmllZCBhcyBhbiBlcnJvciB5ZXRcblx0XHRcdFx0XHRpZiAoIGNhbGxiYWNrICkge1xuXHRcdFx0XHRcdFx0dGhyb3cgZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH0sXG5cblx0XHRcdGFib3J0OiBmdW5jdGlvbigpIHtcblx0XHRcdFx0aWYgKCBjYWxsYmFjayApIHtcblx0XHRcdFx0XHRjYWxsYmFjaygpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fTtcblx0fVxufSApO1xuXG5cblxuXG4vLyBQcmV2ZW50IGF1dG8tZXhlY3V0aW9uIG9mIHNjcmlwdHMgd2hlbiBubyBleHBsaWNpdCBkYXRhVHlwZSB3YXMgcHJvdmlkZWQgKFNlZSBnaC0yNDMyKVxualF1ZXJ5LmFqYXhQcmVmaWx0ZXIoIGZ1bmN0aW9uKCBzICkge1xuXHRpZiAoIHMuY3Jvc3NEb21haW4gKSB7XG5cdFx0cy5jb250ZW50cy5zY3JpcHQgPSBmYWxzZTtcblx0fVxufSApO1xuXG4vLyBJbnN0YWxsIHNjcmlwdCBkYXRhVHlwZVxualF1ZXJ5LmFqYXhTZXR1cCgge1xuXHRhY2NlcHRzOiB7XG5cdFx0c2NyaXB0OiBcInRleHQvamF2YXNjcmlwdCwgYXBwbGljYXRpb24vamF2YXNjcmlwdCwgXCIgK1xuXHRcdFx0XCJhcHBsaWNhdGlvbi9lY21hc2NyaXB0LCBhcHBsaWNhdGlvbi94LWVjbWFzY3JpcHRcIlxuXHR9LFxuXHRjb250ZW50czoge1xuXHRcdHNjcmlwdDogL1xcYig/OmphdmF8ZWNtYSlzY3JpcHRcXGIvXG5cdH0sXG5cdGNvbnZlcnRlcnM6IHtcblx0XHRcInRleHQgc2NyaXB0XCI6IGZ1bmN0aW9uKCB0ZXh0ICkge1xuXHRcdFx0alF1ZXJ5Lmdsb2JhbEV2YWwoIHRleHQgKTtcblx0XHRcdHJldHVybiB0ZXh0O1xuXHRcdH1cblx0fVxufSApO1xuXG4vLyBIYW5kbGUgY2FjaGUncyBzcGVjaWFsIGNhc2UgYW5kIGNyb3NzRG9tYWluXG5qUXVlcnkuYWpheFByZWZpbHRlciggXCJzY3JpcHRcIiwgZnVuY3Rpb24oIHMgKSB7XG5cdGlmICggcy5jYWNoZSA9PT0gdW5kZWZpbmVkICkge1xuXHRcdHMuY2FjaGUgPSBmYWxzZTtcblx0fVxuXHRpZiAoIHMuY3Jvc3NEb21haW4gKSB7XG5cdFx0cy50eXBlID0gXCJHRVRcIjtcblx0fVxufSApO1xuXG4vLyBCaW5kIHNjcmlwdCB0YWcgaGFjayB0cmFuc3BvcnRcbmpRdWVyeS5hamF4VHJhbnNwb3J0KCBcInNjcmlwdFwiLCBmdW5jdGlvbiggcyApIHtcblxuXHQvLyBUaGlzIHRyYW5zcG9ydCBvbmx5IGRlYWxzIHdpdGggY3Jvc3MgZG9tYWluIG9yIGZvcmNlZC1ieS1hdHRycyByZXF1ZXN0c1xuXHRpZiAoIHMuY3Jvc3NEb21haW4gfHwgcy5zY3JpcHRBdHRycyApIHtcblx0XHR2YXIgc2NyaXB0LCBjYWxsYmFjaztcblx0XHRyZXR1cm4ge1xuXHRcdFx0c2VuZDogZnVuY3Rpb24oIF8sIGNvbXBsZXRlICkge1xuXHRcdFx0XHRzY3JpcHQgPSBqUXVlcnkoIFwiPHNjcmlwdD5cIiApXG5cdFx0XHRcdFx0LmF0dHIoIHMuc2NyaXB0QXR0cnMgfHwge30gKVxuXHRcdFx0XHRcdC5wcm9wKCB7IGNoYXJzZXQ6IHMuc2NyaXB0Q2hhcnNldCwgc3JjOiBzLnVybCB9IClcblx0XHRcdFx0XHQub24oIFwibG9hZCBlcnJvclwiLCBjYWxsYmFjayA9IGZ1bmN0aW9uKCBldnQgKSB7XG5cdFx0XHRcdFx0XHRzY3JpcHQucmVtb3ZlKCk7XG5cdFx0XHRcdFx0XHRjYWxsYmFjayA9IG51bGw7XG5cdFx0XHRcdFx0XHRpZiAoIGV2dCApIHtcblx0XHRcdFx0XHRcdFx0Y29tcGxldGUoIGV2dC50eXBlID09PSBcImVycm9yXCIgPyA0MDQgOiAyMDAsIGV2dC50eXBlICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fSApO1xuXG5cdFx0XHRcdC8vIFVzZSBuYXRpdmUgRE9NIG1hbmlwdWxhdGlvbiB0byBhdm9pZCBvdXIgZG9tTWFuaXAgQUpBWCB0cmlja2VyeVxuXHRcdFx0XHRkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKCBzY3JpcHRbIDAgXSApO1xuXHRcdFx0fSxcblx0XHRcdGFib3J0OiBmdW5jdGlvbigpIHtcblx0XHRcdFx0aWYgKCBjYWxsYmFjayApIHtcblx0XHRcdFx0XHRjYWxsYmFjaygpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fTtcblx0fVxufSApO1xuXG5cblxuXG52YXIgb2xkQ2FsbGJhY2tzID0gW10sXG5cdHJqc29ucCA9IC8oPSlcXD8oPz0mfCQpfFxcP1xcPy87XG5cbi8vIERlZmF1bHQganNvbnAgc2V0dGluZ3NcbmpRdWVyeS5hamF4U2V0dXAoIHtcblx0anNvbnA6IFwiY2FsbGJhY2tcIixcblx0anNvbnBDYWxsYmFjazogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIGNhbGxiYWNrID0gb2xkQ2FsbGJhY2tzLnBvcCgpIHx8ICggalF1ZXJ5LmV4cGFuZG8gKyBcIl9cIiArICggbm9uY2UuZ3VpZCsrICkgKTtcblx0XHR0aGlzWyBjYWxsYmFjayBdID0gdHJ1ZTtcblx0XHRyZXR1cm4gY2FsbGJhY2s7XG5cdH1cbn0gKTtcblxuLy8gRGV0ZWN0LCBub3JtYWxpemUgb3B0aW9ucyBhbmQgaW5zdGFsbCBjYWxsYmFja3MgZm9yIGpzb25wIHJlcXVlc3RzXG5qUXVlcnkuYWpheFByZWZpbHRlciggXCJqc29uIGpzb25wXCIsIGZ1bmN0aW9uKCBzLCBvcmlnaW5hbFNldHRpbmdzLCBqcVhIUiApIHtcblxuXHR2YXIgY2FsbGJhY2tOYW1lLCBvdmVyd3JpdHRlbiwgcmVzcG9uc2VDb250YWluZXIsXG5cdFx0anNvblByb3AgPSBzLmpzb25wICE9PSBmYWxzZSAmJiAoIHJqc29ucC50ZXN0KCBzLnVybCApID9cblx0XHRcdFwidXJsXCIgOlxuXHRcdFx0dHlwZW9mIHMuZGF0YSA9PT0gXCJzdHJpbmdcIiAmJlxuXHRcdFx0XHQoIHMuY29udGVudFR5cGUgfHwgXCJcIiApXG5cdFx0XHRcdFx0LmluZGV4T2YoIFwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkXCIgKSA9PT0gMCAmJlxuXHRcdFx0XHRyanNvbnAudGVzdCggcy5kYXRhICkgJiYgXCJkYXRhXCJcblx0XHQpO1xuXG5cdC8vIEhhbmRsZSBpZmYgdGhlIGV4cGVjdGVkIGRhdGEgdHlwZSBpcyBcImpzb25wXCIgb3Igd2UgaGF2ZSBhIHBhcmFtZXRlciB0byBzZXRcblx0aWYgKCBqc29uUHJvcCB8fCBzLmRhdGFUeXBlc1sgMCBdID09PSBcImpzb25wXCIgKSB7XG5cblx0XHQvLyBHZXQgY2FsbGJhY2sgbmFtZSwgcmVtZW1iZXJpbmcgcHJlZXhpc3RpbmcgdmFsdWUgYXNzb2NpYXRlZCB3aXRoIGl0XG5cdFx0Y2FsbGJhY2tOYW1lID0gcy5qc29ucENhbGxiYWNrID0gaXNGdW5jdGlvbiggcy5qc29ucENhbGxiYWNrICkgP1xuXHRcdFx0cy5qc29ucENhbGxiYWNrKCkgOlxuXHRcdFx0cy5qc29ucENhbGxiYWNrO1xuXG5cdFx0Ly8gSW5zZXJ0IGNhbGxiYWNrIGludG8gdXJsIG9yIGZvcm0gZGF0YVxuXHRcdGlmICgganNvblByb3AgKSB7XG5cdFx0XHRzWyBqc29uUHJvcCBdID0gc1sganNvblByb3AgXS5yZXBsYWNlKCByanNvbnAsIFwiJDFcIiArIGNhbGxiYWNrTmFtZSApO1xuXHRcdH0gZWxzZSBpZiAoIHMuanNvbnAgIT09IGZhbHNlICkge1xuXHRcdFx0cy51cmwgKz0gKCBycXVlcnkudGVzdCggcy51cmwgKSA/IFwiJlwiIDogXCI/XCIgKSArIHMuanNvbnAgKyBcIj1cIiArIGNhbGxiYWNrTmFtZTtcblx0XHR9XG5cblx0XHQvLyBVc2UgZGF0YSBjb252ZXJ0ZXIgdG8gcmV0cmlldmUganNvbiBhZnRlciBzY3JpcHQgZXhlY3V0aW9uXG5cdFx0cy5jb252ZXJ0ZXJzWyBcInNjcmlwdCBqc29uXCIgXSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0aWYgKCAhcmVzcG9uc2VDb250YWluZXIgKSB7XG5cdFx0XHRcdGpRdWVyeS5lcnJvciggY2FsbGJhY2tOYW1lICsgXCIgd2FzIG5vdCBjYWxsZWRcIiApO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHJlc3BvbnNlQ29udGFpbmVyWyAwIF07XG5cdFx0fTtcblxuXHRcdC8vIEZvcmNlIGpzb24gZGF0YVR5cGVcblx0XHRzLmRhdGFUeXBlc1sgMCBdID0gXCJqc29uXCI7XG5cblx0XHQvLyBJbnN0YWxsIGNhbGxiYWNrXG5cdFx0b3ZlcndyaXR0ZW4gPSB3aW5kb3dbIGNhbGxiYWNrTmFtZSBdO1xuXHRcdHdpbmRvd1sgY2FsbGJhY2tOYW1lIF0gPSBmdW5jdGlvbigpIHtcblx0XHRcdHJlc3BvbnNlQ29udGFpbmVyID0gYXJndW1lbnRzO1xuXHRcdH07XG5cblx0XHQvLyBDbGVhbi11cCBmdW5jdGlvbiAoZmlyZXMgYWZ0ZXIgY29udmVydGVycylcblx0XHRqcVhIUi5hbHdheXMoIGZ1bmN0aW9uKCkge1xuXG5cdFx0XHQvLyBJZiBwcmV2aW91cyB2YWx1ZSBkaWRuJ3QgZXhpc3QgLSByZW1vdmUgaXRcblx0XHRcdGlmICggb3ZlcndyaXR0ZW4gPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0alF1ZXJ5KCB3aW5kb3cgKS5yZW1vdmVQcm9wKCBjYWxsYmFja05hbWUgKTtcblxuXHRcdFx0Ly8gT3RoZXJ3aXNlIHJlc3RvcmUgcHJlZXhpc3RpbmcgdmFsdWVcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHdpbmRvd1sgY2FsbGJhY2tOYW1lIF0gPSBvdmVyd3JpdHRlbjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU2F2ZSBiYWNrIGFzIGZyZWVcblx0XHRcdGlmICggc1sgY2FsbGJhY2tOYW1lIF0gKSB7XG5cblx0XHRcdFx0Ly8gTWFrZSBzdXJlIHRoYXQgcmUtdXNpbmcgdGhlIG9wdGlvbnMgZG9lc24ndCBzY3JldyB0aGluZ3MgYXJvdW5kXG5cdFx0XHRcdHMuanNvbnBDYWxsYmFjayA9IG9yaWdpbmFsU2V0dGluZ3MuanNvbnBDYWxsYmFjaztcblxuXHRcdFx0XHQvLyBTYXZlIHRoZSBjYWxsYmFjayBuYW1lIGZvciBmdXR1cmUgdXNlXG5cdFx0XHRcdG9sZENhbGxiYWNrcy5wdXNoKCBjYWxsYmFja05hbWUgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQ2FsbCBpZiBpdCB3YXMgYSBmdW5jdGlvbiBhbmQgd2UgaGF2ZSBhIHJlc3BvbnNlXG5cdFx0XHRpZiAoIHJlc3BvbnNlQ29udGFpbmVyICYmIGlzRnVuY3Rpb24oIG92ZXJ3cml0dGVuICkgKSB7XG5cdFx0XHRcdG92ZXJ3cml0dGVuKCByZXNwb25zZUNvbnRhaW5lclsgMCBdICk7XG5cdFx0XHR9XG5cblx0XHRcdHJlc3BvbnNlQ29udGFpbmVyID0gb3ZlcndyaXR0ZW4gPSB1bmRlZmluZWQ7XG5cdFx0fSApO1xuXG5cdFx0Ly8gRGVsZWdhdGUgdG8gc2NyaXB0XG5cdFx0cmV0dXJuIFwic2NyaXB0XCI7XG5cdH1cbn0gKTtcblxuXG5cblxuLy8gU3VwcG9ydDogU2FmYXJpIDggb25seVxuLy8gSW4gU2FmYXJpIDggZG9jdW1lbnRzIGNyZWF0ZWQgdmlhIGRvY3VtZW50LmltcGxlbWVudGF0aW9uLmNyZWF0ZUhUTUxEb2N1bWVudFxuLy8gY29sbGFwc2Ugc2libGluZyBmb3JtczogdGhlIHNlY29uZCBvbmUgYmVjb21lcyBhIGNoaWxkIG9mIHRoZSBmaXJzdCBvbmUuXG4vLyBCZWNhdXNlIG9mIHRoYXQsIHRoaXMgc2VjdXJpdHkgbWVhc3VyZSBoYXMgdG8gYmUgZGlzYWJsZWQgaW4gU2FmYXJpIDguXG4vLyBodHRwczovL2J1Z3Mud2Via2l0Lm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MTM3MzM3XG5zdXBwb3J0LmNyZWF0ZUhUTUxEb2N1bWVudCA9ICggZnVuY3Rpb24oKSB7XG5cdHZhciBib2R5ID0gZG9jdW1lbnQuaW1wbGVtZW50YXRpb24uY3JlYXRlSFRNTERvY3VtZW50KCBcIlwiICkuYm9keTtcblx0Ym9keS5pbm5lckhUTUwgPSBcIjxmb3JtPjwvZm9ybT48Zm9ybT48L2Zvcm0+XCI7XG5cdHJldHVybiBib2R5LmNoaWxkTm9kZXMubGVuZ3RoID09PSAyO1xufSApKCk7XG5cblxuLy8gQXJndW1lbnQgXCJkYXRhXCIgc2hvdWxkIGJlIHN0cmluZyBvZiBodG1sXG4vLyBjb250ZXh0IChvcHRpb25hbCk6IElmIHNwZWNpZmllZCwgdGhlIGZyYWdtZW50IHdpbGwgYmUgY3JlYXRlZCBpbiB0aGlzIGNvbnRleHQsXG4vLyBkZWZhdWx0cyB0byBkb2N1bWVudFxuLy8ga2VlcFNjcmlwdHMgKG9wdGlvbmFsKTogSWYgdHJ1ZSwgd2lsbCBpbmNsdWRlIHNjcmlwdHMgcGFzc2VkIGluIHRoZSBodG1sIHN0cmluZ1xualF1ZXJ5LnBhcnNlSFRNTCA9IGZ1bmN0aW9uKCBkYXRhLCBjb250ZXh0LCBrZWVwU2NyaXB0cyApIHtcblx0aWYgKCB0eXBlb2YgZGF0YSAhPT0gXCJzdHJpbmdcIiApIHtcblx0XHRyZXR1cm4gW107XG5cdH1cblx0aWYgKCB0eXBlb2YgY29udGV4dCA9PT0gXCJib29sZWFuXCIgKSB7XG5cdFx0a2VlcFNjcmlwdHMgPSBjb250ZXh0O1xuXHRcdGNvbnRleHQgPSBmYWxzZTtcblx0fVxuXG5cdHZhciBiYXNlLCBwYXJzZWQsIHNjcmlwdHM7XG5cblx0aWYgKCAhY29udGV4dCApIHtcblxuXHRcdC8vIFN0b3Agc2NyaXB0cyBvciBpbmxpbmUgZXZlbnQgaGFuZGxlcnMgZnJvbSBiZWluZyBleGVjdXRlZCBpbW1lZGlhdGVseVxuXHRcdC8vIGJ5IHVzaW5nIGRvY3VtZW50LmltcGxlbWVudGF0aW9uXG5cdFx0aWYgKCBzdXBwb3J0LmNyZWF0ZUhUTUxEb2N1bWVudCApIHtcblx0XHRcdGNvbnRleHQgPSBkb2N1bWVudC5pbXBsZW1lbnRhdGlvbi5jcmVhdGVIVE1MRG9jdW1lbnQoIFwiXCIgKTtcblxuXHRcdFx0Ly8gU2V0IHRoZSBiYXNlIGhyZWYgZm9yIHRoZSBjcmVhdGVkIGRvY3VtZW50XG5cdFx0XHQvLyBzbyBhbnkgcGFyc2VkIGVsZW1lbnRzIHdpdGggVVJMc1xuXHRcdFx0Ly8gYXJlIGJhc2VkIG9uIHRoZSBkb2N1bWVudCdzIFVSTCAoZ2gtMjk2NSlcblx0XHRcdGJhc2UgPSBjb250ZXh0LmNyZWF0ZUVsZW1lbnQoIFwiYmFzZVwiICk7XG5cdFx0XHRiYXNlLmhyZWYgPSBkb2N1bWVudC5sb2NhdGlvbi5ocmVmO1xuXHRcdFx0Y29udGV4dC5oZWFkLmFwcGVuZENoaWxkKCBiYXNlICk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGNvbnRleHQgPSBkb2N1bWVudDtcblx0XHR9XG5cdH1cblxuXHRwYXJzZWQgPSByc2luZ2xlVGFnLmV4ZWMoIGRhdGEgKTtcblx0c2NyaXB0cyA9ICFrZWVwU2NyaXB0cyAmJiBbXTtcblxuXHQvLyBTaW5nbGUgdGFnXG5cdGlmICggcGFyc2VkICkge1xuXHRcdHJldHVybiBbIGNvbnRleHQuY3JlYXRlRWxlbWVudCggcGFyc2VkWyAxIF0gKSBdO1xuXHR9XG5cblx0cGFyc2VkID0gYnVpbGRGcmFnbWVudCggWyBkYXRhIF0sIGNvbnRleHQsIHNjcmlwdHMgKTtcblxuXHRpZiAoIHNjcmlwdHMgJiYgc2NyaXB0cy5sZW5ndGggKSB7XG5cdFx0alF1ZXJ5KCBzY3JpcHRzICkucmVtb3ZlKCk7XG5cdH1cblxuXHRyZXR1cm4galF1ZXJ5Lm1lcmdlKCBbXSwgcGFyc2VkLmNoaWxkTm9kZXMgKTtcbn07XG5cblxuLyoqXG4gKiBMb2FkIGEgdXJsIGludG8gYSBwYWdlXG4gKi9cbmpRdWVyeS5mbi5sb2FkID0gZnVuY3Rpb24oIHVybCwgcGFyYW1zLCBjYWxsYmFjayApIHtcblx0dmFyIHNlbGVjdG9yLCB0eXBlLCByZXNwb25zZSxcblx0XHRzZWxmID0gdGhpcyxcblx0XHRvZmYgPSB1cmwuaW5kZXhPZiggXCIgXCIgKTtcblxuXHRpZiAoIG9mZiA+IC0xICkge1xuXHRcdHNlbGVjdG9yID0gc3RyaXBBbmRDb2xsYXBzZSggdXJsLnNsaWNlKCBvZmYgKSApO1xuXHRcdHVybCA9IHVybC5zbGljZSggMCwgb2ZmICk7XG5cdH1cblxuXHQvLyBJZiBpdCdzIGEgZnVuY3Rpb25cblx0aWYgKCBpc0Z1bmN0aW9uKCBwYXJhbXMgKSApIHtcblxuXHRcdC8vIFdlIGFzc3VtZSB0aGF0IGl0J3MgdGhlIGNhbGxiYWNrXG5cdFx0Y2FsbGJhY2sgPSBwYXJhbXM7XG5cdFx0cGFyYW1zID0gdW5kZWZpbmVkO1xuXG5cdC8vIE90aGVyd2lzZSwgYnVpbGQgYSBwYXJhbSBzdHJpbmdcblx0fSBlbHNlIGlmICggcGFyYW1zICYmIHR5cGVvZiBwYXJhbXMgPT09IFwib2JqZWN0XCIgKSB7XG5cdFx0dHlwZSA9IFwiUE9TVFwiO1xuXHR9XG5cblx0Ly8gSWYgd2UgaGF2ZSBlbGVtZW50cyB0byBtb2RpZnksIG1ha2UgdGhlIHJlcXVlc3Rcblx0aWYgKCBzZWxmLmxlbmd0aCA+IDAgKSB7XG5cdFx0alF1ZXJ5LmFqYXgoIHtcblx0XHRcdHVybDogdXJsLFxuXG5cdFx0XHQvLyBJZiBcInR5cGVcIiB2YXJpYWJsZSBpcyB1bmRlZmluZWQsIHRoZW4gXCJHRVRcIiBtZXRob2Qgd2lsbCBiZSB1c2VkLlxuXHRcdFx0Ly8gTWFrZSB2YWx1ZSBvZiB0aGlzIGZpZWxkIGV4cGxpY2l0IHNpbmNlXG5cdFx0XHQvLyB1c2VyIGNhbiBvdmVycmlkZSBpdCB0aHJvdWdoIGFqYXhTZXR1cCBtZXRob2Rcblx0XHRcdHR5cGU6IHR5cGUgfHwgXCJHRVRcIixcblx0XHRcdGRhdGFUeXBlOiBcImh0bWxcIixcblx0XHRcdGRhdGE6IHBhcmFtc1xuXHRcdH0gKS5kb25lKCBmdW5jdGlvbiggcmVzcG9uc2VUZXh0ICkge1xuXG5cdFx0XHQvLyBTYXZlIHJlc3BvbnNlIGZvciB1c2UgaW4gY29tcGxldGUgY2FsbGJhY2tcblx0XHRcdHJlc3BvbnNlID0gYXJndW1lbnRzO1xuXG5cdFx0XHRzZWxmLmh0bWwoIHNlbGVjdG9yID9cblxuXHRcdFx0XHQvLyBJZiBhIHNlbGVjdG9yIHdhcyBzcGVjaWZpZWQsIGxvY2F0ZSB0aGUgcmlnaHQgZWxlbWVudHMgaW4gYSBkdW1teSBkaXZcblx0XHRcdFx0Ly8gRXhjbHVkZSBzY3JpcHRzIHRvIGF2b2lkIElFICdQZXJtaXNzaW9uIERlbmllZCcgZXJyb3JzXG5cdFx0XHRcdGpRdWVyeSggXCI8ZGl2PlwiICkuYXBwZW5kKCBqUXVlcnkucGFyc2VIVE1MKCByZXNwb25zZVRleHQgKSApLmZpbmQoIHNlbGVjdG9yICkgOlxuXG5cdFx0XHRcdC8vIE90aGVyd2lzZSB1c2UgdGhlIGZ1bGwgcmVzdWx0XG5cdFx0XHRcdHJlc3BvbnNlVGV4dCApO1xuXG5cdFx0Ly8gSWYgdGhlIHJlcXVlc3Qgc3VjY2VlZHMsIHRoaXMgZnVuY3Rpb24gZ2V0cyBcImRhdGFcIiwgXCJzdGF0dXNcIiwgXCJqcVhIUlwiXG5cdFx0Ly8gYnV0IHRoZXkgYXJlIGlnbm9yZWQgYmVjYXVzZSByZXNwb25zZSB3YXMgc2V0IGFib3ZlLlxuXHRcdC8vIElmIGl0IGZhaWxzLCB0aGlzIGZ1bmN0aW9uIGdldHMgXCJqcVhIUlwiLCBcInN0YXR1c1wiLCBcImVycm9yXCJcblx0XHR9ICkuYWx3YXlzKCBjYWxsYmFjayAmJiBmdW5jdGlvbigganFYSFIsIHN0YXR1cyApIHtcblx0XHRcdHNlbGYuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGNhbGxiYWNrLmFwcGx5KCB0aGlzLCByZXNwb25zZSB8fCBbIGpxWEhSLnJlc3BvbnNlVGV4dCwgc3RhdHVzLCBqcVhIUiBdICk7XG5cdFx0XHR9ICk7XG5cdFx0fSApO1xuXHR9XG5cblx0cmV0dXJuIHRoaXM7XG59O1xuXG5cblxuXG5qUXVlcnkuZXhwci5wc2V1ZG9zLmFuaW1hdGVkID0gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdHJldHVybiBqUXVlcnkuZ3JlcCggalF1ZXJ5LnRpbWVycywgZnVuY3Rpb24oIGZuICkge1xuXHRcdHJldHVybiBlbGVtID09PSBmbi5lbGVtO1xuXHR9ICkubGVuZ3RoO1xufTtcblxuXG5cblxualF1ZXJ5Lm9mZnNldCA9IHtcblx0c2V0T2Zmc2V0OiBmdW5jdGlvbiggZWxlbSwgb3B0aW9ucywgaSApIHtcblx0XHR2YXIgY3VyUG9zaXRpb24sIGN1ckxlZnQsIGN1ckNTU1RvcCwgY3VyVG9wLCBjdXJPZmZzZXQsIGN1ckNTU0xlZnQsIGNhbGN1bGF0ZVBvc2l0aW9uLFxuXHRcdFx0cG9zaXRpb24gPSBqUXVlcnkuY3NzKCBlbGVtLCBcInBvc2l0aW9uXCIgKSxcblx0XHRcdGN1ckVsZW0gPSBqUXVlcnkoIGVsZW0gKSxcblx0XHRcdHByb3BzID0ge307XG5cblx0XHQvLyBTZXQgcG9zaXRpb24gZmlyc3QsIGluLWNhc2UgdG9wL2xlZnQgYXJlIHNldCBldmVuIG9uIHN0YXRpYyBlbGVtXG5cdFx0aWYgKCBwb3NpdGlvbiA9PT0gXCJzdGF0aWNcIiApIHtcblx0XHRcdGVsZW0uc3R5bGUucG9zaXRpb24gPSBcInJlbGF0aXZlXCI7XG5cdFx0fVxuXG5cdFx0Y3VyT2Zmc2V0ID0gY3VyRWxlbS5vZmZzZXQoKTtcblx0XHRjdXJDU1NUb3AgPSBqUXVlcnkuY3NzKCBlbGVtLCBcInRvcFwiICk7XG5cdFx0Y3VyQ1NTTGVmdCA9IGpRdWVyeS5jc3MoIGVsZW0sIFwibGVmdFwiICk7XG5cdFx0Y2FsY3VsYXRlUG9zaXRpb24gPSAoIHBvc2l0aW9uID09PSBcImFic29sdXRlXCIgfHwgcG9zaXRpb24gPT09IFwiZml4ZWRcIiApICYmXG5cdFx0XHQoIGN1ckNTU1RvcCArIGN1ckNTU0xlZnQgKS5pbmRleE9mKCBcImF1dG9cIiApID4gLTE7XG5cblx0XHQvLyBOZWVkIHRvIGJlIGFibGUgdG8gY2FsY3VsYXRlIHBvc2l0aW9uIGlmIGVpdGhlclxuXHRcdC8vIHRvcCBvciBsZWZ0IGlzIGF1dG8gYW5kIHBvc2l0aW9uIGlzIGVpdGhlciBhYnNvbHV0ZSBvciBmaXhlZFxuXHRcdGlmICggY2FsY3VsYXRlUG9zaXRpb24gKSB7XG5cdFx0XHRjdXJQb3NpdGlvbiA9IGN1ckVsZW0ucG9zaXRpb24oKTtcblx0XHRcdGN1clRvcCA9IGN1clBvc2l0aW9uLnRvcDtcblx0XHRcdGN1ckxlZnQgPSBjdXJQb3NpdGlvbi5sZWZ0O1xuXG5cdFx0fSBlbHNlIHtcblx0XHRcdGN1clRvcCA9IHBhcnNlRmxvYXQoIGN1ckNTU1RvcCApIHx8IDA7XG5cdFx0XHRjdXJMZWZ0ID0gcGFyc2VGbG9hdCggY3VyQ1NTTGVmdCApIHx8IDA7XG5cdFx0fVxuXG5cdFx0aWYgKCBpc0Z1bmN0aW9uKCBvcHRpb25zICkgKSB7XG5cblx0XHRcdC8vIFVzZSBqUXVlcnkuZXh0ZW5kIGhlcmUgdG8gYWxsb3cgbW9kaWZpY2F0aW9uIG9mIGNvb3JkaW5hdGVzIGFyZ3VtZW50IChnaC0xODQ4KVxuXHRcdFx0b3B0aW9ucyA9IG9wdGlvbnMuY2FsbCggZWxlbSwgaSwgalF1ZXJ5LmV4dGVuZCgge30sIGN1ck9mZnNldCApICk7XG5cdFx0fVxuXG5cdFx0aWYgKCBvcHRpb25zLnRvcCAhPSBudWxsICkge1xuXHRcdFx0cHJvcHMudG9wID0gKCBvcHRpb25zLnRvcCAtIGN1ck9mZnNldC50b3AgKSArIGN1clRvcDtcblx0XHR9XG5cdFx0aWYgKCBvcHRpb25zLmxlZnQgIT0gbnVsbCApIHtcblx0XHRcdHByb3BzLmxlZnQgPSAoIG9wdGlvbnMubGVmdCAtIGN1ck9mZnNldC5sZWZ0ICkgKyBjdXJMZWZ0O1xuXHRcdH1cblxuXHRcdGlmICggXCJ1c2luZ1wiIGluIG9wdGlvbnMgKSB7XG5cdFx0XHRvcHRpb25zLnVzaW5nLmNhbGwoIGVsZW0sIHByb3BzICk7XG5cblx0XHR9IGVsc2Uge1xuXHRcdFx0Y3VyRWxlbS5jc3MoIHByb3BzICk7XG5cdFx0fVxuXHR9XG59O1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cblx0Ly8gb2Zmc2V0KCkgcmVsYXRlcyBhbiBlbGVtZW50J3MgYm9yZGVyIGJveCB0byB0aGUgZG9jdW1lbnQgb3JpZ2luXG5cdG9mZnNldDogZnVuY3Rpb24oIG9wdGlvbnMgKSB7XG5cblx0XHQvLyBQcmVzZXJ2ZSBjaGFpbmluZyBmb3Igc2V0dGVyXG5cdFx0aWYgKCBhcmd1bWVudHMubGVuZ3RoICkge1xuXHRcdFx0cmV0dXJuIG9wdGlvbnMgPT09IHVuZGVmaW5lZCA/XG5cdFx0XHRcdHRoaXMgOlxuXHRcdFx0XHR0aGlzLmVhY2goIGZ1bmN0aW9uKCBpICkge1xuXHRcdFx0XHRcdGpRdWVyeS5vZmZzZXQuc2V0T2Zmc2V0KCB0aGlzLCBvcHRpb25zLCBpICk7XG5cdFx0XHRcdH0gKTtcblx0XHR9XG5cblx0XHR2YXIgcmVjdCwgd2luLFxuXHRcdFx0ZWxlbSA9IHRoaXNbIDAgXTtcblxuXHRcdGlmICggIWVsZW0gKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gUmV0dXJuIHplcm9zIGZvciBkaXNjb25uZWN0ZWQgYW5kIGhpZGRlbiAoZGlzcGxheTogbm9uZSkgZWxlbWVudHMgKGdoLTIzMTApXG5cdFx0Ly8gU3VwcG9ydDogSUUgPD0xMSBvbmx5XG5cdFx0Ly8gUnVubmluZyBnZXRCb3VuZGluZ0NsaWVudFJlY3Qgb24gYVxuXHRcdC8vIGRpc2Nvbm5lY3RlZCBub2RlIGluIElFIHRocm93cyBhbiBlcnJvclxuXHRcdGlmICggIWVsZW0uZ2V0Q2xpZW50UmVjdHMoKS5sZW5ndGggKSB7XG5cdFx0XHRyZXR1cm4geyB0b3A6IDAsIGxlZnQ6IDAgfTtcblx0XHR9XG5cblx0XHQvLyBHZXQgZG9jdW1lbnQtcmVsYXRpdmUgcG9zaXRpb24gYnkgYWRkaW5nIHZpZXdwb3J0IHNjcm9sbCB0byB2aWV3cG9ydC1yZWxhdGl2ZSBnQkNSXG5cdFx0cmVjdCA9IGVsZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG5cdFx0d2luID0gZWxlbS5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3O1xuXHRcdHJldHVybiB7XG5cdFx0XHR0b3A6IHJlY3QudG9wICsgd2luLnBhZ2VZT2Zmc2V0LFxuXHRcdFx0bGVmdDogcmVjdC5sZWZ0ICsgd2luLnBhZ2VYT2Zmc2V0XG5cdFx0fTtcblx0fSxcblxuXHQvLyBwb3NpdGlvbigpIHJlbGF0ZXMgYW4gZWxlbWVudCdzIG1hcmdpbiBib3ggdG8gaXRzIG9mZnNldCBwYXJlbnQncyBwYWRkaW5nIGJveFxuXHQvLyBUaGlzIGNvcnJlc3BvbmRzIHRvIHRoZSBiZWhhdmlvciBvZiBDU1MgYWJzb2x1dGUgcG9zaXRpb25pbmdcblx0cG9zaXRpb246IGZ1bmN0aW9uKCkge1xuXHRcdGlmICggIXRoaXNbIDAgXSApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHR2YXIgb2Zmc2V0UGFyZW50LCBvZmZzZXQsIGRvYyxcblx0XHRcdGVsZW0gPSB0aGlzWyAwIF0sXG5cdFx0XHRwYXJlbnRPZmZzZXQgPSB7IHRvcDogMCwgbGVmdDogMCB9O1xuXG5cdFx0Ly8gcG9zaXRpb246Zml4ZWQgZWxlbWVudHMgYXJlIG9mZnNldCBmcm9tIHRoZSB2aWV3cG9ydCwgd2hpY2ggaXRzZWxmIGFsd2F5cyBoYXMgemVybyBvZmZzZXRcblx0XHRpZiAoIGpRdWVyeS5jc3MoIGVsZW0sIFwicG9zaXRpb25cIiApID09PSBcImZpeGVkXCIgKSB7XG5cblx0XHRcdC8vIEFzc3VtZSBwb3NpdGlvbjpmaXhlZCBpbXBsaWVzIGF2YWlsYWJpbGl0eSBvZiBnZXRCb3VuZGluZ0NsaWVudFJlY3Rcblx0XHRcdG9mZnNldCA9IGVsZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG5cblx0XHR9IGVsc2Uge1xuXHRcdFx0b2Zmc2V0ID0gdGhpcy5vZmZzZXQoKTtcblxuXHRcdFx0Ly8gQWNjb3VudCBmb3IgdGhlICpyZWFsKiBvZmZzZXQgcGFyZW50LCB3aGljaCBjYW4gYmUgdGhlIGRvY3VtZW50IG9yIGl0cyByb290IGVsZW1lbnRcblx0XHRcdC8vIHdoZW4gYSBzdGF0aWNhbGx5IHBvc2l0aW9uZWQgZWxlbWVudCBpcyBpZGVudGlmaWVkXG5cdFx0XHRkb2MgPSBlbGVtLm93bmVyRG9jdW1lbnQ7XG5cdFx0XHRvZmZzZXRQYXJlbnQgPSBlbGVtLm9mZnNldFBhcmVudCB8fCBkb2MuZG9jdW1lbnRFbGVtZW50O1xuXHRcdFx0d2hpbGUgKCBvZmZzZXRQYXJlbnQgJiZcblx0XHRcdFx0KCBvZmZzZXRQYXJlbnQgPT09IGRvYy5ib2R5IHx8IG9mZnNldFBhcmVudCA9PT0gZG9jLmRvY3VtZW50RWxlbWVudCApICYmXG5cdFx0XHRcdGpRdWVyeS5jc3MoIG9mZnNldFBhcmVudCwgXCJwb3NpdGlvblwiICkgPT09IFwic3RhdGljXCIgKSB7XG5cblx0XHRcdFx0b2Zmc2V0UGFyZW50ID0gb2Zmc2V0UGFyZW50LnBhcmVudE5vZGU7XG5cdFx0XHR9XG5cdFx0XHRpZiAoIG9mZnNldFBhcmVudCAmJiBvZmZzZXRQYXJlbnQgIT09IGVsZW0gJiYgb2Zmc2V0UGFyZW50Lm5vZGVUeXBlID09PSAxICkge1xuXG5cdFx0XHRcdC8vIEluY29ycG9yYXRlIGJvcmRlcnMgaW50byBpdHMgb2Zmc2V0LCBzaW5jZSB0aGV5IGFyZSBvdXRzaWRlIGl0cyBjb250ZW50IG9yaWdpblxuXHRcdFx0XHRwYXJlbnRPZmZzZXQgPSBqUXVlcnkoIG9mZnNldFBhcmVudCApLm9mZnNldCgpO1xuXHRcdFx0XHRwYXJlbnRPZmZzZXQudG9wICs9IGpRdWVyeS5jc3MoIG9mZnNldFBhcmVudCwgXCJib3JkZXJUb3BXaWR0aFwiLCB0cnVlICk7XG5cdFx0XHRcdHBhcmVudE9mZnNldC5sZWZ0ICs9IGpRdWVyeS5jc3MoIG9mZnNldFBhcmVudCwgXCJib3JkZXJMZWZ0V2lkdGhcIiwgdHJ1ZSApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIFN1YnRyYWN0IHBhcmVudCBvZmZzZXRzIGFuZCBlbGVtZW50IG1hcmdpbnNcblx0XHRyZXR1cm4ge1xuXHRcdFx0dG9wOiBvZmZzZXQudG9wIC0gcGFyZW50T2Zmc2V0LnRvcCAtIGpRdWVyeS5jc3MoIGVsZW0sIFwibWFyZ2luVG9wXCIsIHRydWUgKSxcblx0XHRcdGxlZnQ6IG9mZnNldC5sZWZ0IC0gcGFyZW50T2Zmc2V0LmxlZnQgLSBqUXVlcnkuY3NzKCBlbGVtLCBcIm1hcmdpbkxlZnRcIiwgdHJ1ZSApXG5cdFx0fTtcblx0fSxcblxuXHQvLyBUaGlzIG1ldGhvZCB3aWxsIHJldHVybiBkb2N1bWVudEVsZW1lbnQgaW4gdGhlIGZvbGxvd2luZyBjYXNlczpcblx0Ly8gMSkgRm9yIHRoZSBlbGVtZW50IGluc2lkZSB0aGUgaWZyYW1lIHdpdGhvdXQgb2Zmc2V0UGFyZW50LCB0aGlzIG1ldGhvZCB3aWxsIHJldHVyblxuXHQvLyAgICBkb2N1bWVudEVsZW1lbnQgb2YgdGhlIHBhcmVudCB3aW5kb3dcblx0Ly8gMikgRm9yIHRoZSBoaWRkZW4gb3IgZGV0YWNoZWQgZWxlbWVudFxuXHQvLyAzKSBGb3IgYm9keSBvciBodG1sIGVsZW1lbnQsIGkuZS4gaW4gY2FzZSBvZiB0aGUgaHRtbCBub2RlIC0gaXQgd2lsbCByZXR1cm4gaXRzZWxmXG5cdC8vXG5cdC8vIGJ1dCB0aG9zZSBleGNlcHRpb25zIHdlcmUgbmV2ZXIgcHJlc2VudGVkIGFzIGEgcmVhbCBsaWZlIHVzZS1jYXNlc1xuXHQvLyBhbmQgbWlnaHQgYmUgY29uc2lkZXJlZCBhcyBtb3JlIHByZWZlcmFibGUgcmVzdWx0cy5cblx0Ly9cblx0Ly8gVGhpcyBsb2dpYywgaG93ZXZlciwgaXMgbm90IGd1YXJhbnRlZWQgYW5kIGNhbiBjaGFuZ2UgYXQgYW55IHBvaW50IGluIHRoZSBmdXR1cmVcblx0b2Zmc2V0UGFyZW50OiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gdGhpcy5tYXAoIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIG9mZnNldFBhcmVudCA9IHRoaXMub2Zmc2V0UGFyZW50O1xuXG5cdFx0XHR3aGlsZSAoIG9mZnNldFBhcmVudCAmJiBqUXVlcnkuY3NzKCBvZmZzZXRQYXJlbnQsIFwicG9zaXRpb25cIiApID09PSBcInN0YXRpY1wiICkge1xuXHRcdFx0XHRvZmZzZXRQYXJlbnQgPSBvZmZzZXRQYXJlbnQub2Zmc2V0UGFyZW50O1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gb2Zmc2V0UGFyZW50IHx8IGRvY3VtZW50RWxlbWVudDtcblx0XHR9ICk7XG5cdH1cbn0gKTtcblxuLy8gQ3JlYXRlIHNjcm9sbExlZnQgYW5kIHNjcm9sbFRvcCBtZXRob2RzXG5qUXVlcnkuZWFjaCggeyBzY3JvbGxMZWZ0OiBcInBhZ2VYT2Zmc2V0XCIsIHNjcm9sbFRvcDogXCJwYWdlWU9mZnNldFwiIH0sIGZ1bmN0aW9uKCBtZXRob2QsIHByb3AgKSB7XG5cdHZhciB0b3AgPSBcInBhZ2VZT2Zmc2V0XCIgPT09IHByb3A7XG5cblx0alF1ZXJ5LmZuWyBtZXRob2QgXSA9IGZ1bmN0aW9uKCB2YWwgKSB7XG5cdFx0cmV0dXJuIGFjY2VzcyggdGhpcywgZnVuY3Rpb24oIGVsZW0sIG1ldGhvZCwgdmFsICkge1xuXG5cdFx0XHQvLyBDb2FsZXNjZSBkb2N1bWVudHMgYW5kIHdpbmRvd3Ncblx0XHRcdHZhciB3aW47XG5cdFx0XHRpZiAoIGlzV2luZG93KCBlbGVtICkgKSB7XG5cdFx0XHRcdHdpbiA9IGVsZW07XG5cdFx0XHR9IGVsc2UgaWYgKCBlbGVtLm5vZGVUeXBlID09PSA5ICkge1xuXHRcdFx0XHR3aW4gPSBlbGVtLmRlZmF1bHRWaWV3O1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIHZhbCA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRyZXR1cm4gd2luID8gd2luWyBwcm9wIF0gOiBlbGVtWyBtZXRob2QgXTtcblx0XHRcdH1cblxuXHRcdFx0aWYgKCB3aW4gKSB7XG5cdFx0XHRcdHdpbi5zY3JvbGxUbyhcblx0XHRcdFx0XHQhdG9wID8gdmFsIDogd2luLnBhZ2VYT2Zmc2V0LFxuXHRcdFx0XHRcdHRvcCA/IHZhbCA6IHdpbi5wYWdlWU9mZnNldFxuXHRcdFx0XHQpO1xuXG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRlbGVtWyBtZXRob2QgXSA9IHZhbDtcblx0XHRcdH1cblx0XHR9LCBtZXRob2QsIHZhbCwgYXJndW1lbnRzLmxlbmd0aCApO1xuXHR9O1xufSApO1xuXG4vLyBTdXBwb3J0OiBTYWZhcmkgPD03IC0gOS4xLCBDaHJvbWUgPD0zNyAtIDQ5XG4vLyBBZGQgdGhlIHRvcC9sZWZ0IGNzc0hvb2tzIHVzaW5nIGpRdWVyeS5mbi5wb3NpdGlvblxuLy8gV2Via2l0IGJ1ZzogaHR0cHM6Ly9idWdzLndlYmtpdC5vcmcvc2hvd19idWcuY2dpP2lkPTI5MDg0XG4vLyBCbGluayBidWc6IGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTU4OTM0N1xuLy8gZ2V0Q29tcHV0ZWRTdHlsZSByZXR1cm5zIHBlcmNlbnQgd2hlbiBzcGVjaWZpZWQgZm9yIHRvcC9sZWZ0L2JvdHRvbS9yaWdodDtcbi8vIHJhdGhlciB0aGFuIG1ha2UgdGhlIGNzcyBtb2R1bGUgZGVwZW5kIG9uIHRoZSBvZmZzZXQgbW9kdWxlLCBqdXN0IGNoZWNrIGZvciBpdCBoZXJlXG5qUXVlcnkuZWFjaCggWyBcInRvcFwiLCBcImxlZnRcIiBdLCBmdW5jdGlvbiggX2ksIHByb3AgKSB7XG5cdGpRdWVyeS5jc3NIb29rc1sgcHJvcCBdID0gYWRkR2V0SG9va0lmKCBzdXBwb3J0LnBpeGVsUG9zaXRpb24sXG5cdFx0ZnVuY3Rpb24oIGVsZW0sIGNvbXB1dGVkICkge1xuXHRcdFx0aWYgKCBjb21wdXRlZCApIHtcblx0XHRcdFx0Y29tcHV0ZWQgPSBjdXJDU1MoIGVsZW0sIHByb3AgKTtcblxuXHRcdFx0XHQvLyBJZiBjdXJDU1MgcmV0dXJucyBwZXJjZW50YWdlLCBmYWxsYmFjayB0byBvZmZzZXRcblx0XHRcdFx0cmV0dXJuIHJudW1ub25weC50ZXN0KCBjb21wdXRlZCApID9cblx0XHRcdFx0XHRqUXVlcnkoIGVsZW0gKS5wb3NpdGlvbigpWyBwcm9wIF0gKyBcInB4XCIgOlxuXHRcdFx0XHRcdGNvbXB1dGVkO1xuXHRcdFx0fVxuXHRcdH1cblx0KTtcbn0gKTtcblxuXG4vLyBDcmVhdGUgaW5uZXJIZWlnaHQsIGlubmVyV2lkdGgsIGhlaWdodCwgd2lkdGgsIG91dGVySGVpZ2h0IGFuZCBvdXRlcldpZHRoIG1ldGhvZHNcbmpRdWVyeS5lYWNoKCB7IEhlaWdodDogXCJoZWlnaHRcIiwgV2lkdGg6IFwid2lkdGhcIiB9LCBmdW5jdGlvbiggbmFtZSwgdHlwZSApIHtcblx0alF1ZXJ5LmVhY2goIHtcblx0XHRwYWRkaW5nOiBcImlubmVyXCIgKyBuYW1lLFxuXHRcdGNvbnRlbnQ6IHR5cGUsXG5cdFx0XCJcIjogXCJvdXRlclwiICsgbmFtZVxuXHR9LCBmdW5jdGlvbiggZGVmYXVsdEV4dHJhLCBmdW5jTmFtZSApIHtcblxuXHRcdC8vIE1hcmdpbiBpcyBvbmx5IGZvciBvdXRlckhlaWdodCwgb3V0ZXJXaWR0aFxuXHRcdGpRdWVyeS5mblsgZnVuY05hbWUgXSA9IGZ1bmN0aW9uKCBtYXJnaW4sIHZhbHVlICkge1xuXHRcdFx0dmFyIGNoYWluYWJsZSA9IGFyZ3VtZW50cy5sZW5ndGggJiYgKCBkZWZhdWx0RXh0cmEgfHwgdHlwZW9mIG1hcmdpbiAhPT0gXCJib29sZWFuXCIgKSxcblx0XHRcdFx0ZXh0cmEgPSBkZWZhdWx0RXh0cmEgfHwgKCBtYXJnaW4gPT09IHRydWUgfHwgdmFsdWUgPT09IHRydWUgPyBcIm1hcmdpblwiIDogXCJib3JkZXJcIiApO1xuXG5cdFx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBmdW5jdGlvbiggZWxlbSwgdHlwZSwgdmFsdWUgKSB7XG5cdFx0XHRcdHZhciBkb2M7XG5cblx0XHRcdFx0aWYgKCBpc1dpbmRvdyggZWxlbSApICkge1xuXG5cdFx0XHRcdFx0Ly8gJCggd2luZG93ICkub3V0ZXJXaWR0aC9IZWlnaHQgcmV0dXJuIHcvaCBpbmNsdWRpbmcgc2Nyb2xsYmFycyAoZ2gtMTcyOSlcblx0XHRcdFx0XHRyZXR1cm4gZnVuY05hbWUuaW5kZXhPZiggXCJvdXRlclwiICkgPT09IDAgP1xuXHRcdFx0XHRcdFx0ZWxlbVsgXCJpbm5lclwiICsgbmFtZSBdIDpcblx0XHRcdFx0XHRcdGVsZW0uZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50WyBcImNsaWVudFwiICsgbmFtZSBdO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gR2V0IGRvY3VtZW50IHdpZHRoIG9yIGhlaWdodFxuXHRcdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDkgKSB7XG5cdFx0XHRcdFx0ZG9jID0gZWxlbS5kb2N1bWVudEVsZW1lbnQ7XG5cblx0XHRcdFx0XHQvLyBFaXRoZXIgc2Nyb2xsW1dpZHRoL0hlaWdodF0gb3Igb2Zmc2V0W1dpZHRoL0hlaWdodF0gb3IgY2xpZW50W1dpZHRoL0hlaWdodF0sXG5cdFx0XHRcdFx0Ly8gd2hpY2hldmVyIGlzIGdyZWF0ZXN0XG5cdFx0XHRcdFx0cmV0dXJuIE1hdGgubWF4KFxuXHRcdFx0XHRcdFx0ZWxlbS5ib2R5WyBcInNjcm9sbFwiICsgbmFtZSBdLCBkb2NbIFwic2Nyb2xsXCIgKyBuYW1lIF0sXG5cdFx0XHRcdFx0XHRlbGVtLmJvZHlbIFwib2Zmc2V0XCIgKyBuYW1lIF0sIGRvY1sgXCJvZmZzZXRcIiArIG5hbWUgXSxcblx0XHRcdFx0XHRcdGRvY1sgXCJjbGllbnRcIiArIG5hbWUgXVxuXHRcdFx0XHRcdCk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gdmFsdWUgPT09IHVuZGVmaW5lZCA/XG5cblx0XHRcdFx0XHQvLyBHZXQgd2lkdGggb3IgaGVpZ2h0IG9uIHRoZSBlbGVtZW50LCByZXF1ZXN0aW5nIGJ1dCBub3QgZm9yY2luZyBwYXJzZUZsb2F0XG5cdFx0XHRcdFx0alF1ZXJ5LmNzcyggZWxlbSwgdHlwZSwgZXh0cmEgKSA6XG5cblx0XHRcdFx0XHQvLyBTZXQgd2lkdGggb3IgaGVpZ2h0IG9uIHRoZSBlbGVtZW50XG5cdFx0XHRcdFx0alF1ZXJ5LnN0eWxlKCBlbGVtLCB0eXBlLCB2YWx1ZSwgZXh0cmEgKTtcblx0XHRcdH0sIHR5cGUsIGNoYWluYWJsZSA/IG1hcmdpbiA6IHVuZGVmaW5lZCwgY2hhaW5hYmxlICk7XG5cdFx0fTtcblx0fSApO1xufSApO1xuXG5cbmpRdWVyeS5lYWNoKCBbXG5cdFwiYWpheFN0YXJ0XCIsXG5cdFwiYWpheFN0b3BcIixcblx0XCJhamF4Q29tcGxldGVcIixcblx0XCJhamF4RXJyb3JcIixcblx0XCJhamF4U3VjY2Vzc1wiLFxuXHRcImFqYXhTZW5kXCJcbl0sIGZ1bmN0aW9uKCBfaSwgdHlwZSApIHtcblx0alF1ZXJ5LmZuWyB0eXBlIF0gPSBmdW5jdGlvbiggZm4gKSB7XG5cdFx0cmV0dXJuIHRoaXMub24oIHR5cGUsIGZuICk7XG5cdH07XG59ICk7XG5cblxuXG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblxuXHRiaW5kOiBmdW5jdGlvbiggdHlwZXMsIGRhdGEsIGZuICkge1xuXHRcdHJldHVybiB0aGlzLm9uKCB0eXBlcywgbnVsbCwgZGF0YSwgZm4gKTtcblx0fSxcblx0dW5iaW5kOiBmdW5jdGlvbiggdHlwZXMsIGZuICkge1xuXHRcdHJldHVybiB0aGlzLm9mZiggdHlwZXMsIG51bGwsIGZuICk7XG5cdH0sXG5cblx0ZGVsZWdhdGU6IGZ1bmN0aW9uKCBzZWxlY3RvciwgdHlwZXMsIGRhdGEsIGZuICkge1xuXHRcdHJldHVybiB0aGlzLm9uKCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuICk7XG5cdH0sXG5cdHVuZGVsZWdhdGU6IGZ1bmN0aW9uKCBzZWxlY3RvciwgdHlwZXMsIGZuICkge1xuXG5cdFx0Ly8gKCBuYW1lc3BhY2UgKSBvciAoIHNlbGVjdG9yLCB0eXBlcyBbLCBmbl0gKVxuXHRcdHJldHVybiBhcmd1bWVudHMubGVuZ3RoID09PSAxID9cblx0XHRcdHRoaXMub2ZmKCBzZWxlY3RvciwgXCIqKlwiICkgOlxuXHRcdFx0dGhpcy5vZmYoIHR5cGVzLCBzZWxlY3RvciB8fCBcIioqXCIsIGZuICk7XG5cdH0sXG5cblx0aG92ZXI6IGZ1bmN0aW9uKCBmbk92ZXIsIGZuT3V0ICkge1xuXHRcdHJldHVybiB0aGlzLm1vdXNlZW50ZXIoIGZuT3ZlciApLm1vdXNlbGVhdmUoIGZuT3V0IHx8IGZuT3ZlciApO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5lYWNoKFxuXHQoIFwiYmx1ciBmb2N1cyBmb2N1c2luIGZvY3Vzb3V0IHJlc2l6ZSBzY3JvbGwgY2xpY2sgZGJsY2xpY2sgXCIgK1xuXHRcIm1vdXNlZG93biBtb3VzZXVwIG1vdXNlbW92ZSBtb3VzZW92ZXIgbW91c2VvdXQgbW91c2VlbnRlciBtb3VzZWxlYXZlIFwiICtcblx0XCJjaGFuZ2Ugc2VsZWN0IHN1Ym1pdCBrZXlkb3duIGtleXByZXNzIGtleXVwIGNvbnRleHRtZW51XCIgKS5zcGxpdCggXCIgXCIgKSxcblx0ZnVuY3Rpb24oIF9pLCBuYW1lICkge1xuXG5cdFx0Ly8gSGFuZGxlIGV2ZW50IGJpbmRpbmdcblx0XHRqUXVlcnkuZm5bIG5hbWUgXSA9IGZ1bmN0aW9uKCBkYXRhLCBmbiApIHtcblx0XHRcdHJldHVybiBhcmd1bWVudHMubGVuZ3RoID4gMCA/XG5cdFx0XHRcdHRoaXMub24oIG5hbWUsIG51bGwsIGRhdGEsIGZuICkgOlxuXHRcdFx0XHR0aGlzLnRyaWdnZXIoIG5hbWUgKTtcblx0XHR9O1xuXHR9XG4pO1xuXG5cblxuXG4vLyBTdXBwb3J0OiBBbmRyb2lkIDw9NC4wIG9ubHlcbi8vIE1ha2Ugc3VyZSB3ZSB0cmltIEJPTSBhbmQgTkJTUFxudmFyIHJ0cmltID0gL15bXFxzXFx1RkVGRlxceEEwXSt8W1xcc1xcdUZFRkZcXHhBMF0rJC9nO1xuXG4vLyBCaW5kIGEgZnVuY3Rpb24gdG8gYSBjb250ZXh0LCBvcHRpb25hbGx5IHBhcnRpYWxseSBhcHBseWluZyBhbnlcbi8vIGFyZ3VtZW50cy5cbi8vIGpRdWVyeS5wcm94eSBpcyBkZXByZWNhdGVkIHRvIHByb21vdGUgc3RhbmRhcmRzIChzcGVjaWZpY2FsbHkgRnVuY3Rpb24jYmluZClcbi8vIEhvd2V2ZXIsIGl0IGlzIG5vdCBzbGF0ZWQgZm9yIHJlbW92YWwgYW55IHRpbWUgc29vblxualF1ZXJ5LnByb3h5ID0gZnVuY3Rpb24oIGZuLCBjb250ZXh0ICkge1xuXHR2YXIgdG1wLCBhcmdzLCBwcm94eTtcblxuXHRpZiAoIHR5cGVvZiBjb250ZXh0ID09PSBcInN0cmluZ1wiICkge1xuXHRcdHRtcCA9IGZuWyBjb250ZXh0IF07XG5cdFx0Y29udGV4dCA9IGZuO1xuXHRcdGZuID0gdG1wO1xuXHR9XG5cblx0Ly8gUXVpY2sgY2hlY2sgdG8gZGV0ZXJtaW5lIGlmIHRhcmdldCBpcyBjYWxsYWJsZSwgaW4gdGhlIHNwZWNcblx0Ly8gdGhpcyB0aHJvd3MgYSBUeXBlRXJyb3IsIGJ1dCB3ZSB3aWxsIGp1c3QgcmV0dXJuIHVuZGVmaW5lZC5cblx0aWYgKCAhaXNGdW5jdGlvbiggZm4gKSApIHtcblx0XHRyZXR1cm4gdW5kZWZpbmVkO1xuXHR9XG5cblx0Ly8gU2ltdWxhdGVkIGJpbmRcblx0YXJncyA9IHNsaWNlLmNhbGwoIGFyZ3VtZW50cywgMiApO1xuXHRwcm94eSA9IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBmbi5hcHBseSggY29udGV4dCB8fCB0aGlzLCBhcmdzLmNvbmNhdCggc2xpY2UuY2FsbCggYXJndW1lbnRzICkgKSApO1xuXHR9O1xuXG5cdC8vIFNldCB0aGUgZ3VpZCBvZiB1bmlxdWUgaGFuZGxlciB0byB0aGUgc2FtZSBvZiBvcmlnaW5hbCBoYW5kbGVyLCBzbyBpdCBjYW4gYmUgcmVtb3ZlZFxuXHRwcm94eS5ndWlkID0gZm4uZ3VpZCA9IGZuLmd1aWQgfHwgalF1ZXJ5Lmd1aWQrKztcblxuXHRyZXR1cm4gcHJveHk7XG59O1xuXG5qUXVlcnkuaG9sZFJlYWR5ID0gZnVuY3Rpb24oIGhvbGQgKSB7XG5cdGlmICggaG9sZCApIHtcblx0XHRqUXVlcnkucmVhZHlXYWl0Kys7XG5cdH0gZWxzZSB7XG5cdFx0alF1ZXJ5LnJlYWR5KCB0cnVlICk7XG5cdH1cbn07XG5qUXVlcnkuaXNBcnJheSA9IEFycmF5LmlzQXJyYXk7XG5qUXVlcnkucGFyc2VKU09OID0gSlNPTi5wYXJzZTtcbmpRdWVyeS5ub2RlTmFtZSA9IG5vZGVOYW1lO1xualF1ZXJ5LmlzRnVuY3Rpb24gPSBpc0Z1bmN0aW9uO1xualF1ZXJ5LmlzV2luZG93ID0gaXNXaW5kb3c7XG5qUXVlcnkuY2FtZWxDYXNlID0gY2FtZWxDYXNlO1xualF1ZXJ5LnR5cGUgPSB0b1R5cGU7XG5cbmpRdWVyeS5ub3cgPSBEYXRlLm5vdztcblxualF1ZXJ5LmlzTnVtZXJpYyA9IGZ1bmN0aW9uKCBvYmogKSB7XG5cblx0Ly8gQXMgb2YgalF1ZXJ5IDMuMCwgaXNOdW1lcmljIGlzIGxpbWl0ZWQgdG9cblx0Ly8gc3RyaW5ncyBhbmQgbnVtYmVycyAocHJpbWl0aXZlcyBvciBvYmplY3RzKVxuXHQvLyB0aGF0IGNhbiBiZSBjb2VyY2VkIHRvIGZpbml0ZSBudW1iZXJzIChnaC0yNjYyKVxuXHR2YXIgdHlwZSA9IGpRdWVyeS50eXBlKCBvYmogKTtcblx0cmV0dXJuICggdHlwZSA9PT0gXCJudW1iZXJcIiB8fCB0eXBlID09PSBcInN0cmluZ1wiICkgJiZcblxuXHRcdC8vIHBhcnNlRmxvYXQgTmFOcyBudW1lcmljLWNhc3QgZmFsc2UgcG9zaXRpdmVzIChcIlwiKVxuXHRcdC8vIC4uLmJ1dCBtaXNpbnRlcnByZXRzIGxlYWRpbmctbnVtYmVyIHN0cmluZ3MsIHBhcnRpY3VsYXJseSBoZXggbGl0ZXJhbHMgKFwiMHguLi5cIilcblx0XHQvLyBzdWJ0cmFjdGlvbiBmb3JjZXMgaW5maW5pdGllcyB0byBOYU5cblx0XHQhaXNOYU4oIG9iaiAtIHBhcnNlRmxvYXQoIG9iaiApICk7XG59O1xuXG5qUXVlcnkudHJpbSA9IGZ1bmN0aW9uKCB0ZXh0ICkge1xuXHRyZXR1cm4gdGV4dCA9PSBudWxsID9cblx0XHRcIlwiIDpcblx0XHQoIHRleHQgKyBcIlwiICkucmVwbGFjZSggcnRyaW0sIFwiXCIgKTtcbn07XG5cblxuXG4vLyBSZWdpc3RlciBhcyBhIG5hbWVkIEFNRCBtb2R1bGUsIHNpbmNlIGpRdWVyeSBjYW4gYmUgY29uY2F0ZW5hdGVkIHdpdGggb3RoZXJcbi8vIGZpbGVzIHRoYXQgbWF5IHVzZSBkZWZpbmUsIGJ1dCBub3QgdmlhIGEgcHJvcGVyIGNvbmNhdGVuYXRpb24gc2NyaXB0IHRoYXRcbi8vIHVuZGVyc3RhbmRzIGFub255bW91cyBBTUQgbW9kdWxlcy4gQSBuYW1lZCBBTUQgaXMgc2FmZXN0IGFuZCBtb3N0IHJvYnVzdFxuLy8gd2F5IHRvIHJlZ2lzdGVyLiBMb3dlcmNhc2UganF1ZXJ5IGlzIHVzZWQgYmVjYXVzZSBBTUQgbW9kdWxlIG5hbWVzIGFyZVxuLy8gZGVyaXZlZCBmcm9tIGZpbGUgbmFtZXMsIGFuZCBqUXVlcnkgaXMgbm9ybWFsbHkgZGVsaXZlcmVkIGluIGEgbG93ZXJjYXNlXG4vLyBmaWxlIG5hbWUuIERvIHRoaXMgYWZ0ZXIgY3JlYXRpbmcgdGhlIGdsb2JhbCBzbyB0aGF0IGlmIGFuIEFNRCBtb2R1bGUgd2FudHNcbi8vIHRvIGNhbGwgbm9Db25mbGljdCB0byBoaWRlIHRoaXMgdmVyc2lvbiBvZiBqUXVlcnksIGl0IHdpbGwgd29yay5cblxuLy8gTm90ZSB0aGF0IGZvciBtYXhpbXVtIHBvcnRhYmlsaXR5LCBsaWJyYXJpZXMgdGhhdCBhcmUgbm90IGpRdWVyeSBzaG91bGRcbi8vIGRlY2xhcmUgdGhlbXNlbHZlcyBhcyBhbm9ueW1vdXMgbW9kdWxlcywgYW5kIGF2b2lkIHNldHRpbmcgYSBnbG9iYWwgaWYgYW5cbi8vIEFNRCBsb2FkZXIgaXMgcHJlc2VudC4galF1ZXJ5IGlzIGEgc3BlY2lhbCBjYXNlLiBGb3IgbW9yZSBpbmZvcm1hdGlvbiwgc2VlXG4vLyBodHRwczovL2dpdGh1Yi5jb20vanJidXJrZS9yZXF1aXJlanMvd2lraS9VcGRhdGluZy1leGlzdGluZy1saWJyYXJpZXMjd2lraS1hbm9uXG5cbmlmICggdHlwZW9mIGRlZmluZSA9PT0gXCJmdW5jdGlvblwiICYmIGRlZmluZS5hbWQgKSB7XG5cdGRlZmluZSggXCJqcXVlcnlcIiwgW10sIGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBqUXVlcnk7XG5cdH0gKTtcbn1cblxuXG5cblxudmFyXG5cblx0Ly8gTWFwIG92ZXIgalF1ZXJ5IGluIGNhc2Ugb2Ygb3ZlcndyaXRlXG5cdF9qUXVlcnkgPSB3aW5kb3cualF1ZXJ5LFxuXG5cdC8vIE1hcCBvdmVyIHRoZSAkIGluIGNhc2Ugb2Ygb3ZlcndyaXRlXG5cdF8kID0gd2luZG93LiQ7XG5cbmpRdWVyeS5ub0NvbmZsaWN0ID0gZnVuY3Rpb24oIGRlZXAgKSB7XG5cdGlmICggd2luZG93LiQgPT09IGpRdWVyeSApIHtcblx0XHR3aW5kb3cuJCA9IF8kO1xuXHR9XG5cblx0aWYgKCBkZWVwICYmIHdpbmRvdy5qUXVlcnkgPT09IGpRdWVyeSApIHtcblx0XHR3aW5kb3cualF1ZXJ5ID0gX2pRdWVyeTtcblx0fVxuXG5cdHJldHVybiBqUXVlcnk7XG59O1xuXG4vLyBFeHBvc2UgalF1ZXJ5IGFuZCAkIGlkZW50aWZpZXJzLCBldmVuIGluIEFNRFxuLy8gKCM3MTAyI2NvbW1lbnQ6MTAsIGh0dHBzOi8vZ2l0aHViLmNvbS9qcXVlcnkvanF1ZXJ5L3B1bGwvNTU3KVxuLy8gYW5kIENvbW1vbkpTIGZvciBicm93c2VyIGVtdWxhdG9ycyAoIzEzNTY2KVxuaWYgKCB0eXBlb2Ygbm9HbG9iYWwgPT09IFwidW5kZWZpbmVkXCIgKSB7XG5cdHdpbmRvdy5qUXVlcnkgPSB3aW5kb3cuJCA9IGpRdWVyeTtcbn1cblxuXG5cblxucmV0dXJuIGpRdWVyeTtcbn0gKTtcbiJdLCJuYW1lcyI6WyJnbG9iYWwiLCJmYWN0b3J5IiwibW9kdWxlIiwiZXhwb3J0cyIsImRvY3VtZW50IiwidyIsIkVycm9yIiwid2luZG93Iiwibm9HbG9iYWwiLCJhcnIiLCJnZXRQcm90byIsIk9iamVjdCIsImdldFByb3RvdHlwZU9mIiwic2xpY2UiLCJmbGF0IiwiYXJyYXkiLCJjYWxsIiwiY29uY2F0IiwiYXBwbHkiLCJwdXNoIiwiaW5kZXhPZiIsImNsYXNzMnR5cGUiLCJ0b1N0cmluZyIsImhhc093biIsImhhc093blByb3BlcnR5IiwiZm5Ub1N0cmluZyIsIk9iamVjdEZ1bmN0aW9uU3RyaW5nIiwic3VwcG9ydCIsImlzRnVuY3Rpb24iLCJvYmoiLCJub2RlVHlwZSIsIml0ZW0iLCJpc1dpbmRvdyIsInByZXNlcnZlZFNjcmlwdEF0dHJpYnV0ZXMiLCJ0eXBlIiwic3JjIiwibm9uY2UiLCJub01vZHVsZSIsIkRPTUV2YWwiLCJjb2RlIiwibm9kZSIsImRvYyIsImkiLCJ2YWwiLCJzY3JpcHQiLCJjcmVhdGVFbGVtZW50IiwidGV4dCIsImdldEF0dHJpYnV0ZSIsInNldEF0dHJpYnV0ZSIsImhlYWQiLCJhcHBlbmRDaGlsZCIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInRvVHlwZSIsInZlcnNpb24iLCJqUXVlcnkiLCJzZWxlY3RvciIsImNvbnRleHQiLCJmbiIsImluaXQiLCJwcm90b3R5cGUiLCJqcXVlcnkiLCJjb25zdHJ1Y3RvciIsImxlbmd0aCIsInRvQXJyYXkiLCJnZXQiLCJudW0iLCJwdXNoU3RhY2siLCJlbGVtcyIsInJldCIsIm1lcmdlIiwicHJldk9iamVjdCIsImVhY2giLCJjYWxsYmFjayIsIm1hcCIsImVsZW0iLCJhcmd1bWVudHMiLCJmaXJzdCIsImVxIiwibGFzdCIsImV2ZW4iLCJncmVwIiwiX2VsZW0iLCJvZGQiLCJsZW4iLCJqIiwiZW5kIiwic29ydCIsInNwbGljZSIsImV4dGVuZCIsIm9wdGlvbnMiLCJuYW1lIiwiY29weSIsImNvcHlJc0FycmF5IiwiY2xvbmUiLCJ0YXJnZXQiLCJkZWVwIiwiaXNQbGFpbk9iamVjdCIsIkFycmF5IiwiaXNBcnJheSIsInVuZGVmaW5lZCIsImV4cGFuZG8iLCJNYXRoIiwicmFuZG9tIiwicmVwbGFjZSIsImlzUmVhZHkiLCJlcnJvciIsIm1zZyIsIm5vb3AiLCJwcm90byIsIkN0b3IiLCJpc0VtcHR5T2JqZWN0IiwiZ2xvYmFsRXZhbCIsImlzQXJyYXlMaWtlIiwibWFrZUFycmF5IiwicmVzdWx0cyIsImluQXJyYXkiLCJzZWNvbmQiLCJpbnZlcnQiLCJjYWxsYmFja0ludmVyc2UiLCJtYXRjaGVzIiwiY2FsbGJhY2tFeHBlY3QiLCJhcmciLCJ2YWx1ZSIsImd1aWQiLCJTeW1ib2wiLCJpdGVyYXRvciIsInNwbGl0IiwiX2kiLCJ0b0xvd2VyQ2FzZSIsIlNpenpsZSIsIkV4cHIiLCJnZXRUZXh0IiwiaXNYTUwiLCJ0b2tlbml6ZSIsImNvbXBpbGUiLCJzZWxlY3QiLCJvdXRlcm1vc3RDb250ZXh0Iiwic29ydElucHV0IiwiaGFzRHVwbGljYXRlIiwic2V0RG9jdW1lbnQiLCJkb2NFbGVtIiwiZG9jdW1lbnRJc0hUTUwiLCJyYnVnZ3lRU0EiLCJyYnVnZ3lNYXRjaGVzIiwiY29udGFpbnMiLCJEYXRlIiwicHJlZmVycmVkRG9jIiwiZGlycnVucyIsImRvbmUiLCJjbGFzc0NhY2hlIiwiY3JlYXRlQ2FjaGUiLCJ0b2tlbkNhY2hlIiwiY29tcGlsZXJDYWNoZSIsIm5vbm5hdGl2ZVNlbGVjdG9yQ2FjaGUiLCJzb3J0T3JkZXIiLCJhIiwiYiIsInBvcCIsInB1c2hOYXRpdmUiLCJsaXN0IiwiYm9vbGVhbnMiLCJ3aGl0ZXNwYWNlIiwiaWRlbnRpZmllciIsImF0dHJpYnV0ZXMiLCJwc2V1ZG9zIiwicndoaXRlc3BhY2UiLCJSZWdFeHAiLCJydHJpbSIsInJjb21tYSIsInJjb21iaW5hdG9ycyIsInJkZXNjZW5kIiwicnBzZXVkbyIsInJpZGVudGlmaWVyIiwibWF0Y2hFeHByIiwicmh0bWwiLCJyaW5wdXRzIiwicmhlYWRlciIsInJuYXRpdmUiLCJycXVpY2tFeHByIiwicnNpYmxpbmciLCJydW5lc2NhcGUiLCJmdW5lc2NhcGUiLCJlc2NhcGUiLCJub25IZXgiLCJoaWdoIiwiU3RyaW5nIiwiZnJvbUNoYXJDb2RlIiwicmNzc2VzY2FwZSIsImZjc3Nlc2NhcGUiLCJjaCIsImFzQ29kZVBvaW50IiwiY2hhckNvZGVBdCIsInVubG9hZEhhbmRsZXIiLCJpbkRpc2FibGVkRmllbGRzZXQiLCJhZGRDb21iaW5hdG9yIiwiZGlzYWJsZWQiLCJub2RlTmFtZSIsImRpciIsIm5leHQiLCJjaGlsZE5vZGVzIiwiZSIsImVscyIsInNlZWQiLCJtIiwibmlkIiwibWF0Y2giLCJncm91cHMiLCJuZXdTZWxlY3RvciIsIm5ld0NvbnRleHQiLCJvd25lckRvY3VtZW50IiwiZXhlYyIsImdldEVsZW1lbnRCeUlkIiwiaWQiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJxc2EiLCJ0ZXN0IiwidGVzdENvbnRleHQiLCJzY29wZSIsInRvU2VsZWN0b3IiLCJqb2luIiwicXVlcnlTZWxlY3RvckFsbCIsInFzYUVycm9yIiwicmVtb3ZlQXR0cmlidXRlIiwia2V5cyIsImNhY2hlIiwia2V5IiwiY2FjaGVMZW5ndGgiLCJzaGlmdCIsIm1hcmtGdW5jdGlvbiIsImFzc2VydCIsImVsIiwiYWRkSGFuZGxlIiwiYXR0cnMiLCJoYW5kbGVyIiwiYXR0ckhhbmRsZSIsInNpYmxpbmdDaGVjayIsImN1ciIsImRpZmYiLCJzb3VyY2VJbmRleCIsIm5leHRTaWJsaW5nIiwiY3JlYXRlSW5wdXRQc2V1ZG8iLCJjcmVhdGVCdXR0b25Qc2V1ZG8iLCJjcmVhdGVEaXNhYmxlZFBzZXVkbyIsImlzRGlzYWJsZWQiLCJjcmVhdGVQb3NpdGlvbmFsUHNldWRvIiwiYXJndW1lbnQiLCJtYXRjaEluZGV4ZXMiLCJuYW1lc3BhY2UiLCJuYW1lc3BhY2VVUkkiLCJkb2N1bWVudEVsZW1lbnQiLCJoYXNDb21wYXJlIiwic3ViV2luZG93IiwiZGVmYXVsdFZpZXciLCJ0b3AiLCJhZGRFdmVudExpc3RlbmVyIiwiYXR0YWNoRXZlbnQiLCJjbGFzc05hbWUiLCJjcmVhdGVDb21tZW50IiwiZ2V0QnlJZCIsImdldEVsZW1lbnRzQnlOYW1lIiwiZmlsdGVyIiwiYXR0cklkIiwiZmluZCIsImdldEF0dHJpYnV0ZU5vZGUiLCJ0YWciLCJ0bXAiLCJpbnB1dCIsImlubmVySFRNTCIsIm1hdGNoZXNTZWxlY3RvciIsIndlYmtpdE1hdGNoZXNTZWxlY3RvciIsIm1vek1hdGNoZXNTZWxlY3RvciIsIm9NYXRjaGVzU2VsZWN0b3IiLCJtc01hdGNoZXNTZWxlY3RvciIsImRpc2Nvbm5lY3RlZE1hdGNoIiwiY29tcGFyZURvY3VtZW50UG9zaXRpb24iLCJhZG93biIsImJ1cCIsImNvbXBhcmUiLCJzb3J0RGV0YWNoZWQiLCJhdXAiLCJhcCIsImJwIiwidW5zaGlmdCIsImV4cHIiLCJlbGVtZW50cyIsImF0dHIiLCJzcGVjaWZpZWQiLCJzZWwiLCJ1bmlxdWVTb3J0IiwiZHVwbGljYXRlcyIsImRldGVjdER1cGxpY2F0ZXMiLCJzb3J0U3RhYmxlIiwidGV4dENvbnRlbnQiLCJmaXJzdENoaWxkIiwibm9kZVZhbHVlIiwic2VsZWN0b3JzIiwiY3JlYXRlUHNldWRvIiwicmVsYXRpdmUiLCJwcmVGaWx0ZXIiLCJleGNlc3MiLCJ1bnF1b3RlZCIsIm5vZGVOYW1lU2VsZWN0b3IiLCJwYXR0ZXJuIiwib3BlcmF0b3IiLCJjaGVjayIsInJlc3VsdCIsIndoYXQiLCJfYXJndW1lbnQiLCJzaW1wbGUiLCJmb3J3YXJkIiwib2ZUeXBlIiwiX2NvbnRleHQiLCJ4bWwiLCJ1bmlxdWVDYWNoZSIsIm91dGVyQ2FjaGUiLCJub2RlSW5kZXgiLCJzdGFydCIsInBhcmVudCIsInVzZUNhY2hlIiwibGFzdENoaWxkIiwidW5pcXVlSUQiLCJwc2V1ZG8iLCJhcmdzIiwic2V0RmlsdGVycyIsImlkeCIsIm1hdGNoZWQiLCJtYXRjaGVyIiwidW5tYXRjaGVkIiwibGFuZyIsImVsZW1MYW5nIiwiaGFzaCIsImxvY2F0aW9uIiwiYWN0aXZlRWxlbWVudCIsImhhc0ZvY3VzIiwiaHJlZiIsInRhYkluZGV4IiwiY2hlY2tlZCIsInNlbGVjdGVkIiwic2VsZWN0ZWRJbmRleCIsIl9tYXRjaEluZGV4ZXMiLCJyYWRpbyIsImNoZWNrYm94IiwiZmlsZSIsInBhc3N3b3JkIiwiaW1hZ2UiLCJzdWJtaXQiLCJyZXNldCIsImZpbHRlcnMiLCJwYXJzZU9ubHkiLCJ0b2tlbnMiLCJzb0ZhciIsInByZUZpbHRlcnMiLCJjYWNoZWQiLCJjb21iaW5hdG9yIiwiYmFzZSIsInNraXAiLCJjaGVja05vbkVsZW1lbnRzIiwiZG9uZU5hbWUiLCJvbGRDYWNoZSIsIm5ld0NhY2hlIiwiZWxlbWVudE1hdGNoZXIiLCJtYXRjaGVycyIsIm11bHRpcGxlQ29udGV4dHMiLCJjb250ZXh0cyIsImNvbmRlbnNlIiwibmV3VW5tYXRjaGVkIiwibWFwcGVkIiwic2V0TWF0Y2hlciIsInBvc3RGaWx0ZXIiLCJwb3N0RmluZGVyIiwicG9zdFNlbGVjdG9yIiwidGVtcCIsInByZU1hcCIsInBvc3RNYXAiLCJwcmVleGlzdGluZyIsIm1hdGNoZXJJbiIsIm1hdGNoZXJPdXQiLCJtYXRjaGVyRnJvbVRva2VucyIsImNoZWNrQ29udGV4dCIsImxlYWRpbmdSZWxhdGl2ZSIsImltcGxpY2l0UmVsYXRpdmUiLCJtYXRjaENvbnRleHQiLCJtYXRjaEFueUNvbnRleHQiLCJtYXRjaGVyRnJvbUdyb3VwTWF0Y2hlcnMiLCJlbGVtZW50TWF0Y2hlcnMiLCJzZXRNYXRjaGVycyIsImJ5U2V0IiwiYnlFbGVtZW50Iiwic3VwZXJNYXRjaGVyIiwib3V0ZXJtb3N0IiwibWF0Y2hlZENvdW50Iiwic2V0TWF0Y2hlZCIsImNvbnRleHRCYWNrdXAiLCJkaXJydW5zVW5pcXVlIiwidG9rZW4iLCJjb21waWxlZCIsIl9uYW1lIiwiZGVmYXVsdFZhbHVlIiwidW5pcXVlIiwiaXNYTUxEb2MiLCJlc2NhcGVTZWxlY3RvciIsInVudGlsIiwidHJ1bmNhdGUiLCJpcyIsInNpYmxpbmdzIiwibiIsInJuZWVkc0NvbnRleHQiLCJuZWVkc0NvbnRleHQiLCJyc2luZ2xlVGFnIiwid2lubm93IiwicXVhbGlmaWVyIiwibm90Iiwic2VsZiIsInJvb3RqUXVlcnkiLCJyb290IiwicGFyc2VIVE1MIiwicmVhZHkiLCJycGFyZW50c3ByZXYiLCJndWFyYW50ZWVkVW5pcXVlIiwiY2hpbGRyZW4iLCJjb250ZW50cyIsInByZXYiLCJoYXMiLCJ0YXJnZXRzIiwibCIsImNsb3Nlc3QiLCJpbmRleCIsInByZXZBbGwiLCJhZGQiLCJhZGRCYWNrIiwic2libGluZyIsInBhcmVudHMiLCJwYXJlbnRzVW50aWwiLCJuZXh0QWxsIiwibmV4dFVudGlsIiwicHJldlVudGlsIiwiY29udGVudERvY3VtZW50IiwiY29udGVudCIsInJldmVyc2UiLCJybm90aHRtbHdoaXRlIiwiY3JlYXRlT3B0aW9ucyIsIm9iamVjdCIsIl8iLCJmbGFnIiwiQ2FsbGJhY2tzIiwiZmlyaW5nIiwibWVtb3J5IiwiZmlyZWQiLCJsb2NrZWQiLCJxdWV1ZSIsImZpcmluZ0luZGV4IiwiZmlyZSIsIm9uY2UiLCJzdG9wT25GYWxzZSIsInJlbW92ZSIsImVtcHR5IiwiZGlzYWJsZSIsImxvY2siLCJmaXJlV2l0aCIsIklkZW50aXR5IiwidiIsIlRocm93ZXIiLCJleCIsImFkb3B0VmFsdWUiLCJyZXNvbHZlIiwicmVqZWN0Iiwibm9WYWx1ZSIsIm1ldGhvZCIsInByb21pc2UiLCJmYWlsIiwidGhlbiIsIkRlZmVycmVkIiwiZnVuYyIsInR1cGxlcyIsInN0YXRlIiwiYWx3YXlzIiwiZGVmZXJyZWQiLCJwaXBlIiwiZm5zIiwibmV3RGVmZXIiLCJ0dXBsZSIsInJldHVybmVkIiwicHJvZ3Jlc3MiLCJub3RpZnkiLCJvbkZ1bGZpbGxlZCIsIm9uUmVqZWN0ZWQiLCJvblByb2dyZXNzIiwibWF4RGVwdGgiLCJkZXB0aCIsInNwZWNpYWwiLCJ0aGF0IiwibWlnaHRUaHJvdyIsIlR5cGVFcnJvciIsIm5vdGlmeVdpdGgiLCJyZXNvbHZlV2l0aCIsInByb2Nlc3MiLCJleGNlcHRpb25Ib29rIiwic3RhY2tUcmFjZSIsInJlamVjdFdpdGgiLCJnZXRTdGFja0hvb2siLCJzZXRUaW1lb3V0Iiwic3RhdGVTdHJpbmciLCJ3aGVuIiwic2luZ2xlVmFsdWUiLCJyZW1haW5pbmciLCJyZXNvbHZlQ29udGV4dHMiLCJyZXNvbHZlVmFsdWVzIiwicHJpbWFyeSIsInVwZGF0ZUZ1bmMiLCJyZXJyb3JOYW1lcyIsInN0YWNrIiwiY29uc29sZSIsIndhcm4iLCJtZXNzYWdlIiwicmVhZHlFeGNlcHRpb24iLCJyZWFkeUxpc3QiLCJyZWFkeVdhaXQiLCJ3YWl0IiwiY29tcGxldGVkIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsInJlYWR5U3RhdGUiLCJkb1Njcm9sbCIsImFjY2VzcyIsImNoYWluYWJsZSIsImVtcHR5R2V0IiwicmF3IiwiYnVsayIsIl9rZXkiLCJybXNQcmVmaXgiLCJyZGFzaEFscGhhIiwiZmNhbWVsQ2FzZSIsIl9hbGwiLCJsZXR0ZXIiLCJ0b1VwcGVyQ2FzZSIsImNhbWVsQ2FzZSIsInN0cmluZyIsImFjY2VwdERhdGEiLCJvd25lciIsIkRhdGEiLCJ1aWQiLCJkZWZpbmVQcm9wZXJ0eSIsImNvbmZpZ3VyYWJsZSIsInNldCIsImRhdGEiLCJwcm9wIiwiaGFzRGF0YSIsImRhdGFQcml2IiwiZGF0YVVzZXIiLCJyYnJhY2UiLCJybXVsdGlEYXNoIiwiZ2V0RGF0YSIsIkpTT04iLCJwYXJzZSIsImRhdGFBdHRyIiwicmVtb3ZlRGF0YSIsIl9kYXRhIiwiX3JlbW92ZURhdGEiLCJkZXF1ZXVlIiwic3RhcnRMZW5ndGgiLCJob29rcyIsIl9xdWV1ZUhvb2tzIiwic3RvcCIsInNldHRlciIsImNsZWFyUXVldWUiLCJjb3VudCIsImRlZmVyIiwicG51bSIsInNvdXJjZSIsInJjc3NOdW0iLCJjc3NFeHBhbmQiLCJpc0F0dGFjaGVkIiwiY29tcG9zZWQiLCJnZXRSb290Tm9kZSIsImlzSGlkZGVuV2l0aGluVHJlZSIsInN0eWxlIiwiZGlzcGxheSIsImNzcyIsImFkanVzdENTUyIsInZhbHVlUGFydHMiLCJ0d2VlbiIsImFkanVzdGVkIiwic2NhbGUiLCJtYXhJdGVyYXRpb25zIiwiY3VycmVudFZhbHVlIiwiaW5pdGlhbCIsInVuaXQiLCJjc3NOdW1iZXIiLCJpbml0aWFsSW5Vbml0IiwiZGVmYXVsdERpc3BsYXlNYXAiLCJnZXREZWZhdWx0RGlzcGxheSIsImJvZHkiLCJzaG93SGlkZSIsInNob3ciLCJ2YWx1ZXMiLCJoaWRlIiwidG9nZ2xlIiwicmNoZWNrYWJsZVR5cGUiLCJydGFnTmFtZSIsInJzY3JpcHRUeXBlIiwiZnJhZ21lbnQiLCJjcmVhdGVEb2N1bWVudEZyYWdtZW50IiwiZGl2IiwiY2hlY2tDbG9uZSIsImNsb25lTm9kZSIsIm5vQ2xvbmVDaGVja2VkIiwib3B0aW9uIiwid3JhcE1hcCIsInRoZWFkIiwiY29sIiwidHIiLCJ0ZCIsIl9kZWZhdWx0IiwidGJvZHkiLCJ0Zm9vdCIsImNvbGdyb3VwIiwiY2FwdGlvbiIsInRoIiwib3B0Z3JvdXAiLCJnZXRBbGwiLCJzZXRHbG9iYWxFdmFsIiwicmVmRWxlbWVudHMiLCJidWlsZEZyYWdtZW50Iiwic2NyaXB0cyIsInNlbGVjdGlvbiIsImlnbm9yZWQiLCJ3cmFwIiwiYXR0YWNoZWQiLCJub2RlcyIsImNyZWF0ZVRleHROb2RlIiwiaHRtbFByZWZpbHRlciIsInJ0eXBlbmFtZXNwYWNlIiwicmV0dXJuVHJ1ZSIsInJldHVybkZhbHNlIiwiZXhwZWN0U3luYyIsInNhZmVBY3RpdmVFbGVtZW50IiwiZXJyIiwib24iLCJ0eXBlcyIsIm9uZSIsIm9yaWdGbiIsImV2ZW50Iiwib2ZmIiwiaGFuZGxlT2JqSW4iLCJldmVudEhhbmRsZSIsImV2ZW50cyIsInQiLCJoYW5kbGVPYmoiLCJoYW5kbGVycyIsIm5hbWVzcGFjZXMiLCJvcmlnVHlwZSIsImVsZW1EYXRhIiwiY3JlYXRlIiwiaGFuZGxlIiwidHJpZ2dlcmVkIiwiZGlzcGF0Y2giLCJkZWxlZ2F0ZVR5cGUiLCJiaW5kVHlwZSIsImRlbGVnYXRlQ291bnQiLCJzZXR1cCIsIm1hcHBlZFR5cGVzIiwib3JpZ0NvdW50IiwidGVhcmRvd24iLCJyZW1vdmVFdmVudCIsIm5hdGl2ZUV2ZW50IiwiaGFuZGxlclF1ZXVlIiwiZml4IiwiZGVsZWdhdGVUYXJnZXQiLCJwcmVEaXNwYXRjaCIsImlzUHJvcGFnYXRpb25TdG9wcGVkIiwiY3VycmVudFRhcmdldCIsImlzSW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkIiwicm5hbWVzcGFjZSIsInByZXZlbnREZWZhdWx0Iiwic3RvcFByb3BhZ2F0aW9uIiwicG9zdERpc3BhdGNoIiwibWF0Y2hlZEhhbmRsZXJzIiwibWF0Y2hlZFNlbGVjdG9ycyIsImJ1dHRvbiIsImFkZFByb3AiLCJob29rIiwiRXZlbnQiLCJlbnVtZXJhYmxlIiwib3JpZ2luYWxFdmVudCIsIndyaXRhYmxlIiwibG9hZCIsIm5vQnViYmxlIiwiY2xpY2siLCJsZXZlcmFnZU5hdGl2ZSIsInRyaWdnZXIiLCJiZWZvcmV1bmxvYWQiLCJyZXR1cm5WYWx1ZSIsIm5vdEFzeW5jIiwic2F2ZWQiLCJpc1RyaWdnZXIiLCJzdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24iLCJwcm9wcyIsImlzRGVmYXVsdFByZXZlbnRlZCIsImRlZmF1bHRQcmV2ZW50ZWQiLCJyZWxhdGVkVGFyZ2V0IiwidGltZVN0YW1wIiwibm93IiwiaXNTaW11bGF0ZWQiLCJhbHRLZXkiLCJidWJibGVzIiwiY2FuY2VsYWJsZSIsImNoYW5nZWRUb3VjaGVzIiwiY3RybEtleSIsImRldGFpbCIsImV2ZW50UGhhc2UiLCJtZXRhS2V5IiwicGFnZVgiLCJwYWdlWSIsInNoaWZ0S2V5IiwidmlldyIsImNoYXJDb2RlIiwia2V5Q29kZSIsImJ1dHRvbnMiLCJjbGllbnRYIiwiY2xpZW50WSIsIm9mZnNldFgiLCJvZmZzZXRZIiwicG9pbnRlcklkIiwicG9pbnRlclR5cGUiLCJzY3JlZW5YIiwic2NyZWVuWSIsInRhcmdldFRvdWNoZXMiLCJ0b0VsZW1lbnQiLCJ0b3VjaGVzIiwid2hpY2giLCJmb2N1cyIsImJsdXIiLCJtb3VzZWVudGVyIiwibW91c2VsZWF2ZSIsInBvaW50ZXJlbnRlciIsInBvaW50ZXJsZWF2ZSIsIm9yaWciLCJyZWxhdGVkIiwicm5vSW5uZXJodG1sIiwicmNoZWNrZWQiLCJyY2xlYW5TY3JpcHQiLCJtYW5pcHVsYXRpb25UYXJnZXQiLCJkaXNhYmxlU2NyaXB0IiwicmVzdG9yZVNjcmlwdCIsImNsb25lQ29weUV2ZW50IiwiZGVzdCIsInBkYXRhT2xkIiwidWRhdGFPbGQiLCJ1ZGF0YUN1ciIsImZpeElucHV0IiwiZG9tTWFuaXAiLCJjb2xsZWN0aW9uIiwiaGFzU2NyaXB0cyIsImlOb0Nsb25lIiwidmFsdWVJc0Z1bmN0aW9uIiwiaHRtbCIsIl9ldmFsVXJsIiwia2VlcERhdGEiLCJjbGVhbkRhdGEiLCJkYXRhQW5kRXZlbnRzIiwiZGVlcERhdGFBbmRFdmVudHMiLCJzcmNFbGVtZW50cyIsImRlc3RFbGVtZW50cyIsImluUGFnZSIsImRldGFjaCIsImFwcGVuZCIsInByZXBlbmQiLCJpbnNlcnRCZWZvcmUiLCJiZWZvcmUiLCJhZnRlciIsInJlcGxhY2VXaXRoIiwicmVwbGFjZUNoaWxkIiwiYXBwZW5kVG8iLCJwcmVwZW5kVG8iLCJpbnNlcnRBZnRlciIsInJlcGxhY2VBbGwiLCJvcmlnaW5hbCIsImluc2VydCIsInJudW1ub25weCIsImdldFN0eWxlcyIsIm9wZW5lciIsImdldENvbXB1dGVkU3R5bGUiLCJzd2FwIiwib2xkIiwicmJveFN0eWxlIiwiY29tcHV0ZVN0eWxlVGVzdHMiLCJjb250YWluZXIiLCJjc3NUZXh0IiwiZGl2U3R5bGUiLCJwaXhlbFBvc2l0aW9uVmFsIiwicmVsaWFibGVNYXJnaW5MZWZ0VmFsIiwicm91bmRQaXhlbE1lYXN1cmVzIiwibWFyZ2luTGVmdCIsInJpZ2h0IiwicGl4ZWxCb3hTdHlsZXNWYWwiLCJib3hTaXppbmdSZWxpYWJsZVZhbCIsIndpZHRoIiwicG9zaXRpb24iLCJzY3JvbGxib3hTaXplVmFsIiwib2Zmc2V0V2lkdGgiLCJtZWFzdXJlIiwicm91bmQiLCJwYXJzZUZsb2F0IiwicmVsaWFibGVUckRpbWVuc2lvbnNWYWwiLCJiYWNrZ3JvdW5kQ2xpcCIsImNsZWFyQ2xvbmVTdHlsZSIsImJveFNpemluZ1JlbGlhYmxlIiwicGl4ZWxCb3hTdHlsZXMiLCJwaXhlbFBvc2l0aW9uIiwicmVsaWFibGVNYXJnaW5MZWZ0Iiwic2Nyb2xsYm94U2l6ZSIsInJlbGlhYmxlVHJEaW1lbnNpb25zIiwidGFibGUiLCJ0ckNoaWxkIiwidHJTdHlsZSIsImhlaWdodCIsInBhcnNlSW50IiwiYm9yZGVyVG9wV2lkdGgiLCJib3JkZXJCb3R0b21XaWR0aCIsIm9mZnNldEhlaWdodCIsImN1ckNTUyIsImNvbXB1dGVkIiwibWluV2lkdGgiLCJtYXhXaWR0aCIsImdldFByb3BlcnR5VmFsdWUiLCJhZGRHZXRIb29rSWYiLCJjb25kaXRpb25GbiIsImhvb2tGbiIsImNzc1ByZWZpeGVzIiwiZW1wdHlTdHlsZSIsInZlbmRvclByb3BzIiwidmVuZG9yUHJvcE5hbWUiLCJjYXBOYW1lIiwiZmluYWxQcm9wTmFtZSIsImZpbmFsIiwiY3NzUHJvcHMiLCJyZGlzcGxheXN3YXAiLCJyY3VzdG9tUHJvcCIsImNzc1Nob3ciLCJ2aXNpYmlsaXR5IiwiY3NzTm9ybWFsVHJhbnNmb3JtIiwibGV0dGVyU3BhY2luZyIsImZvbnRXZWlnaHQiLCJzZXRQb3NpdGl2ZU51bWJlciIsInN1YnRyYWN0IiwibWF4IiwiYm94TW9kZWxBZGp1c3RtZW50IiwiZGltZW5zaW9uIiwiYm94IiwiaXNCb3JkZXJCb3giLCJzdHlsZXMiLCJjb21wdXRlZFZhbCIsImV4dHJhIiwiZGVsdGEiLCJjZWlsIiwiZ2V0V2lkdGhPckhlaWdodCIsImJveFNpemluZ05lZWRlZCIsInZhbHVlSXNCb3JkZXJCb3giLCJvZmZzZXRQcm9wIiwiZ2V0Q2xpZW50UmVjdHMiLCJjc3NIb29rcyIsIm9wYWNpdHkiLCJvcmlnTmFtZSIsImlzQ3VzdG9tUHJvcCIsInNldFByb3BlcnR5IiwiaXNGaW5pdGUiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJzY3JvbGxib3hTaXplQnVnZ3kiLCJsZWZ0IiwibWFyZ2luIiwicGFkZGluZyIsImJvcmRlciIsInByZWZpeCIsInN1ZmZpeCIsImV4cGFuZCIsImV4cGFuZGVkIiwicGFydHMiLCJUd2VlbiIsImVhc2luZyIsInByb3BIb29rcyIsInJ1biIsInBlcmNlbnQiLCJlYXNlZCIsImR1cmF0aW9uIiwicG9zIiwic3RlcCIsImZ4Iiwic2Nyb2xsVG9wIiwic2Nyb2xsTGVmdCIsImxpbmVhciIsInAiLCJzd2luZyIsImNvcyIsIlBJIiwiZnhOb3ciLCJpblByb2dyZXNzIiwicmZ4dHlwZXMiLCJycnVuIiwic2NoZWR1bGUiLCJoaWRkZW4iLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJpbnRlcnZhbCIsInRpY2siLCJjcmVhdGVGeE5vdyIsImdlbkZ4IiwiaW5jbHVkZVdpZHRoIiwiY3JlYXRlVHdlZW4iLCJhbmltYXRpb24iLCJBbmltYXRpb24iLCJ0d2VlbmVycyIsImRlZmF1bHRQcmVmaWx0ZXIiLCJvcHRzIiwib2xkZmlyZSIsInByb3BUd2VlbiIsInJlc3RvcmVEaXNwbGF5IiwiaXNCb3giLCJhbmltIiwiZGF0YVNob3ciLCJ1bnF1ZXVlZCIsIm92ZXJmbG93Iiwib3ZlcmZsb3dYIiwib3ZlcmZsb3dZIiwicHJvcEZpbHRlciIsInNwZWNpYWxFYXNpbmciLCJwcm9wZXJ0aWVzIiwic3RvcHBlZCIsInByZWZpbHRlcnMiLCJjdXJyZW50VGltZSIsInN0YXJ0VGltZSIsInR3ZWVucyIsIm9yaWdpbmFsUHJvcGVydGllcyIsIm9yaWdpbmFsT3B0aW9ucyIsImdvdG9FbmQiLCJiaW5kIiwiY29tcGxldGUiLCJ0aW1lciIsInR3ZWVuZXIiLCJwcmVmaWx0ZXIiLCJzcGVlZCIsIm9wdCIsInNwZWVkcyIsImZhZGVUbyIsInRvIiwiYW5pbWF0ZSIsIm9wdGFsbCIsImRvQW5pbWF0aW9uIiwiZmluaXNoIiwic3RvcFF1ZXVlIiwidGltZXJzIiwiY3NzRm4iLCJzbGlkZURvd24iLCJzbGlkZVVwIiwic2xpZGVUb2dnbGUiLCJmYWRlSW4iLCJmYWRlT3V0IiwiZmFkZVRvZ2dsZSIsInNsb3ciLCJmYXN0IiwiZGVsYXkiLCJ0aW1lIiwidGltZW91dCIsImNsZWFyVGltZW91dCIsImNoZWNrT24iLCJvcHRTZWxlY3RlZCIsInJhZGlvVmFsdWUiLCJib29sSG9vayIsInJlbW92ZUF0dHIiLCJuVHlwZSIsImF0dHJIb29rcyIsImJvb2wiLCJhdHRyTmFtZXMiLCJnZXR0ZXIiLCJsb3dlcmNhc2VOYW1lIiwicmZvY3VzYWJsZSIsInJjbGlja2FibGUiLCJyZW1vdmVQcm9wIiwicHJvcEZpeCIsInRhYmluZGV4Iiwic3RyaXBBbmRDb2xsYXBzZSIsImdldENsYXNzIiwiY2xhc3Nlc1RvQXJyYXkiLCJhZGRDbGFzcyIsImNsYXNzZXMiLCJjdXJWYWx1ZSIsImNsYXp6IiwiZmluYWxWYWx1ZSIsInJlbW92ZUNsYXNzIiwidG9nZ2xlQ2xhc3MiLCJzdGF0ZVZhbCIsImlzVmFsaWRWYWx1ZSIsImNsYXNzTmFtZXMiLCJoYXNDbGFzcyIsInJyZXR1cm4iLCJ2YWxIb29rcyIsIm9wdGlvblNldCIsImZvY3VzaW4iLCJyZm9jdXNNb3JwaCIsInN0b3BQcm9wYWdhdGlvbkNhbGxiYWNrIiwib25seUhhbmRsZXJzIiwiYnViYmxlVHlwZSIsIm9udHlwZSIsImxhc3RFbGVtZW50IiwiZXZlbnRQYXRoIiwicGFyZW50V2luZG93Iiwic2ltdWxhdGUiLCJ0cmlnZ2VySGFuZGxlciIsImF0dGFjaGVzIiwicnF1ZXJ5IiwicGFyc2VYTUwiLCJwYXJzZXJFcnJvckVsZW0iLCJET01QYXJzZXIiLCJwYXJzZUZyb21TdHJpbmciLCJyYnJhY2tldCIsInJDUkxGIiwicnN1Ym1pdHRlclR5cGVzIiwicnN1Ym1pdHRhYmxlIiwiYnVpbGRQYXJhbXMiLCJ0cmFkaXRpb25hbCIsInBhcmFtIiwicyIsInZhbHVlT3JGdW5jdGlvbiIsImVuY29kZVVSSUNvbXBvbmVudCIsInNlcmlhbGl6ZSIsInNlcmlhbGl6ZUFycmF5IiwicjIwIiwicmhhc2giLCJyYW50aUNhY2hlIiwicmhlYWRlcnMiLCJybG9jYWxQcm90b2NvbCIsInJub0NvbnRlbnQiLCJycHJvdG9jb2wiLCJ0cmFuc3BvcnRzIiwiYWxsVHlwZXMiLCJvcmlnaW5BbmNob3IiLCJhZGRUb1ByZWZpbHRlcnNPclRyYW5zcG9ydHMiLCJzdHJ1Y3R1cmUiLCJkYXRhVHlwZUV4cHJlc3Npb24iLCJkYXRhVHlwZSIsImRhdGFUeXBlcyIsImluc3BlY3RQcmVmaWx0ZXJzT3JUcmFuc3BvcnRzIiwianFYSFIiLCJpbnNwZWN0ZWQiLCJzZWVraW5nVHJhbnNwb3J0IiwiaW5zcGVjdCIsInByZWZpbHRlck9yRmFjdG9yeSIsImRhdGFUeXBlT3JUcmFuc3BvcnQiLCJhamF4RXh0ZW5kIiwiZmxhdE9wdGlvbnMiLCJhamF4U2V0dGluZ3MiLCJhamF4SGFuZGxlUmVzcG9uc2VzIiwicmVzcG9uc2VzIiwiY3QiLCJmaW5hbERhdGFUeXBlIiwiZmlyc3REYXRhVHlwZSIsIm1pbWVUeXBlIiwiZ2V0UmVzcG9uc2VIZWFkZXIiLCJjb252ZXJ0ZXJzIiwiYWpheENvbnZlcnQiLCJyZXNwb25zZSIsImlzU3VjY2VzcyIsImNvbnYyIiwiY3VycmVudCIsImNvbnYiLCJyZXNwb25zZUZpZWxkcyIsImRhdGFGaWx0ZXIiLCJhY3RpdmUiLCJsYXN0TW9kaWZpZWQiLCJldGFnIiwidXJsIiwiaXNMb2NhbCIsInByb3RvY29sIiwicHJvY2Vzc0RhdGEiLCJhc3luYyIsImNvbnRlbnRUeXBlIiwiYWNjZXB0cyIsImpzb24iLCJhamF4U2V0dXAiLCJzZXR0aW5ncyIsImFqYXhQcmVmaWx0ZXIiLCJhamF4VHJhbnNwb3J0IiwiYWpheCIsInRyYW5zcG9ydCIsImNhY2hlVVJMIiwicmVzcG9uc2VIZWFkZXJzU3RyaW5nIiwicmVzcG9uc2VIZWFkZXJzIiwidGltZW91dFRpbWVyIiwidXJsQW5jaG9yIiwiZmlyZUdsb2JhbHMiLCJ1bmNhY2hlZCIsImNhbGxiYWNrQ29udGV4dCIsImdsb2JhbEV2ZW50Q29udGV4dCIsImNvbXBsZXRlRGVmZXJyZWQiLCJzdGF0dXNDb2RlIiwicmVxdWVzdEhlYWRlcnMiLCJyZXF1ZXN0SGVhZGVyc05hbWVzIiwic3RyQWJvcnQiLCJnZXRBbGxSZXNwb25zZUhlYWRlcnMiLCJzZXRSZXF1ZXN0SGVhZGVyIiwib3ZlcnJpZGVNaW1lVHlwZSIsInN0YXR1cyIsImFib3J0Iiwic3RhdHVzVGV4dCIsImZpbmFsVGV4dCIsImNyb3NzRG9tYWluIiwiaG9zdCIsImhhc0NvbnRlbnQiLCJpZk1vZGlmaWVkIiwiaGVhZGVycyIsImJlZm9yZVNlbmQiLCJzdWNjZXNzIiwic2VuZCIsIm5hdGl2ZVN0YXR1c1RleHQiLCJtb2RpZmllZCIsImdldEpTT04iLCJnZXRTY3JpcHQiLCJ3cmFwQWxsIiwiZmlyc3RFbGVtZW50Q2hpbGQiLCJ3cmFwSW5uZXIiLCJodG1sSXNGdW5jdGlvbiIsInVud3JhcCIsInZpc2libGUiLCJ4aHIiLCJYTUxIdHRwUmVxdWVzdCIsInhoclN1Y2Nlc3NTdGF0dXMiLCJ4aHJTdXBwb3J0ZWQiLCJjb3JzIiwiZXJyb3JDYWxsYmFjayIsIm9wZW4iLCJ1c2VybmFtZSIsInhockZpZWxkcyIsIm9ubG9hZCIsIm9uZXJyb3IiLCJvbmFib3J0Iiwib250aW1lb3V0Iiwib25yZWFkeXN0YXRlY2hhbmdlIiwicmVzcG9uc2VUeXBlIiwicmVzcG9uc2VUZXh0IiwiYmluYXJ5Iiwic2NyaXB0QXR0cnMiLCJjaGFyc2V0Iiwic2NyaXB0Q2hhcnNldCIsImV2dCIsIm9sZENhbGxiYWNrcyIsInJqc29ucCIsImpzb25wIiwianNvbnBDYWxsYmFjayIsIm9yaWdpbmFsU2V0dGluZ3MiLCJjYWxsYmFja05hbWUiLCJvdmVyd3JpdHRlbiIsInJlc3BvbnNlQ29udGFpbmVyIiwianNvblByb3AiLCJjcmVhdGVIVE1MRG9jdW1lbnQiLCJpbXBsZW1lbnRhdGlvbiIsImtlZXBTY3JpcHRzIiwicGFyc2VkIiwicGFyYW1zIiwiYW5pbWF0ZWQiLCJvZmZzZXQiLCJzZXRPZmZzZXQiLCJjdXJQb3NpdGlvbiIsImN1ckxlZnQiLCJjdXJDU1NUb3AiLCJjdXJUb3AiLCJjdXJPZmZzZXQiLCJjdXJDU1NMZWZ0IiwiY2FsY3VsYXRlUG9zaXRpb24iLCJjdXJFbGVtIiwidXNpbmciLCJyZWN0Iiwid2luIiwicGFnZVlPZmZzZXQiLCJwYWdlWE9mZnNldCIsIm9mZnNldFBhcmVudCIsInBhcmVudE9mZnNldCIsInNjcm9sbFRvIiwiSGVpZ2h0IiwiV2lkdGgiLCJkZWZhdWx0RXh0cmEiLCJmdW5jTmFtZSIsInVuYmluZCIsImRlbGVnYXRlIiwidW5kZWxlZ2F0ZSIsImhvdmVyIiwiZm5PdmVyIiwiZm5PdXQiLCJwcm94eSIsImhvbGRSZWFkeSIsImhvbGQiLCJwYXJzZUpTT04iLCJpc051bWVyaWMiLCJpc05hTiIsInRyaW0iLCJkZWZpbmUiLCJhbWQiLCJfalF1ZXJ5IiwiXyQiLCIkIiwibm9Db25mbGljdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///634\n')},86:(module,__unused_webpack_exports,__webpack_require__)=>{eval('/* module decorator */ module = __webpack_require__.nmd(module);\nfunction _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar runtime = function (exports) {\n  "use strict";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === "function" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || "@@iterator";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";\n  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, "");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there\'s no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don\'t have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: "normal",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: "throw",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = "suspendedStart";\n  var GenStateSuspendedYield = "suspendedYield";\n  var GenStateExecuting = "executing";\n  var GenStateCompleted = "completed"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don\'t natively support it.\n\n\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, "constructor", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, "constructor", GeneratorFunction);\n  GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"); // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    ["next", "throw", "return"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === "function" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === "GeneratorFunction" : false;\n  };\n\n  exports.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, "GeneratorFunction");\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, "__await")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === "throw") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && _typeof(value) === "object" && hasOwn.call(value, "__await")) {\n          return PromiseImpl.resolve(value.__await).then(function (value) {\n            invoke("next", value, resolve, reject);\n          }, function (err) {\n            invoke("throw", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke("throw", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error("Generator is already running");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === "throw") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === "next") {\n          // Setting context._sent for legacy support of Babel\'s\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === "throw") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === "return") {\n          context.abrupt("return", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === "normal") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === "throw") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = "throw";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === "throw") {\n        // Note: ["return"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator["return"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = "return";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === "throw") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // "return" to "throw", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = "throw";\n        context.arg = new TypeError("The iterator does not provide a \'throw\' method");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === "throw") {\n      context.method = "throw";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = "throw";\n      context.arg = new TypeError("iterator result is not an object");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was "throw" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was "next", forget context.arg since it has been\n      // "consumed" by the delegate iterator. If context.method was\n      // "return", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== "return") {\n        context.method = "next";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  define(Gp, toStringTagSymbol, "Generator"); // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers\' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn\'t happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  define(Gp, iteratorSymbol, function () {\n    return this;\n  });\n  define(Gp, "toString", function () {\n    return "[object Generator]";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = "normal";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: "root"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === "function") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  exports.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel\'s\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = "next";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function stop() {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === "throw") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = "throw";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = "next";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === "root") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle("end");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, "catchLoc");\n          var hasFinally = hasOwn.call(entry, "finallyLoc");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error("try statement without catch or finally");\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = "next";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (record.type === "throw") {\n        throw record.arg;\n      }\n\n      if (record.type === "break" || record.type === "continue") {\n        this.next = record.arg;\n      } else if (record.type === "return") {\n        this.rval = this.arg = record.arg;\n        this.method = "return";\n        this.next = "end";\n      } else if (record.type === "normal" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    "catch": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === "throw") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error("illegal catch attempt");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === "next") {\n        // Deliberately forget the last sent value so that we don\'t\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  }; // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n\n  return exports;\n}( // If this script is executing as a CommonJS module, use module.exports\n// as the regeneratorRuntime namespace. Otherwise create a new empty\n// object. Either way, the resulting object will be used to initialize\n// the regeneratorRuntime variable at the top of this file.\n( false ? 0 : _typeof(module)) === "object" ? module.exports : {});\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you\'ve misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you\'re not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if ((typeof globalThis === "undefined" ? "undefined" : _typeof(globalThis)) === "object") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function("r", "regeneratorRuntime = r")(runtime);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///86\n')},957:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";eval('\n// EXTERNAL MODULE: ./node_modules/regenerator-runtime/runtime.js\nvar runtime = __webpack_require__(86);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\nvar injectStylesIntoStyleTag = __webpack_require__(379);\nvar injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(injectStylesIntoStyleTag);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleDomAPI.js\nvar styleDomAPI = __webpack_require__(795);\nvar styleDomAPI_default = /*#__PURE__*/__webpack_require__.n(styleDomAPI);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertBySelector.js\nvar insertBySelector = __webpack_require__(569);\nvar insertBySelector_default = /*#__PURE__*/__webpack_require__.n(insertBySelector);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\nvar setAttributesWithoutAttributes = __webpack_require__(565);\nvar setAttributesWithoutAttributes_default = /*#__PURE__*/__webpack_require__.n(setAttributesWithoutAttributes);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertStyleElement.js\nvar insertStyleElement = __webpack_require__(216);\nvar insertStyleElement_default = /*#__PURE__*/__webpack_require__.n(insertStyleElement);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleTagTransform.js\nvar styleTagTransform = __webpack_require__(589);\nvar styleTagTransform_default = /*#__PURE__*/__webpack_require__.n(styleTagTransform);\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/bootstrap/dist/css/bootstrap.min.css\nvar bootstrap_min = __webpack_require__(666);\n;// CONCATENATED MODULE: ./node_modules/bootstrap/dist/css/bootstrap.min.css\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (styleTagTransform_default());\noptions.setAttributes = (setAttributesWithoutAttributes_default());\n\n      options.insert = insertBySelector_default().bind(null, "head");\n    \noptions.domAPI = (styleDomAPI_default());\noptions.insertStyleElement = (insertStyleElement_default());\n\nvar update = injectStylesIntoStyleTag_default()(bootstrap_min/* default */.Z, options);\n\n\n\n\n       /* harmony default export */ const css_bootstrap_min = (bootstrap_min/* default */.Z && bootstrap_min/* default.locals */.Z.locals ? bootstrap_min/* default.locals */.Z.locals : undefined);\n\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/style/style.css\nvar style = __webpack_require__(982);\n;// CONCATENATED MODULE: ./src/style/style.css\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar style_options = {};\n\nstyle_options.styleTagTransform = (styleTagTransform_default());\nstyle_options.setAttributes = (setAttributesWithoutAttributes_default());\n\n      style_options.insert = insertBySelector_default().bind(null, "head");\n    \nstyle_options.domAPI = (styleDomAPI_default());\nstyle_options.insertStyleElement = (insertStyleElement_default());\n\nvar style_update = injectStylesIntoStyleTag_default()(style/* default */.Z, style_options);\n\n\n\n\n       /* harmony default export */ const style_style = (style/* default */.Z && style/* default.locals */.Z.locals ? style/* default.locals */.Z.locals : undefined);\n\n// EXTERNAL MODULE: ./node_modules/bootstrap/dist/js/bootstrap.bundle.min.js\nvar bootstrap_bundle_min = __webpack_require__(72);\n// EXTERNAL MODULE: ./src/scripts/component/appBar.js\nvar appBar = __webpack_require__(709);\n;// CONCATENATED MODULE: ./src/scripts/data/FetchData.js\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar FetchData = /*#__PURE__*/function () {\n  function FetchData() {\n    _classCallCheck(this, FetchData);\n  }\n\n  _createClass(FetchData, null, [{\n    key: "getData",\n    value: function getData(path) {\n      var url = "https://www.themealdb.com/api/json/v1/1/";\n      var _path = path;\n      var requestOptions = {\n        method: "GET",\n        redirect: "follow"\n      };\n      return fetch("".concat(url).concat(_path), requestOptions).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        if (responseJson.meals) {\n          console.log(responseJson);\n          return Promise.resolve(responseJson.meals);\n        } else {\n          return Promise.reject("tidak ditemukan");\n        }\n      });\n    }\n  }]);\n\n  return FetchData;\n}();\n\n/* harmony default export */ const data_FetchData = (FetchData);\n;// CONCATENATED MODULE: ./src/scripts/component/filterBy.js\nfunction _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\n\nfunction filterBy_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction filterBy_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction filterBy_createClass(Constructor, protoProps, staticProps) { if (protoProps) filterBy_defineProperties(Constructor.prototype, protoProps); if (staticProps) filterBy_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n // eslint-disable-next-line no-undef\n\nvar $ = __webpack_require__(634);\n\nvar FilterBy = /*#__PURE__*/function (_HTMLElement) {\n  _inherits(FilterBy, _HTMLElement);\n\n  var _super = _createSuper(FilterBy);\n\n  function FilterBy() {\n    filterBy_classCallCheck(this, FilterBy);\n\n    return _super.apply(this, arguments);\n  }\n\n  filterBy_createClass(FilterBy, [{\n    key: "ListData",\n    value: function ListData(dataK, dataA, dataB) {\n      this._dataKategori = dataK;\n      this._dataArea = dataA;\n      this._dataBahan = dataB;\n      this.render();\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      this.innerHTML = "\\n      <style>\\n        .accordion-body {\\n          background-color: #c68b59;\\n        }\\n        .accordion-header {\\n          background-color: #ffcd9a;\\n        }\\n        #bahan,#asal,#kategori {\\n          max-height: 40vh;\\n          overflow-y: scroll;\\n        }\\n      </style>\\n    <div class=\\"accordion-item mt-5\\">\\n      <h3 class=\\"accordion-header\\" id=\\"label-kategori\\">\\n        <button class=\\"accordion-button collapsed\\" type=\\"button\\" data-bs-toggle=\\"collapse\\" data-bs-target=\\"#kategori\\" aria-expanded=\\"false\\" aria-controls=\\"kategori\\">Kategori</button>\\n      </h3>\\n      <div id=\\"kategori\\" class=\\"accordion-collapse collapse\\" aria-labelledby=\\"label-kategori\\" data-bs-parent=\\"#filter-by\\">\\n        <div class=\\"accordion-body\\">\\n          <div id=\\"list-kategori\\" class=\\"d-grid gap-2\\"></div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\"accordion-item mt-3\\">\\n      <h3 class=\\"accordion-header\\" id=\\"label-bahan\\">\\n        <button class=\\"accordion-button collapsed\\" type=\\"button\\" data-bs-toggle=\\"collapse\\" data-bs-target=\\"#bahan\\" aria-expanded=\\"false\\" aria-controls=\\"bahan\\">Bahan Dasar</button>\\n      </h3>\\n      <div id=\\"bahan\\" class=\\"accordion-collapse collapse\\" aria-labelledby=\\"label-bahan\\" data-bs-parent=\\"#filter-by\\">\\n        <div class=\\"accordion-body\\">\\n          <div id=\\"list-bahan\\" class=\\"d-grid gap-2\\"></div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\"accordion-item mt-3\\">\\n      <h3 class=\\"accordion-header\\" id=\\"label-asal\\">\\n        <button class=\\"accordion-button collapsed\\" type=\\"button\\" data-bs-toggle=\\"collapse\\" data-bs-target=\\"#asal\\" aria-expanded=\\"false\\" aria-controls=\\"asal\\">Area</button>\\n      </h3>\\n      <div id=\\"asal\\" class=\\"accordion-collapse collapse\\" aria-labelledby=\\"label-asal\\" data-bs-parent=\\"#filter-by\\">\\n        <div class=\\"accordion-body\\">\\n          <div class=\\"d-grid gap-2\\" id=\\"list-asal\\"></div>\\n        </div>\\n      </div>\\n    </div>\\n    ";\n      var listKategori = this.querySelector("#list-kategori");\n      var listAsal = this.querySelector("#list-asal");\n      var listBahan = this.querySelector("#list-bahan");\n      var listRecipe = document.querySelector("list-recipe");\n\n      this._dataKategori.forEach(function (Kategori) {\n        var strCategory = Kategori.strCategory;\n        var buttonCategory = document.createElement("button");\n        buttonCategory.innerHTML = strCategory;\n        buttonCategory.setAttribute("class", "btn btn-outline-light item-kategori item-btn");\n        buttonCategory.setAttribute("id", "".concat(strCategory));\n        listKategori.appendChild(buttonCategory);\n      });\n\n      this._dataBahan.forEach(function (bahan) {\n        var idIngredient = bahan.idIngredient,\n            strIngredient = bahan.strIngredient;\n        var buttonCategory = document.createElement("button");\n        buttonCategory.innerHTML = strIngredient;\n        buttonCategory.setAttribute("class", "btn btn-outline-light btn-sm item-bahan item-btn");\n        buttonCategory.setAttribute("id", "".concat(idIngredient));\n        listBahan.appendChild(buttonCategory);\n      });\n\n      this._dataArea.forEach(function (area) {\n        var strArea = area.strArea;\n        var buttonCategory = document.createElement("button");\n        buttonCategory.innerHTML = strArea;\n        buttonCategory.setAttribute("class", "btn btn-outline-light item-area item-btn");\n        buttonCategory.setAttribute("id", "".concat(strArea));\n        listAsal.appendChild(buttonCategory);\n      });\n\n      $(".item-btn").click(function () {\n        if ($(this).hasClass("item-kategori")) {\n          setDataRecipe("c", $(this).text());\n        } else if ($(this).hasClass("item-bahan")) {\n          setDataRecipe("i", $(this).text());\n        } else if ($(this).hasClass("item-area")) {\n          setDataRecipe("a", $(this).text());\n        }\n      });\n\n      var setDataRecipe = /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(kind, key) {\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.prev = 0;\n                  _context.t0 = listRecipe;\n                  _context.next = 4;\n                  return data_FetchData.getData("filter.php?".concat(kind, "=").concat(key));\n\n                case 4:\n                  _context.t1 = _context.sent;\n                  _context.t2 = "kategori ".concat(key);\n\n                  _context.t0.DataListRecipe.call(_context.t0, _context.t1, _context.t2);\n\n                  _context.next = 12;\n                  break;\n\n                case 9:\n                  _context.prev = 9;\n                  _context.t3 = _context["catch"](0);\n                  listRecipe.erorrMessage = "Data Nama makanan dengan kategori ".concat(key, " ").concat(_context.t3);\n\n                case 12:\n                case "end":\n                  return _context.stop();\n              }\n            }\n          }, _callee, null, [[0, 9]]);\n        }));\n\n        return function setDataRecipe(_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }();\n    }\n  }]);\n\n  return FilterBy;\n}( /*#__PURE__*/_wrapNativeSuper(HTMLElement));\n\ncustomElements.define("filter-by", FilterBy);\n// EXTERNAL MODULE: ./src/scripts/component/searchBar.js\nvar searchBar = __webpack_require__(728);\n;// CONCATENATED MODULE: ./src/scripts/component/foodRecipe.js\nfunction foodRecipe_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { foodRecipe_typeof = function _typeof(obj) { return typeof obj; }; } else { foodRecipe_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return foodRecipe_typeof(obj); }\n\nfunction foodRecipe_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction foodRecipe_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { foodRecipe_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { foodRecipe_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\n\nfunction foodRecipe_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction foodRecipe_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction foodRecipe_createClass(Constructor, protoProps, staticProps) { if (protoProps) foodRecipe_defineProperties(Constructor.prototype, protoProps); if (staticProps) foodRecipe_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction foodRecipe_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) foodRecipe_setPrototypeOf(subClass, superClass); }\n\nfunction foodRecipe_createSuper(Derived) { var hasNativeReflectConstruct = foodRecipe_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = foodRecipe_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = foodRecipe_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return foodRecipe_possibleConstructorReturn(this, result); }; }\n\nfunction foodRecipe_possibleConstructorReturn(self, call) { if (call && (foodRecipe_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return foodRecipe_assertThisInitialized(self); }\n\nfunction foodRecipe_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction foodRecipe_wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; foodRecipe_wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !foodRecipe_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return foodRecipe_construct(Class, arguments, foodRecipe_getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return foodRecipe_setPrototypeOf(Wrapper, Class); }; return foodRecipe_wrapNativeSuper(Class); }\n\nfunction foodRecipe_construct(Parent, args, Class) { if (foodRecipe_isNativeReflectConstruct()) { foodRecipe_construct = Reflect.construct; } else { foodRecipe_construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) foodRecipe_setPrototypeOf(instance, Class.prototype); return instance; }; } return foodRecipe_construct.apply(null, arguments); }\n\nfunction foodRecipe_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction foodRecipe_isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }\n\nfunction foodRecipe_setPrototypeOf(o, p) { foodRecipe_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return foodRecipe_setPrototypeOf(o, p); }\n\nfunction foodRecipe_getPrototypeOf(o) { foodRecipe_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return foodRecipe_getPrototypeOf(o); }\n\n\n\nvar foodRecipe = /*#__PURE__*/function (_HTMLElement) {\n  foodRecipe_inherits(foodRecipe, _HTMLElement);\n\n  var _super = foodRecipe_createSuper(foodRecipe);\n\n  function foodRecipe() {\n    foodRecipe_classCallCheck(this, foodRecipe);\n\n    return _super.apply(this, arguments);\n  }\n\n  foodRecipe_createClass(foodRecipe, [{\n    key: "DataRecipe",\n    set: function set(dataRecipe) {\n      this._dataRecipe = dataRecipe;\n      this.render();\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this$_dataRecipe = this._dataRecipe,\n          idMeal = _this$_dataRecipe.idMeal,\n          strMeal = _this$_dataRecipe.strMeal,\n          strCategory = _this$_dataRecipe.strCategory,\n          strArea = _this$_dataRecipe.strArea,\n          strMealThumb = _this$_dataRecipe.strMealThumb;\n\n      if (strCategory == undefined && strArea == undefined) {\n        strCategory = "-";\n        strArea = "-";\n      }\n\n      this.innerHTML = "\\n      <div class=\\"card shadow-lg recipe\\" id=\\"recipe".concat(idMeal, "\\">\\n        <img src=\\"").concat(strMealThumb, "\\" class=\\"img-fluid\\" alt=\\"\\" />\\n        <div class=\\"card-body bg-transparent\\">\\n            <div class=\\"d-flex justify-content-around\\">\\n            <div class=\\"time d-flex flex-column align-items-center justify-content-center\\">\\n                <img src=\\"./img/kategori.png\\" width=\\"20px\\" height=\\"20px\\" />\\n                <small> ").concat(strCategory, " </small>\\n            </div>\\n            <div class=\\"d-flex flex-column align-items-center\\">\\n                <img src=\\"./img/lokasi.png\\" width=\\"20px\\" height=\\"20px\\" />\\n                <small> ").concat(strArea, " </small>\\n            </div>\\n            </div>\\n            <h5 class=\\"card-title mt-3\\">").concat(strMeal, "</h5>\\n        </div>\\n      </div>\\n      ");\n      var listRecipe = document.querySelector("list-recipe");\n      this.querySelector("#recipe".concat(idMeal)).addEventListener("click", function () {\n        setDetailRecipe(idMeal);\n      });\n\n      var setDetailRecipe = /*#__PURE__*/function () {\n        var _ref = foodRecipe_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(key) {\n          var recipe;\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.prev = 0;\n                  _context.next = 3;\n                  return data_FetchData.getData("lookup.php?i=".concat(key));\n\n                case 3:\n                  recipe = _context.sent;\n                  console.log(recipe);\n                  listRecipe.RecipeDetail = recipe;\n                  _context.next = 11;\n                  break;\n\n                case 8:\n                  _context.prev = 8;\n                  _context.t0 = _context["catch"](0);\n                  listRecipe.erorrMessage = "Tidak dapat menemukan data ".concat(key, " ").concat(_context.t0);\n\n                case 11:\n                case "end":\n                  return _context.stop();\n              }\n            }\n          }, _callee, null, [[0, 8]]);\n        }));\n\n        return function setDetailRecipe(_x) {\n          return _ref.apply(this, arguments);\n        };\n      }();\n    }\n  }]);\n\n  return foodRecipe;\n}( /*#__PURE__*/foodRecipe_wrapNativeSuper(HTMLElement));\n\ncustomElements.define("food-recipe", foodRecipe);\n;// CONCATENATED MODULE: ./src/scripts/component/listRecipe.js\nfunction listRecipe_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { listRecipe_typeof = function _typeof(obj) { return typeof obj; }; } else { listRecipe_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return listRecipe_typeof(obj); }\n\nfunction listRecipe_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction listRecipe_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction listRecipe_createClass(Constructor, protoProps, staticProps) { if (protoProps) listRecipe_defineProperties(Constructor.prototype, protoProps); if (staticProps) listRecipe_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction listRecipe_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) listRecipe_setPrototypeOf(subClass, superClass); }\n\nfunction listRecipe_createSuper(Derived) { var hasNativeReflectConstruct = listRecipe_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = listRecipe_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = listRecipe_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return listRecipe_possibleConstructorReturn(this, result); }; }\n\nfunction listRecipe_possibleConstructorReturn(self, call) { if (call && (listRecipe_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return listRecipe_assertThisInitialized(self); }\n\nfunction listRecipe_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction listRecipe_wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; listRecipe_wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !listRecipe_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return listRecipe_construct(Class, arguments, listRecipe_getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return listRecipe_setPrototypeOf(Wrapper, Class); }; return listRecipe_wrapNativeSuper(Class); }\n\nfunction listRecipe_construct(Parent, args, Class) { if (listRecipe_isNativeReflectConstruct()) { listRecipe_construct = Reflect.construct; } else { listRecipe_construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) listRecipe_setPrototypeOf(instance, Class.prototype); return instance; }; } return listRecipe_construct.apply(null, arguments); }\n\nfunction listRecipe_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction listRecipe_isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }\n\nfunction listRecipe_setPrototypeOf(o, p) { listRecipe_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return listRecipe_setPrototypeOf(o, p); }\n\nfunction listRecipe_getPrototypeOf(o) { listRecipe_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return listRecipe_getPrototypeOf(o); }\n\n\n\nvar listRecipe = /*#__PURE__*/function (_HTMLElement) {\n  listRecipe_inherits(listRecipe, _HTMLElement);\n\n  var _super = listRecipe_createSuper(listRecipe);\n\n  function listRecipe() {\n    listRecipe_classCallCheck(this, listRecipe);\n\n    return _super.apply(this, arguments);\n  }\n\n  listRecipe_createClass(listRecipe, [{\n    key: "DataListRecipe",\n    value: function DataListRecipe(dataListRecipe, key) {\n      this._dataListRecipe = dataListRecipe;\n      this._filter = key;\n      this.render();\n    }\n  }, {\n    key: "RecipeDetail",\n    set: function set(recipe) {\n      this._recipe = recipe[0];\n      var _this$_recipe = this._recipe,\n          idMeal = _this$_recipe.idMeal,\n          strMeal = _this$_recipe.strMeal,\n          strCategory = _this$_recipe.strCategory,\n          strArea = _this$_recipe.strArea,\n          strInstructions = _this$_recipe.strInstructions,\n          strMealThumb = _this$_recipe.strMealThumb,\n          strTags = _this$_recipe.strTags;\n      this.innerHTML = "";\n      this.innerHTML = "\\n    <div class=\\"card container col-lg-10 shadow\\">\\n      <div class=\\"row card-body\\">\\n        <div class=\\"col-lg-4 p-1 shadow\\">\\n          <img src=\\"".concat(strMealThumb, "\\" class=\\"img-fluid\\" />\\n        </div>\\n        <div class=\\"col-lg-8 p-3\\">\\n          <h5 class=\\"fw-bold\\">").concat(strMeal, " <span class=\\"fst-italic fs-6 fw-light\\">( ").concat(idMeal, " )</span></h5>\\n          <div class=\\"d-flex justify-content-around pt-5\\">\\n            <div class=\\"d-flex flex-column align-items-center\\">\\n              <img src=\\"./img/lokasi.png\\" width=\\"20px\\" height=\\"20px\\" />\\n              <p> ").concat(strArea, " </p>\\n            </div>\\n            <div class=\\"d-flex flex-column align-items-center\\">\\n              <img src=\\"./img/kategori.png\\" width=\\"20px\\" height=\\"20px\\" />\\n              <p> ").concat(strCategory, " </p>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\"col-lg-5 p-3\\">\\n          <small class=\\"fw-bold\\">Ingridients :</small>\\n          <table class=\\"table pt-3\\">\\n            <thead>\\n              <tr>\\n                <th scope=\\"col\\">#</th>\\n                <th scope=\\"col\\">Ingridienst</th>\\n                <th scope=\\"col\\">Quantity</th>\\n              </tr>\\n            </thead>\\n            <tbody class=\\"list-ingridients\\"></tbody>\\n          </table>\\n        </div>\\n        \\n        <div class=\\"col-lg-7 p-3\\">\\n          <small class=\\"fw-bold\\">Instructions :</small>\\n          <br>\\n          <small>").concat(strInstructions, "</small>\\n        </div>\\n        <div class=\\"card-footer text-muted\\">\\n          <small class=\\"fst-italic\\">Tag : ").concat(strTags, " </small>\\n        </div>\\n    </div>\\n    ");\n      var listIngridients = this.querySelector(".list-ingridients");\n      var kondisi = true;\n      var i = 1;\n\n      while (kondisi || i > 20) {\n        if (this._recipe["strIngredient".concat(i)] != "") {\n          var itemIngridients = document.createElement("tr");\n          itemIngridients.innerHTML = "\\n          <td>".concat(i, ".</td>\\n          <td>").concat(this._recipe["strIngredient".concat(i)], "</td>\\n          <td>:").concat(this._recipe["strMeasure".concat(i)], "</td>\\n        ");\n          listIngridients.appendChild(itemIngridients);\n          i++;\n        } else {\n          kondisi = false;\n        }\n      }\n    }\n  }, {\n    key: "erorrMessage",\n    set: function set(message) {\n      this.innerHTML = "\\n      <div class=\\"col\\">\\n        <h5 class=\\"text-center text-secondary mt-5\\">".concat(message, "</h5>\\n      </div>\\n    ");\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this = this;\n\n      this.innerHTML = "";\n      this.innerHTML = " <p class=\\"fw-bold\\">Find by : ".concat(this._filter, "</p>");\n\n      this._dataListRecipe.forEach(function (dataRecipe) {\n        var foodRecipe = document.createElement("food-recipe");\n        foodRecipe.setAttribute("class", " col-6 col-sm-6 col-md-6 col-lg-3 mt-5 p-2");\n        foodRecipe.DataRecipe = dataRecipe;\n\n        _this.appendChild(foodRecipe);\n      });\n    }\n  }]);\n\n  return listRecipe;\n}( /*#__PURE__*/listRecipe_wrapNativeSuper(HTMLElement));\n\ncustomElements.define("list-recipe", listRecipe);\n// EXTERNAL MODULE: ./src/scripts/component/pageNav.js\nvar pageNav = __webpack_require__(615);\n;// CONCATENATED MODULE: ./src/scripts/view/main.js\nfunction main_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction main_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { main_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { main_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\n\n // eslint-disable-next-line no-undef\n\nvar main_$ = __webpack_require__(634);\n\nvar main = function main() {\n  var kategoriElement = document.querySelector("filter-by");\n  var listRecipe = document.querySelector("list-recipe");\n  var searchBar = document.querySelector("search-bar");\n\n  var setKategori = /*#__PURE__*/function () {\n    var _ref = main_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var dataK, dataA, dataB;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return data_FetchData.getData("list.php?c=list");\n\n            case 3:\n              dataK = _context.sent;\n              _context.next = 6;\n              return data_FetchData.getData("list.php?a=list");\n\n            case 6:\n              dataA = _context.sent;\n              _context.next = 9;\n              return data_FetchData.getData("list.php?i=list");\n\n            case 9:\n              dataB = _context.sent;\n              kategoriElement.ListData(dataK, dataA, dataB);\n              _context.next = 16;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context["catch"](0);\n              console.log(_context.t0);\n\n            case 16:\n            case "end":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 13]]);\n    }));\n\n    return function setKategori() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var setDataRecipe = /*#__PURE__*/function () {\n    var _ref2 = main_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(key) {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.t0 = listRecipe;\n              _context2.next = 4;\n              return data_FetchData.getData("search.php?f=".concat(key));\n\n            case 4:\n              _context2.t1 = _context2.sent;\n              _context2.t2 = "huruf ".concat(key);\n\n              _context2.t0.DataListRecipe.call(_context2.t0, _context2.t1, _context2.t2);\n\n              _context2.next = 12;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t3 = _context2["catch"](0);\n              listRecipe.erorrMessage = "Data Nama makanan dengan huruf ".concat(key, " ").concat(_context2.t3);\n\n            case 12:\n            case "end":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 9]]);\n    }));\n\n    return function setDataRecipe(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  setKategori();\n  setDataRecipe("a");\n  main_$(document).ready(function () {\n    main_$(".page-link").click(function (e) {\n      e.preventDefault();\n      setDataRecipe(main_$(this).text());\n    });\n    main_$("#searchButton").click( /*#__PURE__*/function () {\n      var _ref3 = main_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(e) {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.t0 = listRecipe;\n                _context3.next = 4;\n                return data_FetchData.getData("search.php?s=".concat(searchBar.value));\n\n              case 4:\n                _context3.t1 = _context3.sent;\n                _context3.t2 = "nama makanan ".concat(searchBar.value);\n\n                _context3.t0.DataListRecipe.call(_context3.t0, _context3.t1, _context3.t2);\n\n                _context3.next = 12;\n                break;\n\n              case 9:\n                _context3.prev = 9;\n                _context3.t3 = _context3["catch"](0);\n                listRecipe.erorrMessage = "".concat(searchBar.value, " ").concat(_context3.t3);\n\n              case 12:\n                e.preventDefault();\n\n              case 13:\n              case "end":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 9]]);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n    main_$(".navbar-toggler").click(function () {\n      main_$("aside").toggleClass("tampil");\n    });\n  });\n};\n\n/* harmony default export */ const view_main = (main);\n;// CONCATENATED MODULE: ./src/app.js\n\n\n\n\n\n\n\n\n\n\n\n\ndocument.addEventListener("DOMContentLoaded", view_main);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///957\n')},709:()=>{eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar AppBar = /*#__PURE__*/function (_HTMLElement) {\n  _inherits(AppBar, _HTMLElement);\n\n  var _super = _createSuper(AppBar);\n\n  function AppBar() {\n    _classCallCheck(this, AppBar);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AppBar, [{\n    key: "connectedCallback",\n    value: function connectedCallback() {\n      this.render();\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      this.innerHTML = "\\n    <div class=\\"container-fluid navbar-dark p-0 d-flex\\" style=\\"background-color: #c68b59\\">\\n      <button class=\\"navbar-toggler btn-outline-secondary\\" type=\\"button\\">\\n        <span class=\\"navbar-toggler-icon\\"></span>\\n      </button>\\n    </div>\\n    ";\n    }\n  }]);\n\n  return AppBar;\n}( /*#__PURE__*/_wrapNativeSuper(HTMLElement));\n\ncustomElements.define("app-bar", AppBar);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90aGVtZWFsLy4vc3JjL3NjcmlwdHMvY29tcG9uZW50L2FwcEJhci5qcz9hN2UxIl0sIm5hbWVzIjpbIkFwcEJhciIsInJlbmRlciIsImlubmVySFRNTCIsIkhUTUxFbGVtZW50IiwiY3VzdG9tRWxlbWVudHMiLCJkZWZpbmUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFBTUEsTTs7Ozs7Ozs7Ozs7OztXQUNKLDZCQUFvQjtBQUNsQixXQUFLQyxNQUFMO0FBQ0Q7OztXQUNELGtCQUFTO0FBQ1AsV0FBS0MsU0FBTDtBQU9EOzs7O2lDQVprQkMsVzs7QUFjckJDLGNBQWMsQ0FBQ0MsTUFBZixDQUFzQixTQUF0QixFQUFpQ0wsTUFBakMiLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBBcHBCYXIgZXh0ZW5kcyBIVE1MRWxlbWVudCB7XHJcbiAgY29ubmVjdGVkQ2FsbGJhY2soKSB7XHJcbiAgICB0aGlzLnJlbmRlcigpO1xyXG4gIH1cclxuICByZW5kZXIoKSB7XHJcbiAgICB0aGlzLmlubmVySFRNTCA9IGBcclxuICAgIDxkaXYgY2xhc3M9XCJjb250YWluZXItZmx1aWQgbmF2YmFyLWRhcmsgcC0wIGQtZmxleFwiIHN0eWxlPVwiYmFja2dyb3VuZC1jb2xvcjogI2M2OGI1OVwiPlxyXG4gICAgICA8YnV0dG9uIGNsYXNzPVwibmF2YmFyLXRvZ2dsZXIgYnRuLW91dGxpbmUtc2Vjb25kYXJ5XCIgdHlwZT1cImJ1dHRvblwiPlxyXG4gICAgICAgIDxzcGFuIGNsYXNzPVwibmF2YmFyLXRvZ2dsZXItaWNvblwiPjwvc3Bhbj5cclxuICAgICAgPC9idXR0b24+XHJcbiAgICA8L2Rpdj5cclxuICAgIGA7XHJcbiAgfVxyXG59XHJcbmN1c3RvbUVsZW1lbnRzLmRlZmluZShcImFwcC1iYXJcIiwgQXBwQmFyKTtcclxuIl0sImZpbGUiOiI3MDkuanMiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///709\n')},615:()=>{eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar PageNav = /*#__PURE__*/function (_HTMLElement) {\n  _inherits(PageNav, _HTMLElement);\n\n  var _super = _createSuper(PageNav);\n\n  function PageNav() {\n    _classCallCheck(this, PageNav);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PageNav, [{\n    key: "connectedCallback",\n    value: function connectedCallback() {\n      this.render();\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      this.innerHTML = "\\n        <ul class=\\"pagination d-flex flex-row flex-wrap justify-content-around\\">\\n            <li class=\\"page-item\\"><a class=\\"page-link me-1\\" href=\\"#\\">a</a></li>\\n            <li class=\\"page-item\\"><a class=\\"page-link me-1\\" href=\\"#\\">b</a></li>\\n            <li class=\\"page-item\\"><a class=\\"page-link me-1\\" href=\\"#\\">c</a></li>\\n            <li class=\\"page-item\\"><a class=\\"page-link me-1\\" href=\\"#\\">d</a></li>\\n            <li class=\\"page-item\\"><a class=\\"page-link me-1\\" href=\\"#\\">e</a></li>\\n            <li class=\\"page-item\\"><a class=\\"page-link me-1\\" href=\\"#\\">f</a></li>\\n            <li class=\\"page-item\\"><a class=\\"page-link me-1\\" href=\\"#\\">g</a></li>\\n            <li class=\\"page-item\\"><a class=\\"page-link me-1\\" href=\\"#\\">h</a></li>\\n            <li class=\\"page-item\\"><a class=\\"page-link me-1\\" href=\\"#\\">i</a></li>\\n            <li class=\\"page-item\\"><a class=\\"page-link me-1\\" href=\\"#\\">j</a></li>\\n            <li class=\\"page-item\\"><a class=\\"page-link me-1\\" href=\\"#\\">k</a></li>\\n            <li class=\\"page-item\\"><a class=\\"page-link me-1\\" href=\\"#\\">l</a></li>\\n            <li class=\\"page-item\\"><a class=\\"page-link me-1\\" href=\\"#\\">m</a></li>\\n            <li class=\\"page-item\\"><a class=\\"page-link me-1\\" href=\\"#\\">n</a></li>\\n            <li class=\\"page-item\\"><a class=\\"page-link me-1\\" href=\\"#\\">o</a></li>\\n            <li class=\\"page-item\\"><a class=\\"page-link me-1\\" href=\\"#\\">p</a></li>\\n            <li class=\\"page-item\\"><a class=\\"page-link me-1\\" href=\\"#\\">q</a></li>\\n            <li class=\\"page-item\\"><a class=\\"page-link me-1\\" href=\\"#\\">r</a></li>\\n            <li class=\\"page-item\\"><a class=\\"page-link me-1\\" href=\\"#\\">s</a></li>\\n            <li class=\\"page-item\\"><a class=\\"page-link me-1\\" href=\\"#\\">t</a></li>\\n            <li class=\\"page-item\\"><a class=\\"page-link me-1\\" href=\\"#\\">u</a></li>\\n            <li class=\\"page-item\\"><a class=\\"page-link me-1\\" href=\\"#\\">v</a></li>\\n            <li class=\\"page-item\\"><a class=\\"page-link me-1\\" href=\\"#\\">w</a></li>\\n            <li class=\\"page-item\\"><a class=\\"page-link me-1\\" href=\\"#\\">x</a></li>\\n            <li class=\\"page-item\\"><a class=\\"page-link me-1\\" href=\\"#\\">y</a></li>\\n            <li class=\\"page-item\\"><a class=\\"page-link me-1\\" href=\\"#\\">z</a></li>\\n        </ul>\\n    ";\n    }\n  }]);\n\n  return PageNav;\n}( /*#__PURE__*/_wrapNativeSuper(HTMLElement));\n\ncustomElements.define("page-nav", PageNav);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90aGVtZWFsLy4vc3JjL3NjcmlwdHMvY29tcG9uZW50L3BhZ2VOYXYuanM/NTc4NSJdLCJuYW1lcyI6WyJQYWdlTmF2IiwicmVuZGVyIiwiaW5uZXJIVE1MIiwiSFRNTEVsZW1lbnQiLCJjdXN0b21FbGVtZW50cyIsImRlZmluZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQUFNQSxPOzs7Ozs7Ozs7Ozs7O1dBQ0osNkJBQW9CO0FBQ2xCLFdBQUtDLE1BQUw7QUFDRDs7O1dBQ0Qsa0JBQVM7QUFDUCxXQUFLQyxTQUFMO0FBOEJEOzs7O2lDQW5DbUJDLFc7O0FBcUN0QkMsY0FBYyxDQUFDQyxNQUFmLENBQXNCLFVBQXRCLEVBQWtDTCxPQUFsQyIsInNvdXJjZXNDb250ZW50IjpbImNsYXNzIFBhZ2VOYXYgZXh0ZW5kcyBIVE1MRWxlbWVudCB7XHJcbiAgY29ubmVjdGVkQ2FsbGJhY2soKSB7XHJcbiAgICB0aGlzLnJlbmRlcigpO1xyXG4gIH1cclxuICByZW5kZXIoKSB7XHJcbiAgICB0aGlzLmlubmVySFRNTCA9IGBcclxuICAgICAgICA8dWwgY2xhc3M9XCJwYWdpbmF0aW9uIGQtZmxleCBmbGV4LXJvdyBmbGV4LXdyYXAganVzdGlmeS1jb250ZW50LWFyb3VuZFwiPlxyXG4gICAgICAgICAgICA8bGkgY2xhc3M9XCJwYWdlLWl0ZW1cIj48YSBjbGFzcz1cInBhZ2UtbGluayBtZS0xXCIgaHJlZj1cIiNcIj5hPC9hPjwvbGk+XHJcbiAgICAgICAgICAgIDxsaSBjbGFzcz1cInBhZ2UtaXRlbVwiPjxhIGNsYXNzPVwicGFnZS1saW5rIG1lLTFcIiBocmVmPVwiI1wiPmI8L2E+PC9saT5cclxuICAgICAgICAgICAgPGxpIGNsYXNzPVwicGFnZS1pdGVtXCI+PGEgY2xhc3M9XCJwYWdlLWxpbmsgbWUtMVwiIGhyZWY9XCIjXCI+YzwvYT48L2xpPlxyXG4gICAgICAgICAgICA8bGkgY2xhc3M9XCJwYWdlLWl0ZW1cIj48YSBjbGFzcz1cInBhZ2UtbGluayBtZS0xXCIgaHJlZj1cIiNcIj5kPC9hPjwvbGk+XHJcbiAgICAgICAgICAgIDxsaSBjbGFzcz1cInBhZ2UtaXRlbVwiPjxhIGNsYXNzPVwicGFnZS1saW5rIG1lLTFcIiBocmVmPVwiI1wiPmU8L2E+PC9saT5cclxuICAgICAgICAgICAgPGxpIGNsYXNzPVwicGFnZS1pdGVtXCI+PGEgY2xhc3M9XCJwYWdlLWxpbmsgbWUtMVwiIGhyZWY9XCIjXCI+ZjwvYT48L2xpPlxyXG4gICAgICAgICAgICA8bGkgY2xhc3M9XCJwYWdlLWl0ZW1cIj48YSBjbGFzcz1cInBhZ2UtbGluayBtZS0xXCIgaHJlZj1cIiNcIj5nPC9hPjwvbGk+XHJcbiAgICAgICAgICAgIDxsaSBjbGFzcz1cInBhZ2UtaXRlbVwiPjxhIGNsYXNzPVwicGFnZS1saW5rIG1lLTFcIiBocmVmPVwiI1wiPmg8L2E+PC9saT5cclxuICAgICAgICAgICAgPGxpIGNsYXNzPVwicGFnZS1pdGVtXCI+PGEgY2xhc3M9XCJwYWdlLWxpbmsgbWUtMVwiIGhyZWY9XCIjXCI+aTwvYT48L2xpPlxyXG4gICAgICAgICAgICA8bGkgY2xhc3M9XCJwYWdlLWl0ZW1cIj48YSBjbGFzcz1cInBhZ2UtbGluayBtZS0xXCIgaHJlZj1cIiNcIj5qPC9hPjwvbGk+XHJcbiAgICAgICAgICAgIDxsaSBjbGFzcz1cInBhZ2UtaXRlbVwiPjxhIGNsYXNzPVwicGFnZS1saW5rIG1lLTFcIiBocmVmPVwiI1wiPms8L2E+PC9saT5cclxuICAgICAgICAgICAgPGxpIGNsYXNzPVwicGFnZS1pdGVtXCI+PGEgY2xhc3M9XCJwYWdlLWxpbmsgbWUtMVwiIGhyZWY9XCIjXCI+bDwvYT48L2xpPlxyXG4gICAgICAgICAgICA8bGkgY2xhc3M9XCJwYWdlLWl0ZW1cIj48YSBjbGFzcz1cInBhZ2UtbGluayBtZS0xXCIgaHJlZj1cIiNcIj5tPC9hPjwvbGk+XHJcbiAgICAgICAgICAgIDxsaSBjbGFzcz1cInBhZ2UtaXRlbVwiPjxhIGNsYXNzPVwicGFnZS1saW5rIG1lLTFcIiBocmVmPVwiI1wiPm48L2E+PC9saT5cclxuICAgICAgICAgICAgPGxpIGNsYXNzPVwicGFnZS1pdGVtXCI+PGEgY2xhc3M9XCJwYWdlLWxpbmsgbWUtMVwiIGhyZWY9XCIjXCI+bzwvYT48L2xpPlxyXG4gICAgICAgICAgICA8bGkgY2xhc3M9XCJwYWdlLWl0ZW1cIj48YSBjbGFzcz1cInBhZ2UtbGluayBtZS0xXCIgaHJlZj1cIiNcIj5wPC9hPjwvbGk+XHJcbiAgICAgICAgICAgIDxsaSBjbGFzcz1cInBhZ2UtaXRlbVwiPjxhIGNsYXNzPVwicGFnZS1saW5rIG1lLTFcIiBocmVmPVwiI1wiPnE8L2E+PC9saT5cclxuICAgICAgICAgICAgPGxpIGNsYXNzPVwicGFnZS1pdGVtXCI+PGEgY2xhc3M9XCJwYWdlLWxpbmsgbWUtMVwiIGhyZWY9XCIjXCI+cjwvYT48L2xpPlxyXG4gICAgICAgICAgICA8bGkgY2xhc3M9XCJwYWdlLWl0ZW1cIj48YSBjbGFzcz1cInBhZ2UtbGluayBtZS0xXCIgaHJlZj1cIiNcIj5zPC9hPjwvbGk+XHJcbiAgICAgICAgICAgIDxsaSBjbGFzcz1cInBhZ2UtaXRlbVwiPjxhIGNsYXNzPVwicGFnZS1saW5rIG1lLTFcIiBocmVmPVwiI1wiPnQ8L2E+PC9saT5cclxuICAgICAgICAgICAgPGxpIGNsYXNzPVwicGFnZS1pdGVtXCI+PGEgY2xhc3M9XCJwYWdlLWxpbmsgbWUtMVwiIGhyZWY9XCIjXCI+dTwvYT48L2xpPlxyXG4gICAgICAgICAgICA8bGkgY2xhc3M9XCJwYWdlLWl0ZW1cIj48YSBjbGFzcz1cInBhZ2UtbGluayBtZS0xXCIgaHJlZj1cIiNcIj52PC9hPjwvbGk+XHJcbiAgICAgICAgICAgIDxsaSBjbGFzcz1cInBhZ2UtaXRlbVwiPjxhIGNsYXNzPVwicGFnZS1saW5rIG1lLTFcIiBocmVmPVwiI1wiPnc8L2E+PC9saT5cclxuICAgICAgICAgICAgPGxpIGNsYXNzPVwicGFnZS1pdGVtXCI+PGEgY2xhc3M9XCJwYWdlLWxpbmsgbWUtMVwiIGhyZWY9XCIjXCI+eDwvYT48L2xpPlxyXG4gICAgICAgICAgICA8bGkgY2xhc3M9XCJwYWdlLWl0ZW1cIj48YSBjbGFzcz1cInBhZ2UtbGluayBtZS0xXCIgaHJlZj1cIiNcIj55PC9hPjwvbGk+XHJcbiAgICAgICAgICAgIDxsaSBjbGFzcz1cInBhZ2UtaXRlbVwiPjxhIGNsYXNzPVwicGFnZS1saW5rIG1lLTFcIiBocmVmPVwiI1wiPno8L2E+PC9saT5cclxuICAgICAgICA8L3VsPlxyXG4gICAgYDtcclxuICB9XHJcbn1cclxuY3VzdG9tRWxlbWVudHMuZGVmaW5lKFwicGFnZS1uYXZcIiwgUGFnZU5hdik7XHJcbiJdLCJmaWxlIjoiNjE1LmpzIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///615\n')},728:()=>{eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar searchBar = /*#__PURE__*/function (_HTMLElement) {\n  _inherits(searchBar, _HTMLElement);\n\n  var _super = _createSuper(searchBar);\n\n  function searchBar() {\n    _classCallCheck(this, searchBar);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(searchBar, [{\n    key: "connectedCallback",\n    value: function connectedCallback() {\n      this.render();\n    }\n  }, {\n    key: "value",\n    get: function get() {\n      return this.querySelector("#searchArea").value;\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      this.innerHTML = "\\n            <input type=\\"text\\" class=\\"form-control\\" id=\\"searchArea\\" placeholder=\\"Cari Resep Makanan\\" class=\\"mt-1\\"/>\\n            <button type=\\"submit\\" class=\\"btn mt-3 ps-5 pe-5\\" id=\\"searchButton\\" style=\\"background-color: #fcdec0;\\">Cari</button>\\n      ";\n    }\n  }]);\n\n  return searchBar;\n}( /*#__PURE__*/_wrapNativeSuper(HTMLElement));\n\ncustomElements.define("search-bar", searchBar);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90aGVtZWFsLy4vc3JjL3NjcmlwdHMvY29tcG9uZW50L3NlYXJjaEJhci5qcz8xNzNhIl0sIm5hbWVzIjpbInNlYXJjaEJhciIsInJlbmRlciIsInF1ZXJ5U2VsZWN0b3IiLCJ2YWx1ZSIsImlubmVySFRNTCIsIkhUTUxFbGVtZW50IiwiY3VzdG9tRWxlbWVudHMiLCJkZWZpbmUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFBTUEsUzs7Ozs7Ozs7Ozs7OztXQUNKLDZCQUFvQjtBQUNsQixXQUFLQyxNQUFMO0FBQ0Q7OztTQUNELGVBQVk7QUFDVixhQUFPLEtBQUtDLGFBQUwsQ0FBbUIsYUFBbkIsRUFBa0NDLEtBQXpDO0FBQ0Q7OztXQUNELGtCQUFTO0FBQ1AsV0FBS0MsU0FBTDtBQUlEOzs7O2lDQVpxQkMsVzs7QUFjeEJDLGNBQWMsQ0FBQ0MsTUFBZixDQUFzQixZQUF0QixFQUFvQ1AsU0FBcEMiLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBzZWFyY2hCYXIgZXh0ZW5kcyBIVE1MRWxlbWVudCB7XHJcbiAgY29ubmVjdGVkQ2FsbGJhY2soKSB7XHJcbiAgICB0aGlzLnJlbmRlcigpO1xyXG4gIH1cclxuICBnZXQgdmFsdWUoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5xdWVyeVNlbGVjdG9yKFwiI3NlYXJjaEFyZWFcIikudmFsdWU7XHJcbiAgfVxyXG4gIHJlbmRlcigpIHtcclxuICAgIHRoaXMuaW5uZXJIVE1MID0gYFxyXG4gICAgICAgICAgICA8aW5wdXQgdHlwZT1cInRleHRcIiBjbGFzcz1cImZvcm0tY29udHJvbFwiIGlkPVwic2VhcmNoQXJlYVwiIHBsYWNlaG9sZGVyPVwiQ2FyaSBSZXNlcCBNYWthbmFuXCIgY2xhc3M9XCJtdC0xXCIvPlxyXG4gICAgICAgICAgICA8YnV0dG9uIHR5cGU9XCJzdWJtaXRcIiBjbGFzcz1cImJ0biBtdC0zIHBzLTUgcGUtNVwiIGlkPVwic2VhcmNoQnV0dG9uXCIgc3R5bGU9XCJiYWNrZ3JvdW5kLWNvbG9yOiAjZmNkZWMwO1wiPkNhcmk8L2J1dHRvbj5cclxuICAgICAgYDtcclxuICB9XHJcbn1cclxuY3VzdG9tRWxlbWVudHMuZGVmaW5lKFwic2VhcmNoLWJhclwiLCBzZWFyY2hCYXIpO1xyXG4iXSwiZmlsZSI6IjcyOC5qcyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///728\n')},666:(module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(202);\n/* harmony import */ var _css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(929);\n/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(662);\n/* harmony import */ var _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__);\n// Imports\n\n\n\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(/* asset import */ __webpack_require__(214), __webpack_require__.b);\nvar ___CSS_LOADER_URL_IMPORT_1___ = new URL(/* asset import */ __webpack_require__(349), __webpack_require__.b);\nvar ___CSS_LOADER_URL_IMPORT_2___ = new URL(/* asset import */ __webpack_require__(204), __webpack_require__.b);\nvar ___CSS_LOADER_URL_IMPORT_3___ = new URL(/* asset import */ __webpack_require__(931), __webpack_require__.b);\nvar ___CSS_LOADER_URL_IMPORT_4___ = new URL(/* asset import */ __webpack_require__(486), __webpack_require__.b);\nvar ___CSS_LOADER_URL_IMPORT_5___ = new URL(/* asset import */ __webpack_require__(609), __webpack_require__.b);\nvar ___CSS_LOADER_URL_IMPORT_6___ = new URL(/* asset import */ __webpack_require__(469), __webpack_require__.b);\nvar ___CSS_LOADER_URL_IMPORT_7___ = new URL(/* asset import */ __webpack_require__(819), __webpack_require__.b);\nvar ___CSS_LOADER_URL_IMPORT_8___ = new URL(/* asset import */ __webpack_require__(144), __webpack_require__.b);\nvar ___CSS_LOADER_URL_IMPORT_9___ = new URL(/* asset import */ __webpack_require__(217), __webpack_require__.b);\nvar ___CSS_LOADER_URL_IMPORT_10___ = new URL(/* asset import */ __webpack_require__(956), __webpack_require__.b);\nvar ___CSS_LOADER_URL_IMPORT_11___ = new URL(/* asset import */ __webpack_require__(740), __webpack_require__.b);\nvar ___CSS_LOADER_URL_IMPORT_12___ = new URL(/* asset import */ __webpack_require__(460), __webpack_require__.b);\nvar ___CSS_LOADER_URL_IMPORT_13___ = new URL(/* asset import */ __webpack_require__(175), __webpack_require__.b);\nvar ___CSS_LOADER_URL_IMPORT_14___ = new URL(/* asset import */ __webpack_require__(647), __webpack_require__.b);\nvar ___CSS_LOADER_URL_IMPORT_15___ = new URL(/* asset import */ __webpack_require__(692), __webpack_require__.b);\nvar ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_0___);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_1___);\nvar ___CSS_LOADER_URL_REPLACEMENT_2___ = _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_2___);\nvar ___CSS_LOADER_URL_REPLACEMENT_3___ = _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_3___);\nvar ___CSS_LOADER_URL_REPLACEMENT_4___ = _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_4___);\nvar ___CSS_LOADER_URL_REPLACEMENT_5___ = _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_5___);\nvar ___CSS_LOADER_URL_REPLACEMENT_6___ = _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_6___);\nvar ___CSS_LOADER_URL_REPLACEMENT_7___ = _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_7___);\nvar ___CSS_LOADER_URL_REPLACEMENT_8___ = _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_8___);\nvar ___CSS_LOADER_URL_REPLACEMENT_9___ = _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_9___);\nvar ___CSS_LOADER_URL_REPLACEMENT_10___ = _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_10___);\nvar ___CSS_LOADER_URL_REPLACEMENT_11___ = _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_11___);\nvar ___CSS_LOADER_URL_REPLACEMENT_12___ = _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_12___);\nvar ___CSS_LOADER_URL_REPLACEMENT_13___ = _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_13___);\nvar ___CSS_LOADER_URL_REPLACEMENT_14___ = _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_14___);\nvar ___CSS_LOADER_URL_REPLACEMENT_15___ = _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_15___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, "@charset \\"UTF-8\\";/*!\\n * Bootstrap v5.1.0 (https://getbootstrap.com/)\\n * Copyright 2011-2021 The Bootstrap Authors\\n * Copyright 2011-2021 Twitter, Inc.\\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\\n */:root{--bs-blue:#0d6efd;--bs-indigo:#6610f2;--bs-purple:#6f42c1;--bs-pink:#d63384;--bs-red:#dc3545;--bs-orange:#fd7e14;--bs-yellow:#ffc107;--bs-green:#198754;--bs-teal:#20c997;--bs-cyan:#0dcaf0;--bs-white:#fff;--bs-gray:#6c757d;--bs-gray-dark:#343a40;--bs-gray-100:#f8f9fa;--bs-gray-200:#e9ecef;--bs-gray-300:#dee2e6;--bs-gray-400:#ced4da;--bs-gray-500:#adb5bd;--bs-gray-600:#6c757d;--bs-gray-700:#495057;--bs-gray-800:#343a40;--bs-gray-900:#212529;--bs-primary:#0d6efd;--bs-secondary:#6c757d;--bs-success:#198754;--bs-info:#0dcaf0;--bs-warning:#ffc107;--bs-danger:#dc3545;--bs-light:#f8f9fa;--bs-dark:#212529;--bs-primary-rgb:13,110,253;--bs-secondary-rgb:108,117,125;--bs-success-rgb:25,135,84;--bs-info-rgb:13,202,240;--bs-warning-rgb:255,193,7;--bs-danger-rgb:220,53,69;--bs-light-rgb:248,249,250;--bs-dark-rgb:33,37,41;--bs-white-rgb:255,255,255;--bs-black-rgb:0,0,0;--bs-body-rgb:33,37,41;--bs-font-sans-serif:system-ui,-apple-system,\\"Segoe UI\\",Roboto,\\"Helvetica Neue\\",Arial,\\"Noto Sans\\",\\"Liberation Sans\\",sans-serif,\\"Apple Color Emoji\\",\\"Segoe UI Emoji\\",\\"Segoe UI Symbol\\",\\"Noto Color Emoji\\";--bs-font-monospace:SFMono-Regular,Menlo,Monaco,Consolas,\\"Liberation Mono\\",\\"Courier New\\",monospace;--bs-gradient:linear-gradient(180deg, rgba(255, 255, 255, 0.15), rgba(255, 255, 255, 0));--bs-body-font-family:var(--bs-font-sans-serif);--bs-body-font-size:1rem;--bs-body-font-weight:400;--bs-body-line-height:1.5;--bs-body-color:#212529;--bs-body-bg:#fff}*,::after,::before{box-sizing:border-box}@media (prefers-reduced-motion:no-preference){:root{scroll-behavior:smooth}}body{margin:0;font-family:var(--bs-body-font-family);font-size:var(--bs-body-font-size);font-weight:var(--bs-body-font-weight);line-height:var(--bs-body-line-height);color:var(--bs-body-color);text-align:var(--bs-body-text-align);background-color:var(--bs-body-bg);-webkit-text-size-adjust:100%;-webkit-tap-highlight-color:transparent}hr{margin:1rem 0;color:inherit;background-color:currentColor;border:0;opacity:.25}hr:not([size]){height:1px}.h1,.h2,.h3,.h4,.h5,.h6,h1,h2,h3,h4,h5,h6{margin-top:0;margin-bottom:.5rem;font-weight:500;line-height:1.2}.h1,h1{font-size:calc(1.375rem + 1.5vw)}@media (min-width:1200px){.h1,h1{font-size:2.5rem}}.h2,h2{font-size:calc(1.325rem + .9vw)}@media (min-width:1200px){.h2,h2{font-size:2rem}}.h3,h3{font-size:calc(1.3rem + .6vw)}@media (min-width:1200px){.h3,h3{font-size:1.75rem}}.h4,h4{font-size:calc(1.275rem + .3vw)}@media (min-width:1200px){.h4,h4{font-size:1.5rem}}.h5,h5{font-size:1.25rem}.h6,h6{font-size:1rem}p{margin-top:0;margin-bottom:1rem}abbr[data-bs-original-title],abbr[title]{-webkit-text-decoration:underline dotted;text-decoration:underline dotted;cursor:help;-webkit-text-decoration-skip-ink:none;text-decoration-skip-ink:none}address{margin-bottom:1rem;font-style:normal;line-height:inherit}ol,ul{padding-left:2rem}dl,ol,ul{margin-top:0;margin-bottom:1rem}ol ol,ol ul,ul ol,ul ul{margin-bottom:0}dt{font-weight:700}dd{margin-bottom:.5rem;margin-left:0}blockquote{margin:0 0 1rem}b,strong{font-weight:bolder}.small,small{font-size:.875em}.mark,mark{padding:.2em;background-color:#fcf8e3}sub,sup{position:relative;font-size:.75em;line-height:0;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}a{color:#0d6efd;text-decoration:underline}a:hover{color:#0a58ca}a:not([href]):not([class]),a:not([href]):not([class]):hover{color:inherit;text-decoration:none}code,kbd,pre,samp{font-family:var(--bs-font-monospace);font-size:1em;direction:ltr;unicode-bidi:bidi-override}pre{display:block;margin-top:0;margin-bottom:1rem;overflow:auto;font-size:.875em}pre code{font-size:inherit;color:inherit;word-break:normal}code{font-size:.875em;color:#d63384;word-wrap:break-word}a>code{color:inherit}kbd{padding:.2rem .4rem;font-size:.875em;color:#fff;background-color:#212529;border-radius:.2rem}kbd kbd{padding:0;font-size:1em;font-weight:700}figure{margin:0 0 1rem}img,svg{vertical-align:middle}table{caption-side:bottom;border-collapse:collapse}caption{padding-top:.5rem;padding-bottom:.5rem;color:#6c757d;text-align:left}th{text-align:inherit;text-align:-webkit-match-parent}tbody,td,tfoot,th,thead,tr{border-color:inherit;border-style:solid;border-width:0}label{display:inline-block}button{border-radius:0}button:focus:not(:focus-visible){outline:0}button,input,optgroup,select,textarea{margin:0;font-family:inherit;font-size:inherit;line-height:inherit}button,select{text-transform:none}[role=button]{cursor:pointer}select{word-wrap:normal}select:disabled{opacity:1}[list]::-webkit-calendar-picker-indicator{display:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]:not(:disabled),[type=reset]:not(:disabled),[type=submit]:not(:disabled),button:not(:disabled){cursor:pointer}::-moz-focus-inner{padding:0;border-style:none}textarea{resize:vertical}fieldset{min-width:0;padding:0;margin:0;border:0}legend{float:left;width:100%;padding:0;margin-bottom:.5rem;font-size:calc(1.275rem + .3vw);line-height:inherit}@media (min-width:1200px){legend{font-size:1.5rem}}legend+*{clear:left}::-webkit-datetime-edit-day-field,::-webkit-datetime-edit-fields-wrapper,::-webkit-datetime-edit-hour-field,::-webkit-datetime-edit-minute,::-webkit-datetime-edit-month-field,::-webkit-datetime-edit-text,::-webkit-datetime-edit-year-field{padding:0}::-webkit-inner-spin-button{height:auto}[type=search]{outline-offset:-2px;-webkit-appearance:textfield}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-color-swatch-wrapper{padding:0}::file-selector-button{font:inherit}::-webkit-file-upload-button{font:inherit;-webkit-appearance:button}output{display:inline-block}iframe{border:0}summary{display:list-item;cursor:pointer}progress{vertical-align:baseline}[hidden]{display:none!important}.lead{font-size:1.25rem;font-weight:300}.display-1{font-size:calc(1.625rem + 4.5vw);font-weight:300;line-height:1.2}@media (min-width:1200px){.display-1{font-size:5rem}}.display-2{font-size:calc(1.575rem + 3.9vw);font-weight:300;line-height:1.2}@media (min-width:1200px){.display-2{font-size:4.5rem}}.display-3{font-size:calc(1.525rem + 3.3vw);font-weight:300;line-height:1.2}@media (min-width:1200px){.display-3{font-size:4rem}}.display-4{font-size:calc(1.475rem + 2.7vw);font-weight:300;line-height:1.2}@media (min-width:1200px){.display-4{font-size:3.5rem}}.display-5{font-size:calc(1.425rem + 2.1vw);font-weight:300;line-height:1.2}@media (min-width:1200px){.display-5{font-size:3rem}}.display-6{font-size:calc(1.375rem + 1.5vw);font-weight:300;line-height:1.2}@media (min-width:1200px){.display-6{font-size:2.5rem}}.list-unstyled{padding-left:0;list-style:none}.list-inline{padding-left:0;list-style:none}.list-inline-item{display:inline-block}.list-inline-item:not(:last-child){margin-right:.5rem}.initialism{font-size:.875em;text-transform:uppercase}.blockquote{margin-bottom:1rem;font-size:1.25rem}.blockquote>:last-child{margin-bottom:0}.blockquote-footer{margin-top:-1rem;margin-bottom:1rem;font-size:.875em;color:#6c757d}.blockquote-footer::before{content:\\"— \\"}.img-fluid{max-width:100%;height:auto}.img-thumbnail{padding:.25rem;background-color:#fff;border:1px solid #dee2e6;border-radius:.25rem;max-width:100%;height:auto}.figure{display:inline-block}.figure-img{margin-bottom:.5rem;line-height:1}.figure-caption{font-size:.875em;color:#6c757d}.container,.container-fluid,.container-lg,.container-md,.container-sm,.container-xl,.container-xxl{width:100%;padding-right:var(--bs-gutter-x,.75rem);padding-left:var(--bs-gutter-x,.75rem);margin-right:auto;margin-left:auto}@media (min-width:576px){.container,.container-sm{max-width:540px}}@media (min-width:768px){.container,.container-md,.container-sm{max-width:720px}}@media (min-width:992px){.container,.container-lg,.container-md,.container-sm{max-width:960px}}@media (min-width:1200px){.container,.container-lg,.container-md,.container-sm,.container-xl{max-width:1140px}}@media (min-width:1400px){.container,.container-lg,.container-md,.container-sm,.container-xl,.container-xxl{max-width:1320px}}.row{--bs-gutter-x:1.5rem;--bs-gutter-y:0;display:flex;flex-wrap:wrap;margin-top:calc(var(--bs-gutter-y) * -1);margin-right:calc(var(--bs-gutter-x) * -.5);margin-left:calc(var(--bs-gutter-x) * -.5)}.row>*{flex-shrink:0;width:100%;max-width:100%;padding-right:calc(var(--bs-gutter-x) * .5);padding-left:calc(var(--bs-gutter-x) * .5);margin-top:var(--bs-gutter-y)}.col{flex:1 0 0%}.row-cols-auto>*{flex:0 0 auto;width:auto}.row-cols-1>*{flex:0 0 auto;width:100%}.row-cols-2>*{flex:0 0 auto;width:50%}.row-cols-3>*{flex:0 0 auto;width:33.3333333333%}.row-cols-4>*{flex:0 0 auto;width:25%}.row-cols-5>*{flex:0 0 auto;width:20%}.row-cols-6>*{flex:0 0 auto;width:16.6666666667%}.col-auto{flex:0 0 auto;width:auto}.col-1{flex:0 0 auto;width:8.33333333%}.col-2{flex:0 0 auto;width:16.66666667%}.col-3{flex:0 0 auto;width:25%}.col-4{flex:0 0 auto;width:33.33333333%}.col-5{flex:0 0 auto;width:41.66666667%}.col-6{flex:0 0 auto;width:50%}.col-7{flex:0 0 auto;width:58.33333333%}.col-8{flex:0 0 auto;width:66.66666667%}.col-9{flex:0 0 auto;width:75%}.col-10{flex:0 0 auto;width:83.33333333%}.col-11{flex:0 0 auto;width:91.66666667%}.col-12{flex:0 0 auto;width:100%}.offset-1{margin-left:8.33333333%}.offset-2{margin-left:16.66666667%}.offset-3{margin-left:25%}.offset-4{margin-left:33.33333333%}.offset-5{margin-left:41.66666667%}.offset-6{margin-left:50%}.offset-7{margin-left:58.33333333%}.offset-8{margin-left:66.66666667%}.offset-9{margin-left:75%}.offset-10{margin-left:83.33333333%}.offset-11{margin-left:91.66666667%}.g-0,.gx-0{--bs-gutter-x:0}.g-0,.gy-0{--bs-gutter-y:0}.g-1,.gx-1{--bs-gutter-x:0.25rem}.g-1,.gy-1{--bs-gutter-y:0.25rem}.g-2,.gx-2{--bs-gutter-x:0.5rem}.g-2,.gy-2{--bs-gutter-y:0.5rem}.g-3,.gx-3{--bs-gutter-x:1rem}.g-3,.gy-3{--bs-gutter-y:1rem}.g-4,.gx-4{--bs-gutter-x:1.5rem}.g-4,.gy-4{--bs-gutter-y:1.5rem}.g-5,.gx-5{--bs-gutter-x:3rem}.g-5,.gy-5{--bs-gutter-y:3rem}@media (min-width:576px){.col-sm{flex:1 0 0%}.row-cols-sm-auto>*{flex:0 0 auto;width:auto}.row-cols-sm-1>*{flex:0 0 auto;width:100%}.row-cols-sm-2>*{flex:0 0 auto;width:50%}.row-cols-sm-3>*{flex:0 0 auto;width:33.3333333333%}.row-cols-sm-4>*{flex:0 0 auto;width:25%}.row-cols-sm-5>*{flex:0 0 auto;width:20%}.row-cols-sm-6>*{flex:0 0 auto;width:16.6666666667%}.col-sm-auto{flex:0 0 auto;width:auto}.col-sm-1{flex:0 0 auto;width:8.33333333%}.col-sm-2{flex:0 0 auto;width:16.66666667%}.col-sm-3{flex:0 0 auto;width:25%}.col-sm-4{flex:0 0 auto;width:33.33333333%}.col-sm-5{flex:0 0 auto;width:41.66666667%}.col-sm-6{flex:0 0 auto;width:50%}.col-sm-7{flex:0 0 auto;width:58.33333333%}.col-sm-8{flex:0 0 auto;width:66.66666667%}.col-sm-9{flex:0 0 auto;width:75%}.col-sm-10{flex:0 0 auto;width:83.33333333%}.col-sm-11{flex:0 0 auto;width:91.66666667%}.col-sm-12{flex:0 0 auto;width:100%}.offset-sm-0{margin-left:0}.offset-sm-1{margin-left:8.33333333%}.offset-sm-2{margin-left:16.66666667%}.offset-sm-3{margin-left:25%}.offset-sm-4{margin-left:33.33333333%}.offset-sm-5{margin-left:41.66666667%}.offset-sm-6{margin-left:50%}.offset-sm-7{margin-left:58.33333333%}.offset-sm-8{margin-left:66.66666667%}.offset-sm-9{margin-left:75%}.offset-sm-10{margin-left:83.33333333%}.offset-sm-11{margin-left:91.66666667%}.g-sm-0,.gx-sm-0{--bs-gutter-x:0}.g-sm-0,.gy-sm-0{--bs-gutter-y:0}.g-sm-1,.gx-sm-1{--bs-gutter-x:0.25rem}.g-sm-1,.gy-sm-1{--bs-gutter-y:0.25rem}.g-sm-2,.gx-sm-2{--bs-gutter-x:0.5rem}.g-sm-2,.gy-sm-2{--bs-gutter-y:0.5rem}.g-sm-3,.gx-sm-3{--bs-gutter-x:1rem}.g-sm-3,.gy-sm-3{--bs-gutter-y:1rem}.g-sm-4,.gx-sm-4{--bs-gutter-x:1.5rem}.g-sm-4,.gy-sm-4{--bs-gutter-y:1.5rem}.g-sm-5,.gx-sm-5{--bs-gutter-x:3rem}.g-sm-5,.gy-sm-5{--bs-gutter-y:3rem}}@media (min-width:768px){.col-md{flex:1 0 0%}.row-cols-md-auto>*{flex:0 0 auto;width:auto}.row-cols-md-1>*{flex:0 0 auto;width:100%}.row-cols-md-2>*{flex:0 0 auto;width:50%}.row-cols-md-3>*{flex:0 0 auto;width:33.3333333333%}.row-cols-md-4>*{flex:0 0 auto;width:25%}.row-cols-md-5>*{flex:0 0 auto;width:20%}.row-cols-md-6>*{flex:0 0 auto;width:16.6666666667%}.col-md-auto{flex:0 0 auto;width:auto}.col-md-1{flex:0 0 auto;width:8.33333333%}.col-md-2{flex:0 0 auto;width:16.66666667%}.col-md-3{flex:0 0 auto;width:25%}.col-md-4{flex:0 0 auto;width:33.33333333%}.col-md-5{flex:0 0 auto;width:41.66666667%}.col-md-6{flex:0 0 auto;width:50%}.col-md-7{flex:0 0 auto;width:58.33333333%}.col-md-8{flex:0 0 auto;width:66.66666667%}.col-md-9{flex:0 0 auto;width:75%}.col-md-10{flex:0 0 auto;width:83.33333333%}.col-md-11{flex:0 0 auto;width:91.66666667%}.col-md-12{flex:0 0 auto;width:100%}.offset-md-0{margin-left:0}.offset-md-1{margin-left:8.33333333%}.offset-md-2{margin-left:16.66666667%}.offset-md-3{margin-left:25%}.offset-md-4{margin-left:33.33333333%}.offset-md-5{margin-left:41.66666667%}.offset-md-6{margin-left:50%}.offset-md-7{margin-left:58.33333333%}.offset-md-8{margin-left:66.66666667%}.offset-md-9{margin-left:75%}.offset-md-10{margin-left:83.33333333%}.offset-md-11{margin-left:91.66666667%}.g-md-0,.gx-md-0{--bs-gutter-x:0}.g-md-0,.gy-md-0{--bs-gutter-y:0}.g-md-1,.gx-md-1{--bs-gutter-x:0.25rem}.g-md-1,.gy-md-1{--bs-gutter-y:0.25rem}.g-md-2,.gx-md-2{--bs-gutter-x:0.5rem}.g-md-2,.gy-md-2{--bs-gutter-y:0.5rem}.g-md-3,.gx-md-3{--bs-gutter-x:1rem}.g-md-3,.gy-md-3{--bs-gutter-y:1rem}.g-md-4,.gx-md-4{--bs-gutter-x:1.5rem}.g-md-4,.gy-md-4{--bs-gutter-y:1.5rem}.g-md-5,.gx-md-5{--bs-gutter-x:3rem}.g-md-5,.gy-md-5{--bs-gutter-y:3rem}}@media (min-width:992px){.col-lg{flex:1 0 0%}.row-cols-lg-auto>*{flex:0 0 auto;width:auto}.row-cols-lg-1>*{flex:0 0 auto;width:100%}.row-cols-lg-2>*{flex:0 0 auto;width:50%}.row-cols-lg-3>*{flex:0 0 auto;width:33.3333333333%}.row-cols-lg-4>*{flex:0 0 auto;width:25%}.row-cols-lg-5>*{flex:0 0 auto;width:20%}.row-cols-lg-6>*{flex:0 0 auto;width:16.6666666667%}.col-lg-auto{flex:0 0 auto;width:auto}.col-lg-1{flex:0 0 auto;width:8.33333333%}.col-lg-2{flex:0 0 auto;width:16.66666667%}.col-lg-3{flex:0 0 auto;width:25%}.col-lg-4{flex:0 0 auto;width:33.33333333%}.col-lg-5{flex:0 0 auto;width:41.66666667%}.col-lg-6{flex:0 0 auto;width:50%}.col-lg-7{flex:0 0 auto;width:58.33333333%}.col-lg-8{flex:0 0 auto;width:66.66666667%}.col-lg-9{flex:0 0 auto;width:75%}.col-lg-10{flex:0 0 auto;width:83.33333333%}.col-lg-11{flex:0 0 auto;width:91.66666667%}.col-lg-12{flex:0 0 auto;width:100%}.offset-lg-0{margin-left:0}.offset-lg-1{margin-left:8.33333333%}.offset-lg-2{margin-left:16.66666667%}.offset-lg-3{margin-left:25%}.offset-lg-4{margin-left:33.33333333%}.offset-lg-5{margin-left:41.66666667%}.offset-lg-6{margin-left:50%}.offset-lg-7{margin-left:58.33333333%}.offset-lg-8{margin-left:66.66666667%}.offset-lg-9{margin-left:75%}.offset-lg-10{margin-left:83.33333333%}.offset-lg-11{margin-left:91.66666667%}.g-lg-0,.gx-lg-0{--bs-gutter-x:0}.g-lg-0,.gy-lg-0{--bs-gutter-y:0}.g-lg-1,.gx-lg-1{--bs-gutter-x:0.25rem}.g-lg-1,.gy-lg-1{--bs-gutter-y:0.25rem}.g-lg-2,.gx-lg-2{--bs-gutter-x:0.5rem}.g-lg-2,.gy-lg-2{--bs-gutter-y:0.5rem}.g-lg-3,.gx-lg-3{--bs-gutter-x:1rem}.g-lg-3,.gy-lg-3{--bs-gutter-y:1rem}.g-lg-4,.gx-lg-4{--bs-gutter-x:1.5rem}.g-lg-4,.gy-lg-4{--bs-gutter-y:1.5rem}.g-lg-5,.gx-lg-5{--bs-gutter-x:3rem}.g-lg-5,.gy-lg-5{--bs-gutter-y:3rem}}@media (min-width:1200px){.col-xl{flex:1 0 0%}.row-cols-xl-auto>*{flex:0 0 auto;width:auto}.row-cols-xl-1>*{flex:0 0 auto;width:100%}.row-cols-xl-2>*{flex:0 0 auto;width:50%}.row-cols-xl-3>*{flex:0 0 auto;width:33.3333333333%}.row-cols-xl-4>*{flex:0 0 auto;width:25%}.row-cols-xl-5>*{flex:0 0 auto;width:20%}.row-cols-xl-6>*{flex:0 0 auto;width:16.6666666667%}.col-xl-auto{flex:0 0 auto;width:auto}.col-xl-1{flex:0 0 auto;width:8.33333333%}.col-xl-2{flex:0 0 auto;width:16.66666667%}.col-xl-3{flex:0 0 auto;width:25%}.col-xl-4{flex:0 0 auto;width:33.33333333%}.col-xl-5{flex:0 0 auto;width:41.66666667%}.col-xl-6{flex:0 0 auto;width:50%}.col-xl-7{flex:0 0 auto;width:58.33333333%}.col-xl-8{flex:0 0 auto;width:66.66666667%}.col-xl-9{flex:0 0 auto;width:75%}.col-xl-10{flex:0 0 auto;width:83.33333333%}.col-xl-11{flex:0 0 auto;width:91.66666667%}.col-xl-12{flex:0 0 auto;width:100%}.offset-xl-0{margin-left:0}.offset-xl-1{margin-left:8.33333333%}.offset-xl-2{margin-left:16.66666667%}.offset-xl-3{margin-left:25%}.offset-xl-4{margin-left:33.33333333%}.offset-xl-5{margin-left:41.66666667%}.offset-xl-6{margin-left:50%}.offset-xl-7{margin-left:58.33333333%}.offset-xl-8{margin-left:66.66666667%}.offset-xl-9{margin-left:75%}.offset-xl-10{margin-left:83.33333333%}.offset-xl-11{margin-left:91.66666667%}.g-xl-0,.gx-xl-0{--bs-gutter-x:0}.g-xl-0,.gy-xl-0{--bs-gutter-y:0}.g-xl-1,.gx-xl-1{--bs-gutter-x:0.25rem}.g-xl-1,.gy-xl-1{--bs-gutter-y:0.25rem}.g-xl-2,.gx-xl-2{--bs-gutter-x:0.5rem}.g-xl-2,.gy-xl-2{--bs-gutter-y:0.5rem}.g-xl-3,.gx-xl-3{--bs-gutter-x:1rem}.g-xl-3,.gy-xl-3{--bs-gutter-y:1rem}.g-xl-4,.gx-xl-4{--bs-gutter-x:1.5rem}.g-xl-4,.gy-xl-4{--bs-gutter-y:1.5rem}.g-xl-5,.gx-xl-5{--bs-gutter-x:3rem}.g-xl-5,.gy-xl-5{--bs-gutter-y:3rem}}@media (min-width:1400px){.col-xxl{flex:1 0 0%}.row-cols-xxl-auto>*{flex:0 0 auto;width:auto}.row-cols-xxl-1>*{flex:0 0 auto;width:100%}.row-cols-xxl-2>*{flex:0 0 auto;width:50%}.row-cols-xxl-3>*{flex:0 0 auto;width:33.3333333333%}.row-cols-xxl-4>*{flex:0 0 auto;width:25%}.row-cols-xxl-5>*{flex:0 0 auto;width:20%}.row-cols-xxl-6>*{flex:0 0 auto;width:16.6666666667%}.col-xxl-auto{flex:0 0 auto;width:auto}.col-xxl-1{flex:0 0 auto;width:8.33333333%}.col-xxl-2{flex:0 0 auto;width:16.66666667%}.col-xxl-3{flex:0 0 auto;width:25%}.col-xxl-4{flex:0 0 auto;width:33.33333333%}.col-xxl-5{flex:0 0 auto;width:41.66666667%}.col-xxl-6{flex:0 0 auto;width:50%}.col-xxl-7{flex:0 0 auto;width:58.33333333%}.col-xxl-8{flex:0 0 auto;width:66.66666667%}.col-xxl-9{flex:0 0 auto;width:75%}.col-xxl-10{flex:0 0 auto;width:83.33333333%}.col-xxl-11{flex:0 0 auto;width:91.66666667%}.col-xxl-12{flex:0 0 auto;width:100%}.offset-xxl-0{margin-left:0}.offset-xxl-1{margin-left:8.33333333%}.offset-xxl-2{margin-left:16.66666667%}.offset-xxl-3{margin-left:25%}.offset-xxl-4{margin-left:33.33333333%}.offset-xxl-5{margin-left:41.66666667%}.offset-xxl-6{margin-left:50%}.offset-xxl-7{margin-left:58.33333333%}.offset-xxl-8{margin-left:66.66666667%}.offset-xxl-9{margin-left:75%}.offset-xxl-10{margin-left:83.33333333%}.offset-xxl-11{margin-left:91.66666667%}.g-xxl-0,.gx-xxl-0{--bs-gutter-x:0}.g-xxl-0,.gy-xxl-0{--bs-gutter-y:0}.g-xxl-1,.gx-xxl-1{--bs-gutter-x:0.25rem}.g-xxl-1,.gy-xxl-1{--bs-gutter-y:0.25rem}.g-xxl-2,.gx-xxl-2{--bs-gutter-x:0.5rem}.g-xxl-2,.gy-xxl-2{--bs-gutter-y:0.5rem}.g-xxl-3,.gx-xxl-3{--bs-gutter-x:1rem}.g-xxl-3,.gy-xxl-3{--bs-gutter-y:1rem}.g-xxl-4,.gx-xxl-4{--bs-gutter-x:1.5rem}.g-xxl-4,.gy-xxl-4{--bs-gutter-y:1.5rem}.g-xxl-5,.gx-xxl-5{--bs-gutter-x:3rem}.g-xxl-5,.gy-xxl-5{--bs-gutter-y:3rem}}.table{--bs-table-bg:transparent;--bs-table-accent-bg:transparent;--bs-table-striped-color:#212529;--bs-table-striped-bg:rgba(0, 0, 0, 0.05);--bs-table-active-color:#212529;--bs-table-active-bg:rgba(0, 0, 0, 0.1);--bs-table-hover-color:#212529;--bs-table-hover-bg:rgba(0, 0, 0, 0.075);width:100%;margin-bottom:1rem;color:#212529;vertical-align:top;border-color:#dee2e6}.table>:not(caption)>*>*{padding:.5rem .5rem;background-color:var(--bs-table-bg);border-bottom-width:1px;box-shadow:inset 0 0 0 9999px var(--bs-table-accent-bg)}.table>tbody{vertical-align:inherit}.table>thead{vertical-align:bottom}.table>:not(:last-child)>:last-child>*{border-bottom-color:currentColor}.caption-top{caption-side:top}.table-sm>:not(caption)>*>*{padding:.25rem .25rem}.table-bordered>:not(caption)>*{border-width:1px 0}.table-bordered>:not(caption)>*>*{border-width:0 1px}.table-borderless>:not(caption)>*>*{border-bottom-width:0}.table-striped>tbody>tr:nth-of-type(odd){--bs-table-accent-bg:var(--bs-table-striped-bg);color:var(--bs-table-striped-color)}.table-active{--bs-table-accent-bg:var(--bs-table-active-bg);color:var(--bs-table-active-color)}.table-hover>tbody>tr:hover{--bs-table-accent-bg:var(--bs-table-hover-bg);color:var(--bs-table-hover-color)}.table-primary{--bs-table-bg:#cfe2ff;--bs-table-striped-bg:#c5d7f2;--bs-table-striped-color:#000;--bs-table-active-bg:#bacbe6;--bs-table-active-color:#000;--bs-table-hover-bg:#bfd1ec;--bs-table-hover-color:#000;color:#000;border-color:#bacbe6}.table-secondary{--bs-table-bg:#e2e3e5;--bs-table-striped-bg:#d7d8da;--bs-table-striped-color:#000;--bs-table-active-bg:#cbccce;--bs-table-active-color:#000;--bs-table-hover-bg:#d1d2d4;--bs-table-hover-color:#000;color:#000;border-color:#cbccce}.table-success{--bs-table-bg:#d1e7dd;--bs-table-striped-bg:#c7dbd2;--bs-table-striped-color:#000;--bs-table-active-bg:#bcd0c7;--bs-table-active-color:#000;--bs-table-hover-bg:#c1d6cc;--bs-table-hover-color:#000;color:#000;border-color:#bcd0c7}.table-info{--bs-table-bg:#cff4fc;--bs-table-striped-bg:#c5e8ef;--bs-table-striped-color:#000;--bs-table-active-bg:#badce3;--bs-table-active-color:#000;--bs-table-hover-bg:#bfe2e9;--bs-table-hover-color:#000;color:#000;border-color:#badce3}.table-warning{--bs-table-bg:#fff3cd;--bs-table-striped-bg:#f2e7c3;--bs-table-striped-color:#000;--bs-table-active-bg:#e6dbb9;--bs-table-active-color:#000;--bs-table-hover-bg:#ece1be;--bs-table-hover-color:#000;color:#000;border-color:#e6dbb9}.table-danger{--bs-table-bg:#f8d7da;--bs-table-striped-bg:#eccccf;--bs-table-striped-color:#000;--bs-table-active-bg:#dfc2c4;--bs-table-active-color:#000;--bs-table-hover-bg:#e5c7ca;--bs-table-hover-color:#000;color:#000;border-color:#dfc2c4}.table-light{--bs-table-bg:#f8f9fa;--bs-table-striped-bg:#ecedee;--bs-table-striped-color:#000;--bs-table-active-bg:#dfe0e1;--bs-table-active-color:#000;--bs-table-hover-bg:#e5e6e7;--bs-table-hover-color:#000;color:#000;border-color:#dfe0e1}.table-dark{--bs-table-bg:#212529;--bs-table-striped-bg:#2c3034;--bs-table-striped-color:#fff;--bs-table-active-bg:#373b3e;--bs-table-active-color:#fff;--bs-table-hover-bg:#323539;--bs-table-hover-color:#fff;color:#fff;border-color:#373b3e}.table-responsive{overflow-x:auto;-webkit-overflow-scrolling:touch}@media (max-width:575.98px){.table-responsive-sm{overflow-x:auto;-webkit-overflow-scrolling:touch}}@media (max-width:767.98px){.table-responsive-md{overflow-x:auto;-webkit-overflow-scrolling:touch}}@media (max-width:991.98px){.table-responsive-lg{overflow-x:auto;-webkit-overflow-scrolling:touch}}@media (max-width:1199.98px){.table-responsive-xl{overflow-x:auto;-webkit-overflow-scrolling:touch}}@media (max-width:1399.98px){.table-responsive-xxl{overflow-x:auto;-webkit-overflow-scrolling:touch}}.form-label{margin-bottom:.5rem}.col-form-label{padding-top:calc(.375rem + 1px);padding-bottom:calc(.375rem + 1px);margin-bottom:0;font-size:inherit;line-height:1.5}.col-form-label-lg{padding-top:calc(.5rem + 1px);padding-bottom:calc(.5rem + 1px);font-size:1.25rem}.col-form-label-sm{padding-top:calc(.25rem + 1px);padding-bottom:calc(.25rem + 1px);font-size:.875rem}.form-text{margin-top:.25rem;font-size:.875em;color:#6c757d}.form-control{display:block;width:100%;padding:.375rem .75rem;font-size:1rem;font-weight:400;line-height:1.5;color:#212529;background-color:#fff;background-clip:padding-box;border:1px solid #ced4da;-webkit-appearance:none;-moz-appearance:none;appearance:none;border-radius:.25rem;transition:border-color .15s ease-in-out,box-shadow .15s ease-in-out}@media (prefers-reduced-motion:reduce){.form-control{transition:none}}.form-control[type=file]{overflow:hidden}.form-control[type=file]:not(:disabled):not([readonly]){cursor:pointer}.form-control:focus{color:#212529;background-color:#fff;border-color:#86b7fe;outline:0;box-shadow:0 0 0 .25rem rgba(13,110,253,.25)}.form-control::-webkit-date-and-time-value{height:1.5em}.form-control::-moz-placeholder{color:#6c757d;opacity:1}.form-control::placeholder{color:#6c757d;opacity:1}.form-control:disabled,.form-control[readonly]{background-color:#e9ecef;opacity:1}.form-control::file-selector-button{padding:.375rem .75rem;margin:-.375rem -.75rem;-webkit-margin-end:.75rem;margin-inline-end:.75rem;color:#212529;background-color:#e9ecef;pointer-events:none;border-color:inherit;border-style:solid;border-width:0;border-inline-end-width:1px;border-radius:0;transition:color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out}@media (prefers-reduced-motion:reduce){.form-control::file-selector-button{transition:none}}.form-control:hover:not(:disabled):not([readonly])::file-selector-button{background-color:#dde0e3}.form-control::-webkit-file-upload-button{padding:.375rem .75rem;margin:-.375rem -.75rem;-webkit-margin-end:.75rem;margin-inline-end:.75rem;color:#212529;background-color:#e9ecef;pointer-events:none;border-color:inherit;border-style:solid;border-width:0;border-inline-end-width:1px;border-radius:0;-webkit-transition:color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;transition:color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out}@media (prefers-reduced-motion:reduce){.form-control::-webkit-file-upload-button{-webkit-transition:none;transition:none}}.form-control:hover:not(:disabled):not([readonly])::-webkit-file-upload-button{background-color:#dde0e3}.form-control-plaintext{display:block;width:100%;padding:.375rem 0;margin-bottom:0;line-height:1.5;color:#212529;background-color:transparent;border:solid transparent;border-width:1px 0}.form-control-plaintext.form-control-lg,.form-control-plaintext.form-control-sm{padding-right:0;padding-left:0}.form-control-sm{min-height:calc(1.5em + .5rem + 2px);padding:.25rem .5rem;font-size:.875rem;border-radius:.2rem}.form-control-sm::file-selector-button{padding:.25rem .5rem;margin:-.25rem -.5rem;-webkit-margin-end:.5rem;margin-inline-end:.5rem}.form-control-sm::-webkit-file-upload-button{padding:.25rem .5rem;margin:-.25rem -.5rem;-webkit-margin-end:.5rem;margin-inline-end:.5rem}.form-control-lg{min-height:calc(1.5em + 1rem + 2px);padding:.5rem 1rem;font-size:1.25rem;border-radius:.3rem}.form-control-lg::file-selector-button{padding:.5rem 1rem;margin:-.5rem -1rem;-webkit-margin-end:1rem;margin-inline-end:1rem}.form-control-lg::-webkit-file-upload-button{padding:.5rem 1rem;margin:-.5rem -1rem;-webkit-margin-end:1rem;margin-inline-end:1rem}textarea.form-control{min-height:calc(1.5em + .75rem + 2px)}textarea.form-control-sm{min-height:calc(1.5em + .5rem + 2px)}textarea.form-control-lg{min-height:calc(1.5em + 1rem + 2px)}.form-control-color{width:3rem;height:auto;padding:.375rem}.form-control-color:not(:disabled):not([readonly]){cursor:pointer}.form-control-color::-moz-color-swatch{height:1.5em;border-radius:.25rem}.form-control-color::-webkit-color-swatch{height:1.5em;border-radius:.25rem}.form-select{display:block;width:100%;padding:.375rem 2.25rem .375rem .75rem;-moz-padding-start:calc(0.75rem - 3px);font-size:1rem;font-weight:400;line-height:1.5;color:#212529;background-color:#fff;background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_0___ + ");background-repeat:no-repeat;background-position:right .75rem center;background-size:16px 12px;border:1px solid #ced4da;border-radius:.25rem;transition:border-color .15s ease-in-out,box-shadow .15s ease-in-out;-webkit-appearance:none;-moz-appearance:none;appearance:none}@media (prefers-reduced-motion:reduce){.form-select{transition:none}}.form-select:focus{border-color:#86b7fe;outline:0;box-shadow:0 0 0 .25rem rgba(13,110,253,.25)}.form-select[multiple],.form-select[size]:not([size=\\"1\\"]){padding-right:.75rem;background-image:none}.form-select:disabled{background-color:#e9ecef}.form-select:-moz-focusring{color:transparent;text-shadow:0 0 0 #212529}.form-select-sm{padding-top:.25rem;padding-bottom:.25rem;padding-left:.5rem;font-size:.875rem}.form-select-lg{padding-top:.5rem;padding-bottom:.5rem;padding-left:1rem;font-size:1.25rem}.form-check{display:block;min-height:1.5rem;padding-left:1.5em;margin-bottom:.125rem}.form-check .form-check-input{float:left;margin-left:-1.5em}.form-check-input{width:1em;height:1em;margin-top:.25em;vertical-align:top;background-color:#fff;background-repeat:no-repeat;background-position:center;background-size:contain;border:1px solid rgba(0,0,0,.25);-webkit-appearance:none;-moz-appearance:none;appearance:none;-webkit-print-color-adjust:exact;color-adjust:exact}.form-check-input[type=checkbox]{border-radius:.25em}.form-check-input[type=radio]{border-radius:50%}.form-check-input:active{filter:brightness(90%)}.form-check-input:focus{border-color:#86b7fe;outline:0;box-shadow:0 0 0 .25rem rgba(13,110,253,.25)}.form-check-input:checked{background-color:#0d6efd;border-color:#0d6efd}.form-check-input:checked[type=checkbox]{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_1___ + ")}.form-check-input:checked[type=radio]{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_2___ + ")}.form-check-input[type=checkbox]:indeterminate{background-color:#0d6efd;border-color:#0d6efd;background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_3___ + ")}.form-check-input:disabled{pointer-events:none;filter:none;opacity:.5}.form-check-input:disabled~.form-check-label,.form-check-input[disabled]~.form-check-label{opacity:.5}.form-switch{padding-left:2.5em}.form-switch .form-check-input{width:2em;margin-left:-2.5em;background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_4___ + ");background-position:left center;border-radius:2em;transition:background-position .15s ease-in-out}@media (prefers-reduced-motion:reduce){.form-switch .form-check-input{transition:none}}.form-switch .form-check-input:focus{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_5___ + ")}.form-switch .form-check-input:checked{background-position:right center;background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_6___ + ")}.form-check-inline{display:inline-block;margin-right:1rem}.btn-check{position:absolute;clip:rect(0,0,0,0);pointer-events:none}.btn-check:disabled+.btn,.btn-check[disabled]+.btn{pointer-events:none;filter:none;opacity:.65}.form-range{width:100%;height:1.5rem;padding:0;background-color:transparent;-webkit-appearance:none;-moz-appearance:none;appearance:none}.form-range:focus{outline:0}.form-range:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 .25rem rgba(13,110,253,.25)}.form-range:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 .25rem rgba(13,110,253,.25)}.form-range::-moz-focus-outer{border:0}.form-range::-webkit-slider-thumb{width:1rem;height:1rem;margin-top:-.25rem;background-color:#0d6efd;border:0;border-radius:1rem;-webkit-transition:background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;transition:background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;-webkit-appearance:none;appearance:none}@media (prefers-reduced-motion:reduce){.form-range::-webkit-slider-thumb{-webkit-transition:none;transition:none}}.form-range::-webkit-slider-thumb:active{background-color:#b6d4fe}.form-range::-webkit-slider-runnable-track{width:100%;height:.5rem;color:transparent;cursor:pointer;background-color:#dee2e6;border-color:transparent;border-radius:1rem}.form-range::-moz-range-thumb{width:1rem;height:1rem;background-color:#0d6efd;border:0;border-radius:1rem;-moz-transition:background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;transition:background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;-moz-appearance:none;appearance:none}@media (prefers-reduced-motion:reduce){.form-range::-moz-range-thumb{-moz-transition:none;transition:none}}.form-range::-moz-range-thumb:active{background-color:#b6d4fe}.form-range::-moz-range-track{width:100%;height:.5rem;color:transparent;cursor:pointer;background-color:#dee2e6;border-color:transparent;border-radius:1rem}.form-range:disabled{pointer-events:none}.form-range:disabled::-webkit-slider-thumb{background-color:#adb5bd}.form-range:disabled::-moz-range-thumb{background-color:#adb5bd}.form-floating{position:relative}.form-floating>.form-control,.form-floating>.form-select{height:calc(3.5rem + 2px);line-height:1.25}.form-floating>label{position:absolute;top:0;left:0;height:100%;padding:1rem .75rem;pointer-events:none;border:1px solid transparent;transform-origin:0 0;transition:opacity .1s ease-in-out,transform .1s ease-in-out}@media (prefers-reduced-motion:reduce){.form-floating>label{transition:none}}.form-floating>.form-control{padding:1rem .75rem}.form-floating>.form-control::-moz-placeholder{color:transparent}.form-floating>.form-control::placeholder{color:transparent}.form-floating>.form-control:not(:-moz-placeholder-shown){padding-top:1.625rem;padding-bottom:.625rem}.form-floating>.form-control:focus,.form-floating>.form-control:not(:placeholder-shown){padding-top:1.625rem;padding-bottom:.625rem}.form-floating>.form-control:-webkit-autofill{padding-top:1.625rem;padding-bottom:.625rem}.form-floating>.form-select{padding-top:1.625rem;padding-bottom:.625rem}.form-floating>.form-control:not(:-moz-placeholder-shown)~label{opacity:.65;transform:scale(.85) translateY(-.5rem) translateX(.15rem)}.form-floating>.form-control:focus~label,.form-floating>.form-control:not(:placeholder-shown)~label,.form-floating>.form-select~label{opacity:.65;transform:scale(.85) translateY(-.5rem) translateX(.15rem)}.form-floating>.form-control:-webkit-autofill~label{opacity:.65;transform:scale(.85) translateY(-.5rem) translateX(.15rem)}.input-group{position:relative;display:flex;flex-wrap:wrap;align-items:stretch;width:100%}.input-group>.form-control,.input-group>.form-select{position:relative;flex:1 1 auto;width:1%;min-width:0}.input-group>.form-control:focus,.input-group>.form-select:focus{z-index:3}.input-group .btn{position:relative;z-index:2}.input-group .btn:focus{z-index:3}.input-group-text{display:flex;align-items:center;padding:.375rem .75rem;font-size:1rem;font-weight:400;line-height:1.5;color:#212529;text-align:center;white-space:nowrap;background-color:#e9ecef;border:1px solid #ced4da;border-radius:.25rem}.input-group-lg>.btn,.input-group-lg>.form-control,.input-group-lg>.form-select,.input-group-lg>.input-group-text{padding:.5rem 1rem;font-size:1.25rem;border-radius:.3rem}.input-group-sm>.btn,.input-group-sm>.form-control,.input-group-sm>.form-select,.input-group-sm>.input-group-text{padding:.25rem .5rem;font-size:.875rem;border-radius:.2rem}.input-group-lg>.form-select,.input-group-sm>.form-select{padding-right:3rem}.input-group:not(.has-validation)>.dropdown-toggle:nth-last-child(n+3),.input-group:not(.has-validation)>:not(:last-child):not(.dropdown-toggle):not(.dropdown-menu){border-top-right-radius:0;border-bottom-right-radius:0}.input-group.has-validation>.dropdown-toggle:nth-last-child(n+4),.input-group.has-validation>:nth-last-child(n+3):not(.dropdown-toggle):not(.dropdown-menu){border-top-right-radius:0;border-bottom-right-radius:0}.input-group>:not(:first-child):not(.dropdown-menu):not(.valid-tooltip):not(.valid-feedback):not(.invalid-tooltip):not(.invalid-feedback){margin-left:-1px;border-top-left-radius:0;border-bottom-left-radius:0}.valid-feedback{display:none;width:100%;margin-top:.25rem;font-size:.875em;color:#198754}.valid-tooltip{position:absolute;top:100%;z-index:5;display:none;max-width:100%;padding:.25rem .5rem;margin-top:.1rem;font-size:.875rem;color:#fff;background-color:rgba(25,135,84,.9);border-radius:.25rem}.is-valid~.valid-feedback,.is-valid~.valid-tooltip,.was-validated :valid~.valid-feedback,.was-validated :valid~.valid-tooltip{display:block}.form-control.is-valid,.was-validated .form-control:valid{border-color:#198754;padding-right:calc(1.5em + .75rem);background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_7___ + ");background-repeat:no-repeat;background-position:right calc(.375em + .1875rem) center;background-size:calc(.75em + .375rem) calc(.75em + .375rem)}.form-control.is-valid:focus,.was-validated .form-control:valid:focus{border-color:#198754;box-shadow:0 0 0 .25rem rgba(25,135,84,.25)}.was-validated textarea.form-control:valid,textarea.form-control.is-valid{padding-right:calc(1.5em + .75rem);background-position:top calc(.375em + .1875rem) right calc(.375em + .1875rem)}.form-select.is-valid,.was-validated .form-select:valid{border-color:#198754}.form-select.is-valid:not([multiple]):not([size]),.form-select.is-valid:not([multiple])[size=\\"1\\"],.was-validated .form-select:valid:not([multiple]):not([size]),.was-validated .form-select:valid:not([multiple])[size=\\"1\\"]{padding-right:4.125rem;background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_0___ + "),url(" + ___CSS_LOADER_URL_REPLACEMENT_7___ + ");background-position:right .75rem center,center right 2.25rem;background-size:16px 12px,calc(.75em + .375rem) calc(.75em + .375rem)}.form-select.is-valid:focus,.was-validated .form-select:valid:focus{border-color:#198754;box-shadow:0 0 0 .25rem rgba(25,135,84,.25)}.form-check-input.is-valid,.was-validated .form-check-input:valid{border-color:#198754}.form-check-input.is-valid:checked,.was-validated .form-check-input:valid:checked{background-color:#198754}.form-check-input.is-valid:focus,.was-validated .form-check-input:valid:focus{box-shadow:0 0 0 .25rem rgba(25,135,84,.25)}.form-check-input.is-valid~.form-check-label,.was-validated .form-check-input:valid~.form-check-label{color:#198754}.form-check-inline .form-check-input~.valid-feedback{margin-left:.5em}.input-group .form-control.is-valid,.input-group .form-select.is-valid,.was-validated .input-group .form-control:valid,.was-validated .input-group .form-select:valid{z-index:1}.input-group .form-control.is-valid:focus,.input-group .form-select.is-valid:focus,.was-validated .input-group .form-control:valid:focus,.was-validated .input-group .form-select:valid:focus{z-index:3}.invalid-feedback{display:none;width:100%;margin-top:.25rem;font-size:.875em;color:#dc3545}.invalid-tooltip{position:absolute;top:100%;z-index:5;display:none;max-width:100%;padding:.25rem .5rem;margin-top:.1rem;font-size:.875rem;color:#fff;background-color:rgba(220,53,69,.9);border-radius:.25rem}.is-invalid~.invalid-feedback,.is-invalid~.invalid-tooltip,.was-validated :invalid~.invalid-feedback,.was-validated :invalid~.invalid-tooltip{display:block}.form-control.is-invalid,.was-validated .form-control:invalid{border-color:#dc3545;padding-right:calc(1.5em + .75rem);background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_8___ + ");background-repeat:no-repeat;background-position:right calc(.375em + .1875rem) center;background-size:calc(.75em + .375rem) calc(.75em + .375rem)}.form-control.is-invalid:focus,.was-validated .form-control:invalid:focus{border-color:#dc3545;box-shadow:0 0 0 .25rem rgba(220,53,69,.25)}.was-validated textarea.form-control:invalid,textarea.form-control.is-invalid{padding-right:calc(1.5em + .75rem);background-position:top calc(.375em + .1875rem) right calc(.375em + .1875rem)}.form-select.is-invalid,.was-validated .form-select:invalid{border-color:#dc3545}.form-select.is-invalid:not([multiple]):not([size]),.form-select.is-invalid:not([multiple])[size=\\"1\\"],.was-validated .form-select:invalid:not([multiple]):not([size]),.was-validated .form-select:invalid:not([multiple])[size=\\"1\\"]{padding-right:4.125rem;background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_0___ + "),url(" + ___CSS_LOADER_URL_REPLACEMENT_8___ + ");background-position:right .75rem center,center right 2.25rem;background-size:16px 12px,calc(.75em + .375rem) calc(.75em + .375rem)}.form-select.is-invalid:focus,.was-validated .form-select:invalid:focus{border-color:#dc3545;box-shadow:0 0 0 .25rem rgba(220,53,69,.25)}.form-check-input.is-invalid,.was-validated .form-check-input:invalid{border-color:#dc3545}.form-check-input.is-invalid:checked,.was-validated .form-check-input:invalid:checked{background-color:#dc3545}.form-check-input.is-invalid:focus,.was-validated .form-check-input:invalid:focus{box-shadow:0 0 0 .25rem rgba(220,53,69,.25)}.form-check-input.is-invalid~.form-check-label,.was-validated .form-check-input:invalid~.form-check-label{color:#dc3545}.form-check-inline .form-check-input~.invalid-feedback{margin-left:.5em}.input-group .form-control.is-invalid,.input-group .form-select.is-invalid,.was-validated .input-group .form-control:invalid,.was-validated .input-group .form-select:invalid{z-index:2}.input-group .form-control.is-invalid:focus,.input-group .form-select.is-invalid:focus,.was-validated .input-group .form-control:invalid:focus,.was-validated .input-group .form-select:invalid:focus{z-index:3}.btn{display:inline-block;font-weight:400;line-height:1.5;color:#212529;text-align:center;text-decoration:none;vertical-align:middle;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;user-select:none;background-color:transparent;border:1px solid transparent;padding:.375rem .75rem;font-size:1rem;border-radius:.25rem;transition:color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out}@media (prefers-reduced-motion:reduce){.btn{transition:none}}.btn:hover{color:#212529}.btn-check:focus+.btn,.btn:focus{outline:0;box-shadow:0 0 0 .25rem rgba(13,110,253,.25)}.btn.disabled,.btn:disabled,fieldset:disabled .btn{pointer-events:none;opacity:.65}.btn-primary{color:#fff;background-color:#0d6efd;border-color:#0d6efd}.btn-primary:hover{color:#fff;background-color:#0b5ed7;border-color:#0a58ca}.btn-check:focus+.btn-primary,.btn-primary:focus{color:#fff;background-color:#0b5ed7;border-color:#0a58ca;box-shadow:0 0 0 .25rem rgba(49,132,253,.5)}.btn-check:active+.btn-primary,.btn-check:checked+.btn-primary,.btn-primary.active,.btn-primary:active,.show>.btn-primary.dropdown-toggle{color:#fff;background-color:#0a58ca;border-color:#0a53be}.btn-check:active+.btn-primary:focus,.btn-check:checked+.btn-primary:focus,.btn-primary.active:focus,.btn-primary:active:focus,.show>.btn-primary.dropdown-toggle:focus{box-shadow:0 0 0 .25rem rgba(49,132,253,.5)}.btn-primary.disabled,.btn-primary:disabled{color:#fff;background-color:#0d6efd;border-color:#0d6efd}.btn-secondary{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-secondary:hover{color:#fff;background-color:#5c636a;border-color:#565e64}.btn-check:focus+.btn-secondary,.btn-secondary:focus{color:#fff;background-color:#5c636a;border-color:#565e64;box-shadow:0 0 0 .25rem rgba(130,138,145,.5)}.btn-check:active+.btn-secondary,.btn-check:checked+.btn-secondary,.btn-secondary.active,.btn-secondary:active,.show>.btn-secondary.dropdown-toggle{color:#fff;background-color:#565e64;border-color:#51585e}.btn-check:active+.btn-secondary:focus,.btn-check:checked+.btn-secondary:focus,.btn-secondary.active:focus,.btn-secondary:active:focus,.show>.btn-secondary.dropdown-toggle:focus{box-shadow:0 0 0 .25rem rgba(130,138,145,.5)}.btn-secondary.disabled,.btn-secondary:disabled{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-success{color:#fff;background-color:#198754;border-color:#198754}.btn-success:hover{color:#fff;background-color:#157347;border-color:#146c43}.btn-check:focus+.btn-success,.btn-success:focus{color:#fff;background-color:#157347;border-color:#146c43;box-shadow:0 0 0 .25rem rgba(60,153,110,.5)}.btn-check:active+.btn-success,.btn-check:checked+.btn-success,.btn-success.active,.btn-success:active,.show>.btn-success.dropdown-toggle{color:#fff;background-color:#146c43;border-color:#13653f}.btn-check:active+.btn-success:focus,.btn-check:checked+.btn-success:focus,.btn-success.active:focus,.btn-success:active:focus,.show>.btn-success.dropdown-toggle:focus{box-shadow:0 0 0 .25rem rgba(60,153,110,.5)}.btn-success.disabled,.btn-success:disabled{color:#fff;background-color:#198754;border-color:#198754}.btn-info{color:#000;background-color:#0dcaf0;border-color:#0dcaf0}.btn-info:hover{color:#000;background-color:#31d2f2;border-color:#25cff2}.btn-check:focus+.btn-info,.btn-info:focus{color:#000;background-color:#31d2f2;border-color:#25cff2;box-shadow:0 0 0 .25rem rgba(11,172,204,.5)}.btn-check:active+.btn-info,.btn-check:checked+.btn-info,.btn-info.active,.btn-info:active,.show>.btn-info.dropdown-toggle{color:#000;background-color:#3dd5f3;border-color:#25cff2}.btn-check:active+.btn-info:focus,.btn-check:checked+.btn-info:focus,.btn-info.active:focus,.btn-info:active:focus,.show>.btn-info.dropdown-toggle:focus{box-shadow:0 0 0 .25rem rgba(11,172,204,.5)}.btn-info.disabled,.btn-info:disabled{color:#000;background-color:#0dcaf0;border-color:#0dcaf0}.btn-warning{color:#000;background-color:#ffc107;border-color:#ffc107}.btn-warning:hover{color:#000;background-color:#ffca2c;border-color:#ffc720}.btn-check:focus+.btn-warning,.btn-warning:focus{color:#000;background-color:#ffca2c;border-color:#ffc720;box-shadow:0 0 0 .25rem rgba(217,164,6,.5)}.btn-check:active+.btn-warning,.btn-check:checked+.btn-warning,.btn-warning.active,.btn-warning:active,.show>.btn-warning.dropdown-toggle{color:#000;background-color:#ffcd39;border-color:#ffc720}.btn-check:active+.btn-warning:focus,.btn-check:checked+.btn-warning:focus,.btn-warning.active:focus,.btn-warning:active:focus,.show>.btn-warning.dropdown-toggle:focus{box-shadow:0 0 0 .25rem rgba(217,164,6,.5)}.btn-warning.disabled,.btn-warning:disabled{color:#000;background-color:#ffc107;border-color:#ffc107}.btn-danger{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-danger:hover{color:#fff;background-color:#bb2d3b;border-color:#b02a37}.btn-check:focus+.btn-danger,.btn-danger:focus{color:#fff;background-color:#bb2d3b;border-color:#b02a37;box-shadow:0 0 0 .25rem rgba(225,83,97,.5)}.btn-check:active+.btn-danger,.btn-check:checked+.btn-danger,.btn-danger.active,.btn-danger:active,.show>.btn-danger.dropdown-toggle{color:#fff;background-color:#b02a37;border-color:#a52834}.btn-check:active+.btn-danger:focus,.btn-check:checked+.btn-danger:focus,.btn-danger.active:focus,.btn-danger:active:focus,.show>.btn-danger.dropdown-toggle:focus{box-shadow:0 0 0 .25rem rgba(225,83,97,.5)}.btn-danger.disabled,.btn-danger:disabled{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-light{color:#000;background-color:#f8f9fa;border-color:#f8f9fa}.btn-light:hover{color:#000;background-color:#f9fafb;border-color:#f9fafb}.btn-check:focus+.btn-light,.btn-light:focus{color:#000;background-color:#f9fafb;border-color:#f9fafb;box-shadow:0 0 0 .25rem rgba(211,212,213,.5)}.btn-check:active+.btn-light,.btn-check:checked+.btn-light,.btn-light.active,.btn-light:active,.show>.btn-light.dropdown-toggle{color:#000;background-color:#f9fafb;border-color:#f9fafb}.btn-check:active+.btn-light:focus,.btn-check:checked+.btn-light:focus,.btn-light.active:focus,.btn-light:active:focus,.show>.btn-light.dropdown-toggle:focus{box-shadow:0 0 0 .25rem rgba(211,212,213,.5)}.btn-light.disabled,.btn-light:disabled{color:#000;background-color:#f8f9fa;border-color:#f8f9fa}.btn-dark{color:#fff;background-color:#212529;border-color:#212529}.btn-dark:hover{color:#fff;background-color:#1c1f23;border-color:#1a1e21}.btn-check:focus+.btn-dark,.btn-dark:focus{color:#fff;background-color:#1c1f23;border-color:#1a1e21;box-shadow:0 0 0 .25rem rgba(66,70,73,.5)}.btn-check:active+.btn-dark,.btn-check:checked+.btn-dark,.btn-dark.active,.btn-dark:active,.show>.btn-dark.dropdown-toggle{color:#fff;background-color:#1a1e21;border-color:#191c1f}.btn-check:active+.btn-dark:focus,.btn-check:checked+.btn-dark:focus,.btn-dark.active:focus,.btn-dark:active:focus,.show>.btn-dark.dropdown-toggle:focus{box-shadow:0 0 0 .25rem rgba(66,70,73,.5)}.btn-dark.disabled,.btn-dark:disabled{color:#fff;background-color:#212529;border-color:#212529}.btn-outline-primary{color:#0d6efd;border-color:#0d6efd}.btn-outline-primary:hover{color:#fff;background-color:#0d6efd;border-color:#0d6efd}.btn-check:focus+.btn-outline-primary,.btn-outline-primary:focus{box-shadow:0 0 0 .25rem rgba(13,110,253,.5)}.btn-check:active+.btn-outline-primary,.btn-check:checked+.btn-outline-primary,.btn-outline-primary.active,.btn-outline-primary.dropdown-toggle.show,.btn-outline-primary:active{color:#fff;background-color:#0d6efd;border-color:#0d6efd}.btn-check:active+.btn-outline-primary:focus,.btn-check:checked+.btn-outline-primary:focus,.btn-outline-primary.active:focus,.btn-outline-primary.dropdown-toggle.show:focus,.btn-outline-primary:active:focus{box-shadow:0 0 0 .25rem rgba(13,110,253,.5)}.btn-outline-primary.disabled,.btn-outline-primary:disabled{color:#0d6efd;background-color:transparent}.btn-outline-secondary{color:#6c757d;border-color:#6c757d}.btn-outline-secondary:hover{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-check:focus+.btn-outline-secondary,.btn-outline-secondary:focus{box-shadow:0 0 0 .25rem rgba(108,117,125,.5)}.btn-check:active+.btn-outline-secondary,.btn-check:checked+.btn-outline-secondary,.btn-outline-secondary.active,.btn-outline-secondary.dropdown-toggle.show,.btn-outline-secondary:active{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-check:active+.btn-outline-secondary:focus,.btn-check:checked+.btn-outline-secondary:focus,.btn-outline-secondary.active:focus,.btn-outline-secondary.dropdown-toggle.show:focus,.btn-outline-secondary:active:focus{box-shadow:0 0 0 .25rem rgba(108,117,125,.5)}.btn-outline-secondary.disabled,.btn-outline-secondary:disabled{color:#6c757d;background-color:transparent}.btn-outline-success{color:#198754;border-color:#198754}.btn-outline-success:hover{color:#fff;background-color:#198754;border-color:#198754}.btn-check:focus+.btn-outline-success,.btn-outline-success:focus{box-shadow:0 0 0 .25rem rgba(25,135,84,.5)}.btn-check:active+.btn-outline-success,.btn-check:checked+.btn-outline-success,.btn-outline-success.active,.btn-outline-success.dropdown-toggle.show,.btn-outline-success:active{color:#fff;background-color:#198754;border-color:#198754}.btn-check:active+.btn-outline-success:focus,.btn-check:checked+.btn-outline-success:focus,.btn-outline-success.active:focus,.btn-outline-success.dropdown-toggle.show:focus,.btn-outline-success:active:focus{box-shadow:0 0 0 .25rem rgba(25,135,84,.5)}.btn-outline-success.disabled,.btn-outline-success:disabled{color:#198754;background-color:transparent}.btn-outline-info{color:#0dcaf0;border-color:#0dcaf0}.btn-outline-info:hover{color:#000;background-color:#0dcaf0;border-color:#0dcaf0}.btn-check:focus+.btn-outline-info,.btn-outline-info:focus{box-shadow:0 0 0 .25rem rgba(13,202,240,.5)}.btn-check:active+.btn-outline-info,.btn-check:checked+.btn-outline-info,.btn-outline-info.active,.btn-outline-info.dropdown-toggle.show,.btn-outline-info:active{color:#000;background-color:#0dcaf0;border-color:#0dcaf0}.btn-check:active+.btn-outline-info:focus,.btn-check:checked+.btn-outline-info:focus,.btn-outline-info.active:focus,.btn-outline-info.dropdown-toggle.show:focus,.btn-outline-info:active:focus{box-shadow:0 0 0 .25rem rgba(13,202,240,.5)}.btn-outline-info.disabled,.btn-outline-info:disabled{color:#0dcaf0;background-color:transparent}.btn-outline-warning{color:#ffc107;border-color:#ffc107}.btn-outline-warning:hover{color:#000;background-color:#ffc107;border-color:#ffc107}.btn-check:focus+.btn-outline-warning,.btn-outline-warning:focus{box-shadow:0 0 0 .25rem rgba(255,193,7,.5)}.btn-check:active+.btn-outline-warning,.btn-check:checked+.btn-outline-warning,.btn-outline-warning.active,.btn-outline-warning.dropdown-toggle.show,.btn-outline-warning:active{color:#000;background-color:#ffc107;border-color:#ffc107}.btn-check:active+.btn-outline-warning:focus,.btn-check:checked+.btn-outline-warning:focus,.btn-outline-warning.active:focus,.btn-outline-warning.dropdown-toggle.show:focus,.btn-outline-warning:active:focus{box-shadow:0 0 0 .25rem rgba(255,193,7,.5)}.btn-outline-warning.disabled,.btn-outline-warning:disabled{color:#ffc107;background-color:transparent}.btn-outline-danger{color:#dc3545;border-color:#dc3545}.btn-outline-danger:hover{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-check:focus+.btn-outline-danger,.btn-outline-danger:focus{box-shadow:0 0 0 .25rem rgba(220,53,69,.5)}.btn-check:active+.btn-outline-danger,.btn-check:checked+.btn-outline-danger,.btn-outline-danger.active,.btn-outline-danger.dropdown-toggle.show,.btn-outline-danger:active{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-check:active+.btn-outline-danger:focus,.btn-check:checked+.btn-outline-danger:focus,.btn-outline-danger.active:focus,.btn-outline-danger.dropdown-toggle.show:focus,.btn-outline-danger:active:focus{box-shadow:0 0 0 .25rem rgba(220,53,69,.5)}.btn-outline-danger.disabled,.btn-outline-danger:disabled{color:#dc3545;background-color:transparent}.btn-outline-light{color:#f8f9fa;border-color:#f8f9fa}.btn-outline-light:hover{color:#000;background-color:#f8f9fa;border-color:#f8f9fa}.btn-check:focus+.btn-outline-light,.btn-outline-light:focus{box-shadow:0 0 0 .25rem rgba(248,249,250,.5)}.btn-check:active+.btn-outline-light,.btn-check:checked+.btn-outline-light,.btn-outline-light.active,.btn-outline-light.dropdown-toggle.show,.btn-outline-light:active{color:#000;background-color:#f8f9fa;border-color:#f8f9fa}.btn-check:active+.btn-outline-light:focus,.btn-check:checked+.btn-outline-light:focus,.btn-outline-light.active:focus,.btn-outline-light.dropdown-toggle.show:focus,.btn-outline-light:active:focus{box-shadow:0 0 0 .25rem rgba(248,249,250,.5)}.btn-outline-light.disabled,.btn-outline-light:disabled{color:#f8f9fa;background-color:transparent}.btn-outline-dark{color:#212529;border-color:#212529}.btn-outline-dark:hover{color:#fff;background-color:#212529;border-color:#212529}.btn-check:focus+.btn-outline-dark,.btn-outline-dark:focus{box-shadow:0 0 0 .25rem rgba(33,37,41,.5)}.btn-check:active+.btn-outline-dark,.btn-check:checked+.btn-outline-dark,.btn-outline-dark.active,.btn-outline-dark.dropdown-toggle.show,.btn-outline-dark:active{color:#fff;background-color:#212529;border-color:#212529}.btn-check:active+.btn-outline-dark:focus,.btn-check:checked+.btn-outline-dark:focus,.btn-outline-dark.active:focus,.btn-outline-dark.dropdown-toggle.show:focus,.btn-outline-dark:active:focus{box-shadow:0 0 0 .25rem rgba(33,37,41,.5)}.btn-outline-dark.disabled,.btn-outline-dark:disabled{color:#212529;background-color:transparent}.btn-link{font-weight:400;color:#0d6efd;text-decoration:underline}.btn-link:hover{color:#0a58ca}.btn-link.disabled,.btn-link:disabled{color:#6c757d}.btn-group-lg>.btn,.btn-lg{padding:.5rem 1rem;font-size:1.25rem;border-radius:.3rem}.btn-group-sm>.btn,.btn-sm{padding:.25rem .5rem;font-size:.875rem;border-radius:.2rem}.fade{transition:opacity .15s linear}@media (prefers-reduced-motion:reduce){.fade{transition:none}}.fade:not(.show){opacity:0}.collapse:not(.show){display:none}.collapsing{height:0;overflow:hidden;transition:height .35s ease}@media (prefers-reduced-motion:reduce){.collapsing{transition:none}}.collapsing.collapse-horizontal{width:0;height:auto;transition:width .35s ease}@media (prefers-reduced-motion:reduce){.collapsing.collapse-horizontal{transition:none}}.dropdown,.dropend,.dropstart,.dropup{position:relative}.dropdown-toggle{white-space:nowrap}.dropdown-toggle::after{display:inline-block;margin-left:.255em;vertical-align:.255em;content:\\"\\";border-top:.3em solid;border-right:.3em solid transparent;border-bottom:0;border-left:.3em solid transparent}.dropdown-toggle:empty::after{margin-left:0}.dropdown-menu{position:absolute;z-index:1000;display:none;min-width:10rem;padding:.5rem 0;margin:0;font-size:1rem;color:#212529;text-align:left;list-style:none;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,.15);border-radius:.25rem}.dropdown-menu[data-bs-popper]{top:100%;left:0;margin-top:.125rem}.dropdown-menu-start{--bs-position:start}.dropdown-menu-start[data-bs-popper]{right:auto;left:0}.dropdown-menu-end{--bs-position:end}.dropdown-menu-end[data-bs-popper]{right:0;left:auto}@media (min-width:576px){.dropdown-menu-sm-start{--bs-position:start}.dropdown-menu-sm-start[data-bs-popper]{right:auto;left:0}.dropdown-menu-sm-end{--bs-position:end}.dropdown-menu-sm-end[data-bs-popper]{right:0;left:auto}}@media (min-width:768px){.dropdown-menu-md-start{--bs-position:start}.dropdown-menu-md-start[data-bs-popper]{right:auto;left:0}.dropdown-menu-md-end{--bs-position:end}.dropdown-menu-md-end[data-bs-popper]{right:0;left:auto}}@media (min-width:992px){.dropdown-menu-lg-start{--bs-position:start}.dropdown-menu-lg-start[data-bs-popper]{right:auto;left:0}.dropdown-menu-lg-end{--bs-position:end}.dropdown-menu-lg-end[data-bs-popper]{right:0;left:auto}}@media (min-width:1200px){.dropdown-menu-xl-start{--bs-position:start}.dropdown-menu-xl-start[data-bs-popper]{right:auto;left:0}.dropdown-menu-xl-end{--bs-position:end}.dropdown-menu-xl-end[data-bs-popper]{right:0;left:auto}}@media (min-width:1400px){.dropdown-menu-xxl-start{--bs-position:start}.dropdown-menu-xxl-start[data-bs-popper]{right:auto;left:0}.dropdown-menu-xxl-end{--bs-position:end}.dropdown-menu-xxl-end[data-bs-popper]{right:0;left:auto}}.dropup .dropdown-menu[data-bs-popper]{top:auto;bottom:100%;margin-top:0;margin-bottom:.125rem}.dropup .dropdown-toggle::after{display:inline-block;margin-left:.255em;vertical-align:.255em;content:\\"\\";border-top:0;border-right:.3em solid transparent;border-bottom:.3em solid;border-left:.3em solid transparent}.dropup .dropdown-toggle:empty::after{margin-left:0}.dropend .dropdown-menu[data-bs-popper]{top:0;right:auto;left:100%;margin-top:0;margin-left:.125rem}.dropend .dropdown-toggle::after{display:inline-block;margin-left:.255em;vertical-align:.255em;content:\\"\\";border-top:.3em solid transparent;border-right:0;border-bottom:.3em solid transparent;border-left:.3em solid}.dropend .dropdown-toggle:empty::after{margin-left:0}.dropend .dropdown-toggle::after{vertical-align:0}.dropstart .dropdown-menu[data-bs-popper]{top:0;right:100%;left:auto;margin-top:0;margin-right:.125rem}.dropstart .dropdown-toggle::after{display:inline-block;margin-left:.255em;vertical-align:.255em;content:\\"\\"}.dropstart .dropdown-toggle::after{display:none}.dropstart .dropdown-toggle::before{display:inline-block;margin-right:.255em;vertical-align:.255em;content:\\"\\";border-top:.3em solid transparent;border-right:.3em solid;border-bottom:.3em solid transparent}.dropstart .dropdown-toggle:empty::after{margin-left:0}.dropstart .dropdown-toggle::before{vertical-align:0}.dropdown-divider{height:0;margin:.5rem 0;overflow:hidden;border-top:1px solid rgba(0,0,0,.15)}.dropdown-item{display:block;width:100%;padding:.25rem 1rem;clear:both;font-weight:400;color:#212529;text-align:inherit;text-decoration:none;white-space:nowrap;background-color:transparent;border:0}.dropdown-item:focus,.dropdown-item:hover{color:#1e2125;background-color:#e9ecef}.dropdown-item.active,.dropdown-item:active{color:#fff;text-decoration:none;background-color:#0d6efd}.dropdown-item.disabled,.dropdown-item:disabled{color:#adb5bd;pointer-events:none;background-color:transparent}.dropdown-menu.show{display:block}.dropdown-header{display:block;padding:.5rem 1rem;margin-bottom:0;font-size:.875rem;color:#6c757d;white-space:nowrap}.dropdown-item-text{display:block;padding:.25rem 1rem;color:#212529}.dropdown-menu-dark{color:#dee2e6;background-color:#343a40;border-color:rgba(0,0,0,.15)}.dropdown-menu-dark .dropdown-item{color:#dee2e6}.dropdown-menu-dark .dropdown-item:focus,.dropdown-menu-dark .dropdown-item:hover{color:#fff;background-color:rgba(255,255,255,.15)}.dropdown-menu-dark .dropdown-item.active,.dropdown-menu-dark .dropdown-item:active{color:#fff;background-color:#0d6efd}.dropdown-menu-dark .dropdown-item.disabled,.dropdown-menu-dark .dropdown-item:disabled{color:#adb5bd}.dropdown-menu-dark .dropdown-divider{border-color:rgba(0,0,0,.15)}.dropdown-menu-dark .dropdown-item-text{color:#dee2e6}.dropdown-menu-dark .dropdown-header{color:#adb5bd}.btn-group,.btn-group-vertical{position:relative;display:inline-flex;vertical-align:middle}.btn-group-vertical>.btn,.btn-group>.btn{position:relative;flex:1 1 auto}.btn-group-vertical>.btn-check:checked+.btn,.btn-group-vertical>.btn-check:focus+.btn,.btn-group-vertical>.btn.active,.btn-group-vertical>.btn:active,.btn-group-vertical>.btn:focus,.btn-group-vertical>.btn:hover,.btn-group>.btn-check:checked+.btn,.btn-group>.btn-check:focus+.btn,.btn-group>.btn.active,.btn-group>.btn:active,.btn-group>.btn:focus,.btn-group>.btn:hover{z-index:1}.btn-toolbar{display:flex;flex-wrap:wrap;justify-content:flex-start}.btn-toolbar .input-group{width:auto}.btn-group>.btn-group:not(:first-child),.btn-group>.btn:not(:first-child){margin-left:-1px}.btn-group>.btn-group:not(:last-child)>.btn,.btn-group>.btn:not(:last-child):not(.dropdown-toggle){border-top-right-radius:0;border-bottom-right-radius:0}.btn-group>.btn-group:not(:first-child)>.btn,.btn-group>.btn:nth-child(n+3),.btn-group>:not(.btn-check)+.btn{border-top-left-radius:0;border-bottom-left-radius:0}.dropdown-toggle-split{padding-right:.5625rem;padding-left:.5625rem}.dropdown-toggle-split::after,.dropend .dropdown-toggle-split::after,.dropup .dropdown-toggle-split::after{margin-left:0}.dropstart .dropdown-toggle-split::before{margin-right:0}.btn-group-sm>.btn+.dropdown-toggle-split,.btn-sm+.dropdown-toggle-split{padding-right:.375rem;padding-left:.375rem}.btn-group-lg>.btn+.dropdown-toggle-split,.btn-lg+.dropdown-toggle-split{padding-right:.75rem;padding-left:.75rem}.btn-group-vertical{flex-direction:column;align-items:flex-start;justify-content:center}.btn-group-vertical>.btn,.btn-group-vertical>.btn-group{width:100%}.btn-group-vertical>.btn-group:not(:first-child),.btn-group-vertical>.btn:not(:first-child){margin-top:-1px}.btn-group-vertical>.btn-group:not(:last-child)>.btn,.btn-group-vertical>.btn:not(:last-child):not(.dropdown-toggle){border-bottom-right-radius:0;border-bottom-left-radius:0}.btn-group-vertical>.btn-group:not(:first-child)>.btn,.btn-group-vertical>.btn~.btn{border-top-left-radius:0;border-top-right-radius:0}.nav{display:flex;flex-wrap:wrap;padding-left:0;margin-bottom:0;list-style:none}.nav-link{display:block;padding:.5rem 1rem;color:#0d6efd;text-decoration:none;transition:color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out}@media (prefers-reduced-motion:reduce){.nav-link{transition:none}}.nav-link:focus,.nav-link:hover{color:#0a58ca}.nav-link.disabled{color:#6c757d;pointer-events:none;cursor:default}.nav-tabs{border-bottom:1px solid #dee2e6}.nav-tabs .nav-link{margin-bottom:-1px;background:0 0;border:1px solid transparent;border-top-left-radius:.25rem;border-top-right-radius:.25rem}.nav-tabs .nav-link:focus,.nav-tabs .nav-link:hover{border-color:#e9ecef #e9ecef #dee2e6;isolation:isolate}.nav-tabs .nav-link.disabled{color:#6c757d;background-color:transparent;border-color:transparent}.nav-tabs .nav-item.show .nav-link,.nav-tabs .nav-link.active{color:#495057;background-color:#fff;border-color:#dee2e6 #dee2e6 #fff}.nav-tabs .dropdown-menu{margin-top:-1px;border-top-left-radius:0;border-top-right-radius:0}.nav-pills .nav-link{background:0 0;border:0;border-radius:.25rem}.nav-pills .nav-link.active,.nav-pills .show>.nav-link{color:#fff;background-color:#0d6efd}.nav-fill .nav-item,.nav-fill>.nav-link{flex:1 1 auto;text-align:center}.nav-justified .nav-item,.nav-justified>.nav-link{flex-basis:0;flex-grow:1;text-align:center}.nav-fill .nav-item .nav-link,.nav-justified .nav-item .nav-link{width:100%}.tab-content>.tab-pane{display:none}.tab-content>.active{display:block}.navbar{position:relative;display:flex;flex-wrap:wrap;align-items:center;justify-content:space-between;padding-top:.5rem;padding-bottom:.5rem}.navbar>.container,.navbar>.container-fluid,.navbar>.container-lg,.navbar>.container-md,.navbar>.container-sm,.navbar>.container-xl,.navbar>.container-xxl{display:flex;flex-wrap:inherit;align-items:center;justify-content:space-between}.navbar-brand{padding-top:.3125rem;padding-bottom:.3125rem;margin-right:1rem;font-size:1.25rem;text-decoration:none;white-space:nowrap}.navbar-nav{display:flex;flex-direction:column;padding-left:0;margin-bottom:0;list-style:none}.navbar-nav .nav-link{padding-right:0;padding-left:0}.navbar-nav .dropdown-menu{position:static}.navbar-text{padding-top:.5rem;padding-bottom:.5rem}.navbar-collapse{flex-basis:100%;flex-grow:1;align-items:center}.navbar-toggler{padding:.25rem .75rem;font-size:1.25rem;line-height:1;background-color:transparent;border:1px solid transparent;border-radius:.25rem;transition:box-shadow .15s ease-in-out}@media (prefers-reduced-motion:reduce){.navbar-toggler{transition:none}}.navbar-toggler:hover{text-decoration:none}.navbar-toggler:focus{text-decoration:none;outline:0;box-shadow:0 0 0 .25rem}.navbar-toggler-icon{display:inline-block;width:1.5em;height:1.5em;vertical-align:middle;background-repeat:no-repeat;background-position:center;background-size:100%}.navbar-nav-scroll{max-height:var(--bs-scroll-height,75vh);overflow-y:auto}@media (min-width:576px){.navbar-expand-sm{flex-wrap:nowrap;justify-content:flex-start}.navbar-expand-sm .navbar-nav{flex-direction:row}.navbar-expand-sm .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-sm .navbar-nav .nav-link{padding-right:.5rem;padding-left:.5rem}.navbar-expand-sm .navbar-nav-scroll{overflow:visible}.navbar-expand-sm .navbar-collapse{display:flex!important;flex-basis:auto}.navbar-expand-sm .navbar-toggler{display:none}.navbar-expand-sm .offcanvas-header{display:none}.navbar-expand-sm .offcanvas{position:inherit;bottom:0;z-index:1000;flex-grow:1;visibility:visible!important;background-color:transparent;border-right:0;border-left:0;transition:none;transform:none}.navbar-expand-sm .offcanvas-bottom,.navbar-expand-sm .offcanvas-top{height:auto;border-top:0;border-bottom:0}.navbar-expand-sm .offcanvas-body{display:flex;flex-grow:0;padding:0;overflow-y:visible}}@media (min-width:768px){.navbar-expand-md{flex-wrap:nowrap;justify-content:flex-start}.navbar-expand-md .navbar-nav{flex-direction:row}.navbar-expand-md .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-md .navbar-nav .nav-link{padding-right:.5rem;padding-left:.5rem}.navbar-expand-md .navbar-nav-scroll{overflow:visible}.navbar-expand-md .navbar-collapse{display:flex!important;flex-basis:auto}.navbar-expand-md .navbar-toggler{display:none}.navbar-expand-md .offcanvas-header{display:none}.navbar-expand-md .offcanvas{position:inherit;bottom:0;z-index:1000;flex-grow:1;visibility:visible!important;background-color:transparent;border-right:0;border-left:0;transition:none;transform:none}.navbar-expand-md .offcanvas-bottom,.navbar-expand-md .offcanvas-top{height:auto;border-top:0;border-bottom:0}.navbar-expand-md .offcanvas-body{display:flex;flex-grow:0;padding:0;overflow-y:visible}}@media (min-width:992px){.navbar-expand-lg{flex-wrap:nowrap;justify-content:flex-start}.navbar-expand-lg .navbar-nav{flex-direction:row}.navbar-expand-lg .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-lg .navbar-nav .nav-link{padding-right:.5rem;padding-left:.5rem}.navbar-expand-lg .navbar-nav-scroll{overflow:visible}.navbar-expand-lg .navbar-collapse{display:flex!important;flex-basis:auto}.navbar-expand-lg .navbar-toggler{display:none}.navbar-expand-lg .offcanvas-header{display:none}.navbar-expand-lg .offcanvas{position:inherit;bottom:0;z-index:1000;flex-grow:1;visibility:visible!important;background-color:transparent;border-right:0;border-left:0;transition:none;transform:none}.navbar-expand-lg .offcanvas-bottom,.navbar-expand-lg .offcanvas-top{height:auto;border-top:0;border-bottom:0}.navbar-expand-lg .offcanvas-body{display:flex;flex-grow:0;padding:0;overflow-y:visible}}@media (min-width:1200px){.navbar-expand-xl{flex-wrap:nowrap;justify-content:flex-start}.navbar-expand-xl .navbar-nav{flex-direction:row}.navbar-expand-xl .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-xl .navbar-nav .nav-link{padding-right:.5rem;padding-left:.5rem}.navbar-expand-xl .navbar-nav-scroll{overflow:visible}.navbar-expand-xl .navbar-collapse{display:flex!important;flex-basis:auto}.navbar-expand-xl .navbar-toggler{display:none}.navbar-expand-xl .offcanvas-header{display:none}.navbar-expand-xl .offcanvas{position:inherit;bottom:0;z-index:1000;flex-grow:1;visibility:visible!important;background-color:transparent;border-right:0;border-left:0;transition:none;transform:none}.navbar-expand-xl .offcanvas-bottom,.navbar-expand-xl .offcanvas-top{height:auto;border-top:0;border-bottom:0}.navbar-expand-xl .offcanvas-body{display:flex;flex-grow:0;padding:0;overflow-y:visible}}@media (min-width:1400px){.navbar-expand-xxl{flex-wrap:nowrap;justify-content:flex-start}.navbar-expand-xxl .navbar-nav{flex-direction:row}.navbar-expand-xxl .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-xxl .navbar-nav .nav-link{padding-right:.5rem;padding-left:.5rem}.navbar-expand-xxl .navbar-nav-scroll{overflow:visible}.navbar-expand-xxl .navbar-collapse{display:flex!important;flex-basis:auto}.navbar-expand-xxl .navbar-toggler{display:none}.navbar-expand-xxl .offcanvas-header{display:none}.navbar-expand-xxl .offcanvas{position:inherit;bottom:0;z-index:1000;flex-grow:1;visibility:visible!important;background-color:transparent;border-right:0;border-left:0;transition:none;transform:none}.navbar-expand-xxl .offcanvas-bottom,.navbar-expand-xxl .offcanvas-top{height:auto;border-top:0;border-bottom:0}.navbar-expand-xxl .offcanvas-body{display:flex;flex-grow:0;padding:0;overflow-y:visible}}.navbar-expand{flex-wrap:nowrap;justify-content:flex-start}.navbar-expand .navbar-nav{flex-direction:row}.navbar-expand .navbar-nav .dropdown-menu{position:absolute}.navbar-expand .navbar-nav .nav-link{padding-right:.5rem;padding-left:.5rem}.navbar-expand .navbar-nav-scroll{overflow:visible}.navbar-expand .navbar-collapse{display:flex!important;flex-basis:auto}.navbar-expand .navbar-toggler{display:none}.navbar-expand .offcanvas-header{display:none}.navbar-expand .offcanvas{position:inherit;bottom:0;z-index:1000;flex-grow:1;visibility:visible!important;background-color:transparent;border-right:0;border-left:0;transition:none;transform:none}.navbar-expand .offcanvas-bottom,.navbar-expand .offcanvas-top{height:auto;border-top:0;border-bottom:0}.navbar-expand .offcanvas-body{display:flex;flex-grow:0;padding:0;overflow-y:visible}.navbar-light .navbar-brand{color:rgba(0,0,0,.9)}.navbar-light .navbar-brand:focus,.navbar-light .navbar-brand:hover{color:rgba(0,0,0,.9)}.navbar-light .navbar-nav .nav-link{color:rgba(0,0,0,.55)}.navbar-light .navbar-nav .nav-link:focus,.navbar-light .navbar-nav .nav-link:hover{color:rgba(0,0,0,.7)}.navbar-light .navbar-nav .nav-link.disabled{color:rgba(0,0,0,.3)}.navbar-light .navbar-nav .nav-link.active,.navbar-light .navbar-nav .show>.nav-link{color:rgba(0,0,0,.9)}.navbar-light .navbar-toggler{color:rgba(0,0,0,.55);border-color:rgba(0,0,0,.1)}.navbar-light .navbar-toggler-icon{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_9___ + ")}.navbar-light .navbar-text{color:rgba(0,0,0,.55)}.navbar-light .navbar-text a,.navbar-light .navbar-text a:focus,.navbar-light .navbar-text a:hover{color:rgba(0,0,0,.9)}.navbar-dark .navbar-brand{color:#fff}.navbar-dark .navbar-brand:focus,.navbar-dark .navbar-brand:hover{color:#fff}.navbar-dark .navbar-nav .nav-link{color:rgba(255,255,255,.55)}.navbar-dark .navbar-nav .nav-link:focus,.navbar-dark .navbar-nav .nav-link:hover{color:rgba(255,255,255,.75)}.navbar-dark .navbar-nav .nav-link.disabled{color:rgba(255,255,255,.25)}.navbar-dark .navbar-nav .nav-link.active,.navbar-dark .navbar-nav .show>.nav-link{color:#fff}.navbar-dark .navbar-toggler{color:rgba(255,255,255,.55);border-color:rgba(255,255,255,.1)}.navbar-dark .navbar-toggler-icon{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_10___ + ")}.navbar-dark .navbar-text{color:rgba(255,255,255,.55)}.navbar-dark .navbar-text a,.navbar-dark .navbar-text a:focus,.navbar-dark .navbar-text a:hover{color:#fff}.card{position:relative;display:flex;flex-direction:column;min-width:0;word-wrap:break-word;background-color:#fff;background-clip:border-box;border:1px solid rgba(0,0,0,.125);border-radius:.25rem}.card>hr{margin-right:0;margin-left:0}.card>.list-group{border-top:inherit;border-bottom:inherit}.card>.list-group:first-child{border-top-width:0;border-top-left-radius:calc(.25rem - 1px);border-top-right-radius:calc(.25rem - 1px)}.card>.list-group:last-child{border-bottom-width:0;border-bottom-right-radius:calc(.25rem - 1px);border-bottom-left-radius:calc(.25rem - 1px)}.card>.card-header+.list-group,.card>.list-group+.card-footer{border-top:0}.card-body{flex:1 1 auto;padding:1rem 1rem}.card-title{margin-bottom:.5rem}.card-subtitle{margin-top:-.25rem;margin-bottom:0}.card-text:last-child{margin-bottom:0}.card-link+.card-link{margin-left:1rem}.card-header{padding:.5rem 1rem;margin-bottom:0;background-color:rgba(0,0,0,.03);border-bottom:1px solid rgba(0,0,0,.125)}.card-header:first-child{border-radius:calc(.25rem - 1px) calc(.25rem - 1px) 0 0}.card-footer{padding:.5rem 1rem;background-color:rgba(0,0,0,.03);border-top:1px solid rgba(0,0,0,.125)}.card-footer:last-child{border-radius:0 0 calc(.25rem - 1px) calc(.25rem - 1px)}.card-header-tabs{margin-right:-.5rem;margin-bottom:-.5rem;margin-left:-.5rem;border-bottom:0}.card-header-pills{margin-right:-.5rem;margin-left:-.5rem}.card-img-overlay{position:absolute;top:0;right:0;bottom:0;left:0;padding:1rem;border-radius:calc(.25rem - 1px)}.card-img,.card-img-bottom,.card-img-top{width:100%}.card-img,.card-img-top{border-top-left-radius:calc(.25rem - 1px);border-top-right-radius:calc(.25rem - 1px)}.card-img,.card-img-bottom{border-bottom-right-radius:calc(.25rem - 1px);border-bottom-left-radius:calc(.25rem - 1px)}.card-group>.card{margin-bottom:.75rem}@media (min-width:576px){.card-group{display:flex;flex-flow:row wrap}.card-group>.card{flex:1 0 0%;margin-bottom:0}.card-group>.card+.card{margin-left:0;border-left:0}.card-group>.card:not(:last-child){border-top-right-radius:0;border-bottom-right-radius:0}.card-group>.card:not(:last-child) .card-header,.card-group>.card:not(:last-child) .card-img-top{border-top-right-radius:0}.card-group>.card:not(:last-child) .card-footer,.card-group>.card:not(:last-child) .card-img-bottom{border-bottom-right-radius:0}.card-group>.card:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0}.card-group>.card:not(:first-child) .card-header,.card-group>.card:not(:first-child) .card-img-top{border-top-left-radius:0}.card-group>.card:not(:first-child) .card-footer,.card-group>.card:not(:first-child) .card-img-bottom{border-bottom-left-radius:0}}.accordion-button{position:relative;display:flex;align-items:center;width:100%;padding:1rem 1.25rem;font-size:1rem;color:#212529;text-align:left;background-color:#fff;border:0;border-radius:0;overflow-anchor:none;transition:color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out,border-radius .15s ease}@media (prefers-reduced-motion:reduce){.accordion-button{transition:none}}.accordion-button:not(.collapsed){color:#0c63e4;background-color:#e7f1ff;box-shadow:inset 0 -1px 0 rgba(0,0,0,.125)}.accordion-button:not(.collapsed)::after{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_11___ + ");transform:rotate(-180deg)}.accordion-button::after{flex-shrink:0;width:1.25rem;height:1.25rem;margin-left:auto;content:\\"\\";background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_12___ + ");background-repeat:no-repeat;background-size:1.25rem;transition:transform .2s ease-in-out}@media (prefers-reduced-motion:reduce){.accordion-button::after{transition:none}}.accordion-button:hover{z-index:2}.accordion-button:focus{z-index:3;border-color:#86b7fe;outline:0;box-shadow:0 0 0 .25rem rgba(13,110,253,.25)}.accordion-header{margin-bottom:0}.accordion-item{background-color:#fff;border:1px solid rgba(0,0,0,.125)}.accordion-item:first-of-type{border-top-left-radius:.25rem;border-top-right-radius:.25rem}.accordion-item:first-of-type .accordion-button{border-top-left-radius:calc(.25rem - 1px);border-top-right-radius:calc(.25rem - 1px)}.accordion-item:not(:first-of-type){border-top:0}.accordion-item:last-of-type{border-bottom-right-radius:.25rem;border-bottom-left-radius:.25rem}.accordion-item:last-of-type .accordion-button.collapsed{border-bottom-right-radius:calc(.25rem - 1px);border-bottom-left-radius:calc(.25rem - 1px)}.accordion-item:last-of-type .accordion-collapse{border-bottom-right-radius:.25rem;border-bottom-left-radius:.25rem}.accordion-body{padding:1rem 1.25rem}.accordion-flush .accordion-collapse{border-width:0}.accordion-flush .accordion-item{border-right:0;border-left:0;border-radius:0}.accordion-flush .accordion-item:first-child{border-top:0}.accordion-flush .accordion-item:last-child{border-bottom:0}.accordion-flush .accordion-item .accordion-button{border-radius:0}.breadcrumb{display:flex;flex-wrap:wrap;padding:0 0;margin-bottom:1rem;list-style:none}.breadcrumb-item+.breadcrumb-item{padding-left:.5rem}.breadcrumb-item+.breadcrumb-item::before{float:left;padding-right:.5rem;color:#6c757d;content:var(--bs-breadcrumb-divider, \\"/\\")}.breadcrumb-item.active{color:#6c757d}.pagination{display:flex;padding-left:0;list-style:none}.page-link{position:relative;display:block;color:#0d6efd;text-decoration:none;background-color:#fff;border:1px solid #dee2e6;transition:color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out}@media (prefers-reduced-motion:reduce){.page-link{transition:none}}.page-link:hover{z-index:2;color:#0a58ca;background-color:#e9ecef;border-color:#dee2e6}.page-link:focus{z-index:3;color:#0a58ca;background-color:#e9ecef;outline:0;box-shadow:0 0 0 .25rem rgba(13,110,253,.25)}.page-item:not(:first-child) .page-link{margin-left:-1px}.page-item.active .page-link{z-index:3;color:#fff;background-color:#0d6efd;border-color:#0d6efd}.page-item.disabled .page-link{color:#6c757d;pointer-events:none;background-color:#fff;border-color:#dee2e6}.page-link{padding:.375rem .75rem}.page-item:first-child .page-link{border-top-left-radius:.25rem;border-bottom-left-radius:.25rem}.page-item:last-child .page-link{border-top-right-radius:.25rem;border-bottom-right-radius:.25rem}.pagination-lg .page-link{padding:.75rem 1.5rem;font-size:1.25rem}.pagination-lg .page-item:first-child .page-link{border-top-left-radius:.3rem;border-bottom-left-radius:.3rem}.pagination-lg .page-item:last-child .page-link{border-top-right-radius:.3rem;border-bottom-right-radius:.3rem}.pagination-sm .page-link{padding:.25rem .5rem;font-size:.875rem}.pagination-sm .page-item:first-child .page-link{border-top-left-radius:.2rem;border-bottom-left-radius:.2rem}.pagination-sm .page-item:last-child .page-link{border-top-right-radius:.2rem;border-bottom-right-radius:.2rem}.badge{display:inline-block;padding:.35em .65em;font-size:.75em;font-weight:700;line-height:1;color:#fff;text-align:center;white-space:nowrap;vertical-align:baseline;border-radius:.25rem}.badge:empty{display:none}.btn .badge{position:relative;top:-1px}.alert{position:relative;padding:1rem 1rem;margin-bottom:1rem;border:1px solid transparent;border-radius:.25rem}.alert-heading{color:inherit}.alert-link{font-weight:700}.alert-dismissible{padding-right:3rem}.alert-dismissible .btn-close{position:absolute;top:0;right:0;z-index:2;padding:1.25rem 1rem}.alert-primary{color:#084298;background-color:#cfe2ff;border-color:#b6d4fe}.alert-primary .alert-link{color:#06357a}.alert-secondary{color:#41464b;background-color:#e2e3e5;border-color:#d3d6d8}.alert-secondary .alert-link{color:#34383c}.alert-success{color:#0f5132;background-color:#d1e7dd;border-color:#badbcc}.alert-success .alert-link{color:#0c4128}.alert-info{color:#055160;background-color:#cff4fc;border-color:#b6effb}.alert-info .alert-link{color:#04414d}.alert-warning{color:#664d03;background-color:#fff3cd;border-color:#ffecb5}.alert-warning .alert-link{color:#523e02}.alert-danger{color:#842029;background-color:#f8d7da;border-color:#f5c2c7}.alert-danger .alert-link{color:#6a1a21}.alert-light{color:#636464;background-color:#fefefe;border-color:#fdfdfe}.alert-light .alert-link{color:#4f5050}.alert-dark{color:#141619;background-color:#d3d3d4;border-color:#bcbebf}.alert-dark .alert-link{color:#101214}@-webkit-keyframes progress-bar-stripes{0%{background-position-x:1rem}}@keyframes progress-bar-stripes{0%{background-position-x:1rem}}.progress{display:flex;height:1rem;overflow:hidden;font-size:.75rem;background-color:#e9ecef;border-radius:.25rem}.progress-bar{display:flex;flex-direction:column;justify-content:center;overflow:hidden;color:#fff;text-align:center;white-space:nowrap;background-color:#0d6efd;transition:width .6s ease}@media (prefers-reduced-motion:reduce){.progress-bar{transition:none}}.progress-bar-striped{background-image:linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-size:1rem 1rem}.progress-bar-animated{-webkit-animation:1s linear infinite progress-bar-stripes;animation:1s linear infinite progress-bar-stripes}@media (prefers-reduced-motion:reduce){.progress-bar-animated{-webkit-animation:none;animation:none}}.list-group{display:flex;flex-direction:column;padding-left:0;margin-bottom:0;border-radius:.25rem}.list-group-numbered{list-style-type:none;counter-reset:section}.list-group-numbered>li::before{content:counters(section, \\".\\") \\". \\";counter-increment:section}.list-group-item-action{width:100%;color:#495057;text-align:inherit}.list-group-item-action:focus,.list-group-item-action:hover{z-index:1;color:#495057;text-decoration:none;background-color:#f8f9fa}.list-group-item-action:active{color:#212529;background-color:#e9ecef}.list-group-item{position:relative;display:block;padding:.5rem 1rem;color:#212529;text-decoration:none;background-color:#fff;border:1px solid rgba(0,0,0,.125)}.list-group-item:first-child{border-top-left-radius:inherit;border-top-right-radius:inherit}.list-group-item:last-child{border-bottom-right-radius:inherit;border-bottom-left-radius:inherit}.list-group-item.disabled,.list-group-item:disabled{color:#6c757d;pointer-events:none;background-color:#fff}.list-group-item.active{z-index:2;color:#fff;background-color:#0d6efd;border-color:#0d6efd}.list-group-item+.list-group-item{border-top-width:0}.list-group-item+.list-group-item.active{margin-top:-1px;border-top-width:1px}.list-group-horizontal{flex-direction:row}.list-group-horizontal>.list-group-item:first-child{border-bottom-left-radius:.25rem;border-top-right-radius:0}.list-group-horizontal>.list-group-item:last-child{border-top-right-radius:.25rem;border-bottom-left-radius:0}.list-group-horizontal>.list-group-item.active{margin-top:0}.list-group-horizontal>.list-group-item+.list-group-item{border-top-width:1px;border-left-width:0}.list-group-horizontal>.list-group-item+.list-group-item.active{margin-left:-1px;border-left-width:1px}@media (min-width:576px){.list-group-horizontal-sm{flex-direction:row}.list-group-horizontal-sm>.list-group-item:first-child{border-bottom-left-radius:.25rem;border-top-right-radius:0}.list-group-horizontal-sm>.list-group-item:last-child{border-top-right-radius:.25rem;border-bottom-left-radius:0}.list-group-horizontal-sm>.list-group-item.active{margin-top:0}.list-group-horizontal-sm>.list-group-item+.list-group-item{border-top-width:1px;border-left-width:0}.list-group-horizontal-sm>.list-group-item+.list-group-item.active{margin-left:-1px;border-left-width:1px}}@media (min-width:768px){.list-group-horizontal-md{flex-direction:row}.list-group-horizontal-md>.list-group-item:first-child{border-bottom-left-radius:.25rem;border-top-right-radius:0}.list-group-horizontal-md>.list-group-item:last-child{border-top-right-radius:.25rem;border-bottom-left-radius:0}.list-group-horizontal-md>.list-group-item.active{margin-top:0}.list-group-horizontal-md>.list-group-item+.list-group-item{border-top-width:1px;border-left-width:0}.list-group-horizontal-md>.list-group-item+.list-group-item.active{margin-left:-1px;border-left-width:1px}}@media (min-width:992px){.list-group-horizontal-lg{flex-direction:row}.list-group-horizontal-lg>.list-group-item:first-child{border-bottom-left-radius:.25rem;border-top-right-radius:0}.list-group-horizontal-lg>.list-group-item:last-child{border-top-right-radius:.25rem;border-bottom-left-radius:0}.list-group-horizontal-lg>.list-group-item.active{margin-top:0}.list-group-horizontal-lg>.list-group-item+.list-group-item{border-top-width:1px;border-left-width:0}.list-group-horizontal-lg>.list-group-item+.list-group-item.active{margin-left:-1px;border-left-width:1px}}@media (min-width:1200px){.list-group-horizontal-xl{flex-direction:row}.list-group-horizontal-xl>.list-group-item:first-child{border-bottom-left-radius:.25rem;border-top-right-radius:0}.list-group-horizontal-xl>.list-group-item:last-child{border-top-right-radius:.25rem;border-bottom-left-radius:0}.list-group-horizontal-xl>.list-group-item.active{margin-top:0}.list-group-horizontal-xl>.list-group-item+.list-group-item{border-top-width:1px;border-left-width:0}.list-group-horizontal-xl>.list-group-item+.list-group-item.active{margin-left:-1px;border-left-width:1px}}@media (min-width:1400px){.list-group-horizontal-xxl{flex-direction:row}.list-group-horizontal-xxl>.list-group-item:first-child{border-bottom-left-radius:.25rem;border-top-right-radius:0}.list-group-horizontal-xxl>.list-group-item:last-child{border-top-right-radius:.25rem;border-bottom-left-radius:0}.list-group-horizontal-xxl>.list-group-item.active{margin-top:0}.list-group-horizontal-xxl>.list-group-item+.list-group-item{border-top-width:1px;border-left-width:0}.list-group-horizontal-xxl>.list-group-item+.list-group-item.active{margin-left:-1px;border-left-width:1px}}.list-group-flush{border-radius:0}.list-group-flush>.list-group-item{border-width:0 0 1px}.list-group-flush>.list-group-item:last-child{border-bottom-width:0}.list-group-item-primary{color:#084298;background-color:#cfe2ff}.list-group-item-primary.list-group-item-action:focus,.list-group-item-primary.list-group-item-action:hover{color:#084298;background-color:#bacbe6}.list-group-item-primary.list-group-item-action.active{color:#fff;background-color:#084298;border-color:#084298}.list-group-item-secondary{color:#41464b;background-color:#e2e3e5}.list-group-item-secondary.list-group-item-action:focus,.list-group-item-secondary.list-group-item-action:hover{color:#41464b;background-color:#cbccce}.list-group-item-secondary.list-group-item-action.active{color:#fff;background-color:#41464b;border-color:#41464b}.list-group-item-success{color:#0f5132;background-color:#d1e7dd}.list-group-item-success.list-group-item-action:focus,.list-group-item-success.list-group-item-action:hover{color:#0f5132;background-color:#bcd0c7}.list-group-item-success.list-group-item-action.active{color:#fff;background-color:#0f5132;border-color:#0f5132}.list-group-item-info{color:#055160;background-color:#cff4fc}.list-group-item-info.list-group-item-action:focus,.list-group-item-info.list-group-item-action:hover{color:#055160;background-color:#badce3}.list-group-item-info.list-group-item-action.active{color:#fff;background-color:#055160;border-color:#055160}.list-group-item-warning{color:#664d03;background-color:#fff3cd}.list-group-item-warning.list-group-item-action:focus,.list-group-item-warning.list-group-item-action:hover{color:#664d03;background-color:#e6dbb9}.list-group-item-warning.list-group-item-action.active{color:#fff;background-color:#664d03;border-color:#664d03}.list-group-item-danger{color:#842029;background-color:#f8d7da}.list-group-item-danger.list-group-item-action:focus,.list-group-item-danger.list-group-item-action:hover{color:#842029;background-color:#dfc2c4}.list-group-item-danger.list-group-item-action.active{color:#fff;background-color:#842029;border-color:#842029}.list-group-item-light{color:#636464;background-color:#fefefe}.list-group-item-light.list-group-item-action:focus,.list-group-item-light.list-group-item-action:hover{color:#636464;background-color:#e5e5e5}.list-group-item-light.list-group-item-action.active{color:#fff;background-color:#636464;border-color:#636464}.list-group-item-dark{color:#141619;background-color:#d3d3d4}.list-group-item-dark.list-group-item-action:focus,.list-group-item-dark.list-group-item-action:hover{color:#141619;background-color:#bebebf}.list-group-item-dark.list-group-item-action.active{color:#fff;background-color:#141619;border-color:#141619}.btn-close{box-sizing:content-box;width:1em;height:1em;padding:.25em .25em;color:#000;background:transparent url(" + ___CSS_LOADER_URL_REPLACEMENT_13___ + ") center/1em auto no-repeat;border:0;border-radius:.25rem;opacity:.5}.btn-close:hover{color:#000;text-decoration:none;opacity:.75}.btn-close:focus{outline:0;box-shadow:0 0 0 .25rem rgba(13,110,253,.25);opacity:1}.btn-close.disabled,.btn-close:disabled{pointer-events:none;-webkit-user-select:none;-moz-user-select:none;user-select:none;opacity:.25}.btn-close-white{filter:invert(1) grayscale(100%) brightness(200%)}.toast{width:350px;max-width:100%;font-size:.875rem;pointer-events:auto;background-color:rgba(255,255,255,.85);background-clip:padding-box;border:1px solid rgba(0,0,0,.1);box-shadow:0 .5rem 1rem rgba(0,0,0,.15);border-radius:.25rem}.toast.showing{opacity:0}.toast:not(.show){display:none}.toast-container{width:-webkit-max-content;width:-moz-max-content;width:max-content;max-width:100%;pointer-events:none}.toast-container>:not(:last-child){margin-bottom:.75rem}.toast-header{display:flex;align-items:center;padding:.5rem .75rem;color:#6c757d;background-color:rgba(255,255,255,.85);background-clip:padding-box;border-bottom:1px solid rgba(0,0,0,.05);border-top-left-radius:calc(.25rem - 1px);border-top-right-radius:calc(.25rem - 1px)}.toast-header .btn-close{margin-right:-.375rem;margin-left:.75rem}.toast-body{padding:.75rem;word-wrap:break-word}.modal{position:fixed;top:0;left:0;z-index:1055;display:none;width:100%;height:100%;overflow-x:hidden;overflow-y:auto;outline:0}.modal-dialog{position:relative;width:auto;margin:.5rem;pointer-events:none}.modal.fade .modal-dialog{transition:transform .3s ease-out;transform:translate(0,-50px)}@media (prefers-reduced-motion:reduce){.modal.fade .modal-dialog{transition:none}}.modal.show .modal-dialog{transform:none}.modal.modal-static .modal-dialog{transform:scale(1.02)}.modal-dialog-scrollable{height:calc(100% - 1rem)}.modal-dialog-scrollable .modal-content{max-height:100%;overflow:hidden}.modal-dialog-scrollable .modal-body{overflow-y:auto}.modal-dialog-centered{display:flex;align-items:center;min-height:calc(100% - 1rem)}.modal-content{position:relative;display:flex;flex-direction:column;width:100%;pointer-events:auto;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,.2);border-radius:.3rem;outline:0}.modal-backdrop{position:fixed;top:0;left:0;z-index:1050;width:100vw;height:100vh;background-color:#000}.modal-backdrop.fade{opacity:0}.modal-backdrop.show{opacity:.5}.modal-header{display:flex;flex-shrink:0;align-items:center;justify-content:space-between;padding:1rem 1rem;border-bottom:1px solid #dee2e6;border-top-left-radius:calc(.3rem - 1px);border-top-right-radius:calc(.3rem - 1px)}.modal-header .btn-close{padding:.5rem .5rem;margin:-.5rem -.5rem -.5rem auto}.modal-title{margin-bottom:0;line-height:1.5}.modal-body{position:relative;flex:1 1 auto;padding:1rem}.modal-footer{display:flex;flex-wrap:wrap;flex-shrink:0;align-items:center;justify-content:flex-end;padding:.75rem;border-top:1px solid #dee2e6;border-bottom-right-radius:calc(.3rem - 1px);border-bottom-left-radius:calc(.3rem - 1px)}.modal-footer>*{margin:.25rem}@media (min-width:576px){.modal-dialog{max-width:500px;margin:1.75rem auto}.modal-dialog-scrollable{height:calc(100% - 3.5rem)}.modal-dialog-centered{min-height:calc(100% - 3.5rem)}.modal-sm{max-width:300px}}@media (min-width:992px){.modal-lg,.modal-xl{max-width:800px}}@media (min-width:1200px){.modal-xl{max-width:1140px}}.modal-fullscreen{width:100vw;max-width:none;height:100%;margin:0}.modal-fullscreen .modal-content{height:100%;border:0;border-radius:0}.modal-fullscreen .modal-header{border-radius:0}.modal-fullscreen .modal-body{overflow-y:auto}.modal-fullscreen .modal-footer{border-radius:0}@media (max-width:575.98px){.modal-fullscreen-sm-down{width:100vw;max-width:none;height:100%;margin:0}.modal-fullscreen-sm-down .modal-content{height:100%;border:0;border-radius:0}.modal-fullscreen-sm-down .modal-header{border-radius:0}.modal-fullscreen-sm-down .modal-body{overflow-y:auto}.modal-fullscreen-sm-down .modal-footer{border-radius:0}}@media (max-width:767.98px){.modal-fullscreen-md-down{width:100vw;max-width:none;height:100%;margin:0}.modal-fullscreen-md-down .modal-content{height:100%;border:0;border-radius:0}.modal-fullscreen-md-down .modal-header{border-radius:0}.modal-fullscreen-md-down .modal-body{overflow-y:auto}.modal-fullscreen-md-down .modal-footer{border-radius:0}}@media (max-width:991.98px){.modal-fullscreen-lg-down{width:100vw;max-width:none;height:100%;margin:0}.modal-fullscreen-lg-down .modal-content{height:100%;border:0;border-radius:0}.modal-fullscreen-lg-down .modal-header{border-radius:0}.modal-fullscreen-lg-down .modal-body{overflow-y:auto}.modal-fullscreen-lg-down .modal-footer{border-radius:0}}@media (max-width:1199.98px){.modal-fullscreen-xl-down{width:100vw;max-width:none;height:100%;margin:0}.modal-fullscreen-xl-down .modal-content{height:100%;border:0;border-radius:0}.modal-fullscreen-xl-down .modal-header{border-radius:0}.modal-fullscreen-xl-down .modal-body{overflow-y:auto}.modal-fullscreen-xl-down .modal-footer{border-radius:0}}@media (max-width:1399.98px){.modal-fullscreen-xxl-down{width:100vw;max-width:none;height:100%;margin:0}.modal-fullscreen-xxl-down .modal-content{height:100%;border:0;border-radius:0}.modal-fullscreen-xxl-down .modal-header{border-radius:0}.modal-fullscreen-xxl-down .modal-body{overflow-y:auto}.modal-fullscreen-xxl-down .modal-footer{border-radius:0}}.tooltip{position:absolute;z-index:1080;display:block;margin:0;font-family:var(--bs-font-sans-serif);font-style:normal;font-weight:400;line-height:1.5;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;letter-spacing:normal;word-break:normal;word-spacing:normal;white-space:normal;line-break:auto;font-size:.875rem;word-wrap:break-word;opacity:0}.tooltip.show{opacity:.9}.tooltip .tooltip-arrow{position:absolute;display:block;width:.8rem;height:.4rem}.tooltip .tooltip-arrow::before{position:absolute;content:\\"\\";border-color:transparent;border-style:solid}.bs-tooltip-auto[data-popper-placement^=top],.bs-tooltip-top{padding:.4rem 0}.bs-tooltip-auto[data-popper-placement^=top] .tooltip-arrow,.bs-tooltip-top .tooltip-arrow{bottom:0}.bs-tooltip-auto[data-popper-placement^=top] .tooltip-arrow::before,.bs-tooltip-top .tooltip-arrow::before{top:-1px;border-width:.4rem .4rem 0;border-top-color:#000}.bs-tooltip-auto[data-popper-placement^=right],.bs-tooltip-end{padding:0 .4rem}.bs-tooltip-auto[data-popper-placement^=right] .tooltip-arrow,.bs-tooltip-end .tooltip-arrow{left:0;width:.4rem;height:.8rem}.bs-tooltip-auto[data-popper-placement^=right] .tooltip-arrow::before,.bs-tooltip-end .tooltip-arrow::before{right:-1px;border-width:.4rem .4rem .4rem 0;border-right-color:#000}.bs-tooltip-auto[data-popper-placement^=bottom],.bs-tooltip-bottom{padding:.4rem 0}.bs-tooltip-auto[data-popper-placement^=bottom] .tooltip-arrow,.bs-tooltip-bottom .tooltip-arrow{top:0}.bs-tooltip-auto[data-popper-placement^=bottom] .tooltip-arrow::before,.bs-tooltip-bottom .tooltip-arrow::before{bottom:-1px;border-width:0 .4rem .4rem;border-bottom-color:#000}.bs-tooltip-auto[data-popper-placement^=left],.bs-tooltip-start{padding:0 .4rem}.bs-tooltip-auto[data-popper-placement^=left] .tooltip-arrow,.bs-tooltip-start .tooltip-arrow{right:0;width:.4rem;height:.8rem}.bs-tooltip-auto[data-popper-placement^=left] .tooltip-arrow::before,.bs-tooltip-start .tooltip-arrow::before{left:-1px;border-width:.4rem 0 .4rem .4rem;border-left-color:#000}.tooltip-inner{max-width:200px;padding:.25rem .5rem;color:#fff;text-align:center;background-color:#000;border-radius:.25rem}.popover{position:absolute;top:0;left:0;z-index:1070;display:block;max-width:276px;font-family:var(--bs-font-sans-serif);font-style:normal;font-weight:400;line-height:1.5;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;letter-spacing:normal;word-break:normal;word-spacing:normal;white-space:normal;line-break:auto;font-size:.875rem;word-wrap:break-word;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,.2);border-radius:.3rem}.popover .popover-arrow{position:absolute;display:block;width:1rem;height:.5rem}.popover .popover-arrow::after,.popover .popover-arrow::before{position:absolute;display:block;content:\\"\\";border-color:transparent;border-style:solid}.bs-popover-auto[data-popper-placement^=top]>.popover-arrow,.bs-popover-top>.popover-arrow{bottom:calc(-.5rem - 1px)}.bs-popover-auto[data-popper-placement^=top]>.popover-arrow::before,.bs-popover-top>.popover-arrow::before{bottom:0;border-width:.5rem .5rem 0;border-top-color:rgba(0,0,0,.25)}.bs-popover-auto[data-popper-placement^=top]>.popover-arrow::after,.bs-popover-top>.popover-arrow::after{bottom:1px;border-width:.5rem .5rem 0;border-top-color:#fff}.bs-popover-auto[data-popper-placement^=right]>.popover-arrow,.bs-popover-end>.popover-arrow{left:calc(-.5rem - 1px);width:.5rem;height:1rem}.bs-popover-auto[data-popper-placement^=right]>.popover-arrow::before,.bs-popover-end>.popover-arrow::before{left:0;border-width:.5rem .5rem .5rem 0;border-right-color:rgba(0,0,0,.25)}.bs-popover-auto[data-popper-placement^=right]>.popover-arrow::after,.bs-popover-end>.popover-arrow::after{left:1px;border-width:.5rem .5rem .5rem 0;border-right-color:#fff}.bs-popover-auto[data-popper-placement^=bottom]>.popover-arrow,.bs-popover-bottom>.popover-arrow{top:calc(-.5rem - 1px)}.bs-popover-auto[data-popper-placement^=bottom]>.popover-arrow::before,.bs-popover-bottom>.popover-arrow::before{top:0;border-width:0 .5rem .5rem .5rem;border-bottom-color:rgba(0,0,0,.25)}.bs-popover-auto[data-popper-placement^=bottom]>.popover-arrow::after,.bs-popover-bottom>.popover-arrow::after{top:1px;border-width:0 .5rem .5rem .5rem;border-bottom-color:#fff}.bs-popover-auto[data-popper-placement^=bottom] .popover-header::before,.bs-popover-bottom .popover-header::before{position:absolute;top:0;left:50%;display:block;width:1rem;margin-left:-.5rem;content:\\"\\";border-bottom:1px solid #f0f0f0}.bs-popover-auto[data-popper-placement^=left]>.popover-arrow,.bs-popover-start>.popover-arrow{right:calc(-.5rem - 1px);width:.5rem;height:1rem}.bs-popover-auto[data-popper-placement^=left]>.popover-arrow::before,.bs-popover-start>.popover-arrow::before{right:0;border-width:.5rem 0 .5rem .5rem;border-left-color:rgba(0,0,0,.25)}.bs-popover-auto[data-popper-placement^=left]>.popover-arrow::after,.bs-popover-start>.popover-arrow::after{right:1px;border-width:.5rem 0 .5rem .5rem;border-left-color:#fff}.popover-header{padding:.5rem 1rem;margin-bottom:0;font-size:1rem;background-color:#f0f0f0;border-bottom:1px solid rgba(0,0,0,.2);border-top-left-radius:calc(.3rem - 1px);border-top-right-radius:calc(.3rem - 1px)}.popover-header:empty{display:none}.popover-body{padding:1rem 1rem;color:#212529}.carousel{position:relative}.carousel.pointer-event{touch-action:pan-y}.carousel-inner{position:relative;width:100%;overflow:hidden}.carousel-inner::after{display:block;clear:both;content:\\"\\"}.carousel-item{position:relative;display:none;float:left;width:100%;margin-right:-100%;-webkit-backface-visibility:hidden;backface-visibility:hidden;transition:transform .6s ease-in-out}@media (prefers-reduced-motion:reduce){.carousel-item{transition:none}}.carousel-item-next,.carousel-item-prev,.carousel-item.active{display:block}.active.carousel-item-end,.carousel-item-next:not(.carousel-item-start){transform:translateX(100%)}.active.carousel-item-start,.carousel-item-prev:not(.carousel-item-end){transform:translateX(-100%)}.carousel-fade .carousel-item{opacity:0;transition-property:opacity;transform:none}.carousel-fade .carousel-item-next.carousel-item-start,.carousel-fade .carousel-item-prev.carousel-item-end,.carousel-fade .carousel-item.active{z-index:1;opacity:1}.carousel-fade .active.carousel-item-end,.carousel-fade .active.carousel-item-start{z-index:0;opacity:0;transition:opacity 0s .6s}@media (prefers-reduced-motion:reduce){.carousel-fade .active.carousel-item-end,.carousel-fade .active.carousel-item-start{transition:none}}.carousel-control-next,.carousel-control-prev{position:absolute;top:0;bottom:0;z-index:1;display:flex;align-items:center;justify-content:center;width:15%;padding:0;color:#fff;text-align:center;background:0 0;border:0;opacity:.5;transition:opacity .15s ease}@media (prefers-reduced-motion:reduce){.carousel-control-next,.carousel-control-prev{transition:none}}.carousel-control-next:focus,.carousel-control-next:hover,.carousel-control-prev:focus,.carousel-control-prev:hover{color:#fff;text-decoration:none;outline:0;opacity:.9}.carousel-control-prev{left:0}.carousel-control-next{right:0}.carousel-control-next-icon,.carousel-control-prev-icon{display:inline-block;width:2rem;height:2rem;background-repeat:no-repeat;background-position:50%;background-size:100% 100%}.carousel-control-prev-icon{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_14___ + ")}.carousel-control-next-icon{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_15___ + ")}.carousel-indicators{position:absolute;right:0;bottom:0;left:0;z-index:2;display:flex;justify-content:center;padding:0;margin-right:15%;margin-bottom:1rem;margin-left:15%;list-style:none}.carousel-indicators [data-bs-target]{box-sizing:content-box;flex:0 1 auto;width:30px;height:3px;padding:0;margin-right:3px;margin-left:3px;text-indent:-999px;cursor:pointer;background-color:#fff;background-clip:padding-box;border:0;border-top:10px solid transparent;border-bottom:10px solid transparent;opacity:.5;transition:opacity .6s ease}@media (prefers-reduced-motion:reduce){.carousel-indicators [data-bs-target]{transition:none}}.carousel-indicators .active{opacity:1}.carousel-caption{position:absolute;right:15%;bottom:1.25rem;left:15%;padding-top:1.25rem;padding-bottom:1.25rem;color:#fff;text-align:center}.carousel-dark .carousel-control-next-icon,.carousel-dark .carousel-control-prev-icon{filter:invert(1) grayscale(100)}.carousel-dark .carousel-indicators [data-bs-target]{background-color:#000}.carousel-dark .carousel-caption{color:#000}@-webkit-keyframes spinner-border{to{transform:rotate(360deg)}}@keyframes spinner-border{to{transform:rotate(360deg)}}.spinner-border{display:inline-block;width:2rem;height:2rem;vertical-align:-.125em;border:.25em solid currentColor;border-right-color:transparent;border-radius:50%;-webkit-animation:.75s linear infinite spinner-border;animation:.75s linear infinite spinner-border}.spinner-border-sm{width:1rem;height:1rem;border-width:.2em}@-webkit-keyframes spinner-grow{0%{transform:scale(0)}50%{opacity:1;transform:none}}@keyframes spinner-grow{0%{transform:scale(0)}50%{opacity:1;transform:none}}.spinner-grow{display:inline-block;width:2rem;height:2rem;vertical-align:-.125em;background-color:currentColor;border-radius:50%;opacity:0;-webkit-animation:.75s linear infinite spinner-grow;animation:.75s linear infinite spinner-grow}.spinner-grow-sm{width:1rem;height:1rem}@media (prefers-reduced-motion:reduce){.spinner-border,.spinner-grow{-webkit-animation-duration:1.5s;animation-duration:1.5s}}.offcanvas{position:fixed;bottom:0;z-index:1045;display:flex;flex-direction:column;max-width:100%;visibility:hidden;background-color:#fff;background-clip:padding-box;outline:0;transition:transform .3s ease-in-out}@media (prefers-reduced-motion:reduce){.offcanvas{transition:none}}.offcanvas-backdrop{position:fixed;top:0;left:0;z-index:1040;width:100vw;height:100vh;background-color:#000}.offcanvas-backdrop.fade{opacity:0}.offcanvas-backdrop.show{opacity:.5}.offcanvas-header{display:flex;align-items:center;justify-content:space-between;padding:1rem 1rem}.offcanvas-header .btn-close{padding:.5rem .5rem;margin-top:-.5rem;margin-right:-.5rem;margin-bottom:-.5rem}.offcanvas-title{margin-bottom:0;line-height:1.5}.offcanvas-body{flex-grow:1;padding:1rem 1rem;overflow-y:auto}.offcanvas-start{top:0;left:0;width:400px;border-right:1px solid rgba(0,0,0,.2);transform:translateX(-100%)}.offcanvas-end{top:0;right:0;width:400px;border-left:1px solid rgba(0,0,0,.2);transform:translateX(100%)}.offcanvas-top{top:0;right:0;left:0;height:30vh;max-height:100%;border-bottom:1px solid rgba(0,0,0,.2);transform:translateY(-100%)}.offcanvas-bottom{right:0;left:0;height:30vh;max-height:100%;border-top:1px solid rgba(0,0,0,.2);transform:translateY(100%)}.offcanvas.show{transform:none}.placeholder{display:inline-block;min-height:1em;vertical-align:middle;cursor:wait;background-color:currentColor;opacity:.5}.placeholder.btn::before{display:inline-block;content:\\"\\"}.placeholder-xs{min-height:.6em}.placeholder-sm{min-height:.8em}.placeholder-lg{min-height:1.2em}.placeholder-glow .placeholder{-webkit-animation:placeholder-glow 2s ease-in-out infinite;animation:placeholder-glow 2s ease-in-out infinite}@-webkit-keyframes placeholder-glow{50%{opacity:.2}}@keyframes placeholder-glow{50%{opacity:.2}}.placeholder-wave{-webkit-mask-image:linear-gradient(130deg,#000 55%,rgba(0,0,0,0.8) 75%,#000 95%);mask-image:linear-gradient(130deg,#000 55%,rgba(0,0,0,0.8) 75%,#000 95%);-webkit-mask-size:200% 100%;mask-size:200% 100%;-webkit-animation:placeholder-wave 2s linear infinite;animation:placeholder-wave 2s linear infinite}@-webkit-keyframes placeholder-wave{100%{-webkit-mask-position:-200% 0%;mask-position:-200% 0%}}@keyframes placeholder-wave{100%{-webkit-mask-position:-200% 0%;mask-position:-200% 0%}}.clearfix::after{display:block;clear:both;content:\\"\\"}.link-primary{color:#0d6efd}.link-primary:focus,.link-primary:hover{color:#0a58ca}.link-secondary{color:#6c757d}.link-secondary:focus,.link-secondary:hover{color:#565e64}.link-success{color:#198754}.link-success:focus,.link-success:hover{color:#146c43}.link-info{color:#0dcaf0}.link-info:focus,.link-info:hover{color:#3dd5f3}.link-warning{color:#ffc107}.link-warning:focus,.link-warning:hover{color:#ffcd39}.link-danger{color:#dc3545}.link-danger:focus,.link-danger:hover{color:#b02a37}.link-light{color:#f8f9fa}.link-light:focus,.link-light:hover{color:#f9fafb}.link-dark{color:#212529}.link-dark:focus,.link-dark:hover{color:#1a1e21}.ratio{position:relative;width:100%}.ratio::before{display:block;padding-top:var(--bs-aspect-ratio);content:\\"\\"}.ratio>*{position:absolute;top:0;left:0;width:100%;height:100%}.ratio-1x1{--bs-aspect-ratio:100%}.ratio-4x3{--bs-aspect-ratio:calc(3 / 4 * 100%)}.ratio-16x9{--bs-aspect-ratio:calc(9 / 16 * 100%)}.ratio-21x9{--bs-aspect-ratio:calc(9 / 21 * 100%)}.fixed-top{position:fixed;top:0;right:0;left:0;z-index:1030}.fixed-bottom{position:fixed;right:0;bottom:0;left:0;z-index:1030}.sticky-top{position:-webkit-sticky;position:sticky;top:0;z-index:1020}@media (min-width:576px){.sticky-sm-top{position:-webkit-sticky;position:sticky;top:0;z-index:1020}}@media (min-width:768px){.sticky-md-top{position:-webkit-sticky;position:sticky;top:0;z-index:1020}}@media (min-width:992px){.sticky-lg-top{position:-webkit-sticky;position:sticky;top:0;z-index:1020}}@media (min-width:1200px){.sticky-xl-top{position:-webkit-sticky;position:sticky;top:0;z-index:1020}}@media (min-width:1400px){.sticky-xxl-top{position:-webkit-sticky;position:sticky;top:0;z-index:1020}}.hstack{display:flex;flex-direction:row;align-items:center;align-self:stretch}.vstack{display:flex;flex:1 1 auto;flex-direction:column;align-self:stretch}.visually-hidden,.visually-hidden-focusable:not(:focus):not(:focus-within){position:absolute!important;width:1px!important;height:1px!important;padding:0!important;margin:-1px!important;overflow:hidden!important;clip:rect(0,0,0,0)!important;white-space:nowrap!important;border:0!important}.stretched-link::after{position:absolute;top:0;right:0;bottom:0;left:0;z-index:1;content:\\"\\"}.text-truncate{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.vr{display:inline-block;align-self:stretch;width:1px;min-height:1em;background-color:currentColor;opacity:.25}.align-baseline{vertical-align:baseline!important}.align-top{vertical-align:top!important}.align-middle{vertical-align:middle!important}.align-bottom{vertical-align:bottom!important}.align-text-bottom{vertical-align:text-bottom!important}.align-text-top{vertical-align:text-top!important}.float-start{float:left!important}.float-end{float:right!important}.float-none{float:none!important}.opacity-0{opacity:0!important}.opacity-25{opacity:.25!important}.opacity-50{opacity:.5!important}.opacity-75{opacity:.75!important}.opacity-100{opacity:1!important}.overflow-auto{overflow:auto!important}.overflow-hidden{overflow:hidden!important}.overflow-visible{overflow:visible!important}.overflow-scroll{overflow:scroll!important}.d-inline{display:inline!important}.d-inline-block{display:inline-block!important}.d-block{display:block!important}.d-grid{display:grid!important}.d-table{display:table!important}.d-table-row{display:table-row!important}.d-table-cell{display:table-cell!important}.d-flex{display:flex!important}.d-inline-flex{display:inline-flex!important}.d-none{display:none!important}.shadow{box-shadow:0 .5rem 1rem rgba(0,0,0,.15)!important}.shadow-sm{box-shadow:0 .125rem .25rem rgba(0,0,0,.075)!important}.shadow-lg{box-shadow:0 1rem 3rem rgba(0,0,0,.175)!important}.shadow-none{box-shadow:none!important}.position-static{position:static!important}.position-relative{position:relative!important}.position-absolute{position:absolute!important}.position-fixed{position:fixed!important}.position-sticky{position:-webkit-sticky!important;position:sticky!important}.top-0{top:0!important}.top-50{top:50%!important}.top-100{top:100%!important}.bottom-0{bottom:0!important}.bottom-50{bottom:50%!important}.bottom-100{bottom:100%!important}.start-0{left:0!important}.start-50{left:50%!important}.start-100{left:100%!important}.end-0{right:0!important}.end-50{right:50%!important}.end-100{right:100%!important}.translate-middle{transform:translate(-50%,-50%)!important}.translate-middle-x{transform:translateX(-50%)!important}.translate-middle-y{transform:translateY(-50%)!important}.border{border:1px solid #dee2e6!important}.border-0{border:0!important}.border-top{border-top:1px solid #dee2e6!important}.border-top-0{border-top:0!important}.border-end{border-right:1px solid #dee2e6!important}.border-end-0{border-right:0!important}.border-bottom{border-bottom:1px solid #dee2e6!important}.border-bottom-0{border-bottom:0!important}.border-start{border-left:1px solid #dee2e6!important}.border-start-0{border-left:0!important}.border-primary{border-color:#0d6efd!important}.border-secondary{border-color:#6c757d!important}.border-success{border-color:#198754!important}.border-info{border-color:#0dcaf0!important}.border-warning{border-color:#ffc107!important}.border-danger{border-color:#dc3545!important}.border-light{border-color:#f8f9fa!important}.border-dark{border-color:#212529!important}.border-white{border-color:#fff!important}.border-1{border-width:1px!important}.border-2{border-width:2px!important}.border-3{border-width:3px!important}.border-4{border-width:4px!important}.border-5{border-width:5px!important}.w-25{width:25%!important}.w-50{width:50%!important}.w-75{width:75%!important}.w-100{width:100%!important}.w-auto{width:auto!important}.mw-100{max-width:100%!important}.vw-100{width:100vw!important}.min-vw-100{min-width:100vw!important}.h-25{height:25%!important}.h-50{height:50%!important}.h-75{height:75%!important}.h-100{height:100%!important}.h-auto{height:auto!important}.mh-100{max-height:100%!important}.vh-100{height:100vh!important}.min-vh-100{min-height:100vh!important}.flex-fill{flex:1 1 auto!important}.flex-row{flex-direction:row!important}.flex-column{flex-direction:column!important}.flex-row-reverse{flex-direction:row-reverse!important}.flex-column-reverse{flex-direction:column-reverse!important}.flex-grow-0{flex-grow:0!important}.flex-grow-1{flex-grow:1!important}.flex-shrink-0{flex-shrink:0!important}.flex-shrink-1{flex-shrink:1!important}.flex-wrap{flex-wrap:wrap!important}.flex-nowrap{flex-wrap:nowrap!important}.flex-wrap-reverse{flex-wrap:wrap-reverse!important}.gap-0{gap:0!important}.gap-1{gap:.25rem!important}.gap-2{gap:.5rem!important}.gap-3{gap:1rem!important}.gap-4{gap:1.5rem!important}.gap-5{gap:3rem!important}.justify-content-start{justify-content:flex-start!important}.justify-content-end{justify-content:flex-end!important}.justify-content-center{justify-content:center!important}.justify-content-between{justify-content:space-between!important}.justify-content-around{justify-content:space-around!important}.justify-content-evenly{justify-content:space-evenly!important}.align-items-start{align-items:flex-start!important}.align-items-end{align-items:flex-end!important}.align-items-center{align-items:center!important}.align-items-baseline{align-items:baseline!important}.align-items-stretch{align-items:stretch!important}.align-content-start{align-content:flex-start!important}.align-content-end{align-content:flex-end!important}.align-content-center{align-content:center!important}.align-content-between{align-content:space-between!important}.align-content-around{align-content:space-around!important}.align-content-stretch{align-content:stretch!important}.align-self-auto{align-self:auto!important}.align-self-start{align-self:flex-start!important}.align-self-end{align-self:flex-end!important}.align-self-center{align-self:center!important}.align-self-baseline{align-self:baseline!important}.align-self-stretch{align-self:stretch!important}.order-first{order:-1!important}.order-0{order:0!important}.order-1{order:1!important}.order-2{order:2!important}.order-3{order:3!important}.order-4{order:4!important}.order-5{order:5!important}.order-last{order:6!important}.m-0{margin:0!important}.m-1{margin:.25rem!important}.m-2{margin:.5rem!important}.m-3{margin:1rem!important}.m-4{margin:1.5rem!important}.m-5{margin:3rem!important}.m-auto{margin:auto!important}.mx-0{margin-right:0!important;margin-left:0!important}.mx-1{margin-right:.25rem!important;margin-left:.25rem!important}.mx-2{margin-right:.5rem!important;margin-left:.5rem!important}.mx-3{margin-right:1rem!important;margin-left:1rem!important}.mx-4{margin-right:1.5rem!important;margin-left:1.5rem!important}.mx-5{margin-right:3rem!important;margin-left:3rem!important}.mx-auto{margin-right:auto!important;margin-left:auto!important}.my-0{margin-top:0!important;margin-bottom:0!important}.my-1{margin-top:.25rem!important;margin-bottom:.25rem!important}.my-2{margin-top:.5rem!important;margin-bottom:.5rem!important}.my-3{margin-top:1rem!important;margin-bottom:1rem!important}.my-4{margin-top:1.5rem!important;margin-bottom:1.5rem!important}.my-5{margin-top:3rem!important;margin-bottom:3rem!important}.my-auto{margin-top:auto!important;margin-bottom:auto!important}.mt-0{margin-top:0!important}.mt-1{margin-top:.25rem!important}.mt-2{margin-top:.5rem!important}.mt-3{margin-top:1rem!important}.mt-4{margin-top:1.5rem!important}.mt-5{margin-top:3rem!important}.mt-auto{margin-top:auto!important}.me-0{margin-right:0!important}.me-1{margin-right:.25rem!important}.me-2{margin-right:.5rem!important}.me-3{margin-right:1rem!important}.me-4{margin-right:1.5rem!important}.me-5{margin-right:3rem!important}.me-auto{margin-right:auto!important}.mb-0{margin-bottom:0!important}.mb-1{margin-bottom:.25rem!important}.mb-2{margin-bottom:.5rem!important}.mb-3{margin-bottom:1rem!important}.mb-4{margin-bottom:1.5rem!important}.mb-5{margin-bottom:3rem!important}.mb-auto{margin-bottom:auto!important}.ms-0{margin-left:0!important}.ms-1{margin-left:.25rem!important}.ms-2{margin-left:.5rem!important}.ms-3{margin-left:1rem!important}.ms-4{margin-left:1.5rem!important}.ms-5{margin-left:3rem!important}.ms-auto{margin-left:auto!important}.p-0{padding:0!important}.p-1{padding:.25rem!important}.p-2{padding:.5rem!important}.p-3{padding:1rem!important}.p-4{padding:1.5rem!important}.p-5{padding:3rem!important}.px-0{padding-right:0!important;padding-left:0!important}.px-1{padding-right:.25rem!important;padding-left:.25rem!important}.px-2{padding-right:.5rem!important;padding-left:.5rem!important}.px-3{padding-right:1rem!important;padding-left:1rem!important}.px-4{padding-right:1.5rem!important;padding-left:1.5rem!important}.px-5{padding-right:3rem!important;padding-left:3rem!important}.py-0{padding-top:0!important;padding-bottom:0!important}.py-1{padding-top:.25rem!important;padding-bottom:.25rem!important}.py-2{padding-top:.5rem!important;padding-bottom:.5rem!important}.py-3{padding-top:1rem!important;padding-bottom:1rem!important}.py-4{padding-top:1.5rem!important;padding-bottom:1.5rem!important}.py-5{padding-top:3rem!important;padding-bottom:3rem!important}.pt-0{padding-top:0!important}.pt-1{padding-top:.25rem!important}.pt-2{padding-top:.5rem!important}.pt-3{padding-top:1rem!important}.pt-4{padding-top:1.5rem!important}.pt-5{padding-top:3rem!important}.pe-0{padding-right:0!important}.pe-1{padding-right:.25rem!important}.pe-2{padding-right:.5rem!important}.pe-3{padding-right:1rem!important}.pe-4{padding-right:1.5rem!important}.pe-5{padding-right:3rem!important}.pb-0{padding-bottom:0!important}.pb-1{padding-bottom:.25rem!important}.pb-2{padding-bottom:.5rem!important}.pb-3{padding-bottom:1rem!important}.pb-4{padding-bottom:1.5rem!important}.pb-5{padding-bottom:3rem!important}.ps-0{padding-left:0!important}.ps-1{padding-left:.25rem!important}.ps-2{padding-left:.5rem!important}.ps-3{padding-left:1rem!important}.ps-4{padding-left:1.5rem!important}.ps-5{padding-left:3rem!important}.font-monospace{font-family:var(--bs-font-monospace)!important}.fs-1{font-size:calc(1.375rem + 1.5vw)!important}.fs-2{font-size:calc(1.325rem + .9vw)!important}.fs-3{font-size:calc(1.3rem + .6vw)!important}.fs-4{font-size:calc(1.275rem + .3vw)!important}.fs-5{font-size:1.25rem!important}.fs-6{font-size:1rem!important}.fst-italic{font-style:italic!important}.fst-normal{font-style:normal!important}.fw-light{font-weight:300!important}.fw-lighter{font-weight:lighter!important}.fw-normal{font-weight:400!important}.fw-bold{font-weight:700!important}.fw-bolder{font-weight:bolder!important}.lh-1{line-height:1!important}.lh-sm{line-height:1.25!important}.lh-base{line-height:1.5!important}.lh-lg{line-height:2!important}.text-start{text-align:left!important}.text-end{text-align:right!important}.text-center{text-align:center!important}.text-decoration-none{text-decoration:none!important}.text-decoration-underline{text-decoration:underline!important}.text-decoration-line-through{text-decoration:line-through!important}.text-lowercase{text-transform:lowercase!important}.text-uppercase{text-transform:uppercase!important}.text-capitalize{text-transform:capitalize!important}.text-wrap{white-space:normal!important}.text-nowrap{white-space:nowrap!important}.text-break{word-wrap:break-word!important;word-break:break-word!important}.text-primary{--bs-text-opacity:1;color:rgba(var(--bs-primary-rgb),var(--bs-text-opacity))!important}.text-secondary{--bs-text-opacity:1;color:rgba(var(--bs-secondary-rgb),var(--bs-text-opacity))!important}.text-success{--bs-text-opacity:1;color:rgba(var(--bs-success-rgb),var(--bs-text-opacity))!important}.text-info{--bs-text-opacity:1;color:rgba(var(--bs-info-rgb),var(--bs-text-opacity))!important}.text-warning{--bs-text-opacity:1;color:rgba(var(--bs-warning-rgb),var(--bs-text-opacity))!important}.text-danger{--bs-text-opacity:1;color:rgba(var(--bs-danger-rgb),var(--bs-text-opacity))!important}.text-light{--bs-text-opacity:1;color:rgba(var(--bs-light-rgb),var(--bs-text-opacity))!important}.text-dark{--bs-text-opacity:1;color:rgba(var(--bs-dark-rgb),var(--bs-text-opacity))!important}.text-black{--bs-text-opacity:1;color:rgba(var(--bs-black-rgb),var(--bs-text-opacity))!important}.text-white{--bs-text-opacity:1;color:rgba(var(--bs-white-rgb),var(--bs-text-opacity))!important}.text-body{--bs-text-opacity:1;color:rgba(var(--bs-body-rgb),var(--bs-text-opacity))!important}.text-muted{--bs-text-opacity:1;color:#6c757d!important}.text-black-50{--bs-text-opacity:1;color:rgba(0,0,0,.5)!important}.text-white-50{--bs-text-opacity:1;color:rgba(255,255,255,.5)!important}.text-reset{--bs-text-opacity:1;color:inherit!important}.text-opacity-25{--bs-text-opacity:0.25}.text-opacity-50{--bs-text-opacity:0.5}.text-opacity-75{--bs-text-opacity:0.75}.text-opacity-100{--bs-text-opacity:1}.bg-primary{--bs-bg-opacity:1;background-color:rgba(var(--bs-primary-rgb),var(--bs-bg-opacity))!important}.bg-secondary{--bs-bg-opacity:1;background-color:rgba(var(--bs-secondary-rgb),var(--bs-bg-opacity))!important}.bg-success{--bs-bg-opacity:1;background-color:rgba(var(--bs-success-rgb),var(--bs-bg-opacity))!important}.bg-info{--bs-bg-opacity:1;background-color:rgba(var(--bs-info-rgb),var(--bs-bg-opacity))!important}.bg-warning{--bs-bg-opacity:1;background-color:rgba(var(--bs-warning-rgb),var(--bs-bg-opacity))!important}.bg-danger{--bs-bg-opacity:1;background-color:rgba(var(--bs-danger-rgb),var(--bs-bg-opacity))!important}.bg-light{--bs-bg-opacity:1;background-color:rgba(var(--bs-light-rgb),var(--bs-bg-opacity))!important}.bg-dark{--bs-bg-opacity:1;background-color:rgba(var(--bs-dark-rgb),var(--bs-bg-opacity))!important}.bg-black{--bs-bg-opacity:1;background-color:rgba(var(--bs-black-rgb),var(--bs-bg-opacity))!important}.bg-white{--bs-bg-opacity:1;background-color:rgba(var(--bs-white-rgb),var(--bs-bg-opacity))!important}.bg-body{--bs-bg-opacity:1;background-color:rgba(var(--bs-body-rgb),var(--bs-bg-opacity))!important}.bg-transparent{--bs-bg-opacity:1;background-color:transparent!important}.bg-opacity-10{--bs-bg-opacity:0.1}.bg-opacity-25{--bs-bg-opacity:0.25}.bg-opacity-50{--bs-bg-opacity:0.5}.bg-opacity-75{--bs-bg-opacity:0.75}.bg-opacity-100{--bs-bg-opacity:1}.bg-gradient{background-image:var(--bs-gradient)!important}.user-select-all{-webkit-user-select:all!important;-moz-user-select:all!important;user-select:all!important}.user-select-auto{-webkit-user-select:auto!important;-moz-user-select:auto!important;user-select:auto!important}.user-select-none{-webkit-user-select:none!important;-moz-user-select:none!important;user-select:none!important}.pe-none{pointer-events:none!important}.pe-auto{pointer-events:auto!important}.rounded{border-radius:.25rem!important}.rounded-0{border-radius:0!important}.rounded-1{border-radius:.2rem!important}.rounded-2{border-radius:.25rem!important}.rounded-3{border-radius:.3rem!important}.rounded-circle{border-radius:50%!important}.rounded-pill{border-radius:50rem!important}.rounded-top{border-top-left-radius:.25rem!important;border-top-right-radius:.25rem!important}.rounded-end{border-top-right-radius:.25rem!important;border-bottom-right-radius:.25rem!important}.rounded-bottom{border-bottom-right-radius:.25rem!important;border-bottom-left-radius:.25rem!important}.rounded-start{border-bottom-left-radius:.25rem!important;border-top-left-radius:.25rem!important}.visible{visibility:visible!important}.invisible{visibility:hidden!important}@media (min-width:576px){.float-sm-start{float:left!important}.float-sm-end{float:right!important}.float-sm-none{float:none!important}.d-sm-inline{display:inline!important}.d-sm-inline-block{display:inline-block!important}.d-sm-block{display:block!important}.d-sm-grid{display:grid!important}.d-sm-table{display:table!important}.d-sm-table-row{display:table-row!important}.d-sm-table-cell{display:table-cell!important}.d-sm-flex{display:flex!important}.d-sm-inline-flex{display:inline-flex!important}.d-sm-none{display:none!important}.flex-sm-fill{flex:1 1 auto!important}.flex-sm-row{flex-direction:row!important}.flex-sm-column{flex-direction:column!important}.flex-sm-row-reverse{flex-direction:row-reverse!important}.flex-sm-column-reverse{flex-direction:column-reverse!important}.flex-sm-grow-0{flex-grow:0!important}.flex-sm-grow-1{flex-grow:1!important}.flex-sm-shrink-0{flex-shrink:0!important}.flex-sm-shrink-1{flex-shrink:1!important}.flex-sm-wrap{flex-wrap:wrap!important}.flex-sm-nowrap{flex-wrap:nowrap!important}.flex-sm-wrap-reverse{flex-wrap:wrap-reverse!important}.gap-sm-0{gap:0!important}.gap-sm-1{gap:.25rem!important}.gap-sm-2{gap:.5rem!important}.gap-sm-3{gap:1rem!important}.gap-sm-4{gap:1.5rem!important}.gap-sm-5{gap:3rem!important}.justify-content-sm-start{justify-content:flex-start!important}.justify-content-sm-end{justify-content:flex-end!important}.justify-content-sm-center{justify-content:center!important}.justify-content-sm-between{justify-content:space-between!important}.justify-content-sm-around{justify-content:space-around!important}.justify-content-sm-evenly{justify-content:space-evenly!important}.align-items-sm-start{align-items:flex-start!important}.align-items-sm-end{align-items:flex-end!important}.align-items-sm-center{align-items:center!important}.align-items-sm-baseline{align-items:baseline!important}.align-items-sm-stretch{align-items:stretch!important}.align-content-sm-start{align-content:flex-start!important}.align-content-sm-end{align-content:flex-end!important}.align-content-sm-center{align-content:center!important}.align-content-sm-between{align-content:space-between!important}.align-content-sm-around{align-content:space-around!important}.align-content-sm-stretch{align-content:stretch!important}.align-self-sm-auto{align-self:auto!important}.align-self-sm-start{align-self:flex-start!important}.align-self-sm-end{align-self:flex-end!important}.align-self-sm-center{align-self:center!important}.align-self-sm-baseline{align-self:baseline!important}.align-self-sm-stretch{align-self:stretch!important}.order-sm-first{order:-1!important}.order-sm-0{order:0!important}.order-sm-1{order:1!important}.order-sm-2{order:2!important}.order-sm-3{order:3!important}.order-sm-4{order:4!important}.order-sm-5{order:5!important}.order-sm-last{order:6!important}.m-sm-0{margin:0!important}.m-sm-1{margin:.25rem!important}.m-sm-2{margin:.5rem!important}.m-sm-3{margin:1rem!important}.m-sm-4{margin:1.5rem!important}.m-sm-5{margin:3rem!important}.m-sm-auto{margin:auto!important}.mx-sm-0{margin-right:0!important;margin-left:0!important}.mx-sm-1{margin-right:.25rem!important;margin-left:.25rem!important}.mx-sm-2{margin-right:.5rem!important;margin-left:.5rem!important}.mx-sm-3{margin-right:1rem!important;margin-left:1rem!important}.mx-sm-4{margin-right:1.5rem!important;margin-left:1.5rem!important}.mx-sm-5{margin-right:3rem!important;margin-left:3rem!important}.mx-sm-auto{margin-right:auto!important;margin-left:auto!important}.my-sm-0{margin-top:0!important;margin-bottom:0!important}.my-sm-1{margin-top:.25rem!important;margin-bottom:.25rem!important}.my-sm-2{margin-top:.5rem!important;margin-bottom:.5rem!important}.my-sm-3{margin-top:1rem!important;margin-bottom:1rem!important}.my-sm-4{margin-top:1.5rem!important;margin-bottom:1.5rem!important}.my-sm-5{margin-top:3rem!important;margin-bottom:3rem!important}.my-sm-auto{margin-top:auto!important;margin-bottom:auto!important}.mt-sm-0{margin-top:0!important}.mt-sm-1{margin-top:.25rem!important}.mt-sm-2{margin-top:.5rem!important}.mt-sm-3{margin-top:1rem!important}.mt-sm-4{margin-top:1.5rem!important}.mt-sm-5{margin-top:3rem!important}.mt-sm-auto{margin-top:auto!important}.me-sm-0{margin-right:0!important}.me-sm-1{margin-right:.25rem!important}.me-sm-2{margin-right:.5rem!important}.me-sm-3{margin-right:1rem!important}.me-sm-4{margin-right:1.5rem!important}.me-sm-5{margin-right:3rem!important}.me-sm-auto{margin-right:auto!important}.mb-sm-0{margin-bottom:0!important}.mb-sm-1{margin-bottom:.25rem!important}.mb-sm-2{margin-bottom:.5rem!important}.mb-sm-3{margin-bottom:1rem!important}.mb-sm-4{margin-bottom:1.5rem!important}.mb-sm-5{margin-bottom:3rem!important}.mb-sm-auto{margin-bottom:auto!important}.ms-sm-0{margin-left:0!important}.ms-sm-1{margin-left:.25rem!important}.ms-sm-2{margin-left:.5rem!important}.ms-sm-3{margin-left:1rem!important}.ms-sm-4{margin-left:1.5rem!important}.ms-sm-5{margin-left:3rem!important}.ms-sm-auto{margin-left:auto!important}.p-sm-0{padding:0!important}.p-sm-1{padding:.25rem!important}.p-sm-2{padding:.5rem!important}.p-sm-3{padding:1rem!important}.p-sm-4{padding:1.5rem!important}.p-sm-5{padding:3rem!important}.px-sm-0{padding-right:0!important;padding-left:0!important}.px-sm-1{padding-right:.25rem!important;padding-left:.25rem!important}.px-sm-2{padding-right:.5rem!important;padding-left:.5rem!important}.px-sm-3{padding-right:1rem!important;padding-left:1rem!important}.px-sm-4{padding-right:1.5rem!important;padding-left:1.5rem!important}.px-sm-5{padding-right:3rem!important;padding-left:3rem!important}.py-sm-0{padding-top:0!important;padding-bottom:0!important}.py-sm-1{padding-top:.25rem!important;padding-bottom:.25rem!important}.py-sm-2{padding-top:.5rem!important;padding-bottom:.5rem!important}.py-sm-3{padding-top:1rem!important;padding-bottom:1rem!important}.py-sm-4{padding-top:1.5rem!important;padding-bottom:1.5rem!important}.py-sm-5{padding-top:3rem!important;padding-bottom:3rem!important}.pt-sm-0{padding-top:0!important}.pt-sm-1{padding-top:.25rem!important}.pt-sm-2{padding-top:.5rem!important}.pt-sm-3{padding-top:1rem!important}.pt-sm-4{padding-top:1.5rem!important}.pt-sm-5{padding-top:3rem!important}.pe-sm-0{padding-right:0!important}.pe-sm-1{padding-right:.25rem!important}.pe-sm-2{padding-right:.5rem!important}.pe-sm-3{padding-right:1rem!important}.pe-sm-4{padding-right:1.5rem!important}.pe-sm-5{padding-right:3rem!important}.pb-sm-0{padding-bottom:0!important}.pb-sm-1{padding-bottom:.25rem!important}.pb-sm-2{padding-bottom:.5rem!important}.pb-sm-3{padding-bottom:1rem!important}.pb-sm-4{padding-bottom:1.5rem!important}.pb-sm-5{padding-bottom:3rem!important}.ps-sm-0{padding-left:0!important}.ps-sm-1{padding-left:.25rem!important}.ps-sm-2{padding-left:.5rem!important}.ps-sm-3{padding-left:1rem!important}.ps-sm-4{padding-left:1.5rem!important}.ps-sm-5{padding-left:3rem!important}.text-sm-start{text-align:left!important}.text-sm-end{text-align:right!important}.text-sm-center{text-align:center!important}}@media (min-width:768px){.float-md-start{float:left!important}.float-md-end{float:right!important}.float-md-none{float:none!important}.d-md-inline{display:inline!important}.d-md-inline-block{display:inline-block!important}.d-md-block{display:block!important}.d-md-grid{display:grid!important}.d-md-table{display:table!important}.d-md-table-row{display:table-row!important}.d-md-table-cell{display:table-cell!important}.d-md-flex{display:flex!important}.d-md-inline-flex{display:inline-flex!important}.d-md-none{display:none!important}.flex-md-fill{flex:1 1 auto!important}.flex-md-row{flex-direction:row!important}.flex-md-column{flex-direction:column!important}.flex-md-row-reverse{flex-direction:row-reverse!important}.flex-md-column-reverse{flex-direction:column-reverse!important}.flex-md-grow-0{flex-grow:0!important}.flex-md-grow-1{flex-grow:1!important}.flex-md-shrink-0{flex-shrink:0!important}.flex-md-shrink-1{flex-shrink:1!important}.flex-md-wrap{flex-wrap:wrap!important}.flex-md-nowrap{flex-wrap:nowrap!important}.flex-md-wrap-reverse{flex-wrap:wrap-reverse!important}.gap-md-0{gap:0!important}.gap-md-1{gap:.25rem!important}.gap-md-2{gap:.5rem!important}.gap-md-3{gap:1rem!important}.gap-md-4{gap:1.5rem!important}.gap-md-5{gap:3rem!important}.justify-content-md-start{justify-content:flex-start!important}.justify-content-md-end{justify-content:flex-end!important}.justify-content-md-center{justify-content:center!important}.justify-content-md-between{justify-content:space-between!important}.justify-content-md-around{justify-content:space-around!important}.justify-content-md-evenly{justify-content:space-evenly!important}.align-items-md-start{align-items:flex-start!important}.align-items-md-end{align-items:flex-end!important}.align-items-md-center{align-items:center!important}.align-items-md-baseline{align-items:baseline!important}.align-items-md-stretch{align-items:stretch!important}.align-content-md-start{align-content:flex-start!important}.align-content-md-end{align-content:flex-end!important}.align-content-md-center{align-content:center!important}.align-content-md-between{align-content:space-between!important}.align-content-md-around{align-content:space-around!important}.align-content-md-stretch{align-content:stretch!important}.align-self-md-auto{align-self:auto!important}.align-self-md-start{align-self:flex-start!important}.align-self-md-end{align-self:flex-end!important}.align-self-md-center{align-self:center!important}.align-self-md-baseline{align-self:baseline!important}.align-self-md-stretch{align-self:stretch!important}.order-md-first{order:-1!important}.order-md-0{order:0!important}.order-md-1{order:1!important}.order-md-2{order:2!important}.order-md-3{order:3!important}.order-md-4{order:4!important}.order-md-5{order:5!important}.order-md-last{order:6!important}.m-md-0{margin:0!important}.m-md-1{margin:.25rem!important}.m-md-2{margin:.5rem!important}.m-md-3{margin:1rem!important}.m-md-4{margin:1.5rem!important}.m-md-5{margin:3rem!important}.m-md-auto{margin:auto!important}.mx-md-0{margin-right:0!important;margin-left:0!important}.mx-md-1{margin-right:.25rem!important;margin-left:.25rem!important}.mx-md-2{margin-right:.5rem!important;margin-left:.5rem!important}.mx-md-3{margin-right:1rem!important;margin-left:1rem!important}.mx-md-4{margin-right:1.5rem!important;margin-left:1.5rem!important}.mx-md-5{margin-right:3rem!important;margin-left:3rem!important}.mx-md-auto{margin-right:auto!important;margin-left:auto!important}.my-md-0{margin-top:0!important;margin-bottom:0!important}.my-md-1{margin-top:.25rem!important;margin-bottom:.25rem!important}.my-md-2{margin-top:.5rem!important;margin-bottom:.5rem!important}.my-md-3{margin-top:1rem!important;margin-bottom:1rem!important}.my-md-4{margin-top:1.5rem!important;margin-bottom:1.5rem!important}.my-md-5{margin-top:3rem!important;margin-bottom:3rem!important}.my-md-auto{margin-top:auto!important;margin-bottom:auto!important}.mt-md-0{margin-top:0!important}.mt-md-1{margin-top:.25rem!important}.mt-md-2{margin-top:.5rem!important}.mt-md-3{margin-top:1rem!important}.mt-md-4{margin-top:1.5rem!important}.mt-md-5{margin-top:3rem!important}.mt-md-auto{margin-top:auto!important}.me-md-0{margin-right:0!important}.me-md-1{margin-right:.25rem!important}.me-md-2{margin-right:.5rem!important}.me-md-3{margin-right:1rem!important}.me-md-4{margin-right:1.5rem!important}.me-md-5{margin-right:3rem!important}.me-md-auto{margin-right:auto!important}.mb-md-0{margin-bottom:0!important}.mb-md-1{margin-bottom:.25rem!important}.mb-md-2{margin-bottom:.5rem!important}.mb-md-3{margin-bottom:1rem!important}.mb-md-4{margin-bottom:1.5rem!important}.mb-md-5{margin-bottom:3rem!important}.mb-md-auto{margin-bottom:auto!important}.ms-md-0{margin-left:0!important}.ms-md-1{margin-left:.25rem!important}.ms-md-2{margin-left:.5rem!important}.ms-md-3{margin-left:1rem!important}.ms-md-4{margin-left:1.5rem!important}.ms-md-5{margin-left:3rem!important}.ms-md-auto{margin-left:auto!important}.p-md-0{padding:0!important}.p-md-1{padding:.25rem!important}.p-md-2{padding:.5rem!important}.p-md-3{padding:1rem!important}.p-md-4{padding:1.5rem!important}.p-md-5{padding:3rem!important}.px-md-0{padding-right:0!important;padding-left:0!important}.px-md-1{padding-right:.25rem!important;padding-left:.25rem!important}.px-md-2{padding-right:.5rem!important;padding-left:.5rem!important}.px-md-3{padding-right:1rem!important;padding-left:1rem!important}.px-md-4{padding-right:1.5rem!important;padding-left:1.5rem!important}.px-md-5{padding-right:3rem!important;padding-left:3rem!important}.py-md-0{padding-top:0!important;padding-bottom:0!important}.py-md-1{padding-top:.25rem!important;padding-bottom:.25rem!important}.py-md-2{padding-top:.5rem!important;padding-bottom:.5rem!important}.py-md-3{padding-top:1rem!important;padding-bottom:1rem!important}.py-md-4{padding-top:1.5rem!important;padding-bottom:1.5rem!important}.py-md-5{padding-top:3rem!important;padding-bottom:3rem!important}.pt-md-0{padding-top:0!important}.pt-md-1{padding-top:.25rem!important}.pt-md-2{padding-top:.5rem!important}.pt-md-3{padding-top:1rem!important}.pt-md-4{padding-top:1.5rem!important}.pt-md-5{padding-top:3rem!important}.pe-md-0{padding-right:0!important}.pe-md-1{padding-right:.25rem!important}.pe-md-2{padding-right:.5rem!important}.pe-md-3{padding-right:1rem!important}.pe-md-4{padding-right:1.5rem!important}.pe-md-5{padding-right:3rem!important}.pb-md-0{padding-bottom:0!important}.pb-md-1{padding-bottom:.25rem!important}.pb-md-2{padding-bottom:.5rem!important}.pb-md-3{padding-bottom:1rem!important}.pb-md-4{padding-bottom:1.5rem!important}.pb-md-5{padding-bottom:3rem!important}.ps-md-0{padding-left:0!important}.ps-md-1{padding-left:.25rem!important}.ps-md-2{padding-left:.5rem!important}.ps-md-3{padding-left:1rem!important}.ps-md-4{padding-left:1.5rem!important}.ps-md-5{padding-left:3rem!important}.text-md-start{text-align:left!important}.text-md-end{text-align:right!important}.text-md-center{text-align:center!important}}@media (min-width:992px){.float-lg-start{float:left!important}.float-lg-end{float:right!important}.float-lg-none{float:none!important}.d-lg-inline{display:inline!important}.d-lg-inline-block{display:inline-block!important}.d-lg-block{display:block!important}.d-lg-grid{display:grid!important}.d-lg-table{display:table!important}.d-lg-table-row{display:table-row!important}.d-lg-table-cell{display:table-cell!important}.d-lg-flex{display:flex!important}.d-lg-inline-flex{display:inline-flex!important}.d-lg-none{display:none!important}.flex-lg-fill{flex:1 1 auto!important}.flex-lg-row{flex-direction:row!important}.flex-lg-column{flex-direction:column!important}.flex-lg-row-reverse{flex-direction:row-reverse!important}.flex-lg-column-reverse{flex-direction:column-reverse!important}.flex-lg-grow-0{flex-grow:0!important}.flex-lg-grow-1{flex-grow:1!important}.flex-lg-shrink-0{flex-shrink:0!important}.flex-lg-shrink-1{flex-shrink:1!important}.flex-lg-wrap{flex-wrap:wrap!important}.flex-lg-nowrap{flex-wrap:nowrap!important}.flex-lg-wrap-reverse{flex-wrap:wrap-reverse!important}.gap-lg-0{gap:0!important}.gap-lg-1{gap:.25rem!important}.gap-lg-2{gap:.5rem!important}.gap-lg-3{gap:1rem!important}.gap-lg-4{gap:1.5rem!important}.gap-lg-5{gap:3rem!important}.justify-content-lg-start{justify-content:flex-start!important}.justify-content-lg-end{justify-content:flex-end!important}.justify-content-lg-center{justify-content:center!important}.justify-content-lg-between{justify-content:space-between!important}.justify-content-lg-around{justify-content:space-around!important}.justify-content-lg-evenly{justify-content:space-evenly!important}.align-items-lg-start{align-items:flex-start!important}.align-items-lg-end{align-items:flex-end!important}.align-items-lg-center{align-items:center!important}.align-items-lg-baseline{align-items:baseline!important}.align-items-lg-stretch{align-items:stretch!important}.align-content-lg-start{align-content:flex-start!important}.align-content-lg-end{align-content:flex-end!important}.align-content-lg-center{align-content:center!important}.align-content-lg-between{align-content:space-between!important}.align-content-lg-around{align-content:space-around!important}.align-content-lg-stretch{align-content:stretch!important}.align-self-lg-auto{align-self:auto!important}.align-self-lg-start{align-self:flex-start!important}.align-self-lg-end{align-self:flex-end!important}.align-self-lg-center{align-self:center!important}.align-self-lg-baseline{align-self:baseline!important}.align-self-lg-stretch{align-self:stretch!important}.order-lg-first{order:-1!important}.order-lg-0{order:0!important}.order-lg-1{order:1!important}.order-lg-2{order:2!important}.order-lg-3{order:3!important}.order-lg-4{order:4!important}.order-lg-5{order:5!important}.order-lg-last{order:6!important}.m-lg-0{margin:0!important}.m-lg-1{margin:.25rem!important}.m-lg-2{margin:.5rem!important}.m-lg-3{margin:1rem!important}.m-lg-4{margin:1.5rem!important}.m-lg-5{margin:3rem!important}.m-lg-auto{margin:auto!important}.mx-lg-0{margin-right:0!important;margin-left:0!important}.mx-lg-1{margin-right:.25rem!important;margin-left:.25rem!important}.mx-lg-2{margin-right:.5rem!important;margin-left:.5rem!important}.mx-lg-3{margin-right:1rem!important;margin-left:1rem!important}.mx-lg-4{margin-right:1.5rem!important;margin-left:1.5rem!important}.mx-lg-5{margin-right:3rem!important;margin-left:3rem!important}.mx-lg-auto{margin-right:auto!important;margin-left:auto!important}.my-lg-0{margin-top:0!important;margin-bottom:0!important}.my-lg-1{margin-top:.25rem!important;margin-bottom:.25rem!important}.my-lg-2{margin-top:.5rem!important;margin-bottom:.5rem!important}.my-lg-3{margin-top:1rem!important;margin-bottom:1rem!important}.my-lg-4{margin-top:1.5rem!important;margin-bottom:1.5rem!important}.my-lg-5{margin-top:3rem!important;margin-bottom:3rem!important}.my-lg-auto{margin-top:auto!important;margin-bottom:auto!important}.mt-lg-0{margin-top:0!important}.mt-lg-1{margin-top:.25rem!important}.mt-lg-2{margin-top:.5rem!important}.mt-lg-3{margin-top:1rem!important}.mt-lg-4{margin-top:1.5rem!important}.mt-lg-5{margin-top:3rem!important}.mt-lg-auto{margin-top:auto!important}.me-lg-0{margin-right:0!important}.me-lg-1{margin-right:.25rem!important}.me-lg-2{margin-right:.5rem!important}.me-lg-3{margin-right:1rem!important}.me-lg-4{margin-right:1.5rem!important}.me-lg-5{margin-right:3rem!important}.me-lg-auto{margin-right:auto!important}.mb-lg-0{margin-bottom:0!important}.mb-lg-1{margin-bottom:.25rem!important}.mb-lg-2{margin-bottom:.5rem!important}.mb-lg-3{margin-bottom:1rem!important}.mb-lg-4{margin-bottom:1.5rem!important}.mb-lg-5{margin-bottom:3rem!important}.mb-lg-auto{margin-bottom:auto!important}.ms-lg-0{margin-left:0!important}.ms-lg-1{margin-left:.25rem!important}.ms-lg-2{margin-left:.5rem!important}.ms-lg-3{margin-left:1rem!important}.ms-lg-4{margin-left:1.5rem!important}.ms-lg-5{margin-left:3rem!important}.ms-lg-auto{margin-left:auto!important}.p-lg-0{padding:0!important}.p-lg-1{padding:.25rem!important}.p-lg-2{padding:.5rem!important}.p-lg-3{padding:1rem!important}.p-lg-4{padding:1.5rem!important}.p-lg-5{padding:3rem!important}.px-lg-0{padding-right:0!important;padding-left:0!important}.px-lg-1{padding-right:.25rem!important;padding-left:.25rem!important}.px-lg-2{padding-right:.5rem!important;padding-left:.5rem!important}.px-lg-3{padding-right:1rem!important;padding-left:1rem!important}.px-lg-4{padding-right:1.5rem!important;padding-left:1.5rem!important}.px-lg-5{padding-right:3rem!important;padding-left:3rem!important}.py-lg-0{padding-top:0!important;padding-bottom:0!important}.py-lg-1{padding-top:.25rem!important;padding-bottom:.25rem!important}.py-lg-2{padding-top:.5rem!important;padding-bottom:.5rem!important}.py-lg-3{padding-top:1rem!important;padding-bottom:1rem!important}.py-lg-4{padding-top:1.5rem!important;padding-bottom:1.5rem!important}.py-lg-5{padding-top:3rem!important;padding-bottom:3rem!important}.pt-lg-0{padding-top:0!important}.pt-lg-1{padding-top:.25rem!important}.pt-lg-2{padding-top:.5rem!important}.pt-lg-3{padding-top:1rem!important}.pt-lg-4{padding-top:1.5rem!important}.pt-lg-5{padding-top:3rem!important}.pe-lg-0{padding-right:0!important}.pe-lg-1{padding-right:.25rem!important}.pe-lg-2{padding-right:.5rem!important}.pe-lg-3{padding-right:1rem!important}.pe-lg-4{padding-right:1.5rem!important}.pe-lg-5{padding-right:3rem!important}.pb-lg-0{padding-bottom:0!important}.pb-lg-1{padding-bottom:.25rem!important}.pb-lg-2{padding-bottom:.5rem!important}.pb-lg-3{padding-bottom:1rem!important}.pb-lg-4{padding-bottom:1.5rem!important}.pb-lg-5{padding-bottom:3rem!important}.ps-lg-0{padding-left:0!important}.ps-lg-1{padding-left:.25rem!important}.ps-lg-2{padding-left:.5rem!important}.ps-lg-3{padding-left:1rem!important}.ps-lg-4{padding-left:1.5rem!important}.ps-lg-5{padding-left:3rem!important}.text-lg-start{text-align:left!important}.text-lg-end{text-align:right!important}.text-lg-center{text-align:center!important}}@media (min-width:1200px){.float-xl-start{float:left!important}.float-xl-end{float:right!important}.float-xl-none{float:none!important}.d-xl-inline{display:inline!important}.d-xl-inline-block{display:inline-block!important}.d-xl-block{display:block!important}.d-xl-grid{display:grid!important}.d-xl-table{display:table!important}.d-xl-table-row{display:table-row!important}.d-xl-table-cell{display:table-cell!important}.d-xl-flex{display:flex!important}.d-xl-inline-flex{display:inline-flex!important}.d-xl-none{display:none!important}.flex-xl-fill{flex:1 1 auto!important}.flex-xl-row{flex-direction:row!important}.flex-xl-column{flex-direction:column!important}.flex-xl-row-reverse{flex-direction:row-reverse!important}.flex-xl-column-reverse{flex-direction:column-reverse!important}.flex-xl-grow-0{flex-grow:0!important}.flex-xl-grow-1{flex-grow:1!important}.flex-xl-shrink-0{flex-shrink:0!important}.flex-xl-shrink-1{flex-shrink:1!important}.flex-xl-wrap{flex-wrap:wrap!important}.flex-xl-nowrap{flex-wrap:nowrap!important}.flex-xl-wrap-reverse{flex-wrap:wrap-reverse!important}.gap-xl-0{gap:0!important}.gap-xl-1{gap:.25rem!important}.gap-xl-2{gap:.5rem!important}.gap-xl-3{gap:1rem!important}.gap-xl-4{gap:1.5rem!important}.gap-xl-5{gap:3rem!important}.justify-content-xl-start{justify-content:flex-start!important}.justify-content-xl-end{justify-content:flex-end!important}.justify-content-xl-center{justify-content:center!important}.justify-content-xl-between{justify-content:space-between!important}.justify-content-xl-around{justify-content:space-around!important}.justify-content-xl-evenly{justify-content:space-evenly!important}.align-items-xl-start{align-items:flex-start!important}.align-items-xl-end{align-items:flex-end!important}.align-items-xl-center{align-items:center!important}.align-items-xl-baseline{align-items:baseline!important}.align-items-xl-stretch{align-items:stretch!important}.align-content-xl-start{align-content:flex-start!important}.align-content-xl-end{align-content:flex-end!important}.align-content-xl-center{align-content:center!important}.align-content-xl-between{align-content:space-between!important}.align-content-xl-around{align-content:space-around!important}.align-content-xl-stretch{align-content:stretch!important}.align-self-xl-auto{align-self:auto!important}.align-self-xl-start{align-self:flex-start!important}.align-self-xl-end{align-self:flex-end!important}.align-self-xl-center{align-self:center!important}.align-self-xl-baseline{align-self:baseline!important}.align-self-xl-stretch{align-self:stretch!important}.order-xl-first{order:-1!important}.order-xl-0{order:0!important}.order-xl-1{order:1!important}.order-xl-2{order:2!important}.order-xl-3{order:3!important}.order-xl-4{order:4!important}.order-xl-5{order:5!important}.order-xl-last{order:6!important}.m-xl-0{margin:0!important}.m-xl-1{margin:.25rem!important}.m-xl-2{margin:.5rem!important}.m-xl-3{margin:1rem!important}.m-xl-4{margin:1.5rem!important}.m-xl-5{margin:3rem!important}.m-xl-auto{margin:auto!important}.mx-xl-0{margin-right:0!important;margin-left:0!important}.mx-xl-1{margin-right:.25rem!important;margin-left:.25rem!important}.mx-xl-2{margin-right:.5rem!important;margin-left:.5rem!important}.mx-xl-3{margin-right:1rem!important;margin-left:1rem!important}.mx-xl-4{margin-right:1.5rem!important;margin-left:1.5rem!important}.mx-xl-5{margin-right:3rem!important;margin-left:3rem!important}.mx-xl-auto{margin-right:auto!important;margin-left:auto!important}.my-xl-0{margin-top:0!important;margin-bottom:0!important}.my-xl-1{margin-top:.25rem!important;margin-bottom:.25rem!important}.my-xl-2{margin-top:.5rem!important;margin-bottom:.5rem!important}.my-xl-3{margin-top:1rem!important;margin-bottom:1rem!important}.my-xl-4{margin-top:1.5rem!important;margin-bottom:1.5rem!important}.my-xl-5{margin-top:3rem!important;margin-bottom:3rem!important}.my-xl-auto{margin-top:auto!important;margin-bottom:auto!important}.mt-xl-0{margin-top:0!important}.mt-xl-1{margin-top:.25rem!important}.mt-xl-2{margin-top:.5rem!important}.mt-xl-3{margin-top:1rem!important}.mt-xl-4{margin-top:1.5rem!important}.mt-xl-5{margin-top:3rem!important}.mt-xl-auto{margin-top:auto!important}.me-xl-0{margin-right:0!important}.me-xl-1{margin-right:.25rem!important}.me-xl-2{margin-right:.5rem!important}.me-xl-3{margin-right:1rem!important}.me-xl-4{margin-right:1.5rem!important}.me-xl-5{margin-right:3rem!important}.me-xl-auto{margin-right:auto!important}.mb-xl-0{margin-bottom:0!important}.mb-xl-1{margin-bottom:.25rem!important}.mb-xl-2{margin-bottom:.5rem!important}.mb-xl-3{margin-bottom:1rem!important}.mb-xl-4{margin-bottom:1.5rem!important}.mb-xl-5{margin-bottom:3rem!important}.mb-xl-auto{margin-bottom:auto!important}.ms-xl-0{margin-left:0!important}.ms-xl-1{margin-left:.25rem!important}.ms-xl-2{margin-left:.5rem!important}.ms-xl-3{margin-left:1rem!important}.ms-xl-4{margin-left:1.5rem!important}.ms-xl-5{margin-left:3rem!important}.ms-xl-auto{margin-left:auto!important}.p-xl-0{padding:0!important}.p-xl-1{padding:.25rem!important}.p-xl-2{padding:.5rem!important}.p-xl-3{padding:1rem!important}.p-xl-4{padding:1.5rem!important}.p-xl-5{padding:3rem!important}.px-xl-0{padding-right:0!important;padding-left:0!important}.px-xl-1{padding-right:.25rem!important;padding-left:.25rem!important}.px-xl-2{padding-right:.5rem!important;padding-left:.5rem!important}.px-xl-3{padding-right:1rem!important;padding-left:1rem!important}.px-xl-4{padding-right:1.5rem!important;padding-left:1.5rem!important}.px-xl-5{padding-right:3rem!important;padding-left:3rem!important}.py-xl-0{padding-top:0!important;padding-bottom:0!important}.py-xl-1{padding-top:.25rem!important;padding-bottom:.25rem!important}.py-xl-2{padding-top:.5rem!important;padding-bottom:.5rem!important}.py-xl-3{padding-top:1rem!important;padding-bottom:1rem!important}.py-xl-4{padding-top:1.5rem!important;padding-bottom:1.5rem!important}.py-xl-5{padding-top:3rem!important;padding-bottom:3rem!important}.pt-xl-0{padding-top:0!important}.pt-xl-1{padding-top:.25rem!important}.pt-xl-2{padding-top:.5rem!important}.pt-xl-3{padding-top:1rem!important}.pt-xl-4{padding-top:1.5rem!important}.pt-xl-5{padding-top:3rem!important}.pe-xl-0{padding-right:0!important}.pe-xl-1{padding-right:.25rem!important}.pe-xl-2{padding-right:.5rem!important}.pe-xl-3{padding-right:1rem!important}.pe-xl-4{padding-right:1.5rem!important}.pe-xl-5{padding-right:3rem!important}.pb-xl-0{padding-bottom:0!important}.pb-xl-1{padding-bottom:.25rem!important}.pb-xl-2{padding-bottom:.5rem!important}.pb-xl-3{padding-bottom:1rem!important}.pb-xl-4{padding-bottom:1.5rem!important}.pb-xl-5{padding-bottom:3rem!important}.ps-xl-0{padding-left:0!important}.ps-xl-1{padding-left:.25rem!important}.ps-xl-2{padding-left:.5rem!important}.ps-xl-3{padding-left:1rem!important}.ps-xl-4{padding-left:1.5rem!important}.ps-xl-5{padding-left:3rem!important}.text-xl-start{text-align:left!important}.text-xl-end{text-align:right!important}.text-xl-center{text-align:center!important}}@media (min-width:1400px){.float-xxl-start{float:left!important}.float-xxl-end{float:right!important}.float-xxl-none{float:none!important}.d-xxl-inline{display:inline!important}.d-xxl-inline-block{display:inline-block!important}.d-xxl-block{display:block!important}.d-xxl-grid{display:grid!important}.d-xxl-table{display:table!important}.d-xxl-table-row{display:table-row!important}.d-xxl-table-cell{display:table-cell!important}.d-xxl-flex{display:flex!important}.d-xxl-inline-flex{display:inline-flex!important}.d-xxl-none{display:none!important}.flex-xxl-fill{flex:1 1 auto!important}.flex-xxl-row{flex-direction:row!important}.flex-xxl-column{flex-direction:column!important}.flex-xxl-row-reverse{flex-direction:row-reverse!important}.flex-xxl-column-reverse{flex-direction:column-reverse!important}.flex-xxl-grow-0{flex-grow:0!important}.flex-xxl-grow-1{flex-grow:1!important}.flex-xxl-shrink-0{flex-shrink:0!important}.flex-xxl-shrink-1{flex-shrink:1!important}.flex-xxl-wrap{flex-wrap:wrap!important}.flex-xxl-nowrap{flex-wrap:nowrap!important}.flex-xxl-wrap-reverse{flex-wrap:wrap-reverse!important}.gap-xxl-0{gap:0!important}.gap-xxl-1{gap:.25rem!important}.gap-xxl-2{gap:.5rem!important}.gap-xxl-3{gap:1rem!important}.gap-xxl-4{gap:1.5rem!important}.gap-xxl-5{gap:3rem!important}.justify-content-xxl-start{justify-content:flex-start!important}.justify-content-xxl-end{justify-content:flex-end!important}.justify-content-xxl-center{justify-content:center!important}.justify-content-xxl-between{justify-content:space-between!important}.justify-content-xxl-around{justify-content:space-around!important}.justify-content-xxl-evenly{justify-content:space-evenly!important}.align-items-xxl-start{align-items:flex-start!important}.align-items-xxl-end{align-items:flex-end!important}.align-items-xxl-center{align-items:center!important}.align-items-xxl-baseline{align-items:baseline!important}.align-items-xxl-stretch{align-items:stretch!important}.align-content-xxl-start{align-content:flex-start!important}.align-content-xxl-end{align-content:flex-end!important}.align-content-xxl-center{align-content:center!important}.align-content-xxl-between{align-content:space-between!important}.align-content-xxl-around{align-content:space-around!important}.align-content-xxl-stretch{align-content:stretch!important}.align-self-xxl-auto{align-self:auto!important}.align-self-xxl-start{align-self:flex-start!important}.align-self-xxl-end{align-self:flex-end!important}.align-self-xxl-center{align-self:center!important}.align-self-xxl-baseline{align-self:baseline!important}.align-self-xxl-stretch{align-self:stretch!important}.order-xxl-first{order:-1!important}.order-xxl-0{order:0!important}.order-xxl-1{order:1!important}.order-xxl-2{order:2!important}.order-xxl-3{order:3!important}.order-xxl-4{order:4!important}.order-xxl-5{order:5!important}.order-xxl-last{order:6!important}.m-xxl-0{margin:0!important}.m-xxl-1{margin:.25rem!important}.m-xxl-2{margin:.5rem!important}.m-xxl-3{margin:1rem!important}.m-xxl-4{margin:1.5rem!important}.m-xxl-5{margin:3rem!important}.m-xxl-auto{margin:auto!important}.mx-xxl-0{margin-right:0!important;margin-left:0!important}.mx-xxl-1{margin-right:.25rem!important;margin-left:.25rem!important}.mx-xxl-2{margin-right:.5rem!important;margin-left:.5rem!important}.mx-xxl-3{margin-right:1rem!important;margin-left:1rem!important}.mx-xxl-4{margin-right:1.5rem!important;margin-left:1.5rem!important}.mx-xxl-5{margin-right:3rem!important;margin-left:3rem!important}.mx-xxl-auto{margin-right:auto!important;margin-left:auto!important}.my-xxl-0{margin-top:0!important;margin-bottom:0!important}.my-xxl-1{margin-top:.25rem!important;margin-bottom:.25rem!important}.my-xxl-2{margin-top:.5rem!important;margin-bottom:.5rem!important}.my-xxl-3{margin-top:1rem!important;margin-bottom:1rem!important}.my-xxl-4{margin-top:1.5rem!important;margin-bottom:1.5rem!important}.my-xxl-5{margin-top:3rem!important;margin-bottom:3rem!important}.my-xxl-auto{margin-top:auto!important;margin-bottom:auto!important}.mt-xxl-0{margin-top:0!important}.mt-xxl-1{margin-top:.25rem!important}.mt-xxl-2{margin-top:.5rem!important}.mt-xxl-3{margin-top:1rem!important}.mt-xxl-4{margin-top:1.5rem!important}.mt-xxl-5{margin-top:3rem!important}.mt-xxl-auto{margin-top:auto!important}.me-xxl-0{margin-right:0!important}.me-xxl-1{margin-right:.25rem!important}.me-xxl-2{margin-right:.5rem!important}.me-xxl-3{margin-right:1rem!important}.me-xxl-4{margin-right:1.5rem!important}.me-xxl-5{margin-right:3rem!important}.me-xxl-auto{margin-right:auto!important}.mb-xxl-0{margin-bottom:0!important}.mb-xxl-1{margin-bottom:.25rem!important}.mb-xxl-2{margin-bottom:.5rem!important}.mb-xxl-3{margin-bottom:1rem!important}.mb-xxl-4{margin-bottom:1.5rem!important}.mb-xxl-5{margin-bottom:3rem!important}.mb-xxl-auto{margin-bottom:auto!important}.ms-xxl-0{margin-left:0!important}.ms-xxl-1{margin-left:.25rem!important}.ms-xxl-2{margin-left:.5rem!important}.ms-xxl-3{margin-left:1rem!important}.ms-xxl-4{margin-left:1.5rem!important}.ms-xxl-5{margin-left:3rem!important}.ms-xxl-auto{margin-left:auto!important}.p-xxl-0{padding:0!important}.p-xxl-1{padding:.25rem!important}.p-xxl-2{padding:.5rem!important}.p-xxl-3{padding:1rem!important}.p-xxl-4{padding:1.5rem!important}.p-xxl-5{padding:3rem!important}.px-xxl-0{padding-right:0!important;padding-left:0!important}.px-xxl-1{padding-right:.25rem!important;padding-left:.25rem!important}.px-xxl-2{padding-right:.5rem!important;padding-left:.5rem!important}.px-xxl-3{padding-right:1rem!important;padding-left:1rem!important}.px-xxl-4{padding-right:1.5rem!important;padding-left:1.5rem!important}.px-xxl-5{padding-right:3rem!important;padding-left:3rem!important}.py-xxl-0{padding-top:0!important;padding-bottom:0!important}.py-xxl-1{padding-top:.25rem!important;padding-bottom:.25rem!important}.py-xxl-2{padding-top:.5rem!important;padding-bottom:.5rem!important}.py-xxl-3{padding-top:1rem!important;padding-bottom:1rem!important}.py-xxl-4{padding-top:1.5rem!important;padding-bottom:1.5rem!important}.py-xxl-5{padding-top:3rem!important;padding-bottom:3rem!important}.pt-xxl-0{padding-top:0!important}.pt-xxl-1{padding-top:.25rem!important}.pt-xxl-2{padding-top:.5rem!important}.pt-xxl-3{padding-top:1rem!important}.pt-xxl-4{padding-top:1.5rem!important}.pt-xxl-5{padding-top:3rem!important}.pe-xxl-0{padding-right:0!important}.pe-xxl-1{padding-right:.25rem!important}.pe-xxl-2{padding-right:.5rem!important}.pe-xxl-3{padding-right:1rem!important}.pe-xxl-4{padding-right:1.5rem!important}.pe-xxl-5{padding-right:3rem!important}.pb-xxl-0{padding-bottom:0!important}.pb-xxl-1{padding-bottom:.25rem!important}.pb-xxl-2{padding-bottom:.5rem!important}.pb-xxl-3{padding-bottom:1rem!important}.pb-xxl-4{padding-bottom:1.5rem!important}.pb-xxl-5{padding-bottom:3rem!important}.ps-xxl-0{padding-left:0!important}.ps-xxl-1{padding-left:.25rem!important}.ps-xxl-2{padding-left:.5rem!important}.ps-xxl-3{padding-left:1rem!important}.ps-xxl-4{padding-left:1.5rem!important}.ps-xxl-5{padding-left:3rem!important}.text-xxl-start{text-align:left!important}.text-xxl-end{text-align:right!important}.text-xxl-center{text-align:center!important}}@media (min-width:1200px){.fs-1{font-size:2.5rem!important}.fs-2{font-size:2rem!important}.fs-3{font-size:1.75rem!important}.fs-4{font-size:1.5rem!important}}@media print{.d-print-inline{display:inline!important}.d-print-inline-block{display:inline-block!important}.d-print-block{display:block!important}.d-print-grid{display:grid!important}.d-print-table{display:table!important}.d-print-table-row{display:table-row!important}.d-print-table-cell{display:table-cell!important}.d-print-flex{display:flex!important}.d-print-inline-flex{display:inline-flex!important}.d-print-none{display:none!important}}\\n/*# sourceMappingURL=bootstrap.min.css.map */", "",{"version":3,"sources":["webpack://./node_modules/bootstrap/dist/css/bootstrap.min.css","webpack://./node_modules/bootstrap/scss/bootstrap.scss","webpack://./node_modules/bootstrap/scss/_root.scss","webpack://./node_modules/bootstrap/dist/css/dist/css/bootstrap.css","webpack://./node_modules/bootstrap/scss/_reboot.scss","webpack://./node_modules/bootstrap/scss/vendor/_rfs.scss","webpack://./node_modules/bootstrap/scss/mixins/_border-radius.scss","webpack://./node_modules/bootstrap/scss/_type.scss","webpack://./node_modules/bootstrap/scss/mixins/_lists.scss","webpack://./node_modules/bootstrap/scss/_images.scss","webpack://./node_modules/bootstrap/scss/mixins/_image.scss","webpack://./node_modules/bootstrap/scss/_containers.scss","webpack://./node_modules/bootstrap/scss/mixins/_container.scss","webpack://./node_modules/bootstrap/scss/mixins/_breakpoints.scss","webpack://./node_modules/bootstrap/scss/_grid.scss","webpack://./node_modules/bootstrap/scss/mixins/_grid.scss","webpack://./node_modules/bootstrap/scss/_tables.scss","webpack://./node_modules/bootstrap/scss/mixins/_table-variants.scss","webpack://./node_modules/bootstrap/scss/forms/_labels.scss","webpack://./node_modules/bootstrap/scss/forms/_form-text.scss","webpack://./node_modules/bootstrap/scss/forms/_form-control.scss","webpack://./node_modules/bootstrap/scss/mixins/_transition.scss","webpack://./node_modules/bootstrap/scss/mixins/_gradients.scss","webpack://./node_modules/bootstrap/scss/forms/_form-select.scss","webpack://./node_modules/bootstrap/scss/forms/_form-check.scss","webpack://./node_modules/bootstrap/scss/forms/_form-range.scss","webpack://./node_modules/bootstrap/scss/forms/_floating-labels.scss","webpack://./node_modules/bootstrap/scss/forms/_input-group.scss","webpack://./node_modules/bootstrap/scss/mixins/_forms.scss","webpack://./node_modules/bootstrap/scss/_buttons.scss","webpack://./node_modules/bootstrap/scss/mixins/_buttons.scss","webpack://./node_modules/bootstrap/scss/_transitions.scss","webpack://./node_modules/bootstrap/scss/_dropdown.scss","webpack://./node_modules/bootstrap/scss/mixins/_caret.scss","webpack://./node_modules/bootstrap/scss/_button-group.scss","webpack://./node_modules/bootstrap/scss/_nav.scss","webpack://./node_modules/bootstrap/scss/_navbar.scss","webpack://./node_modules/bootstrap/scss/_card.scss","webpack://./node_modules/bootstrap/scss/_accordion.scss","webpack://./node_modules/bootstrap/scss/_breadcrumb.scss","webpack://./node_modules/bootstrap/scss/_pagination.scss","webpack://./node_modules/bootstrap/scss/mixins/_pagination.scss","webpack://./node_modules/bootstrap/scss/_badge.scss","webpack://./node_modules/bootstrap/scss/_alert.scss","webpack://./node_modules/bootstrap/scss/mixins/_alert.scss","webpack://./node_modules/bootstrap/scss/_progress.scss","webpack://./node_modules/bootstrap/scss/_list-group.scss","webpack://./node_modules/bootstrap/scss/mixins/_list-group.scss","webpack://./node_modules/bootstrap/scss/_close.scss","webpack://./node_modules/bootstrap/scss/_toasts.scss","webpack://./node_modules/bootstrap/scss/_modal.scss","webpack://./node_modules/bootstrap/scss/mixins/_backdrop.scss","webpack://./node_modules/bootstrap/scss/_tooltip.scss","webpack://./node_modules/bootstrap/scss/mixins/_reset-text.scss","webpack://./node_modules/bootstrap/scss/_popover.scss","webpack://./node_modules/bootstrap/scss/_carousel.scss","webpack://./node_modules/bootstrap/scss/mixins/_clearfix.scss","webpack://./node_modules/bootstrap/scss/_spinners.scss","webpack://./node_modules/bootstrap/scss/_offcanvas.scss","webpack://./node_modules/bootstrap/scss/_placeholders.scss","webpack://./node_modules/bootstrap/scss/helpers/_colored-links.scss","webpack://./node_modules/bootstrap/scss/helpers/_ratio.scss","webpack://./node_modules/bootstrap/scss/helpers/_position.scss","webpack://./node_modules/bootstrap/scss/helpers/_stacks.scss","webpack://./node_modules/bootstrap/scss/helpers/_visually-hidden.scss","webpack://./node_modules/bootstrap/scss/mixins/_visually-hidden.scss","webpack://./node_modules/bootstrap/scss/helpers/_stretched-link.scss","webpack://./node_modules/bootstrap/scss/helpers/_text-truncation.scss","webpack://./node_modules/bootstrap/scss/mixins/_text-truncate.scss","webpack://./node_modules/bootstrap/scss/helpers/_vr.scss","webpack://./node_modules/bootstrap/scss/mixins/_utilities.scss","webpack://./node_modules/bootstrap/scss/utilities/_api.scss"],"names":[],"mappings":"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","sourcesContent":["@charset \\"UTF-8\\";/*!\\n * Bootstrap v5.1.0 (https://getbootstrap.com/)\\n * Copyright 2011-2021 The Bootstrap Authors\\n * Copyright 2011-2021 Twitter, Inc.\\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\\n */:root{--bs-blue:#0d6efd;--bs-indigo:#6610f2;--bs-purple:#6f42c1;--bs-pink:#d63384;--bs-red:#dc3545;--bs-orange:#fd7e14;--bs-yellow:#ffc107;--bs-green:#198754;--bs-teal:#20c997;--bs-cyan:#0dcaf0;--bs-white:#fff;--bs-gray:#6c757d;--bs-gray-dark:#343a40;--bs-gray-100:#f8f9fa;--bs-gray-200:#e9ecef;--bs-gray-300:#dee2e6;--bs-gray-400:#ced4da;--bs-gray-500:#adb5bd;--bs-gray-600:#6c757d;--bs-gray-700:#495057;--bs-gray-800:#343a40;--bs-gray-900:#212529;--bs-primary:#0d6efd;--bs-secondary:#6c757d;--bs-success:#198754;--bs-info:#0dcaf0;--bs-warning:#ffc107;--bs-danger:#dc3545;--bs-light:#f8f9fa;--bs-dark:#212529;--bs-primary-rgb:13,110,253;--bs-secondary-rgb:108,117,125;--bs-success-rgb:25,135,84;--bs-info-rgb:13,202,240;--bs-warning-rgb:255,193,7;--bs-danger-rgb:220,53,69;--bs-light-rgb:248,249,250;--bs-dark-rgb:33,37,41;--bs-white-rgb:255,255,255;--bs-black-rgb:0,0,0;--bs-body-rgb:33,37,41;--bs-font-sans-serif:system-ui,-apple-system,\\"Segoe UI\\",Roboto,\\"Helvetica Neue\\",Arial,\\"Noto Sans\\",\\"Liberation Sans\\",sans-serif,\\"Apple Color Emoji\\",\\"Segoe UI Emoji\\",\\"Segoe UI Symbol\\",\\"Noto Color Emoji\\";--bs-font-monospace:SFMono-Regular,Menlo,Monaco,Consolas,\\"Liberation Mono\\",\\"Courier New\\",monospace;--bs-gradient:linear-gradient(180deg, rgba(255, 255, 255, 0.15), rgba(255, 255, 255, 0));--bs-body-font-family:var(--bs-font-sans-serif);--bs-body-font-size:1rem;--bs-body-font-weight:400;--bs-body-line-height:1.5;--bs-body-color:#212529;--bs-body-bg:#fff}*,::after,::before{box-sizing:border-box}@media (prefers-reduced-motion:no-preference){:root{scroll-behavior:smooth}}body{margin:0;font-family:var(--bs-body-font-family);font-size:var(--bs-body-font-size);font-weight:var(--bs-body-font-weight);line-height:var(--bs-body-line-height);color:var(--bs-body-color);text-align:var(--bs-body-text-align);background-color:var(--bs-body-bg);-webkit-text-size-adjust:100%;-webkit-tap-highlight-color:transparent}hr{margin:1rem 0;color:inherit;background-color:currentColor;border:0;opacity:.25}hr:not([size]){height:1px}.h1,.h2,.h3,.h4,.h5,.h6,h1,h2,h3,h4,h5,h6{margin-top:0;margin-bottom:.5rem;font-weight:500;line-height:1.2}.h1,h1{font-size:calc(1.375rem + 1.5vw)}@media (min-width:1200px){.h1,h1{font-size:2.5rem}}.h2,h2{font-size:calc(1.325rem + .9vw)}@media (min-width:1200px){.h2,h2{font-size:2rem}}.h3,h3{font-size:calc(1.3rem + .6vw)}@media (min-width:1200px){.h3,h3{font-size:1.75rem}}.h4,h4{font-size:calc(1.275rem + .3vw)}@media (min-width:1200px){.h4,h4{font-size:1.5rem}}.h5,h5{font-size:1.25rem}.h6,h6{font-size:1rem}p{margin-top:0;margin-bottom:1rem}abbr[data-bs-original-title],abbr[title]{-webkit-text-decoration:underline dotted;text-decoration:underline dotted;cursor:help;-webkit-text-decoration-skip-ink:none;text-decoration-skip-ink:none}address{margin-bottom:1rem;font-style:normal;line-height:inherit}ol,ul{padding-left:2rem}dl,ol,ul{margin-top:0;margin-bottom:1rem}ol ol,ol ul,ul ol,ul ul{margin-bottom:0}dt{font-weight:700}dd{margin-bottom:.5rem;margin-left:0}blockquote{margin:0 0 1rem}b,strong{font-weight:bolder}.small,small{font-size:.875em}.mark,mark{padding:.2em;background-color:#fcf8e3}sub,sup{position:relative;font-size:.75em;line-height:0;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}a{color:#0d6efd;text-decoration:underline}a:hover{color:#0a58ca}a:not([href]):not([class]),a:not([href]):not([class]):hover{color:inherit;text-decoration:none}code,kbd,pre,samp{font-family:var(--bs-font-monospace);font-size:1em;direction:ltr;unicode-bidi:bidi-override}pre{display:block;margin-top:0;margin-bottom:1rem;overflow:auto;font-size:.875em}pre code{font-size:inherit;color:inherit;word-break:normal}code{font-size:.875em;color:#d63384;word-wrap:break-word}a>code{color:inherit}kbd{padding:.2rem .4rem;font-size:.875em;color:#fff;background-color:#212529;border-radius:.2rem}kbd kbd{padding:0;font-size:1em;font-weight:700}figure{margin:0 0 1rem}img,svg{vertical-align:middle}table{caption-side:bottom;border-collapse:collapse}caption{padding-top:.5rem;padding-bottom:.5rem;color:#6c757d;text-align:left}th{text-align:inherit;text-align:-webkit-match-parent}tbody,td,tfoot,th,thead,tr{border-color:inherit;border-style:solid;border-width:0}label{display:inline-block}button{border-radius:0}button:focus:not(:focus-visible){outline:0}button,input,optgroup,select,textarea{margin:0;font-family:inherit;font-size:inherit;line-height:inherit}button,select{text-transform:none}[role=button]{cursor:pointer}select{word-wrap:normal}select:disabled{opacity:1}[list]::-webkit-calendar-picker-indicator{display:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]:not(:disabled),[type=reset]:not(:disabled),[type=submit]:not(:disabled),button:not(:disabled){cursor:pointer}::-moz-focus-inner{padding:0;border-style:none}textarea{resize:vertical}fieldset{min-width:0;padding:0;margin:0;border:0}legend{float:left;width:100%;padding:0;margin-bottom:.5rem;font-size:calc(1.275rem + .3vw);line-height:inherit}@media (min-width:1200px){legend{font-size:1.5rem}}legend+*{clear:left}::-webkit-datetime-edit-day-field,::-webkit-datetime-edit-fields-wrapper,::-webkit-datetime-edit-hour-field,::-webkit-datetime-edit-minute,::-webkit-datetime-edit-month-field,::-webkit-datetime-edit-text,::-webkit-datetime-edit-year-field{padding:0}::-webkit-inner-spin-button{height:auto}[type=search]{outline-offset:-2px;-webkit-appearance:textfield}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-color-swatch-wrapper{padding:0}::file-selector-button{font:inherit}::-webkit-file-upload-button{font:inherit;-webkit-appearance:button}output{display:inline-block}iframe{border:0}summary{display:list-item;cursor:pointer}progress{vertical-align:baseline}[hidden]{display:none!important}.lead{font-size:1.25rem;font-weight:300}.display-1{font-size:calc(1.625rem + 4.5vw);font-weight:300;line-height:1.2}@media (min-width:1200px){.display-1{font-size:5rem}}.display-2{font-size:calc(1.575rem + 3.9vw);font-weight:300;line-height:1.2}@media (min-width:1200px){.display-2{font-size:4.5rem}}.display-3{font-size:calc(1.525rem + 3.3vw);font-weight:300;line-height:1.2}@media (min-width:1200px){.display-3{font-size:4rem}}.display-4{font-size:calc(1.475rem + 2.7vw);font-weight:300;line-height:1.2}@media (min-width:1200px){.display-4{font-size:3.5rem}}.display-5{font-size:calc(1.425rem + 2.1vw);font-weight:300;line-height:1.2}@media (min-width:1200px){.display-5{font-size:3rem}}.display-6{font-size:calc(1.375rem + 1.5vw);font-weight:300;line-height:1.2}@media (min-width:1200px){.display-6{font-size:2.5rem}}.list-unstyled{padding-left:0;list-style:none}.list-inline{padding-left:0;list-style:none}.list-inline-item{display:inline-block}.list-inline-item:not(:last-child){margin-right:.5rem}.initialism{font-size:.875em;text-transform:uppercase}.blockquote{margin-bottom:1rem;font-size:1.25rem}.blockquote>:last-child{margin-bottom:0}.blockquote-footer{margin-top:-1rem;margin-bottom:1rem;font-size:.875em;color:#6c757d}.blockquote-footer::before{content:\\"— \\"}.img-fluid{max-width:100%;height:auto}.img-thumbnail{padding:.25rem;background-color:#fff;border:1px solid #dee2e6;border-radius:.25rem;max-width:100%;height:auto}.figure{display:inline-block}.figure-img{margin-bottom:.5rem;line-height:1}.figure-caption{font-size:.875em;color:#6c757d}.container,.container-fluid,.container-lg,.container-md,.container-sm,.container-xl,.container-xxl{width:100%;padding-right:var(--bs-gutter-x,.75rem);padding-left:var(--bs-gutter-x,.75rem);margin-right:auto;margin-left:auto}@media (min-width:576px){.container,.container-sm{max-width:540px}}@media (min-width:768px){.container,.container-md,.container-sm{max-width:720px}}@media (min-width:992px){.container,.container-lg,.container-md,.container-sm{max-width:960px}}@media (min-width:1200px){.container,.container-lg,.container-md,.container-sm,.container-xl{max-width:1140px}}@media (min-width:1400px){.container,.container-lg,.container-md,.container-sm,.container-xl,.container-xxl{max-width:1320px}}.row{--bs-gutter-x:1.5rem;--bs-gutter-y:0;display:flex;flex-wrap:wrap;margin-top:calc(var(--bs-gutter-y) * -1);margin-right:calc(var(--bs-gutter-x) * -.5);margin-left:calc(var(--bs-gutter-x) * -.5)}.row>*{flex-shrink:0;width:100%;max-width:100%;padding-right:calc(var(--bs-gutter-x) * .5);padding-left:calc(var(--bs-gutter-x) * .5);margin-top:var(--bs-gutter-y)}.col{flex:1 0 0%}.row-cols-auto>*{flex:0 0 auto;width:auto}.row-cols-1>*{flex:0 0 auto;width:100%}.row-cols-2>*{flex:0 0 auto;width:50%}.row-cols-3>*{flex:0 0 auto;width:33.3333333333%}.row-cols-4>*{flex:0 0 auto;width:25%}.row-cols-5>*{flex:0 0 auto;width:20%}.row-cols-6>*{flex:0 0 auto;width:16.6666666667%}.col-auto{flex:0 0 auto;width:auto}.col-1{flex:0 0 auto;width:8.33333333%}.col-2{flex:0 0 auto;width:16.66666667%}.col-3{flex:0 0 auto;width:25%}.col-4{flex:0 0 auto;width:33.33333333%}.col-5{flex:0 0 auto;width:41.66666667%}.col-6{flex:0 0 auto;width:50%}.col-7{flex:0 0 auto;width:58.33333333%}.col-8{flex:0 0 auto;width:66.66666667%}.col-9{flex:0 0 auto;width:75%}.col-10{flex:0 0 auto;width:83.33333333%}.col-11{flex:0 0 auto;width:91.66666667%}.col-12{flex:0 0 auto;width:100%}.offset-1{margin-left:8.33333333%}.offset-2{margin-left:16.66666667%}.offset-3{margin-left:25%}.offset-4{margin-left:33.33333333%}.offset-5{margin-left:41.66666667%}.offset-6{margin-left:50%}.offset-7{margin-left:58.33333333%}.offset-8{margin-left:66.66666667%}.offset-9{margin-left:75%}.offset-10{margin-left:83.33333333%}.offset-11{margin-left:91.66666667%}.g-0,.gx-0{--bs-gutter-x:0}.g-0,.gy-0{--bs-gutter-y:0}.g-1,.gx-1{--bs-gutter-x:0.25rem}.g-1,.gy-1{--bs-gutter-y:0.25rem}.g-2,.gx-2{--bs-gutter-x:0.5rem}.g-2,.gy-2{--bs-gutter-y:0.5rem}.g-3,.gx-3{--bs-gutter-x:1rem}.g-3,.gy-3{--bs-gutter-y:1rem}.g-4,.gx-4{--bs-gutter-x:1.5rem}.g-4,.gy-4{--bs-gutter-y:1.5rem}.g-5,.gx-5{--bs-gutter-x:3rem}.g-5,.gy-5{--bs-gutter-y:3rem}@media (min-width:576px){.col-sm{flex:1 0 0%}.row-cols-sm-auto>*{flex:0 0 auto;width:auto}.row-cols-sm-1>*{flex:0 0 auto;width:100%}.row-cols-sm-2>*{flex:0 0 auto;width:50%}.row-cols-sm-3>*{flex:0 0 auto;width:33.3333333333%}.row-cols-sm-4>*{flex:0 0 auto;width:25%}.row-cols-sm-5>*{flex:0 0 auto;width:20%}.row-cols-sm-6>*{flex:0 0 auto;width:16.6666666667%}.col-sm-auto{flex:0 0 auto;width:auto}.col-sm-1{flex:0 0 auto;width:8.33333333%}.col-sm-2{flex:0 0 auto;width:16.66666667%}.col-sm-3{flex:0 0 auto;width:25%}.col-sm-4{flex:0 0 auto;width:33.33333333%}.col-sm-5{flex:0 0 auto;width:41.66666667%}.col-sm-6{flex:0 0 auto;width:50%}.col-sm-7{flex:0 0 auto;width:58.33333333%}.col-sm-8{flex:0 0 auto;width:66.66666667%}.col-sm-9{flex:0 0 auto;width:75%}.col-sm-10{flex:0 0 auto;width:83.33333333%}.col-sm-11{flex:0 0 auto;width:91.66666667%}.col-sm-12{flex:0 0 auto;width:100%}.offset-sm-0{margin-left:0}.offset-sm-1{margin-left:8.33333333%}.offset-sm-2{margin-left:16.66666667%}.offset-sm-3{margin-left:25%}.offset-sm-4{margin-left:33.33333333%}.offset-sm-5{margin-left:41.66666667%}.offset-sm-6{margin-left:50%}.offset-sm-7{margin-left:58.33333333%}.offset-sm-8{margin-left:66.66666667%}.offset-sm-9{margin-left:75%}.offset-sm-10{margin-left:83.33333333%}.offset-sm-11{margin-left:91.66666667%}.g-sm-0,.gx-sm-0{--bs-gutter-x:0}.g-sm-0,.gy-sm-0{--bs-gutter-y:0}.g-sm-1,.gx-sm-1{--bs-gutter-x:0.25rem}.g-sm-1,.gy-sm-1{--bs-gutter-y:0.25rem}.g-sm-2,.gx-sm-2{--bs-gutter-x:0.5rem}.g-sm-2,.gy-sm-2{--bs-gutter-y:0.5rem}.g-sm-3,.gx-sm-3{--bs-gutter-x:1rem}.g-sm-3,.gy-sm-3{--bs-gutter-y:1rem}.g-sm-4,.gx-sm-4{--bs-gutter-x:1.5rem}.g-sm-4,.gy-sm-4{--bs-gutter-y:1.5rem}.g-sm-5,.gx-sm-5{--bs-gutter-x:3rem}.g-sm-5,.gy-sm-5{--bs-gutter-y:3rem}}@media (min-width:768px){.col-md{flex:1 0 0%}.row-cols-md-auto>*{flex:0 0 auto;width:auto}.row-cols-md-1>*{flex:0 0 auto;width:100%}.row-cols-md-2>*{flex:0 0 auto;width:50%}.row-cols-md-3>*{flex:0 0 auto;width:33.3333333333%}.row-cols-md-4>*{flex:0 0 auto;width:25%}.row-cols-md-5>*{flex:0 0 auto;width:20%}.row-cols-md-6>*{flex:0 0 auto;width:16.6666666667%}.col-md-auto{flex:0 0 auto;width:auto}.col-md-1{flex:0 0 auto;width:8.33333333%}.col-md-2{flex:0 0 auto;width:16.66666667%}.col-md-3{flex:0 0 auto;width:25%}.col-md-4{flex:0 0 auto;width:33.33333333%}.col-md-5{flex:0 0 auto;width:41.66666667%}.col-md-6{flex:0 0 auto;width:50%}.col-md-7{flex:0 0 auto;width:58.33333333%}.col-md-8{flex:0 0 auto;width:66.66666667%}.col-md-9{flex:0 0 auto;width:75%}.col-md-10{flex:0 0 auto;width:83.33333333%}.col-md-11{flex:0 0 auto;width:91.66666667%}.col-md-12{flex:0 0 auto;width:100%}.offset-md-0{margin-left:0}.offset-md-1{margin-left:8.33333333%}.offset-md-2{margin-left:16.66666667%}.offset-md-3{margin-left:25%}.offset-md-4{margin-left:33.33333333%}.offset-md-5{margin-left:41.66666667%}.offset-md-6{margin-left:50%}.offset-md-7{margin-left:58.33333333%}.offset-md-8{margin-left:66.66666667%}.offset-md-9{margin-left:75%}.offset-md-10{margin-left:83.33333333%}.offset-md-11{margin-left:91.66666667%}.g-md-0,.gx-md-0{--bs-gutter-x:0}.g-md-0,.gy-md-0{--bs-gutter-y:0}.g-md-1,.gx-md-1{--bs-gutter-x:0.25rem}.g-md-1,.gy-md-1{--bs-gutter-y:0.25rem}.g-md-2,.gx-md-2{--bs-gutter-x:0.5rem}.g-md-2,.gy-md-2{--bs-gutter-y:0.5rem}.g-md-3,.gx-md-3{--bs-gutter-x:1rem}.g-md-3,.gy-md-3{--bs-gutter-y:1rem}.g-md-4,.gx-md-4{--bs-gutter-x:1.5rem}.g-md-4,.gy-md-4{--bs-gutter-y:1.5rem}.g-md-5,.gx-md-5{--bs-gutter-x:3rem}.g-md-5,.gy-md-5{--bs-gutter-y:3rem}}@media (min-width:992px){.col-lg{flex:1 0 0%}.row-cols-lg-auto>*{flex:0 0 auto;width:auto}.row-cols-lg-1>*{flex:0 0 auto;width:100%}.row-cols-lg-2>*{flex:0 0 auto;width:50%}.row-cols-lg-3>*{flex:0 0 auto;width:33.3333333333%}.row-cols-lg-4>*{flex:0 0 auto;width:25%}.row-cols-lg-5>*{flex:0 0 auto;width:20%}.row-cols-lg-6>*{flex:0 0 auto;width:16.6666666667%}.col-lg-auto{flex:0 0 auto;width:auto}.col-lg-1{flex:0 0 auto;width:8.33333333%}.col-lg-2{flex:0 0 auto;width:16.66666667%}.col-lg-3{flex:0 0 auto;width:25%}.col-lg-4{flex:0 0 auto;width:33.33333333%}.col-lg-5{flex:0 0 auto;width:41.66666667%}.col-lg-6{flex:0 0 auto;width:50%}.col-lg-7{flex:0 0 auto;width:58.33333333%}.col-lg-8{flex:0 0 auto;width:66.66666667%}.col-lg-9{flex:0 0 auto;width:75%}.col-lg-10{flex:0 0 auto;width:83.33333333%}.col-lg-11{flex:0 0 auto;width:91.66666667%}.col-lg-12{flex:0 0 auto;width:100%}.offset-lg-0{margin-left:0}.offset-lg-1{margin-left:8.33333333%}.offset-lg-2{margin-left:16.66666667%}.offset-lg-3{margin-left:25%}.offset-lg-4{margin-left:33.33333333%}.offset-lg-5{margin-left:41.66666667%}.offset-lg-6{margin-left:50%}.offset-lg-7{margin-left:58.33333333%}.offset-lg-8{margin-left:66.66666667%}.offset-lg-9{margin-left:75%}.offset-lg-10{margin-left:83.33333333%}.offset-lg-11{margin-left:91.66666667%}.g-lg-0,.gx-lg-0{--bs-gutter-x:0}.g-lg-0,.gy-lg-0{--bs-gutter-y:0}.g-lg-1,.gx-lg-1{--bs-gutter-x:0.25rem}.g-lg-1,.gy-lg-1{--bs-gutter-y:0.25rem}.g-lg-2,.gx-lg-2{--bs-gutter-x:0.5rem}.g-lg-2,.gy-lg-2{--bs-gutter-y:0.5rem}.g-lg-3,.gx-lg-3{--bs-gutter-x:1rem}.g-lg-3,.gy-lg-3{--bs-gutter-y:1rem}.g-lg-4,.gx-lg-4{--bs-gutter-x:1.5rem}.g-lg-4,.gy-lg-4{--bs-gutter-y:1.5rem}.g-lg-5,.gx-lg-5{--bs-gutter-x:3rem}.g-lg-5,.gy-lg-5{--bs-gutter-y:3rem}}@media (min-width:1200px){.col-xl{flex:1 0 0%}.row-cols-xl-auto>*{flex:0 0 auto;width:auto}.row-cols-xl-1>*{flex:0 0 auto;width:100%}.row-cols-xl-2>*{flex:0 0 auto;width:50%}.row-cols-xl-3>*{flex:0 0 auto;width:33.3333333333%}.row-cols-xl-4>*{flex:0 0 auto;width:25%}.row-cols-xl-5>*{flex:0 0 auto;width:20%}.row-cols-xl-6>*{flex:0 0 auto;width:16.6666666667%}.col-xl-auto{flex:0 0 auto;width:auto}.col-xl-1{flex:0 0 auto;width:8.33333333%}.col-xl-2{flex:0 0 auto;width:16.66666667%}.col-xl-3{flex:0 0 auto;width:25%}.col-xl-4{flex:0 0 auto;width:33.33333333%}.col-xl-5{flex:0 0 auto;width:41.66666667%}.col-xl-6{flex:0 0 auto;width:50%}.col-xl-7{flex:0 0 auto;width:58.33333333%}.col-xl-8{flex:0 0 auto;width:66.66666667%}.col-xl-9{flex:0 0 auto;width:75%}.col-xl-10{flex:0 0 auto;width:83.33333333%}.col-xl-11{flex:0 0 auto;width:91.66666667%}.col-xl-12{flex:0 0 auto;width:100%}.offset-xl-0{margin-left:0}.offset-xl-1{margin-left:8.33333333%}.offset-xl-2{margin-left:16.66666667%}.offset-xl-3{margin-left:25%}.offset-xl-4{margin-left:33.33333333%}.offset-xl-5{margin-left:41.66666667%}.offset-xl-6{margin-left:50%}.offset-xl-7{margin-left:58.33333333%}.offset-xl-8{margin-left:66.66666667%}.offset-xl-9{margin-left:75%}.offset-xl-10{margin-left:83.33333333%}.offset-xl-11{margin-left:91.66666667%}.g-xl-0,.gx-xl-0{--bs-gutter-x:0}.g-xl-0,.gy-xl-0{--bs-gutter-y:0}.g-xl-1,.gx-xl-1{--bs-gutter-x:0.25rem}.g-xl-1,.gy-xl-1{--bs-gutter-y:0.25rem}.g-xl-2,.gx-xl-2{--bs-gutter-x:0.5rem}.g-xl-2,.gy-xl-2{--bs-gutter-y:0.5rem}.g-xl-3,.gx-xl-3{--bs-gutter-x:1rem}.g-xl-3,.gy-xl-3{--bs-gutter-y:1rem}.g-xl-4,.gx-xl-4{--bs-gutter-x:1.5rem}.g-xl-4,.gy-xl-4{--bs-gutter-y:1.5rem}.g-xl-5,.gx-xl-5{--bs-gutter-x:3rem}.g-xl-5,.gy-xl-5{--bs-gutter-y:3rem}}@media (min-width:1400px){.col-xxl{flex:1 0 0%}.row-cols-xxl-auto>*{flex:0 0 auto;width:auto}.row-cols-xxl-1>*{flex:0 0 auto;width:100%}.row-cols-xxl-2>*{flex:0 0 auto;width:50%}.row-cols-xxl-3>*{flex:0 0 auto;width:33.3333333333%}.row-cols-xxl-4>*{flex:0 0 auto;width:25%}.row-cols-xxl-5>*{flex:0 0 auto;width:20%}.row-cols-xxl-6>*{flex:0 0 auto;width:16.6666666667%}.col-xxl-auto{flex:0 0 auto;width:auto}.col-xxl-1{flex:0 0 auto;width:8.33333333%}.col-xxl-2{flex:0 0 auto;width:16.66666667%}.col-xxl-3{flex:0 0 auto;width:25%}.col-xxl-4{flex:0 0 auto;width:33.33333333%}.col-xxl-5{flex:0 0 auto;width:41.66666667%}.col-xxl-6{flex:0 0 auto;width:50%}.col-xxl-7{flex:0 0 auto;width:58.33333333%}.col-xxl-8{flex:0 0 auto;width:66.66666667%}.col-xxl-9{flex:0 0 auto;width:75%}.col-xxl-10{flex:0 0 auto;width:83.33333333%}.col-xxl-11{flex:0 0 auto;width:91.66666667%}.col-xxl-12{flex:0 0 auto;width:100%}.offset-xxl-0{margin-left:0}.offset-xxl-1{margin-left:8.33333333%}.offset-xxl-2{margin-left:16.66666667%}.offset-xxl-3{margin-left:25%}.offset-xxl-4{margin-left:33.33333333%}.offset-xxl-5{margin-left:41.66666667%}.offset-xxl-6{margin-left:50%}.offset-xxl-7{margin-left:58.33333333%}.offset-xxl-8{margin-left:66.66666667%}.offset-xxl-9{margin-left:75%}.offset-xxl-10{margin-left:83.33333333%}.offset-xxl-11{margin-left:91.66666667%}.g-xxl-0,.gx-xxl-0{--bs-gutter-x:0}.g-xxl-0,.gy-xxl-0{--bs-gutter-y:0}.g-xxl-1,.gx-xxl-1{--bs-gutter-x:0.25rem}.g-xxl-1,.gy-xxl-1{--bs-gutter-y:0.25rem}.g-xxl-2,.gx-xxl-2{--bs-gutter-x:0.5rem}.g-xxl-2,.gy-xxl-2{--bs-gutter-y:0.5rem}.g-xxl-3,.gx-xxl-3{--bs-gutter-x:1rem}.g-xxl-3,.gy-xxl-3{--bs-gutter-y:1rem}.g-xxl-4,.gx-xxl-4{--bs-gutter-x:1.5rem}.g-xxl-4,.gy-xxl-4{--bs-gutter-y:1.5rem}.g-xxl-5,.gx-xxl-5{--bs-gutter-x:3rem}.g-xxl-5,.gy-xxl-5{--bs-gutter-y:3rem}}.table{--bs-table-bg:transparent;--bs-table-accent-bg:transparent;--bs-table-striped-color:#212529;--bs-table-striped-bg:rgba(0, 0, 0, 0.05);--bs-table-active-color:#212529;--bs-table-active-bg:rgba(0, 0, 0, 0.1);--bs-table-hover-color:#212529;--bs-table-hover-bg:rgba(0, 0, 0, 0.075);width:100%;margin-bottom:1rem;color:#212529;vertical-align:top;border-color:#dee2e6}.table>:not(caption)>*>*{padding:.5rem .5rem;background-color:var(--bs-table-bg);border-bottom-width:1px;box-shadow:inset 0 0 0 9999px var(--bs-table-accent-bg)}.table>tbody{vertical-align:inherit}.table>thead{vertical-align:bottom}.table>:not(:last-child)>:last-child>*{border-bottom-color:currentColor}.caption-top{caption-side:top}.table-sm>:not(caption)>*>*{padding:.25rem .25rem}.table-bordered>:not(caption)>*{border-width:1px 0}.table-bordered>:not(caption)>*>*{border-width:0 1px}.table-borderless>:not(caption)>*>*{border-bottom-width:0}.table-striped>tbody>tr:nth-of-type(odd){--bs-table-accent-bg:var(--bs-table-striped-bg);color:var(--bs-table-striped-color)}.table-active{--bs-table-accent-bg:var(--bs-table-active-bg);color:var(--bs-table-active-color)}.table-hover>tbody>tr:hover{--bs-table-accent-bg:var(--bs-table-hover-bg);color:var(--bs-table-hover-color)}.table-primary{--bs-table-bg:#cfe2ff;--bs-table-striped-bg:#c5d7f2;--bs-table-striped-color:#000;--bs-table-active-bg:#bacbe6;--bs-table-active-color:#000;--bs-table-hover-bg:#bfd1ec;--bs-table-hover-color:#000;color:#000;border-color:#bacbe6}.table-secondary{--bs-table-bg:#e2e3e5;--bs-table-striped-bg:#d7d8da;--bs-table-striped-color:#000;--bs-table-active-bg:#cbccce;--bs-table-active-color:#000;--bs-table-hover-bg:#d1d2d4;--bs-table-hover-color:#000;color:#000;border-color:#cbccce}.table-success{--bs-table-bg:#d1e7dd;--bs-table-striped-bg:#c7dbd2;--bs-table-striped-color:#000;--bs-table-active-bg:#bcd0c7;--bs-table-active-color:#000;--bs-table-hover-bg:#c1d6cc;--bs-table-hover-color:#000;color:#000;border-color:#bcd0c7}.table-info{--bs-table-bg:#cff4fc;--bs-table-striped-bg:#c5e8ef;--bs-table-striped-color:#000;--bs-table-active-bg:#badce3;--bs-table-active-color:#000;--bs-table-hover-bg:#bfe2e9;--bs-table-hover-color:#000;color:#000;border-color:#badce3}.table-warning{--bs-table-bg:#fff3cd;--bs-table-striped-bg:#f2e7c3;--bs-table-striped-color:#000;--bs-table-active-bg:#e6dbb9;--bs-table-active-color:#000;--bs-table-hover-bg:#ece1be;--bs-table-hover-color:#000;color:#000;border-color:#e6dbb9}.table-danger{--bs-table-bg:#f8d7da;--bs-table-striped-bg:#eccccf;--bs-table-striped-color:#000;--bs-table-active-bg:#dfc2c4;--bs-table-active-color:#000;--bs-table-hover-bg:#e5c7ca;--bs-table-hover-color:#000;color:#000;border-color:#dfc2c4}.table-light{--bs-table-bg:#f8f9fa;--bs-table-striped-bg:#ecedee;--bs-table-striped-color:#000;--bs-table-active-bg:#dfe0e1;--bs-table-active-color:#000;--bs-table-hover-bg:#e5e6e7;--bs-table-hover-color:#000;color:#000;border-color:#dfe0e1}.table-dark{--bs-table-bg:#212529;--bs-table-striped-bg:#2c3034;--bs-table-striped-color:#fff;--bs-table-active-bg:#373b3e;--bs-table-active-color:#fff;--bs-table-hover-bg:#323539;--bs-table-hover-color:#fff;color:#fff;border-color:#373b3e}.table-responsive{overflow-x:auto;-webkit-overflow-scrolling:touch}@media (max-width:575.98px){.table-responsive-sm{overflow-x:auto;-webkit-overflow-scrolling:touch}}@media (max-width:767.98px){.table-responsive-md{overflow-x:auto;-webkit-overflow-scrolling:touch}}@media (max-width:991.98px){.table-responsive-lg{overflow-x:auto;-webkit-overflow-scrolling:touch}}@media (max-width:1199.98px){.table-responsive-xl{overflow-x:auto;-webkit-overflow-scrolling:touch}}@media (max-width:1399.98px){.table-responsive-xxl{overflow-x:auto;-webkit-overflow-scrolling:touch}}.form-label{margin-bottom:.5rem}.col-form-label{padding-top:calc(.375rem + 1px);padding-bottom:calc(.375rem + 1px);margin-bottom:0;font-size:inherit;line-height:1.5}.col-form-label-lg{padding-top:calc(.5rem + 1px);padding-bottom:calc(.5rem + 1px);font-size:1.25rem}.col-form-label-sm{padding-top:calc(.25rem + 1px);padding-bottom:calc(.25rem + 1px);font-size:.875rem}.form-text{margin-top:.25rem;font-size:.875em;color:#6c757d}.form-control{display:block;width:100%;padding:.375rem .75rem;font-size:1rem;font-weight:400;line-height:1.5;color:#212529;background-color:#fff;background-clip:padding-box;border:1px solid #ced4da;-webkit-appearance:none;-moz-appearance:none;appearance:none;border-radius:.25rem;transition:border-color .15s ease-in-out,box-shadow .15s ease-in-out}@media (prefers-reduced-motion:reduce){.form-control{transition:none}}.form-control[type=file]{overflow:hidden}.form-control[type=file]:not(:disabled):not([readonly]){cursor:pointer}.form-control:focus{color:#212529;background-color:#fff;border-color:#86b7fe;outline:0;box-shadow:0 0 0 .25rem rgba(13,110,253,.25)}.form-control::-webkit-date-and-time-value{height:1.5em}.form-control::-moz-placeholder{color:#6c757d;opacity:1}.form-control::placeholder{color:#6c757d;opacity:1}.form-control:disabled,.form-control[readonly]{background-color:#e9ecef;opacity:1}.form-control::file-selector-button{padding:.375rem .75rem;margin:-.375rem -.75rem;-webkit-margin-end:.75rem;margin-inline-end:.75rem;color:#212529;background-color:#e9ecef;pointer-events:none;border-color:inherit;border-style:solid;border-width:0;border-inline-end-width:1px;border-radius:0;transition:color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out}@media (prefers-reduced-motion:reduce){.form-control::file-selector-button{transition:none}}.form-control:hover:not(:disabled):not([readonly])::file-selector-button{background-color:#dde0e3}.form-control::-webkit-file-upload-button{padding:.375rem .75rem;margin:-.375rem -.75rem;-webkit-margin-end:.75rem;margin-inline-end:.75rem;color:#212529;background-color:#e9ecef;pointer-events:none;border-color:inherit;border-style:solid;border-width:0;border-inline-end-width:1px;border-radius:0;-webkit-transition:color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;transition:color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out}@media (prefers-reduced-motion:reduce){.form-control::-webkit-file-upload-button{-webkit-transition:none;transition:none}}.form-control:hover:not(:disabled):not([readonly])::-webkit-file-upload-button{background-color:#dde0e3}.form-control-plaintext{display:block;width:100%;padding:.375rem 0;margin-bottom:0;line-height:1.5;color:#212529;background-color:transparent;border:solid transparent;border-width:1px 0}.form-control-plaintext.form-control-lg,.form-control-plaintext.form-control-sm{padding-right:0;padding-left:0}.form-control-sm{min-height:calc(1.5em + .5rem + 2px);padding:.25rem .5rem;font-size:.875rem;border-radius:.2rem}.form-control-sm::file-selector-button{padding:.25rem .5rem;margin:-.25rem -.5rem;-webkit-margin-end:.5rem;margin-inline-end:.5rem}.form-control-sm::-webkit-file-upload-button{padding:.25rem .5rem;margin:-.25rem -.5rem;-webkit-margin-end:.5rem;margin-inline-end:.5rem}.form-control-lg{min-height:calc(1.5em + 1rem + 2px);padding:.5rem 1rem;font-size:1.25rem;border-radius:.3rem}.form-control-lg::file-selector-button{padding:.5rem 1rem;margin:-.5rem -1rem;-webkit-margin-end:1rem;margin-inline-end:1rem}.form-control-lg::-webkit-file-upload-button{padding:.5rem 1rem;margin:-.5rem -1rem;-webkit-margin-end:1rem;margin-inline-end:1rem}textarea.form-control{min-height:calc(1.5em + .75rem + 2px)}textarea.form-control-sm{min-height:calc(1.5em + .5rem + 2px)}textarea.form-control-lg{min-height:calc(1.5em + 1rem + 2px)}.form-control-color{width:3rem;height:auto;padding:.375rem}.form-control-color:not(:disabled):not([readonly]){cursor:pointer}.form-control-color::-moz-color-swatch{height:1.5em;border-radius:.25rem}.form-control-color::-webkit-color-swatch{height:1.5em;border-radius:.25rem}.form-select{display:block;width:100%;padding:.375rem 2.25rem .375rem .75rem;-moz-padding-start:calc(0.75rem - 3px);font-size:1rem;font-weight:400;line-height:1.5;color:#212529;background-color:#fff;background-image:url(\\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 16 16\'%3e%3cpath fill=\'none\' stroke=\'%23343a40\' stroke-linecap=\'round\' stroke-linejoin=\'round\' stroke-width=\'2\' d=\'M2 5l6 6 6-6\'/%3e%3c/svg%3e\\");background-repeat:no-repeat;background-position:right .75rem center;background-size:16px 12px;border:1px solid #ced4da;border-radius:.25rem;transition:border-color .15s ease-in-out,box-shadow .15s ease-in-out;-webkit-appearance:none;-moz-appearance:none;appearance:none}@media (prefers-reduced-motion:reduce){.form-select{transition:none}}.form-select:focus{border-color:#86b7fe;outline:0;box-shadow:0 0 0 .25rem rgba(13,110,253,.25)}.form-select[multiple],.form-select[size]:not([size=\\"1\\"]){padding-right:.75rem;background-image:none}.form-select:disabled{background-color:#e9ecef}.form-select:-moz-focusring{color:transparent;text-shadow:0 0 0 #212529}.form-select-sm{padding-top:.25rem;padding-bottom:.25rem;padding-left:.5rem;font-size:.875rem}.form-select-lg{padding-top:.5rem;padding-bottom:.5rem;padding-left:1rem;font-size:1.25rem}.form-check{display:block;min-height:1.5rem;padding-left:1.5em;margin-bottom:.125rem}.form-check .form-check-input{float:left;margin-left:-1.5em}.form-check-input{width:1em;height:1em;margin-top:.25em;vertical-align:top;background-color:#fff;background-repeat:no-repeat;background-position:center;background-size:contain;border:1px solid rgba(0,0,0,.25);-webkit-appearance:none;-moz-appearance:none;appearance:none;-webkit-print-color-adjust:exact;color-adjust:exact}.form-check-input[type=checkbox]{border-radius:.25em}.form-check-input[type=radio]{border-radius:50%}.form-check-input:active{filter:brightness(90%)}.form-check-input:focus{border-color:#86b7fe;outline:0;box-shadow:0 0 0 .25rem rgba(13,110,253,.25)}.form-check-input:checked{background-color:#0d6efd;border-color:#0d6efd}.form-check-input:checked[type=checkbox]{background-image:url(\\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 20 20\'%3e%3cpath fill=\'none\' stroke=\'%23fff\' stroke-linecap=\'round\' stroke-linejoin=\'round\' stroke-width=\'3\' d=\'M6 10l3 3l6-6\'/%3e%3c/svg%3e\\")}.form-check-input:checked[type=radio]{background-image:url(\\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'-4 -4 8 8\'%3e%3ccircle r=\'2\' fill=\'%23fff\'/%3e%3c/svg%3e\\")}.form-check-input[type=checkbox]:indeterminate{background-color:#0d6efd;border-color:#0d6efd;background-image:url(\\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 20 20\'%3e%3cpath fill=\'none\' stroke=\'%23fff\' stroke-linecap=\'round\' stroke-linejoin=\'round\' stroke-width=\'3\' d=\'M6 10h8\'/%3e%3c/svg%3e\\")}.form-check-input:disabled{pointer-events:none;filter:none;opacity:.5}.form-check-input:disabled~.form-check-label,.form-check-input[disabled]~.form-check-label{opacity:.5}.form-switch{padding-left:2.5em}.form-switch .form-check-input{width:2em;margin-left:-2.5em;background-image:url(\\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'-4 -4 8 8\'%3e%3ccircle r=\'3\' fill=\'rgba%280, 0, 0, 0.25%29\'/%3e%3c/svg%3e\\");background-position:left center;border-radius:2em;transition:background-position .15s ease-in-out}@media (prefers-reduced-motion:reduce){.form-switch .form-check-input{transition:none}}.form-switch .form-check-input:focus{background-image:url(\\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'-4 -4 8 8\'%3e%3ccircle r=\'3\' fill=\'%2386b7fe\'/%3e%3c/svg%3e\\")}.form-switch .form-check-input:checked{background-position:right center;background-image:url(\\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'-4 -4 8 8\'%3e%3ccircle r=\'3\' fill=\'%23fff\'/%3e%3c/svg%3e\\")}.form-check-inline{display:inline-block;margin-right:1rem}.btn-check{position:absolute;clip:rect(0,0,0,0);pointer-events:none}.btn-check:disabled+.btn,.btn-check[disabled]+.btn{pointer-events:none;filter:none;opacity:.65}.form-range{width:100%;height:1.5rem;padding:0;background-color:transparent;-webkit-appearance:none;-moz-appearance:none;appearance:none}.form-range:focus{outline:0}.form-range:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 .25rem rgba(13,110,253,.25)}.form-range:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 .25rem rgba(13,110,253,.25)}.form-range::-moz-focus-outer{border:0}.form-range::-webkit-slider-thumb{width:1rem;height:1rem;margin-top:-.25rem;background-color:#0d6efd;border:0;border-radius:1rem;-webkit-transition:background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;transition:background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;-webkit-appearance:none;appearance:none}@media (prefers-reduced-motion:reduce){.form-range::-webkit-slider-thumb{-webkit-transition:none;transition:none}}.form-range::-webkit-slider-thumb:active{background-color:#b6d4fe}.form-range::-webkit-slider-runnable-track{width:100%;height:.5rem;color:transparent;cursor:pointer;background-color:#dee2e6;border-color:transparent;border-radius:1rem}.form-range::-moz-range-thumb{width:1rem;height:1rem;background-color:#0d6efd;border:0;border-radius:1rem;-moz-transition:background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;transition:background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;-moz-appearance:none;appearance:none}@media (prefers-reduced-motion:reduce){.form-range::-moz-range-thumb{-moz-transition:none;transition:none}}.form-range::-moz-range-thumb:active{background-color:#b6d4fe}.form-range::-moz-range-track{width:100%;height:.5rem;color:transparent;cursor:pointer;background-color:#dee2e6;border-color:transparent;border-radius:1rem}.form-range:disabled{pointer-events:none}.form-range:disabled::-webkit-slider-thumb{background-color:#adb5bd}.form-range:disabled::-moz-range-thumb{background-color:#adb5bd}.form-floating{position:relative}.form-floating>.form-control,.form-floating>.form-select{height:calc(3.5rem + 2px);line-height:1.25}.form-floating>label{position:absolute;top:0;left:0;height:100%;padding:1rem .75rem;pointer-events:none;border:1px solid transparent;transform-origin:0 0;transition:opacity .1s ease-in-out,transform .1s ease-in-out}@media (prefers-reduced-motion:reduce){.form-floating>label{transition:none}}.form-floating>.form-control{padding:1rem .75rem}.form-floating>.form-control::-moz-placeholder{color:transparent}.form-floating>.form-control::placeholder{color:transparent}.form-floating>.form-control:not(:-moz-placeholder-shown){padding-top:1.625rem;padding-bottom:.625rem}.form-floating>.form-control:focus,.form-floating>.form-control:not(:placeholder-shown){padding-top:1.625rem;padding-bottom:.625rem}.form-floating>.form-control:-webkit-autofill{padding-top:1.625rem;padding-bottom:.625rem}.form-floating>.form-select{padding-top:1.625rem;padding-bottom:.625rem}.form-floating>.form-control:not(:-moz-placeholder-shown)~label{opacity:.65;transform:scale(.85) translateY(-.5rem) translateX(.15rem)}.form-floating>.form-control:focus~label,.form-floating>.form-control:not(:placeholder-shown)~label,.form-floating>.form-select~label{opacity:.65;transform:scale(.85) translateY(-.5rem) translateX(.15rem)}.form-floating>.form-control:-webkit-autofill~label{opacity:.65;transform:scale(.85) translateY(-.5rem) translateX(.15rem)}.input-group{position:relative;display:flex;flex-wrap:wrap;align-items:stretch;width:100%}.input-group>.form-control,.input-group>.form-select{position:relative;flex:1 1 auto;width:1%;min-width:0}.input-group>.form-control:focus,.input-group>.form-select:focus{z-index:3}.input-group .btn{position:relative;z-index:2}.input-group .btn:focus{z-index:3}.input-group-text{display:flex;align-items:center;padding:.375rem .75rem;font-size:1rem;font-weight:400;line-height:1.5;color:#212529;text-align:center;white-space:nowrap;background-color:#e9ecef;border:1px solid #ced4da;border-radius:.25rem}.input-group-lg>.btn,.input-group-lg>.form-control,.input-group-lg>.form-select,.input-group-lg>.input-group-text{padding:.5rem 1rem;font-size:1.25rem;border-radius:.3rem}.input-group-sm>.btn,.input-group-sm>.form-control,.input-group-sm>.form-select,.input-group-sm>.input-group-text{padding:.25rem .5rem;font-size:.875rem;border-radius:.2rem}.input-group-lg>.form-select,.input-group-sm>.form-select{padding-right:3rem}.input-group:not(.has-validation)>.dropdown-toggle:nth-last-child(n+3),.input-group:not(.has-validation)>:not(:last-child):not(.dropdown-toggle):not(.dropdown-menu){border-top-right-radius:0;border-bottom-right-radius:0}.input-group.has-validation>.dropdown-toggle:nth-last-child(n+4),.input-group.has-validation>:nth-last-child(n+3):not(.dropdown-toggle):not(.dropdown-menu){border-top-right-radius:0;border-bottom-right-radius:0}.input-group>:not(:first-child):not(.dropdown-menu):not(.valid-tooltip):not(.valid-feedback):not(.invalid-tooltip):not(.invalid-feedback){margin-left:-1px;border-top-left-radius:0;border-bottom-left-radius:0}.valid-feedback{display:none;width:100%;margin-top:.25rem;font-size:.875em;color:#198754}.valid-tooltip{position:absolute;top:100%;z-index:5;display:none;max-width:100%;padding:.25rem .5rem;margin-top:.1rem;font-size:.875rem;color:#fff;background-color:rgba(25,135,84,.9);border-radius:.25rem}.is-valid~.valid-feedback,.is-valid~.valid-tooltip,.was-validated :valid~.valid-feedback,.was-validated :valid~.valid-tooltip{display:block}.form-control.is-valid,.was-validated .form-control:valid{border-color:#198754;padding-right:calc(1.5em + .75rem);background-image:url(\\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 8 8\'%3e%3cpath fill=\'%23198754\' d=\'M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z\'/%3e%3c/svg%3e\\");background-repeat:no-repeat;background-position:right calc(.375em + .1875rem) center;background-size:calc(.75em + .375rem) calc(.75em + .375rem)}.form-control.is-valid:focus,.was-validated .form-control:valid:focus{border-color:#198754;box-shadow:0 0 0 .25rem rgba(25,135,84,.25)}.was-validated textarea.form-control:valid,textarea.form-control.is-valid{padding-right:calc(1.5em + .75rem);background-position:top calc(.375em + .1875rem) right calc(.375em + .1875rem)}.form-select.is-valid,.was-validated .form-select:valid{border-color:#198754}.form-select.is-valid:not([multiple]):not([size]),.form-select.is-valid:not([multiple])[size=\\"1\\"],.was-validated .form-select:valid:not([multiple]):not([size]),.was-validated .form-select:valid:not([multiple])[size=\\"1\\"]{padding-right:4.125rem;background-image:url(\\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 16 16\'%3e%3cpath fill=\'none\' stroke=\'%23343a40\' stroke-linecap=\'round\' stroke-linejoin=\'round\' stroke-width=\'2\' d=\'M2 5l6 6 6-6\'/%3e%3c/svg%3e\\"),url(\\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 8 8\'%3e%3cpath fill=\'%23198754\' d=\'M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z\'/%3e%3c/svg%3e\\");background-position:right .75rem center,center right 2.25rem;background-size:16px 12px,calc(.75em + .375rem) calc(.75em + .375rem)}.form-select.is-valid:focus,.was-validated .form-select:valid:focus{border-color:#198754;box-shadow:0 0 0 .25rem rgba(25,135,84,.25)}.form-check-input.is-valid,.was-validated .form-check-input:valid{border-color:#198754}.form-check-input.is-valid:checked,.was-validated .form-check-input:valid:checked{background-color:#198754}.form-check-input.is-valid:focus,.was-validated .form-check-input:valid:focus{box-shadow:0 0 0 .25rem rgba(25,135,84,.25)}.form-check-input.is-valid~.form-check-label,.was-validated .form-check-input:valid~.form-check-label{color:#198754}.form-check-inline .form-check-input~.valid-feedback{margin-left:.5em}.input-group .form-control.is-valid,.input-group .form-select.is-valid,.was-validated .input-group .form-control:valid,.was-validated .input-group .form-select:valid{z-index:1}.input-group .form-control.is-valid:focus,.input-group .form-select.is-valid:focus,.was-validated .input-group .form-control:valid:focus,.was-validated .input-group .form-select:valid:focus{z-index:3}.invalid-feedback{display:none;width:100%;margin-top:.25rem;font-size:.875em;color:#dc3545}.invalid-tooltip{position:absolute;top:100%;z-index:5;display:none;max-width:100%;padding:.25rem .5rem;margin-top:.1rem;font-size:.875rem;color:#fff;background-color:rgba(220,53,69,.9);border-radius:.25rem}.is-invalid~.invalid-feedback,.is-invalid~.invalid-tooltip,.was-validated :invalid~.invalid-feedback,.was-validated :invalid~.invalid-tooltip{display:block}.form-control.is-invalid,.was-validated .form-control:invalid{border-color:#dc3545;padding-right:calc(1.5em + .75rem);background-image:url(\\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 12 12\' width=\'12\' height=\'12\' fill=\'none\' stroke=\'%23dc3545\'%3e%3ccircle cx=\'6\' cy=\'6\' r=\'4.5\'/%3e%3cpath stroke-linejoin=\'round\' d=\'M5.8 3.6h.4L6 6.5z\'/%3e%3ccircle cx=\'6\' cy=\'8.2\' r=\'.6\' fill=\'%23dc3545\' stroke=\'none\'/%3e%3c/svg%3e\\");background-repeat:no-repeat;background-position:right calc(.375em + .1875rem) center;background-size:calc(.75em + .375rem) calc(.75em + .375rem)}.form-control.is-invalid:focus,.was-validated .form-control:invalid:focus{border-color:#dc3545;box-shadow:0 0 0 .25rem rgba(220,53,69,.25)}.was-validated textarea.form-control:invalid,textarea.form-control.is-invalid{padding-right:calc(1.5em + .75rem);background-position:top calc(.375em + .1875rem) right calc(.375em + .1875rem)}.form-select.is-invalid,.was-validated .form-select:invalid{border-color:#dc3545}.form-select.is-invalid:not([multiple]):not([size]),.form-select.is-invalid:not([multiple])[size=\\"1\\"],.was-validated .form-select:invalid:not([multiple]):not([size]),.was-validated .form-select:invalid:not([multiple])[size=\\"1\\"]{padding-right:4.125rem;background-image:url(\\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 16 16\'%3e%3cpath fill=\'none\' stroke=\'%23343a40\' stroke-linecap=\'round\' stroke-linejoin=\'round\' stroke-width=\'2\' d=\'M2 5l6 6 6-6\'/%3e%3c/svg%3e\\"),url(\\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 12 12\' width=\'12\' height=\'12\' fill=\'none\' stroke=\'%23dc3545\'%3e%3ccircle cx=\'6\' cy=\'6\' r=\'4.5\'/%3e%3cpath stroke-linejoin=\'round\' d=\'M5.8 3.6h.4L6 6.5z\'/%3e%3ccircle cx=\'6\' cy=\'8.2\' r=\'.6\' fill=\'%23dc3545\' stroke=\'none\'/%3e%3c/svg%3e\\");background-position:right .75rem center,center right 2.25rem;background-size:16px 12px,calc(.75em + .375rem) calc(.75em + .375rem)}.form-select.is-invalid:focus,.was-validated .form-select:invalid:focus{border-color:#dc3545;box-shadow:0 0 0 .25rem rgba(220,53,69,.25)}.form-check-input.is-invalid,.was-validated .form-check-input:invalid{border-color:#dc3545}.form-check-input.is-invalid:checked,.was-validated .form-check-input:invalid:checked{background-color:#dc3545}.form-check-input.is-invalid:focus,.was-validated .form-check-input:invalid:focus{box-shadow:0 0 0 .25rem rgba(220,53,69,.25)}.form-check-input.is-invalid~.form-check-label,.was-validated .form-check-input:invalid~.form-check-label{color:#dc3545}.form-check-inline .form-check-input~.invalid-feedback{margin-left:.5em}.input-group .form-control.is-invalid,.input-group .form-select.is-invalid,.was-validated .input-group .form-control:invalid,.was-validated .input-group .form-select:invalid{z-index:2}.input-group .form-control.is-invalid:focus,.input-group .form-select.is-invalid:focus,.was-validated .input-group .form-control:invalid:focus,.was-validated .input-group .form-select:invalid:focus{z-index:3}.btn{display:inline-block;font-weight:400;line-height:1.5;color:#212529;text-align:center;text-decoration:none;vertical-align:middle;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;user-select:none;background-color:transparent;border:1px solid transparent;padding:.375rem .75rem;font-size:1rem;border-radius:.25rem;transition:color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out}@media (prefers-reduced-motion:reduce){.btn{transition:none}}.btn:hover{color:#212529}.btn-check:focus+.btn,.btn:focus{outline:0;box-shadow:0 0 0 .25rem rgba(13,110,253,.25)}.btn.disabled,.btn:disabled,fieldset:disabled .btn{pointer-events:none;opacity:.65}.btn-primary{color:#fff;background-color:#0d6efd;border-color:#0d6efd}.btn-primary:hover{color:#fff;background-color:#0b5ed7;border-color:#0a58ca}.btn-check:focus+.btn-primary,.btn-primary:focus{color:#fff;background-color:#0b5ed7;border-color:#0a58ca;box-shadow:0 0 0 .25rem rgba(49,132,253,.5)}.btn-check:active+.btn-primary,.btn-check:checked+.btn-primary,.btn-primary.active,.btn-primary:active,.show>.btn-primary.dropdown-toggle{color:#fff;background-color:#0a58ca;border-color:#0a53be}.btn-check:active+.btn-primary:focus,.btn-check:checked+.btn-primary:focus,.btn-primary.active:focus,.btn-primary:active:focus,.show>.btn-primary.dropdown-toggle:focus{box-shadow:0 0 0 .25rem rgba(49,132,253,.5)}.btn-primary.disabled,.btn-primary:disabled{color:#fff;background-color:#0d6efd;border-color:#0d6efd}.btn-secondary{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-secondary:hover{color:#fff;background-color:#5c636a;border-color:#565e64}.btn-check:focus+.btn-secondary,.btn-secondary:focus{color:#fff;background-color:#5c636a;border-color:#565e64;box-shadow:0 0 0 .25rem rgba(130,138,145,.5)}.btn-check:active+.btn-secondary,.btn-check:checked+.btn-secondary,.btn-secondary.active,.btn-secondary:active,.show>.btn-secondary.dropdown-toggle{color:#fff;background-color:#565e64;border-color:#51585e}.btn-check:active+.btn-secondary:focus,.btn-check:checked+.btn-secondary:focus,.btn-secondary.active:focus,.btn-secondary:active:focus,.show>.btn-secondary.dropdown-toggle:focus{box-shadow:0 0 0 .25rem rgba(130,138,145,.5)}.btn-secondary.disabled,.btn-secondary:disabled{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-success{color:#fff;background-color:#198754;border-color:#198754}.btn-success:hover{color:#fff;background-color:#157347;border-color:#146c43}.btn-check:focus+.btn-success,.btn-success:focus{color:#fff;background-color:#157347;border-color:#146c43;box-shadow:0 0 0 .25rem rgba(60,153,110,.5)}.btn-check:active+.btn-success,.btn-check:checked+.btn-success,.btn-success.active,.btn-success:active,.show>.btn-success.dropdown-toggle{color:#fff;background-color:#146c43;border-color:#13653f}.btn-check:active+.btn-success:focus,.btn-check:checked+.btn-success:focus,.btn-success.active:focus,.btn-success:active:focus,.show>.btn-success.dropdown-toggle:focus{box-shadow:0 0 0 .25rem rgba(60,153,110,.5)}.btn-success.disabled,.btn-success:disabled{color:#fff;background-color:#198754;border-color:#198754}.btn-info{color:#000;background-color:#0dcaf0;border-color:#0dcaf0}.btn-info:hover{color:#000;background-color:#31d2f2;border-color:#25cff2}.btn-check:focus+.btn-info,.btn-info:focus{color:#000;background-color:#31d2f2;border-color:#25cff2;box-shadow:0 0 0 .25rem rgba(11,172,204,.5)}.btn-check:active+.btn-info,.btn-check:checked+.btn-info,.btn-info.active,.btn-info:active,.show>.btn-info.dropdown-toggle{color:#000;background-color:#3dd5f3;border-color:#25cff2}.btn-check:active+.btn-info:focus,.btn-check:checked+.btn-info:focus,.btn-info.active:focus,.btn-info:active:focus,.show>.btn-info.dropdown-toggle:focus{box-shadow:0 0 0 .25rem rgba(11,172,204,.5)}.btn-info.disabled,.btn-info:disabled{color:#000;background-color:#0dcaf0;border-color:#0dcaf0}.btn-warning{color:#000;background-color:#ffc107;border-color:#ffc107}.btn-warning:hover{color:#000;background-color:#ffca2c;border-color:#ffc720}.btn-check:focus+.btn-warning,.btn-warning:focus{color:#000;background-color:#ffca2c;border-color:#ffc720;box-shadow:0 0 0 .25rem rgba(217,164,6,.5)}.btn-check:active+.btn-warning,.btn-check:checked+.btn-warning,.btn-warning.active,.btn-warning:active,.show>.btn-warning.dropdown-toggle{color:#000;background-color:#ffcd39;border-color:#ffc720}.btn-check:active+.btn-warning:focus,.btn-check:checked+.btn-warning:focus,.btn-warning.active:focus,.btn-warning:active:focus,.show>.btn-warning.dropdown-toggle:focus{box-shadow:0 0 0 .25rem rgba(217,164,6,.5)}.btn-warning.disabled,.btn-warning:disabled{color:#000;background-color:#ffc107;border-color:#ffc107}.btn-danger{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-danger:hover{color:#fff;background-color:#bb2d3b;border-color:#b02a37}.btn-check:focus+.btn-danger,.btn-danger:focus{color:#fff;background-color:#bb2d3b;border-color:#b02a37;box-shadow:0 0 0 .25rem rgba(225,83,97,.5)}.btn-check:active+.btn-danger,.btn-check:checked+.btn-danger,.btn-danger.active,.btn-danger:active,.show>.btn-danger.dropdown-toggle{color:#fff;background-color:#b02a37;border-color:#a52834}.btn-check:active+.btn-danger:focus,.btn-check:checked+.btn-danger:focus,.btn-danger.active:focus,.btn-danger:active:focus,.show>.btn-danger.dropdown-toggle:focus{box-shadow:0 0 0 .25rem rgba(225,83,97,.5)}.btn-danger.disabled,.btn-danger:disabled{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-light{color:#000;background-color:#f8f9fa;border-color:#f8f9fa}.btn-light:hover{color:#000;background-color:#f9fafb;border-color:#f9fafb}.btn-check:focus+.btn-light,.btn-light:focus{color:#000;background-color:#f9fafb;border-color:#f9fafb;box-shadow:0 0 0 .25rem rgba(211,212,213,.5)}.btn-check:active+.btn-light,.btn-check:checked+.btn-light,.btn-light.active,.btn-light:active,.show>.btn-light.dropdown-toggle{color:#000;background-color:#f9fafb;border-color:#f9fafb}.btn-check:active+.btn-light:focus,.btn-check:checked+.btn-light:focus,.btn-light.active:focus,.btn-light:active:focus,.show>.btn-light.dropdown-toggle:focus{box-shadow:0 0 0 .25rem rgba(211,212,213,.5)}.btn-light.disabled,.btn-light:disabled{color:#000;background-color:#f8f9fa;border-color:#f8f9fa}.btn-dark{color:#fff;background-color:#212529;border-color:#212529}.btn-dark:hover{color:#fff;background-color:#1c1f23;border-color:#1a1e21}.btn-check:focus+.btn-dark,.btn-dark:focus{color:#fff;background-color:#1c1f23;border-color:#1a1e21;box-shadow:0 0 0 .25rem rgba(66,70,73,.5)}.btn-check:active+.btn-dark,.btn-check:checked+.btn-dark,.btn-dark.active,.btn-dark:active,.show>.btn-dark.dropdown-toggle{color:#fff;background-color:#1a1e21;border-color:#191c1f}.btn-check:active+.btn-dark:focus,.btn-check:checked+.btn-dark:focus,.btn-dark.active:focus,.btn-dark:active:focus,.show>.btn-dark.dropdown-toggle:focus{box-shadow:0 0 0 .25rem rgba(66,70,73,.5)}.btn-dark.disabled,.btn-dark:disabled{color:#fff;background-color:#212529;border-color:#212529}.btn-outline-primary{color:#0d6efd;border-color:#0d6efd}.btn-outline-primary:hover{color:#fff;background-color:#0d6efd;border-color:#0d6efd}.btn-check:focus+.btn-outline-primary,.btn-outline-primary:focus{box-shadow:0 0 0 .25rem rgba(13,110,253,.5)}.btn-check:active+.btn-outline-primary,.btn-check:checked+.btn-outline-primary,.btn-outline-primary.active,.btn-outline-primary.dropdown-toggle.show,.btn-outline-primary:active{color:#fff;background-color:#0d6efd;border-color:#0d6efd}.btn-check:active+.btn-outline-primary:focus,.btn-check:checked+.btn-outline-primary:focus,.btn-outline-primary.active:focus,.btn-outline-primary.dropdown-toggle.show:focus,.btn-outline-primary:active:focus{box-shadow:0 0 0 .25rem rgba(13,110,253,.5)}.btn-outline-primary.disabled,.btn-outline-primary:disabled{color:#0d6efd;background-color:transparent}.btn-outline-secondary{color:#6c757d;border-color:#6c757d}.btn-outline-secondary:hover{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-check:focus+.btn-outline-secondary,.btn-outline-secondary:focus{box-shadow:0 0 0 .25rem rgba(108,117,125,.5)}.btn-check:active+.btn-outline-secondary,.btn-check:checked+.btn-outline-secondary,.btn-outline-secondary.active,.btn-outline-secondary.dropdown-toggle.show,.btn-outline-secondary:active{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-check:active+.btn-outline-secondary:focus,.btn-check:checked+.btn-outline-secondary:focus,.btn-outline-secondary.active:focus,.btn-outline-secondary.dropdown-toggle.show:focus,.btn-outline-secondary:active:focus{box-shadow:0 0 0 .25rem rgba(108,117,125,.5)}.btn-outline-secondary.disabled,.btn-outline-secondary:disabled{color:#6c757d;background-color:transparent}.btn-outline-success{color:#198754;border-color:#198754}.btn-outline-success:hover{color:#fff;background-color:#198754;border-color:#198754}.btn-check:focus+.btn-outline-success,.btn-outline-success:focus{box-shadow:0 0 0 .25rem rgba(25,135,84,.5)}.btn-check:active+.btn-outline-success,.btn-check:checked+.btn-outline-success,.btn-outline-success.active,.btn-outline-success.dropdown-toggle.show,.btn-outline-success:active{color:#fff;background-color:#198754;border-color:#198754}.btn-check:active+.btn-outline-success:focus,.btn-check:checked+.btn-outline-success:focus,.btn-outline-success.active:focus,.btn-outline-success.dropdown-toggle.show:focus,.btn-outline-success:active:focus{box-shadow:0 0 0 .25rem rgba(25,135,84,.5)}.btn-outline-success.disabled,.btn-outline-success:disabled{color:#198754;background-color:transparent}.btn-outline-info{color:#0dcaf0;border-color:#0dcaf0}.btn-outline-info:hover{color:#000;background-color:#0dcaf0;border-color:#0dcaf0}.btn-check:focus+.btn-outline-info,.btn-outline-info:focus{box-shadow:0 0 0 .25rem rgba(13,202,240,.5)}.btn-check:active+.btn-outline-info,.btn-check:checked+.btn-outline-info,.btn-outline-info.active,.btn-outline-info.dropdown-toggle.show,.btn-outline-info:active{color:#000;background-color:#0dcaf0;border-color:#0dcaf0}.btn-check:active+.btn-outline-info:focus,.btn-check:checked+.btn-outline-info:focus,.btn-outline-info.active:focus,.btn-outline-info.dropdown-toggle.show:focus,.btn-outline-info:active:focus{box-shadow:0 0 0 .25rem rgba(13,202,240,.5)}.btn-outline-info.disabled,.btn-outline-info:disabled{color:#0dcaf0;background-color:transparent}.btn-outline-warning{color:#ffc107;border-color:#ffc107}.btn-outline-warning:hover{color:#000;background-color:#ffc107;border-color:#ffc107}.btn-check:focus+.btn-outline-warning,.btn-outline-warning:focus{box-shadow:0 0 0 .25rem rgba(255,193,7,.5)}.btn-check:active+.btn-outline-warning,.btn-check:checked+.btn-outline-warning,.btn-outline-warning.active,.btn-outline-warning.dropdown-toggle.show,.btn-outline-warning:active{color:#000;background-color:#ffc107;border-color:#ffc107}.btn-check:active+.btn-outline-warning:focus,.btn-check:checked+.btn-outline-warning:focus,.btn-outline-warning.active:focus,.btn-outline-warning.dropdown-toggle.show:focus,.btn-outline-warning:active:focus{box-shadow:0 0 0 .25rem rgba(255,193,7,.5)}.btn-outline-warning.disabled,.btn-outline-warning:disabled{color:#ffc107;background-color:transparent}.btn-outline-danger{color:#dc3545;border-color:#dc3545}.btn-outline-danger:hover{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-check:focus+.btn-outline-danger,.btn-outline-danger:focus{box-shadow:0 0 0 .25rem rgba(220,53,69,.5)}.btn-check:active+.btn-outline-danger,.btn-check:checked+.btn-outline-danger,.btn-outline-danger.active,.btn-outline-danger.dropdown-toggle.show,.btn-outline-danger:active{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-check:active+.btn-outline-danger:focus,.btn-check:checked+.btn-outline-danger:focus,.btn-outline-danger.active:focus,.btn-outline-danger.dropdown-toggle.show:focus,.btn-outline-danger:active:focus{box-shadow:0 0 0 .25rem rgba(220,53,69,.5)}.btn-outline-danger.disabled,.btn-outline-danger:disabled{color:#dc3545;background-color:transparent}.btn-outline-light{color:#f8f9fa;border-color:#f8f9fa}.btn-outline-light:hover{color:#000;background-color:#f8f9fa;border-color:#f8f9fa}.btn-check:focus+.btn-outline-light,.btn-outline-light:focus{box-shadow:0 0 0 .25rem rgba(248,249,250,.5)}.btn-check:active+.btn-outline-light,.btn-check:checked+.btn-outline-light,.btn-outline-light.active,.btn-outline-light.dropdown-toggle.show,.btn-outline-light:active{color:#000;background-color:#f8f9fa;border-color:#f8f9fa}.btn-check:active+.btn-outline-light:focus,.btn-check:checked+.btn-outline-light:focus,.btn-outline-light.active:focus,.btn-outline-light.dropdown-toggle.show:focus,.btn-outline-light:active:focus{box-shadow:0 0 0 .25rem rgba(248,249,250,.5)}.btn-outline-light.disabled,.btn-outline-light:disabled{color:#f8f9fa;background-color:transparent}.btn-outline-dark{color:#212529;border-color:#212529}.btn-outline-dark:hover{color:#fff;background-color:#212529;border-color:#212529}.btn-check:focus+.btn-outline-dark,.btn-outline-dark:focus{box-shadow:0 0 0 .25rem rgba(33,37,41,.5)}.btn-check:active+.btn-outline-dark,.btn-check:checked+.btn-outline-dark,.btn-outline-dark.active,.btn-outline-dark.dropdown-toggle.show,.btn-outline-dark:active{color:#fff;background-color:#212529;border-color:#212529}.btn-check:active+.btn-outline-dark:focus,.btn-check:checked+.btn-outline-dark:focus,.btn-outline-dark.active:focus,.btn-outline-dark.dropdown-toggle.show:focus,.btn-outline-dark:active:focus{box-shadow:0 0 0 .25rem rgba(33,37,41,.5)}.btn-outline-dark.disabled,.btn-outline-dark:disabled{color:#212529;background-color:transparent}.btn-link{font-weight:400;color:#0d6efd;text-decoration:underline}.btn-link:hover{color:#0a58ca}.btn-link.disabled,.btn-link:disabled{color:#6c757d}.btn-group-lg>.btn,.btn-lg{padding:.5rem 1rem;font-size:1.25rem;border-radius:.3rem}.btn-group-sm>.btn,.btn-sm{padding:.25rem .5rem;font-size:.875rem;border-radius:.2rem}.fade{transition:opacity .15s linear}@media (prefers-reduced-motion:reduce){.fade{transition:none}}.fade:not(.show){opacity:0}.collapse:not(.show){display:none}.collapsing{height:0;overflow:hidden;transition:height .35s ease}@media (prefers-reduced-motion:reduce){.collapsing{transition:none}}.collapsing.collapse-horizontal{width:0;height:auto;transition:width .35s ease}@media (prefers-reduced-motion:reduce){.collapsing.collapse-horizontal{transition:none}}.dropdown,.dropend,.dropstart,.dropup{position:relative}.dropdown-toggle{white-space:nowrap}.dropdown-toggle::after{display:inline-block;margin-left:.255em;vertical-align:.255em;content:\\"\\";border-top:.3em solid;border-right:.3em solid transparent;border-bottom:0;border-left:.3em solid transparent}.dropdown-toggle:empty::after{margin-left:0}.dropdown-menu{position:absolute;z-index:1000;display:none;min-width:10rem;padding:.5rem 0;margin:0;font-size:1rem;color:#212529;text-align:left;list-style:none;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,.15);border-radius:.25rem}.dropdown-menu[data-bs-popper]{top:100%;left:0;margin-top:.125rem}.dropdown-menu-start{--bs-position:start}.dropdown-menu-start[data-bs-popper]{right:auto;left:0}.dropdown-menu-end{--bs-position:end}.dropdown-menu-end[data-bs-popper]{right:0;left:auto}@media (min-width:576px){.dropdown-menu-sm-start{--bs-position:start}.dropdown-menu-sm-start[data-bs-popper]{right:auto;left:0}.dropdown-menu-sm-end{--bs-position:end}.dropdown-menu-sm-end[data-bs-popper]{right:0;left:auto}}@media (min-width:768px){.dropdown-menu-md-start{--bs-position:start}.dropdown-menu-md-start[data-bs-popper]{right:auto;left:0}.dropdown-menu-md-end{--bs-position:end}.dropdown-menu-md-end[data-bs-popper]{right:0;left:auto}}@media (min-width:992px){.dropdown-menu-lg-start{--bs-position:start}.dropdown-menu-lg-start[data-bs-popper]{right:auto;left:0}.dropdown-menu-lg-end{--bs-position:end}.dropdown-menu-lg-end[data-bs-popper]{right:0;left:auto}}@media (min-width:1200px){.dropdown-menu-xl-start{--bs-position:start}.dropdown-menu-xl-start[data-bs-popper]{right:auto;left:0}.dropdown-menu-xl-end{--bs-position:end}.dropdown-menu-xl-end[data-bs-popper]{right:0;left:auto}}@media (min-width:1400px){.dropdown-menu-xxl-start{--bs-position:start}.dropdown-menu-xxl-start[data-bs-popper]{right:auto;left:0}.dropdown-menu-xxl-end{--bs-position:end}.dropdown-menu-xxl-end[data-bs-popper]{right:0;left:auto}}.dropup .dropdown-menu[data-bs-popper]{top:auto;bottom:100%;margin-top:0;margin-bottom:.125rem}.dropup .dropdown-toggle::after{display:inline-block;margin-left:.255em;vertical-align:.255em;content:\\"\\";border-top:0;border-right:.3em solid transparent;border-bottom:.3em solid;border-left:.3em solid transparent}.dropup .dropdown-toggle:empty::after{margin-left:0}.dropend .dropdown-menu[data-bs-popper]{top:0;right:auto;left:100%;margin-top:0;margin-left:.125rem}.dropend .dropdown-toggle::after{display:inline-block;margin-left:.255em;vertical-align:.255em;content:\\"\\";border-top:.3em solid transparent;border-right:0;border-bottom:.3em solid transparent;border-left:.3em solid}.dropend .dropdown-toggle:empty::after{margin-left:0}.dropend .dropdown-toggle::after{vertical-align:0}.dropstart .dropdown-menu[data-bs-popper]{top:0;right:100%;left:auto;margin-top:0;margin-right:.125rem}.dropstart .dropdown-toggle::after{display:inline-block;margin-left:.255em;vertical-align:.255em;content:\\"\\"}.dropstart .dropdown-toggle::after{display:none}.dropstart .dropdown-toggle::before{display:inline-block;margin-right:.255em;vertical-align:.255em;content:\\"\\";border-top:.3em solid transparent;border-right:.3em solid;border-bottom:.3em solid transparent}.dropstart .dropdown-toggle:empty::after{margin-left:0}.dropstart .dropdown-toggle::before{vertical-align:0}.dropdown-divider{height:0;margin:.5rem 0;overflow:hidden;border-top:1px solid rgba(0,0,0,.15)}.dropdown-item{display:block;width:100%;padding:.25rem 1rem;clear:both;font-weight:400;color:#212529;text-align:inherit;text-decoration:none;white-space:nowrap;background-color:transparent;border:0}.dropdown-item:focus,.dropdown-item:hover{color:#1e2125;background-color:#e9ecef}.dropdown-item.active,.dropdown-item:active{color:#fff;text-decoration:none;background-color:#0d6efd}.dropdown-item.disabled,.dropdown-item:disabled{color:#adb5bd;pointer-events:none;background-color:transparent}.dropdown-menu.show{display:block}.dropdown-header{display:block;padding:.5rem 1rem;margin-bottom:0;font-size:.875rem;color:#6c757d;white-space:nowrap}.dropdown-item-text{display:block;padding:.25rem 1rem;color:#212529}.dropdown-menu-dark{color:#dee2e6;background-color:#343a40;border-color:rgba(0,0,0,.15)}.dropdown-menu-dark .dropdown-item{color:#dee2e6}.dropdown-menu-dark .dropdown-item:focus,.dropdown-menu-dark .dropdown-item:hover{color:#fff;background-color:rgba(255,255,255,.15)}.dropdown-menu-dark .dropdown-item.active,.dropdown-menu-dark .dropdown-item:active{color:#fff;background-color:#0d6efd}.dropdown-menu-dark .dropdown-item.disabled,.dropdown-menu-dark .dropdown-item:disabled{color:#adb5bd}.dropdown-menu-dark .dropdown-divider{border-color:rgba(0,0,0,.15)}.dropdown-menu-dark .dropdown-item-text{color:#dee2e6}.dropdown-menu-dark .dropdown-header{color:#adb5bd}.btn-group,.btn-group-vertical{position:relative;display:inline-flex;vertical-align:middle}.btn-group-vertical>.btn,.btn-group>.btn{position:relative;flex:1 1 auto}.btn-group-vertical>.btn-check:checked+.btn,.btn-group-vertical>.btn-check:focus+.btn,.btn-group-vertical>.btn.active,.btn-group-vertical>.btn:active,.btn-group-vertical>.btn:focus,.btn-group-vertical>.btn:hover,.btn-group>.btn-check:checked+.btn,.btn-group>.btn-check:focus+.btn,.btn-group>.btn.active,.btn-group>.btn:active,.btn-group>.btn:focus,.btn-group>.btn:hover{z-index:1}.btn-toolbar{display:flex;flex-wrap:wrap;justify-content:flex-start}.btn-toolbar .input-group{width:auto}.btn-group>.btn-group:not(:first-child),.btn-group>.btn:not(:first-child){margin-left:-1px}.btn-group>.btn-group:not(:last-child)>.btn,.btn-group>.btn:not(:last-child):not(.dropdown-toggle){border-top-right-radius:0;border-bottom-right-radius:0}.btn-group>.btn-group:not(:first-child)>.btn,.btn-group>.btn:nth-child(n+3),.btn-group>:not(.btn-check)+.btn{border-top-left-radius:0;border-bottom-left-radius:0}.dropdown-toggle-split{padding-right:.5625rem;padding-left:.5625rem}.dropdown-toggle-split::after,.dropend .dropdown-toggle-split::after,.dropup .dropdown-toggle-split::after{margin-left:0}.dropstart .dropdown-toggle-split::before{margin-right:0}.btn-group-sm>.btn+.dropdown-toggle-split,.btn-sm+.dropdown-toggle-split{padding-right:.375rem;padding-left:.375rem}.btn-group-lg>.btn+.dropdown-toggle-split,.btn-lg+.dropdown-toggle-split{padding-right:.75rem;padding-left:.75rem}.btn-group-vertical{flex-direction:column;align-items:flex-start;justify-content:center}.btn-group-vertical>.btn,.btn-group-vertical>.btn-group{width:100%}.btn-group-vertical>.btn-group:not(:first-child),.btn-group-vertical>.btn:not(:first-child){margin-top:-1px}.btn-group-vertical>.btn-group:not(:last-child)>.btn,.btn-group-vertical>.btn:not(:last-child):not(.dropdown-toggle){border-bottom-right-radius:0;border-bottom-left-radius:0}.btn-group-vertical>.btn-group:not(:first-child)>.btn,.btn-group-vertical>.btn~.btn{border-top-left-radius:0;border-top-right-radius:0}.nav{display:flex;flex-wrap:wrap;padding-left:0;margin-bottom:0;list-style:none}.nav-link{display:block;padding:.5rem 1rem;color:#0d6efd;text-decoration:none;transition:color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out}@media (prefers-reduced-motion:reduce){.nav-link{transition:none}}.nav-link:focus,.nav-link:hover{color:#0a58ca}.nav-link.disabled{color:#6c757d;pointer-events:none;cursor:default}.nav-tabs{border-bottom:1px solid #dee2e6}.nav-tabs .nav-link{margin-bottom:-1px;background:0 0;border:1px solid transparent;border-top-left-radius:.25rem;border-top-right-radius:.25rem}.nav-tabs .nav-link:focus,.nav-tabs .nav-link:hover{border-color:#e9ecef #e9ecef #dee2e6;isolation:isolate}.nav-tabs .nav-link.disabled{color:#6c757d;background-color:transparent;border-color:transparent}.nav-tabs .nav-item.show .nav-link,.nav-tabs .nav-link.active{color:#495057;background-color:#fff;border-color:#dee2e6 #dee2e6 #fff}.nav-tabs .dropdown-menu{margin-top:-1px;border-top-left-radius:0;border-top-right-radius:0}.nav-pills .nav-link{background:0 0;border:0;border-radius:.25rem}.nav-pills .nav-link.active,.nav-pills .show>.nav-link{color:#fff;background-color:#0d6efd}.nav-fill .nav-item,.nav-fill>.nav-link{flex:1 1 auto;text-align:center}.nav-justified .nav-item,.nav-justified>.nav-link{flex-basis:0;flex-grow:1;text-align:center}.nav-fill .nav-item .nav-link,.nav-justified .nav-item .nav-link{width:100%}.tab-content>.tab-pane{display:none}.tab-content>.active{display:block}.navbar{position:relative;display:flex;flex-wrap:wrap;align-items:center;justify-content:space-between;padding-top:.5rem;padding-bottom:.5rem}.navbar>.container,.navbar>.container-fluid,.navbar>.container-lg,.navbar>.container-md,.navbar>.container-sm,.navbar>.container-xl,.navbar>.container-xxl{display:flex;flex-wrap:inherit;align-items:center;justify-content:space-between}.navbar-brand{padding-top:.3125rem;padding-bottom:.3125rem;margin-right:1rem;font-size:1.25rem;text-decoration:none;white-space:nowrap}.navbar-nav{display:flex;flex-direction:column;padding-left:0;margin-bottom:0;list-style:none}.navbar-nav .nav-link{padding-right:0;padding-left:0}.navbar-nav .dropdown-menu{position:static}.navbar-text{padding-top:.5rem;padding-bottom:.5rem}.navbar-collapse{flex-basis:100%;flex-grow:1;align-items:center}.navbar-toggler{padding:.25rem .75rem;font-size:1.25rem;line-height:1;background-color:transparent;border:1px solid transparent;border-radius:.25rem;transition:box-shadow .15s ease-in-out}@media (prefers-reduced-motion:reduce){.navbar-toggler{transition:none}}.navbar-toggler:hover{text-decoration:none}.navbar-toggler:focus{text-decoration:none;outline:0;box-shadow:0 0 0 .25rem}.navbar-toggler-icon{display:inline-block;width:1.5em;height:1.5em;vertical-align:middle;background-repeat:no-repeat;background-position:center;background-size:100%}.navbar-nav-scroll{max-height:var(--bs-scroll-height,75vh);overflow-y:auto}@media (min-width:576px){.navbar-expand-sm{flex-wrap:nowrap;justify-content:flex-start}.navbar-expand-sm .navbar-nav{flex-direction:row}.navbar-expand-sm .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-sm .navbar-nav .nav-link{padding-right:.5rem;padding-left:.5rem}.navbar-expand-sm .navbar-nav-scroll{overflow:visible}.navbar-expand-sm .navbar-collapse{display:flex!important;flex-basis:auto}.navbar-expand-sm .navbar-toggler{display:none}.navbar-expand-sm .offcanvas-header{display:none}.navbar-expand-sm .offcanvas{position:inherit;bottom:0;z-index:1000;flex-grow:1;visibility:visible!important;background-color:transparent;border-right:0;border-left:0;transition:none;transform:none}.navbar-expand-sm .offcanvas-bottom,.navbar-expand-sm .offcanvas-top{height:auto;border-top:0;border-bottom:0}.navbar-expand-sm .offcanvas-body{display:flex;flex-grow:0;padding:0;overflow-y:visible}}@media (min-width:768px){.navbar-expand-md{flex-wrap:nowrap;justify-content:flex-start}.navbar-expand-md .navbar-nav{flex-direction:row}.navbar-expand-md .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-md .navbar-nav .nav-link{padding-right:.5rem;padding-left:.5rem}.navbar-expand-md .navbar-nav-scroll{overflow:visible}.navbar-expand-md .navbar-collapse{display:flex!important;flex-basis:auto}.navbar-expand-md .navbar-toggler{display:none}.navbar-expand-md .offcanvas-header{display:none}.navbar-expand-md .offcanvas{position:inherit;bottom:0;z-index:1000;flex-grow:1;visibility:visible!important;background-color:transparent;border-right:0;border-left:0;transition:none;transform:none}.navbar-expand-md .offcanvas-bottom,.navbar-expand-md .offcanvas-top{height:auto;border-top:0;border-bottom:0}.navbar-expand-md .offcanvas-body{display:flex;flex-grow:0;padding:0;overflow-y:visible}}@media (min-width:992px){.navbar-expand-lg{flex-wrap:nowrap;justify-content:flex-start}.navbar-expand-lg .navbar-nav{flex-direction:row}.navbar-expand-lg .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-lg .navbar-nav .nav-link{padding-right:.5rem;padding-left:.5rem}.navbar-expand-lg .navbar-nav-scroll{overflow:visible}.navbar-expand-lg .navbar-collapse{display:flex!important;flex-basis:auto}.navbar-expand-lg .navbar-toggler{display:none}.navbar-expand-lg .offcanvas-header{display:none}.navbar-expand-lg .offcanvas{position:inherit;bottom:0;z-index:1000;flex-grow:1;visibility:visible!important;background-color:transparent;border-right:0;border-left:0;transition:none;transform:none}.navbar-expand-lg .offcanvas-bottom,.navbar-expand-lg .offcanvas-top{height:auto;border-top:0;border-bottom:0}.navbar-expand-lg .offcanvas-body{display:flex;flex-grow:0;padding:0;overflow-y:visible}}@media (min-width:1200px){.navbar-expand-xl{flex-wrap:nowrap;justify-content:flex-start}.navbar-expand-xl .navbar-nav{flex-direction:row}.navbar-expand-xl .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-xl .navbar-nav .nav-link{padding-right:.5rem;padding-left:.5rem}.navbar-expand-xl .navbar-nav-scroll{overflow:visible}.navbar-expand-xl .navbar-collapse{display:flex!important;flex-basis:auto}.navbar-expand-xl .navbar-toggler{display:none}.navbar-expand-xl .offcanvas-header{display:none}.navbar-expand-xl .offcanvas{position:inherit;bottom:0;z-index:1000;flex-grow:1;visibility:visible!important;background-color:transparent;border-right:0;border-left:0;transition:none;transform:none}.navbar-expand-xl .offcanvas-bottom,.navbar-expand-xl .offcanvas-top{height:auto;border-top:0;border-bottom:0}.navbar-expand-xl .offcanvas-body{display:flex;flex-grow:0;padding:0;overflow-y:visible}}@media (min-width:1400px){.navbar-expand-xxl{flex-wrap:nowrap;justify-content:flex-start}.navbar-expand-xxl .navbar-nav{flex-direction:row}.navbar-expand-xxl .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-xxl .navbar-nav .nav-link{padding-right:.5rem;padding-left:.5rem}.navbar-expand-xxl .navbar-nav-scroll{overflow:visible}.navbar-expand-xxl .navbar-collapse{display:flex!important;flex-basis:auto}.navbar-expand-xxl .navbar-toggler{display:none}.navbar-expand-xxl .offcanvas-header{display:none}.navbar-expand-xxl .offcanvas{position:inherit;bottom:0;z-index:1000;flex-grow:1;visibility:visible!important;background-color:transparent;border-right:0;border-left:0;transition:none;transform:none}.navbar-expand-xxl .offcanvas-bottom,.navbar-expand-xxl .offcanvas-top{height:auto;border-top:0;border-bottom:0}.navbar-expand-xxl .offcanvas-body{display:flex;flex-grow:0;padding:0;overflow-y:visible}}.navbar-expand{flex-wrap:nowrap;justify-content:flex-start}.navbar-expand .navbar-nav{flex-direction:row}.navbar-expand .navbar-nav .dropdown-menu{position:absolute}.navbar-expand .navbar-nav .nav-link{padding-right:.5rem;padding-left:.5rem}.navbar-expand .navbar-nav-scroll{overflow:visible}.navbar-expand .navbar-collapse{display:flex!important;flex-basis:auto}.navbar-expand .navbar-toggler{display:none}.navbar-expand .offcanvas-header{display:none}.navbar-expand .offcanvas{position:inherit;bottom:0;z-index:1000;flex-grow:1;visibility:visible!important;background-color:transparent;border-right:0;border-left:0;transition:none;transform:none}.navbar-expand .offcanvas-bottom,.navbar-expand .offcanvas-top{height:auto;border-top:0;border-bottom:0}.navbar-expand .offcanvas-body{display:flex;flex-grow:0;padding:0;overflow-y:visible}.navbar-light .navbar-brand{color:rgba(0,0,0,.9)}.navbar-light .navbar-brand:focus,.navbar-light .navbar-brand:hover{color:rgba(0,0,0,.9)}.navbar-light .navbar-nav .nav-link{color:rgba(0,0,0,.55)}.navbar-light .navbar-nav .nav-link:focus,.navbar-light .navbar-nav .nav-link:hover{color:rgba(0,0,0,.7)}.navbar-light .navbar-nav .nav-link.disabled{color:rgba(0,0,0,.3)}.navbar-light .navbar-nav .nav-link.active,.navbar-light .navbar-nav .show>.nav-link{color:rgba(0,0,0,.9)}.navbar-light .navbar-toggler{color:rgba(0,0,0,.55);border-color:rgba(0,0,0,.1)}.navbar-light .navbar-toggler-icon{background-image:url(\\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 30 30\'%3e%3cpath stroke=\'rgba%280, 0, 0, 0.55%29\' stroke-linecap=\'round\' stroke-miterlimit=\'10\' stroke-width=\'2\' d=\'M4 7h22M4 15h22M4 23h22\'/%3e%3c/svg%3e\\")}.navbar-light .navbar-text{color:rgba(0,0,0,.55)}.navbar-light .navbar-text a,.navbar-light .navbar-text a:focus,.navbar-light .navbar-text a:hover{color:rgba(0,0,0,.9)}.navbar-dark .navbar-brand{color:#fff}.navbar-dark .navbar-brand:focus,.navbar-dark .navbar-brand:hover{color:#fff}.navbar-dark .navbar-nav .nav-link{color:rgba(255,255,255,.55)}.navbar-dark .navbar-nav .nav-link:focus,.navbar-dark .navbar-nav .nav-link:hover{color:rgba(255,255,255,.75)}.navbar-dark .navbar-nav .nav-link.disabled{color:rgba(255,255,255,.25)}.navbar-dark .navbar-nav .nav-link.active,.navbar-dark .navbar-nav .show>.nav-link{color:#fff}.navbar-dark .navbar-toggler{color:rgba(255,255,255,.55);border-color:rgba(255,255,255,.1)}.navbar-dark .navbar-toggler-icon{background-image:url(\\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 30 30\'%3e%3cpath stroke=\'rgba%28255, 255, 255, 0.55%29\' stroke-linecap=\'round\' stroke-miterlimit=\'10\' stroke-width=\'2\' d=\'M4 7h22M4 15h22M4 23h22\'/%3e%3c/svg%3e\\")}.navbar-dark .navbar-text{color:rgba(255,255,255,.55)}.navbar-dark .navbar-text a,.navbar-dark .navbar-text a:focus,.navbar-dark .navbar-text a:hover{color:#fff}.card{position:relative;display:flex;flex-direction:column;min-width:0;word-wrap:break-word;background-color:#fff;background-clip:border-box;border:1px solid rgba(0,0,0,.125);border-radius:.25rem}.card>hr{margin-right:0;margin-left:0}.card>.list-group{border-top:inherit;border-bottom:inherit}.card>.list-group:first-child{border-top-width:0;border-top-left-radius:calc(.25rem - 1px);border-top-right-radius:calc(.25rem - 1px)}.card>.list-group:last-child{border-bottom-width:0;border-bottom-right-radius:calc(.25rem - 1px);border-bottom-left-radius:calc(.25rem - 1px)}.card>.card-header+.list-group,.card>.list-group+.card-footer{border-top:0}.card-body{flex:1 1 auto;padding:1rem 1rem}.card-title{margin-bottom:.5rem}.card-subtitle{margin-top:-.25rem;margin-bottom:0}.card-text:last-child{margin-bottom:0}.card-link+.card-link{margin-left:1rem}.card-header{padding:.5rem 1rem;margin-bottom:0;background-color:rgba(0,0,0,.03);border-bottom:1px solid rgba(0,0,0,.125)}.card-header:first-child{border-radius:calc(.25rem - 1px) calc(.25rem - 1px) 0 0}.card-footer{padding:.5rem 1rem;background-color:rgba(0,0,0,.03);border-top:1px solid rgba(0,0,0,.125)}.card-footer:last-child{border-radius:0 0 calc(.25rem - 1px) calc(.25rem - 1px)}.card-header-tabs{margin-right:-.5rem;margin-bottom:-.5rem;margin-left:-.5rem;border-bottom:0}.card-header-pills{margin-right:-.5rem;margin-left:-.5rem}.card-img-overlay{position:absolute;top:0;right:0;bottom:0;left:0;padding:1rem;border-radius:calc(.25rem - 1px)}.card-img,.card-img-bottom,.card-img-top{width:100%}.card-img,.card-img-top{border-top-left-radius:calc(.25rem - 1px);border-top-right-radius:calc(.25rem - 1px)}.card-img,.card-img-bottom{border-bottom-right-radius:calc(.25rem - 1px);border-bottom-left-radius:calc(.25rem - 1px)}.card-group>.card{margin-bottom:.75rem}@media (min-width:576px){.card-group{display:flex;flex-flow:row wrap}.card-group>.card{flex:1 0 0%;margin-bottom:0}.card-group>.card+.card{margin-left:0;border-left:0}.card-group>.card:not(:last-child){border-top-right-radius:0;border-bottom-right-radius:0}.card-group>.card:not(:last-child) .card-header,.card-group>.card:not(:last-child) .card-img-top{border-top-right-radius:0}.card-group>.card:not(:last-child) .card-footer,.card-group>.card:not(:last-child) .card-img-bottom{border-bottom-right-radius:0}.card-group>.card:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0}.card-group>.card:not(:first-child) .card-header,.card-group>.card:not(:first-child) .card-img-top{border-top-left-radius:0}.card-group>.card:not(:first-child) .card-footer,.card-group>.card:not(:first-child) .card-img-bottom{border-bottom-left-radius:0}}.accordion-button{position:relative;display:flex;align-items:center;width:100%;padding:1rem 1.25rem;font-size:1rem;color:#212529;text-align:left;background-color:#fff;border:0;border-radius:0;overflow-anchor:none;transition:color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out,border-radius .15s ease}@media (prefers-reduced-motion:reduce){.accordion-button{transition:none}}.accordion-button:not(.collapsed){color:#0c63e4;background-color:#e7f1ff;box-shadow:inset 0 -1px 0 rgba(0,0,0,.125)}.accordion-button:not(.collapsed)::after{background-image:url(\\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 16 16\' fill=\'%230c63e4\'%3e%3cpath fill-rule=\'evenodd\' d=\'M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\'/%3e%3c/svg%3e\\");transform:rotate(-180deg)}.accordion-button::after{flex-shrink:0;width:1.25rem;height:1.25rem;margin-left:auto;content:\\"\\";background-image:url(\\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 16 16\' fill=\'%23212529\'%3e%3cpath fill-rule=\'evenodd\' d=\'M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\'/%3e%3c/svg%3e\\");background-repeat:no-repeat;background-size:1.25rem;transition:transform .2s ease-in-out}@media (prefers-reduced-motion:reduce){.accordion-button::after{transition:none}}.accordion-button:hover{z-index:2}.accordion-button:focus{z-index:3;border-color:#86b7fe;outline:0;box-shadow:0 0 0 .25rem rgba(13,110,253,.25)}.accordion-header{margin-bottom:0}.accordion-item{background-color:#fff;border:1px solid rgba(0,0,0,.125)}.accordion-item:first-of-type{border-top-left-radius:.25rem;border-top-right-radius:.25rem}.accordion-item:first-of-type .accordion-button{border-top-left-radius:calc(.25rem - 1px);border-top-right-radius:calc(.25rem - 1px)}.accordion-item:not(:first-of-type){border-top:0}.accordion-item:last-of-type{border-bottom-right-radius:.25rem;border-bottom-left-radius:.25rem}.accordion-item:last-of-type .accordion-button.collapsed{border-bottom-right-radius:calc(.25rem - 1px);border-bottom-left-radius:calc(.25rem - 1px)}.accordion-item:last-of-type .accordion-collapse{border-bottom-right-radius:.25rem;border-bottom-left-radius:.25rem}.accordion-body{padding:1rem 1.25rem}.accordion-flush .accordion-collapse{border-width:0}.accordion-flush .accordion-item{border-right:0;border-left:0;border-radius:0}.accordion-flush .accordion-item:first-child{border-top:0}.accordion-flush .accordion-item:last-child{border-bottom:0}.accordion-flush .accordion-item .accordion-button{border-radius:0}.breadcrumb{display:flex;flex-wrap:wrap;padding:0 0;margin-bottom:1rem;list-style:none}.breadcrumb-item+.breadcrumb-item{padding-left:.5rem}.breadcrumb-item+.breadcrumb-item::before{float:left;padding-right:.5rem;color:#6c757d;content:var(--bs-breadcrumb-divider, \\"/\\")}.breadcrumb-item.active{color:#6c757d}.pagination{display:flex;padding-left:0;list-style:none}.page-link{position:relative;display:block;color:#0d6efd;text-decoration:none;background-color:#fff;border:1px solid #dee2e6;transition:color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out}@media (prefers-reduced-motion:reduce){.page-link{transition:none}}.page-link:hover{z-index:2;color:#0a58ca;background-color:#e9ecef;border-color:#dee2e6}.page-link:focus{z-index:3;color:#0a58ca;background-color:#e9ecef;outline:0;box-shadow:0 0 0 .25rem rgba(13,110,253,.25)}.page-item:not(:first-child) .page-link{margin-left:-1px}.page-item.active .page-link{z-index:3;color:#fff;background-color:#0d6efd;border-color:#0d6efd}.page-item.disabled .page-link{color:#6c757d;pointer-events:none;background-color:#fff;border-color:#dee2e6}.page-link{padding:.375rem .75rem}.page-item:first-child .page-link{border-top-left-radius:.25rem;border-bottom-left-radius:.25rem}.page-item:last-child .page-link{border-top-right-radius:.25rem;border-bottom-right-radius:.25rem}.pagination-lg .page-link{padding:.75rem 1.5rem;font-size:1.25rem}.pagination-lg .page-item:first-child .page-link{border-top-left-radius:.3rem;border-bottom-left-radius:.3rem}.pagination-lg .page-item:last-child .page-link{border-top-right-radius:.3rem;border-bottom-right-radius:.3rem}.pagination-sm .page-link{padding:.25rem .5rem;font-size:.875rem}.pagination-sm .page-item:first-child .page-link{border-top-left-radius:.2rem;border-bottom-left-radius:.2rem}.pagination-sm .page-item:last-child .page-link{border-top-right-radius:.2rem;border-bottom-right-radius:.2rem}.badge{display:inline-block;padding:.35em .65em;font-size:.75em;font-weight:700;line-height:1;color:#fff;text-align:center;white-space:nowrap;vertical-align:baseline;border-radius:.25rem}.badge:empty{display:none}.btn .badge{position:relative;top:-1px}.alert{position:relative;padding:1rem 1rem;margin-bottom:1rem;border:1px solid transparent;border-radius:.25rem}.alert-heading{color:inherit}.alert-link{font-weight:700}.alert-dismissible{padding-right:3rem}.alert-dismissible .btn-close{position:absolute;top:0;right:0;z-index:2;padding:1.25rem 1rem}.alert-primary{color:#084298;background-color:#cfe2ff;border-color:#b6d4fe}.alert-primary .alert-link{color:#06357a}.alert-secondary{color:#41464b;background-color:#e2e3e5;border-color:#d3d6d8}.alert-secondary .alert-link{color:#34383c}.alert-success{color:#0f5132;background-color:#d1e7dd;border-color:#badbcc}.alert-success .alert-link{color:#0c4128}.alert-info{color:#055160;background-color:#cff4fc;border-color:#b6effb}.alert-info .alert-link{color:#04414d}.alert-warning{color:#664d03;background-color:#fff3cd;border-color:#ffecb5}.alert-warning .alert-link{color:#523e02}.alert-danger{color:#842029;background-color:#f8d7da;border-color:#f5c2c7}.alert-danger .alert-link{color:#6a1a21}.alert-light{color:#636464;background-color:#fefefe;border-color:#fdfdfe}.alert-light .alert-link{color:#4f5050}.alert-dark{color:#141619;background-color:#d3d3d4;border-color:#bcbebf}.alert-dark .alert-link{color:#101214}@-webkit-keyframes progress-bar-stripes{0%{background-position-x:1rem}}@keyframes progress-bar-stripes{0%{background-position-x:1rem}}.progress{display:flex;height:1rem;overflow:hidden;font-size:.75rem;background-color:#e9ecef;border-radius:.25rem}.progress-bar{display:flex;flex-direction:column;justify-content:center;overflow:hidden;color:#fff;text-align:center;white-space:nowrap;background-color:#0d6efd;transition:width .6s ease}@media (prefers-reduced-motion:reduce){.progress-bar{transition:none}}.progress-bar-striped{background-image:linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-size:1rem 1rem}.progress-bar-animated{-webkit-animation:1s linear infinite progress-bar-stripes;animation:1s linear infinite progress-bar-stripes}@media (prefers-reduced-motion:reduce){.progress-bar-animated{-webkit-animation:none;animation:none}}.list-group{display:flex;flex-direction:column;padding-left:0;margin-bottom:0;border-radius:.25rem}.list-group-numbered{list-style-type:none;counter-reset:section}.list-group-numbered>li::before{content:counters(section, \\".\\") \\". \\";counter-increment:section}.list-group-item-action{width:100%;color:#495057;text-align:inherit}.list-group-item-action:focus,.list-group-item-action:hover{z-index:1;color:#495057;text-decoration:none;background-color:#f8f9fa}.list-group-item-action:active{color:#212529;background-color:#e9ecef}.list-group-item{position:relative;display:block;padding:.5rem 1rem;color:#212529;text-decoration:none;background-color:#fff;border:1px solid rgba(0,0,0,.125)}.list-group-item:first-child{border-top-left-radius:inherit;border-top-right-radius:inherit}.list-group-item:last-child{border-bottom-right-radius:inherit;border-bottom-left-radius:inherit}.list-group-item.disabled,.list-group-item:disabled{color:#6c757d;pointer-events:none;background-color:#fff}.list-group-item.active{z-index:2;color:#fff;background-color:#0d6efd;border-color:#0d6efd}.list-group-item+.list-group-item{border-top-width:0}.list-group-item+.list-group-item.active{margin-top:-1px;border-top-width:1px}.list-group-horizontal{flex-direction:row}.list-group-horizontal>.list-group-item:first-child{border-bottom-left-radius:.25rem;border-top-right-radius:0}.list-group-horizontal>.list-group-item:last-child{border-top-right-radius:.25rem;border-bottom-left-radius:0}.list-group-horizontal>.list-group-item.active{margin-top:0}.list-group-horizontal>.list-group-item+.list-group-item{border-top-width:1px;border-left-width:0}.list-group-horizontal>.list-group-item+.list-group-item.active{margin-left:-1px;border-left-width:1px}@media (min-width:576px){.list-group-horizontal-sm{flex-direction:row}.list-group-horizontal-sm>.list-group-item:first-child{border-bottom-left-radius:.25rem;border-top-right-radius:0}.list-group-horizontal-sm>.list-group-item:last-child{border-top-right-radius:.25rem;border-bottom-left-radius:0}.list-group-horizontal-sm>.list-group-item.active{margin-top:0}.list-group-horizontal-sm>.list-group-item+.list-group-item{border-top-width:1px;border-left-width:0}.list-group-horizontal-sm>.list-group-item+.list-group-item.active{margin-left:-1px;border-left-width:1px}}@media (min-width:768px){.list-group-horizontal-md{flex-direction:row}.list-group-horizontal-md>.list-group-item:first-child{border-bottom-left-radius:.25rem;border-top-right-radius:0}.list-group-horizontal-md>.list-group-item:last-child{border-top-right-radius:.25rem;border-bottom-left-radius:0}.list-group-horizontal-md>.list-group-item.active{margin-top:0}.list-group-horizontal-md>.list-group-item+.list-group-item{border-top-width:1px;border-left-width:0}.list-group-horizontal-md>.list-group-item+.list-group-item.active{margin-left:-1px;border-left-width:1px}}@media (min-width:992px){.list-group-horizontal-lg{flex-direction:row}.list-group-horizontal-lg>.list-group-item:first-child{border-bottom-left-radius:.25rem;border-top-right-radius:0}.list-group-horizontal-lg>.list-group-item:last-child{border-top-right-radius:.25rem;border-bottom-left-radius:0}.list-group-horizontal-lg>.list-group-item.active{margin-top:0}.list-group-horizontal-lg>.list-group-item+.list-group-item{border-top-width:1px;border-left-width:0}.list-group-horizontal-lg>.list-group-item+.list-group-item.active{margin-left:-1px;border-left-width:1px}}@media (min-width:1200px){.list-group-horizontal-xl{flex-direction:row}.list-group-horizontal-xl>.list-group-item:first-child{border-bottom-left-radius:.25rem;border-top-right-radius:0}.list-group-horizontal-xl>.list-group-item:last-child{border-top-right-radius:.25rem;border-bottom-left-radius:0}.list-group-horizontal-xl>.list-group-item.active{margin-top:0}.list-group-horizontal-xl>.list-group-item+.list-group-item{border-top-width:1px;border-left-width:0}.list-group-horizontal-xl>.list-group-item+.list-group-item.active{margin-left:-1px;border-left-width:1px}}@media (min-width:1400px){.list-group-horizontal-xxl{flex-direction:row}.list-group-horizontal-xxl>.list-group-item:first-child{border-bottom-left-radius:.25rem;border-top-right-radius:0}.list-group-horizontal-xxl>.list-group-item:last-child{border-top-right-radius:.25rem;border-bottom-left-radius:0}.list-group-horizontal-xxl>.list-group-item.active{margin-top:0}.list-group-horizontal-xxl>.list-group-item+.list-group-item{border-top-width:1px;border-left-width:0}.list-group-horizontal-xxl>.list-group-item+.list-group-item.active{margin-left:-1px;border-left-width:1px}}.list-group-flush{border-radius:0}.list-group-flush>.list-group-item{border-width:0 0 1px}.list-group-flush>.list-group-item:last-child{border-bottom-width:0}.list-group-item-primary{color:#084298;background-color:#cfe2ff}.list-group-item-primary.list-group-item-action:focus,.list-group-item-primary.list-group-item-action:hover{color:#084298;background-color:#bacbe6}.list-group-item-primary.list-group-item-action.active{color:#fff;background-color:#084298;border-color:#084298}.list-group-item-secondary{color:#41464b;background-color:#e2e3e5}.list-group-item-secondary.list-group-item-action:focus,.list-group-item-secondary.list-group-item-action:hover{color:#41464b;background-color:#cbccce}.list-group-item-secondary.list-group-item-action.active{color:#fff;background-color:#41464b;border-color:#41464b}.list-group-item-success{color:#0f5132;background-color:#d1e7dd}.list-group-item-success.list-group-item-action:focus,.list-group-item-success.list-group-item-action:hover{color:#0f5132;background-color:#bcd0c7}.list-group-item-success.list-group-item-action.active{color:#fff;background-color:#0f5132;border-color:#0f5132}.list-group-item-info{color:#055160;background-color:#cff4fc}.list-group-item-info.list-group-item-action:focus,.list-group-item-info.list-group-item-action:hover{color:#055160;background-color:#badce3}.list-group-item-info.list-group-item-action.active{color:#fff;background-color:#055160;border-color:#055160}.list-group-item-warning{color:#664d03;background-color:#fff3cd}.list-group-item-warning.list-group-item-action:focus,.list-group-item-warning.list-group-item-action:hover{color:#664d03;background-color:#e6dbb9}.list-group-item-warning.list-group-item-action.active{color:#fff;background-color:#664d03;border-color:#664d03}.list-group-item-danger{color:#842029;background-color:#f8d7da}.list-group-item-danger.list-group-item-action:focus,.list-group-item-danger.list-group-item-action:hover{color:#842029;background-color:#dfc2c4}.list-group-item-danger.list-group-item-action.active{color:#fff;background-color:#842029;border-color:#842029}.list-group-item-light{color:#636464;background-color:#fefefe}.list-group-item-light.list-group-item-action:focus,.list-group-item-light.list-group-item-action:hover{color:#636464;background-color:#e5e5e5}.list-group-item-light.list-group-item-action.active{color:#fff;background-color:#636464;border-color:#636464}.list-group-item-dark{color:#141619;background-color:#d3d3d4}.list-group-item-dark.list-group-item-action:focus,.list-group-item-dark.list-group-item-action:hover{color:#141619;background-color:#bebebf}.list-group-item-dark.list-group-item-action.active{color:#fff;background-color:#141619;border-color:#141619}.btn-close{box-sizing:content-box;width:1em;height:1em;padding:.25em .25em;color:#000;background:transparent url(\\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 16 16\' fill=\'%23000\'%3e%3cpath d=\'M.293.293a1 1 0 011.414 0L8 6.586 14.293.293a1 1 0 111.414 1.414L9.414 8l6.293 6.293a1 1 0 01-1.414 1.414L8 9.414l-6.293 6.293a1 1 0 01-1.414-1.414L6.586 8 .293 1.707a1 1 0 010-1.414z\'/%3e%3c/svg%3e\\") center/1em auto no-repeat;border:0;border-radius:.25rem;opacity:.5}.btn-close:hover{color:#000;text-decoration:none;opacity:.75}.btn-close:focus{outline:0;box-shadow:0 0 0 .25rem rgba(13,110,253,.25);opacity:1}.btn-close.disabled,.btn-close:disabled{pointer-events:none;-webkit-user-select:none;-moz-user-select:none;user-select:none;opacity:.25}.btn-close-white{filter:invert(1) grayscale(100%) brightness(200%)}.toast{width:350px;max-width:100%;font-size:.875rem;pointer-events:auto;background-color:rgba(255,255,255,.85);background-clip:padding-box;border:1px solid rgba(0,0,0,.1);box-shadow:0 .5rem 1rem rgba(0,0,0,.15);border-radius:.25rem}.toast.showing{opacity:0}.toast:not(.show){display:none}.toast-container{width:-webkit-max-content;width:-moz-max-content;width:max-content;max-width:100%;pointer-events:none}.toast-container>:not(:last-child){margin-bottom:.75rem}.toast-header{display:flex;align-items:center;padding:.5rem .75rem;color:#6c757d;background-color:rgba(255,255,255,.85);background-clip:padding-box;border-bottom:1px solid rgba(0,0,0,.05);border-top-left-radius:calc(.25rem - 1px);border-top-right-radius:calc(.25rem - 1px)}.toast-header .btn-close{margin-right:-.375rem;margin-left:.75rem}.toast-body{padding:.75rem;word-wrap:break-word}.modal{position:fixed;top:0;left:0;z-index:1055;display:none;width:100%;height:100%;overflow-x:hidden;overflow-y:auto;outline:0}.modal-dialog{position:relative;width:auto;margin:.5rem;pointer-events:none}.modal.fade .modal-dialog{transition:transform .3s ease-out;transform:translate(0,-50px)}@media (prefers-reduced-motion:reduce){.modal.fade .modal-dialog{transition:none}}.modal.show .modal-dialog{transform:none}.modal.modal-static .modal-dialog{transform:scale(1.02)}.modal-dialog-scrollable{height:calc(100% - 1rem)}.modal-dialog-scrollable .modal-content{max-height:100%;overflow:hidden}.modal-dialog-scrollable .modal-body{overflow-y:auto}.modal-dialog-centered{display:flex;align-items:center;min-height:calc(100% - 1rem)}.modal-content{position:relative;display:flex;flex-direction:column;width:100%;pointer-events:auto;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,.2);border-radius:.3rem;outline:0}.modal-backdrop{position:fixed;top:0;left:0;z-index:1050;width:100vw;height:100vh;background-color:#000}.modal-backdrop.fade{opacity:0}.modal-backdrop.show{opacity:.5}.modal-header{display:flex;flex-shrink:0;align-items:center;justify-content:space-between;padding:1rem 1rem;border-bottom:1px solid #dee2e6;border-top-left-radius:calc(.3rem - 1px);border-top-right-radius:calc(.3rem - 1px)}.modal-header .btn-close{padding:.5rem .5rem;margin:-.5rem -.5rem -.5rem auto}.modal-title{margin-bottom:0;line-height:1.5}.modal-body{position:relative;flex:1 1 auto;padding:1rem}.modal-footer{display:flex;flex-wrap:wrap;flex-shrink:0;align-items:center;justify-content:flex-end;padding:.75rem;border-top:1px solid #dee2e6;border-bottom-right-radius:calc(.3rem - 1px);border-bottom-left-radius:calc(.3rem - 1px)}.modal-footer>*{margin:.25rem}@media (min-width:576px){.modal-dialog{max-width:500px;margin:1.75rem auto}.modal-dialog-scrollable{height:calc(100% - 3.5rem)}.modal-dialog-centered{min-height:calc(100% - 3.5rem)}.modal-sm{max-width:300px}}@media (min-width:992px){.modal-lg,.modal-xl{max-width:800px}}@media (min-width:1200px){.modal-xl{max-width:1140px}}.modal-fullscreen{width:100vw;max-width:none;height:100%;margin:0}.modal-fullscreen .modal-content{height:100%;border:0;border-radius:0}.modal-fullscreen .modal-header{border-radius:0}.modal-fullscreen .modal-body{overflow-y:auto}.modal-fullscreen .modal-footer{border-radius:0}@media (max-width:575.98px){.modal-fullscreen-sm-down{width:100vw;max-width:none;height:100%;margin:0}.modal-fullscreen-sm-down .modal-content{height:100%;border:0;border-radius:0}.modal-fullscreen-sm-down .modal-header{border-radius:0}.modal-fullscreen-sm-down .modal-body{overflow-y:auto}.modal-fullscreen-sm-down .modal-footer{border-radius:0}}@media (max-width:767.98px){.modal-fullscreen-md-down{width:100vw;max-width:none;height:100%;margin:0}.modal-fullscreen-md-down .modal-content{height:100%;border:0;border-radius:0}.modal-fullscreen-md-down .modal-header{border-radius:0}.modal-fullscreen-md-down .modal-body{overflow-y:auto}.modal-fullscreen-md-down .modal-footer{border-radius:0}}@media (max-width:991.98px){.modal-fullscreen-lg-down{width:100vw;max-width:none;height:100%;margin:0}.modal-fullscreen-lg-down .modal-content{height:100%;border:0;border-radius:0}.modal-fullscreen-lg-down .modal-header{border-radius:0}.modal-fullscreen-lg-down .modal-body{overflow-y:auto}.modal-fullscreen-lg-down .modal-footer{border-radius:0}}@media (max-width:1199.98px){.modal-fullscreen-xl-down{width:100vw;max-width:none;height:100%;margin:0}.modal-fullscreen-xl-down .modal-content{height:100%;border:0;border-radius:0}.modal-fullscreen-xl-down .modal-header{border-radius:0}.modal-fullscreen-xl-down .modal-body{overflow-y:auto}.modal-fullscreen-xl-down .modal-footer{border-radius:0}}@media (max-width:1399.98px){.modal-fullscreen-xxl-down{width:100vw;max-width:none;height:100%;margin:0}.modal-fullscreen-xxl-down .modal-content{height:100%;border:0;border-radius:0}.modal-fullscreen-xxl-down .modal-header{border-radius:0}.modal-fullscreen-xxl-down .modal-body{overflow-y:auto}.modal-fullscreen-xxl-down .modal-footer{border-radius:0}}.tooltip{position:absolute;z-index:1080;display:block;margin:0;font-family:var(--bs-font-sans-serif);font-style:normal;font-weight:400;line-height:1.5;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;letter-spacing:normal;word-break:normal;word-spacing:normal;white-space:normal;line-break:auto;font-size:.875rem;word-wrap:break-word;opacity:0}.tooltip.show{opacity:.9}.tooltip .tooltip-arrow{position:absolute;display:block;width:.8rem;height:.4rem}.tooltip .tooltip-arrow::before{position:absolute;content:\\"\\";border-color:transparent;border-style:solid}.bs-tooltip-auto[data-popper-placement^=top],.bs-tooltip-top{padding:.4rem 0}.bs-tooltip-auto[data-popper-placement^=top] .tooltip-arrow,.bs-tooltip-top .tooltip-arrow{bottom:0}.bs-tooltip-auto[data-popper-placement^=top] .tooltip-arrow::before,.bs-tooltip-top .tooltip-arrow::before{top:-1px;border-width:.4rem .4rem 0;border-top-color:#000}.bs-tooltip-auto[data-popper-placement^=right],.bs-tooltip-end{padding:0 .4rem}.bs-tooltip-auto[data-popper-placement^=right] .tooltip-arrow,.bs-tooltip-end .tooltip-arrow{left:0;width:.4rem;height:.8rem}.bs-tooltip-auto[data-popper-placement^=right] .tooltip-arrow::before,.bs-tooltip-end .tooltip-arrow::before{right:-1px;border-width:.4rem .4rem .4rem 0;border-right-color:#000}.bs-tooltip-auto[data-popper-placement^=bottom],.bs-tooltip-bottom{padding:.4rem 0}.bs-tooltip-auto[data-popper-placement^=bottom] .tooltip-arrow,.bs-tooltip-bottom .tooltip-arrow{top:0}.bs-tooltip-auto[data-popper-placement^=bottom] .tooltip-arrow::before,.bs-tooltip-bottom .tooltip-arrow::before{bottom:-1px;border-width:0 .4rem .4rem;border-bottom-color:#000}.bs-tooltip-auto[data-popper-placement^=left],.bs-tooltip-start{padding:0 .4rem}.bs-tooltip-auto[data-popper-placement^=left] .tooltip-arrow,.bs-tooltip-start .tooltip-arrow{right:0;width:.4rem;height:.8rem}.bs-tooltip-auto[data-popper-placement^=left] .tooltip-arrow::before,.bs-tooltip-start .tooltip-arrow::before{left:-1px;border-width:.4rem 0 .4rem .4rem;border-left-color:#000}.tooltip-inner{max-width:200px;padding:.25rem .5rem;color:#fff;text-align:center;background-color:#000;border-radius:.25rem}.popover{position:absolute;top:0;left:0;z-index:1070;display:block;max-width:276px;font-family:var(--bs-font-sans-serif);font-style:normal;font-weight:400;line-height:1.5;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;letter-spacing:normal;word-break:normal;word-spacing:normal;white-space:normal;line-break:auto;font-size:.875rem;word-wrap:break-word;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,.2);border-radius:.3rem}.popover .popover-arrow{position:absolute;display:block;width:1rem;height:.5rem}.popover .popover-arrow::after,.popover .popover-arrow::before{position:absolute;display:block;content:\\"\\";border-color:transparent;border-style:solid}.bs-popover-auto[data-popper-placement^=top]>.popover-arrow,.bs-popover-top>.popover-arrow{bottom:calc(-.5rem - 1px)}.bs-popover-auto[data-popper-placement^=top]>.popover-arrow::before,.bs-popover-top>.popover-arrow::before{bottom:0;border-width:.5rem .5rem 0;border-top-color:rgba(0,0,0,.25)}.bs-popover-auto[data-popper-placement^=top]>.popover-arrow::after,.bs-popover-top>.popover-arrow::after{bottom:1px;border-width:.5rem .5rem 0;border-top-color:#fff}.bs-popover-auto[data-popper-placement^=right]>.popover-arrow,.bs-popover-end>.popover-arrow{left:calc(-.5rem - 1px);width:.5rem;height:1rem}.bs-popover-auto[data-popper-placement^=right]>.popover-arrow::before,.bs-popover-end>.popover-arrow::before{left:0;border-width:.5rem .5rem .5rem 0;border-right-color:rgba(0,0,0,.25)}.bs-popover-auto[data-popper-placement^=right]>.popover-arrow::after,.bs-popover-end>.popover-arrow::after{left:1px;border-width:.5rem .5rem .5rem 0;border-right-color:#fff}.bs-popover-auto[data-popper-placement^=bottom]>.popover-arrow,.bs-popover-bottom>.popover-arrow{top:calc(-.5rem - 1px)}.bs-popover-auto[data-popper-placement^=bottom]>.popover-arrow::before,.bs-popover-bottom>.popover-arrow::before{top:0;border-width:0 .5rem .5rem .5rem;border-bottom-color:rgba(0,0,0,.25)}.bs-popover-auto[data-popper-placement^=bottom]>.popover-arrow::after,.bs-popover-bottom>.popover-arrow::after{top:1px;border-width:0 .5rem .5rem .5rem;border-bottom-color:#fff}.bs-popover-auto[data-popper-placement^=bottom] .popover-header::before,.bs-popover-bottom .popover-header::before{position:absolute;top:0;left:50%;display:block;width:1rem;margin-left:-.5rem;content:\\"\\";border-bottom:1px solid #f0f0f0}.bs-popover-auto[data-popper-placement^=left]>.popover-arrow,.bs-popover-start>.popover-arrow{right:calc(-.5rem - 1px);width:.5rem;height:1rem}.bs-popover-auto[data-popper-placement^=left]>.popover-arrow::before,.bs-popover-start>.popover-arrow::before{right:0;border-width:.5rem 0 .5rem .5rem;border-left-color:rgba(0,0,0,.25)}.bs-popover-auto[data-popper-placement^=left]>.popover-arrow::after,.bs-popover-start>.popover-arrow::after{right:1px;border-width:.5rem 0 .5rem .5rem;border-left-color:#fff}.popover-header{padding:.5rem 1rem;margin-bottom:0;font-size:1rem;background-color:#f0f0f0;border-bottom:1px solid rgba(0,0,0,.2);border-top-left-radius:calc(.3rem - 1px);border-top-right-radius:calc(.3rem - 1px)}.popover-header:empty{display:none}.popover-body{padding:1rem 1rem;color:#212529}.carousel{position:relative}.carousel.pointer-event{touch-action:pan-y}.carousel-inner{position:relative;width:100%;overflow:hidden}.carousel-inner::after{display:block;clear:both;content:\\"\\"}.carousel-item{position:relative;display:none;float:left;width:100%;margin-right:-100%;-webkit-backface-visibility:hidden;backface-visibility:hidden;transition:transform .6s ease-in-out}@media (prefers-reduced-motion:reduce){.carousel-item{transition:none}}.carousel-item-next,.carousel-item-prev,.carousel-item.active{display:block}.active.carousel-item-end,.carousel-item-next:not(.carousel-item-start){transform:translateX(100%)}.active.carousel-item-start,.carousel-item-prev:not(.carousel-item-end){transform:translateX(-100%)}.carousel-fade .carousel-item{opacity:0;transition-property:opacity;transform:none}.carousel-fade .carousel-item-next.carousel-item-start,.carousel-fade .carousel-item-prev.carousel-item-end,.carousel-fade .carousel-item.active{z-index:1;opacity:1}.carousel-fade .active.carousel-item-end,.carousel-fade .active.carousel-item-start{z-index:0;opacity:0;transition:opacity 0s .6s}@media (prefers-reduced-motion:reduce){.carousel-fade .active.carousel-item-end,.carousel-fade .active.carousel-item-start{transition:none}}.carousel-control-next,.carousel-control-prev{position:absolute;top:0;bottom:0;z-index:1;display:flex;align-items:center;justify-content:center;width:15%;padding:0;color:#fff;text-align:center;background:0 0;border:0;opacity:.5;transition:opacity .15s ease}@media (prefers-reduced-motion:reduce){.carousel-control-next,.carousel-control-prev{transition:none}}.carousel-control-next:focus,.carousel-control-next:hover,.carousel-control-prev:focus,.carousel-control-prev:hover{color:#fff;text-decoration:none;outline:0;opacity:.9}.carousel-control-prev{left:0}.carousel-control-next{right:0}.carousel-control-next-icon,.carousel-control-prev-icon{display:inline-block;width:2rem;height:2rem;background-repeat:no-repeat;background-position:50%;background-size:100% 100%}.carousel-control-prev-icon{background-image:url(\\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 16 16\' fill=\'%23fff\'%3e%3cpath d=\'M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z\'/%3e%3c/svg%3e\\")}.carousel-control-next-icon{background-image:url(\\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 16 16\' fill=\'%23fff\'%3e%3cpath d=\'M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z\'/%3e%3c/svg%3e\\")}.carousel-indicators{position:absolute;right:0;bottom:0;left:0;z-index:2;display:flex;justify-content:center;padding:0;margin-right:15%;margin-bottom:1rem;margin-left:15%;list-style:none}.carousel-indicators [data-bs-target]{box-sizing:content-box;flex:0 1 auto;width:30px;height:3px;padding:0;margin-right:3px;margin-left:3px;text-indent:-999px;cursor:pointer;background-color:#fff;background-clip:padding-box;border:0;border-top:10px solid transparent;border-bottom:10px solid transparent;opacity:.5;transition:opacity .6s ease}@media (prefers-reduced-motion:reduce){.carousel-indicators [data-bs-target]{transition:none}}.carousel-indicators .active{opacity:1}.carousel-caption{position:absolute;right:15%;bottom:1.25rem;left:15%;padding-top:1.25rem;padding-bottom:1.25rem;color:#fff;text-align:center}.carousel-dark .carousel-control-next-icon,.carousel-dark .carousel-control-prev-icon{filter:invert(1) grayscale(100)}.carousel-dark .carousel-indicators [data-bs-target]{background-color:#000}.carousel-dark .carousel-caption{color:#000}@-webkit-keyframes spinner-border{to{transform:rotate(360deg)}}@keyframes spinner-border{to{transform:rotate(360deg)}}.spinner-border{display:inline-block;width:2rem;height:2rem;vertical-align:-.125em;border:.25em solid currentColor;border-right-color:transparent;border-radius:50%;-webkit-animation:.75s linear infinite spinner-border;animation:.75s linear infinite spinner-border}.spinner-border-sm{width:1rem;height:1rem;border-width:.2em}@-webkit-keyframes spinner-grow{0%{transform:scale(0)}50%{opacity:1;transform:none}}@keyframes spinner-grow{0%{transform:scale(0)}50%{opacity:1;transform:none}}.spinner-grow{display:inline-block;width:2rem;height:2rem;vertical-align:-.125em;background-color:currentColor;border-radius:50%;opacity:0;-webkit-animation:.75s linear infinite spinner-grow;animation:.75s linear infinite spinner-grow}.spinner-grow-sm{width:1rem;height:1rem}@media (prefers-reduced-motion:reduce){.spinner-border,.spinner-grow{-webkit-animation-duration:1.5s;animation-duration:1.5s}}.offcanvas{position:fixed;bottom:0;z-index:1045;display:flex;flex-direction:column;max-width:100%;visibility:hidden;background-color:#fff;background-clip:padding-box;outline:0;transition:transform .3s ease-in-out}@media (prefers-reduced-motion:reduce){.offcanvas{transition:none}}.offcanvas-backdrop{position:fixed;top:0;left:0;z-index:1040;width:100vw;height:100vh;background-color:#000}.offcanvas-backdrop.fade{opacity:0}.offcanvas-backdrop.show{opacity:.5}.offcanvas-header{display:flex;align-items:center;justify-content:space-between;padding:1rem 1rem}.offcanvas-header .btn-close{padding:.5rem .5rem;margin-top:-.5rem;margin-right:-.5rem;margin-bottom:-.5rem}.offcanvas-title{margin-bottom:0;line-height:1.5}.offcanvas-body{flex-grow:1;padding:1rem 1rem;overflow-y:auto}.offcanvas-start{top:0;left:0;width:400px;border-right:1px solid rgba(0,0,0,.2);transform:translateX(-100%)}.offcanvas-end{top:0;right:0;width:400px;border-left:1px solid rgba(0,0,0,.2);transform:translateX(100%)}.offcanvas-top{top:0;right:0;left:0;height:30vh;max-height:100%;border-bottom:1px solid rgba(0,0,0,.2);transform:translateY(-100%)}.offcanvas-bottom{right:0;left:0;height:30vh;max-height:100%;border-top:1px solid rgba(0,0,0,.2);transform:translateY(100%)}.offcanvas.show{transform:none}.placeholder{display:inline-block;min-height:1em;vertical-align:middle;cursor:wait;background-color:currentColor;opacity:.5}.placeholder.btn::before{display:inline-block;content:\\"\\"}.placeholder-xs{min-height:.6em}.placeholder-sm{min-height:.8em}.placeholder-lg{min-height:1.2em}.placeholder-glow .placeholder{-webkit-animation:placeholder-glow 2s ease-in-out infinite;animation:placeholder-glow 2s ease-in-out infinite}@-webkit-keyframes placeholder-glow{50%{opacity:.2}}@keyframes placeholder-glow{50%{opacity:.2}}.placeholder-wave{-webkit-mask-image:linear-gradient(130deg,#000 55%,rgba(0,0,0,0.8) 75%,#000 95%);mask-image:linear-gradient(130deg,#000 55%,rgba(0,0,0,0.8) 75%,#000 95%);-webkit-mask-size:200% 100%;mask-size:200% 100%;-webkit-animation:placeholder-wave 2s linear infinite;animation:placeholder-wave 2s linear infinite}@-webkit-keyframes placeholder-wave{100%{-webkit-mask-position:-200% 0%;mask-position:-200% 0%}}@keyframes placeholder-wave{100%{-webkit-mask-position:-200% 0%;mask-position:-200% 0%}}.clearfix::after{display:block;clear:both;content:\\"\\"}.link-primary{color:#0d6efd}.link-primary:focus,.link-primary:hover{color:#0a58ca}.link-secondary{color:#6c757d}.link-secondary:focus,.link-secondary:hover{color:#565e64}.link-success{color:#198754}.link-success:focus,.link-success:hover{color:#146c43}.link-info{color:#0dcaf0}.link-info:focus,.link-info:hover{color:#3dd5f3}.link-warning{color:#ffc107}.link-warning:focus,.link-warning:hover{color:#ffcd39}.link-danger{color:#dc3545}.link-danger:focus,.link-danger:hover{color:#b02a37}.link-light{color:#f8f9fa}.link-light:focus,.link-light:hover{color:#f9fafb}.link-dark{color:#212529}.link-dark:focus,.link-dark:hover{color:#1a1e21}.ratio{position:relative;width:100%}.ratio::before{display:block;padding-top:var(--bs-aspect-ratio);content:\\"\\"}.ratio>*{position:absolute;top:0;left:0;width:100%;height:100%}.ratio-1x1{--bs-aspect-ratio:100%}.ratio-4x3{--bs-aspect-ratio:calc(3 / 4 * 100%)}.ratio-16x9{--bs-aspect-ratio:calc(9 / 16 * 100%)}.ratio-21x9{--bs-aspect-ratio:calc(9 / 21 * 100%)}.fixed-top{position:fixed;top:0;right:0;left:0;z-index:1030}.fixed-bottom{position:fixed;right:0;bottom:0;left:0;z-index:1030}.sticky-top{position:-webkit-sticky;position:sticky;top:0;z-index:1020}@media (min-width:576px){.sticky-sm-top{position:-webkit-sticky;position:sticky;top:0;z-index:1020}}@media (min-width:768px){.sticky-md-top{position:-webkit-sticky;position:sticky;top:0;z-index:1020}}@media (min-width:992px){.sticky-lg-top{position:-webkit-sticky;position:sticky;top:0;z-index:1020}}@media (min-width:1200px){.sticky-xl-top{position:-webkit-sticky;position:sticky;top:0;z-index:1020}}@media (min-width:1400px){.sticky-xxl-top{position:-webkit-sticky;position:sticky;top:0;z-index:1020}}.hstack{display:flex;flex-direction:row;align-items:center;align-self:stretch}.vstack{display:flex;flex:1 1 auto;flex-direction:column;align-self:stretch}.visually-hidden,.visually-hidden-focusable:not(:focus):not(:focus-within){position:absolute!important;width:1px!important;height:1px!important;padding:0!important;margin:-1px!important;overflow:hidden!important;clip:rect(0,0,0,0)!important;white-space:nowrap!important;border:0!important}.stretched-link::after{position:absolute;top:0;right:0;bottom:0;left:0;z-index:1;content:\\"\\"}.text-truncate{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.vr{display:inline-block;align-self:stretch;width:1px;min-height:1em;background-color:currentColor;opacity:.25}.align-baseline{vertical-align:baseline!important}.align-top{vertical-align:top!important}.align-middle{vertical-align:middle!important}.align-bottom{vertical-align:bottom!important}.align-text-bottom{vertical-align:text-bottom!important}.align-text-top{vertical-align:text-top!important}.float-start{float:left!important}.float-end{float:right!important}.float-none{float:none!important}.opacity-0{opacity:0!important}.opacity-25{opacity:.25!important}.opacity-50{opacity:.5!important}.opacity-75{opacity:.75!important}.opacity-100{opacity:1!important}.overflow-auto{overflow:auto!important}.overflow-hidden{overflow:hidden!important}.overflow-visible{overflow:visible!important}.overflow-scroll{overflow:scroll!important}.d-inline{display:inline!important}.d-inline-block{display:inline-block!important}.d-block{display:block!important}.d-grid{display:grid!important}.d-table{display:table!important}.d-table-row{display:table-row!important}.d-table-cell{display:table-cell!important}.d-flex{display:flex!important}.d-inline-flex{display:inline-flex!important}.d-none{display:none!important}.shadow{box-shadow:0 .5rem 1rem rgba(0,0,0,.15)!important}.shadow-sm{box-shadow:0 .125rem .25rem rgba(0,0,0,.075)!important}.shadow-lg{box-shadow:0 1rem 3rem rgba(0,0,0,.175)!important}.shadow-none{box-shadow:none!important}.position-static{position:static!important}.position-relative{position:relative!important}.position-absolute{position:absolute!important}.position-fixed{position:fixed!important}.position-sticky{position:-webkit-sticky!important;position:sticky!important}.top-0{top:0!important}.top-50{top:50%!important}.top-100{top:100%!important}.bottom-0{bottom:0!important}.bottom-50{bottom:50%!important}.bottom-100{bottom:100%!important}.start-0{left:0!important}.start-50{left:50%!important}.start-100{left:100%!important}.end-0{right:0!important}.end-50{right:50%!important}.end-100{right:100%!important}.translate-middle{transform:translate(-50%,-50%)!important}.translate-middle-x{transform:translateX(-50%)!important}.translate-middle-y{transform:translateY(-50%)!important}.border{border:1px solid #dee2e6!important}.border-0{border:0!important}.border-top{border-top:1px solid #dee2e6!important}.border-top-0{border-top:0!important}.border-end{border-right:1px solid #dee2e6!important}.border-end-0{border-right:0!important}.border-bottom{border-bottom:1px solid #dee2e6!important}.border-bottom-0{border-bottom:0!important}.border-start{border-left:1px solid #dee2e6!important}.border-start-0{border-left:0!important}.border-primary{border-color:#0d6efd!important}.border-secondary{border-color:#6c757d!important}.border-success{border-color:#198754!important}.border-info{border-color:#0dcaf0!important}.border-warning{border-color:#ffc107!important}.border-danger{border-color:#dc3545!important}.border-light{border-color:#f8f9fa!important}.border-dark{border-color:#212529!important}.border-white{border-color:#fff!important}.border-1{border-width:1px!important}.border-2{border-width:2px!important}.border-3{border-width:3px!important}.border-4{border-width:4px!important}.border-5{border-width:5px!important}.w-25{width:25%!important}.w-50{width:50%!important}.w-75{width:75%!important}.w-100{width:100%!important}.w-auto{width:auto!important}.mw-100{max-width:100%!important}.vw-100{width:100vw!important}.min-vw-100{min-width:100vw!important}.h-25{height:25%!important}.h-50{height:50%!important}.h-75{height:75%!important}.h-100{height:100%!important}.h-auto{height:auto!important}.mh-100{max-height:100%!important}.vh-100{height:100vh!important}.min-vh-100{min-height:100vh!important}.flex-fill{flex:1 1 auto!important}.flex-row{flex-direction:row!important}.flex-column{flex-direction:column!important}.flex-row-reverse{flex-direction:row-reverse!important}.flex-column-reverse{flex-direction:column-reverse!important}.flex-grow-0{flex-grow:0!important}.flex-grow-1{flex-grow:1!important}.flex-shrink-0{flex-shrink:0!important}.flex-shrink-1{flex-shrink:1!important}.flex-wrap{flex-wrap:wrap!important}.flex-nowrap{flex-wrap:nowrap!important}.flex-wrap-reverse{flex-wrap:wrap-reverse!important}.gap-0{gap:0!important}.gap-1{gap:.25rem!important}.gap-2{gap:.5rem!important}.gap-3{gap:1rem!important}.gap-4{gap:1.5rem!important}.gap-5{gap:3rem!important}.justify-content-start{justify-content:flex-start!important}.justify-content-end{justify-content:flex-end!important}.justify-content-center{justify-content:center!important}.justify-content-between{justify-content:space-between!important}.justify-content-around{justify-content:space-around!important}.justify-content-evenly{justify-content:space-evenly!important}.align-items-start{align-items:flex-start!important}.align-items-end{align-items:flex-end!important}.align-items-center{align-items:center!important}.align-items-baseline{align-items:baseline!important}.align-items-stretch{align-items:stretch!important}.align-content-start{align-content:flex-start!important}.align-content-end{align-content:flex-end!important}.align-content-center{align-content:center!important}.align-content-between{align-content:space-between!important}.align-content-around{align-content:space-around!important}.align-content-stretch{align-content:stretch!important}.align-self-auto{align-self:auto!important}.align-self-start{align-self:flex-start!important}.align-self-end{align-self:flex-end!important}.align-self-center{align-self:center!important}.align-self-baseline{align-self:baseline!important}.align-self-stretch{align-self:stretch!important}.order-first{order:-1!important}.order-0{order:0!important}.order-1{order:1!important}.order-2{order:2!important}.order-3{order:3!important}.order-4{order:4!important}.order-5{order:5!important}.order-last{order:6!important}.m-0{margin:0!important}.m-1{margin:.25rem!important}.m-2{margin:.5rem!important}.m-3{margin:1rem!important}.m-4{margin:1.5rem!important}.m-5{margin:3rem!important}.m-auto{margin:auto!important}.mx-0{margin-right:0!important;margin-left:0!important}.mx-1{margin-right:.25rem!important;margin-left:.25rem!important}.mx-2{margin-right:.5rem!important;margin-left:.5rem!important}.mx-3{margin-right:1rem!important;margin-left:1rem!important}.mx-4{margin-right:1.5rem!important;margin-left:1.5rem!important}.mx-5{margin-right:3rem!important;margin-left:3rem!important}.mx-auto{margin-right:auto!important;margin-left:auto!important}.my-0{margin-top:0!important;margin-bottom:0!important}.my-1{margin-top:.25rem!important;margin-bottom:.25rem!important}.my-2{margin-top:.5rem!important;margin-bottom:.5rem!important}.my-3{margin-top:1rem!important;margin-bottom:1rem!important}.my-4{margin-top:1.5rem!important;margin-bottom:1.5rem!important}.my-5{margin-top:3rem!important;margin-bottom:3rem!important}.my-auto{margin-top:auto!important;margin-bottom:auto!important}.mt-0{margin-top:0!important}.mt-1{margin-top:.25rem!important}.mt-2{margin-top:.5rem!important}.mt-3{margin-top:1rem!important}.mt-4{margin-top:1.5rem!important}.mt-5{margin-top:3rem!important}.mt-auto{margin-top:auto!important}.me-0{margin-right:0!important}.me-1{margin-right:.25rem!important}.me-2{margin-right:.5rem!important}.me-3{margin-right:1rem!important}.me-4{margin-right:1.5rem!important}.me-5{margin-right:3rem!important}.me-auto{margin-right:auto!important}.mb-0{margin-bottom:0!important}.mb-1{margin-bottom:.25rem!important}.mb-2{margin-bottom:.5rem!important}.mb-3{margin-bottom:1rem!important}.mb-4{margin-bottom:1.5rem!important}.mb-5{margin-bottom:3rem!important}.mb-auto{margin-bottom:auto!important}.ms-0{margin-left:0!important}.ms-1{margin-left:.25rem!important}.ms-2{margin-left:.5rem!important}.ms-3{margin-left:1rem!important}.ms-4{margin-left:1.5rem!important}.ms-5{margin-left:3rem!important}.ms-auto{margin-left:auto!important}.p-0{padding:0!important}.p-1{padding:.25rem!important}.p-2{padding:.5rem!important}.p-3{padding:1rem!important}.p-4{padding:1.5rem!important}.p-5{padding:3rem!important}.px-0{padding-right:0!important;padding-left:0!important}.px-1{padding-right:.25rem!important;padding-left:.25rem!important}.px-2{padding-right:.5rem!important;padding-left:.5rem!important}.px-3{padding-right:1rem!important;padding-left:1rem!important}.px-4{padding-right:1.5rem!important;padding-left:1.5rem!important}.px-5{padding-right:3rem!important;padding-left:3rem!important}.py-0{padding-top:0!important;padding-bottom:0!important}.py-1{padding-top:.25rem!important;padding-bottom:.25rem!important}.py-2{padding-top:.5rem!important;padding-bottom:.5rem!important}.py-3{padding-top:1rem!important;padding-bottom:1rem!important}.py-4{padding-top:1.5rem!important;padding-bottom:1.5rem!important}.py-5{padding-top:3rem!important;padding-bottom:3rem!important}.pt-0{padding-top:0!important}.pt-1{padding-top:.25rem!important}.pt-2{padding-top:.5rem!important}.pt-3{padding-top:1rem!important}.pt-4{padding-top:1.5rem!important}.pt-5{padding-top:3rem!important}.pe-0{padding-right:0!important}.pe-1{padding-right:.25rem!important}.pe-2{padding-right:.5rem!important}.pe-3{padding-right:1rem!important}.pe-4{padding-right:1.5rem!important}.pe-5{padding-right:3rem!important}.pb-0{padding-bottom:0!important}.pb-1{padding-bottom:.25rem!important}.pb-2{padding-bottom:.5rem!important}.pb-3{padding-bottom:1rem!important}.pb-4{padding-bottom:1.5rem!important}.pb-5{padding-bottom:3rem!important}.ps-0{padding-left:0!important}.ps-1{padding-left:.25rem!important}.ps-2{padding-left:.5rem!important}.ps-3{padding-left:1rem!important}.ps-4{padding-left:1.5rem!important}.ps-5{padding-left:3rem!important}.font-monospace{font-family:var(--bs-font-monospace)!important}.fs-1{font-size:calc(1.375rem + 1.5vw)!important}.fs-2{font-size:calc(1.325rem + .9vw)!important}.fs-3{font-size:calc(1.3rem + .6vw)!important}.fs-4{font-size:calc(1.275rem + .3vw)!important}.fs-5{font-size:1.25rem!important}.fs-6{font-size:1rem!important}.fst-italic{font-style:italic!important}.fst-normal{font-style:normal!important}.fw-light{font-weight:300!important}.fw-lighter{font-weight:lighter!important}.fw-normal{font-weight:400!important}.fw-bold{font-weight:700!important}.fw-bolder{font-weight:bolder!important}.lh-1{line-height:1!important}.lh-sm{line-height:1.25!important}.lh-base{line-height:1.5!important}.lh-lg{line-height:2!important}.text-start{text-align:left!important}.text-end{text-align:right!important}.text-center{text-align:center!important}.text-decoration-none{text-decoration:none!important}.text-decoration-underline{text-decoration:underline!important}.text-decoration-line-through{text-decoration:line-through!important}.text-lowercase{text-transform:lowercase!important}.text-uppercase{text-transform:uppercase!important}.text-capitalize{text-transform:capitalize!important}.text-wrap{white-space:normal!important}.text-nowrap{white-space:nowrap!important}.text-break{word-wrap:break-word!important;word-break:break-word!important}.text-primary{--bs-text-opacity:1;color:rgba(var(--bs-primary-rgb),var(--bs-text-opacity))!important}.text-secondary{--bs-text-opacity:1;color:rgba(var(--bs-secondary-rgb),var(--bs-text-opacity))!important}.text-success{--bs-text-opacity:1;color:rgba(var(--bs-success-rgb),var(--bs-text-opacity))!important}.text-info{--bs-text-opacity:1;color:rgba(var(--bs-info-rgb),var(--bs-text-opacity))!important}.text-warning{--bs-text-opacity:1;color:rgba(var(--bs-warning-rgb),var(--bs-text-opacity))!important}.text-danger{--bs-text-opacity:1;color:rgba(var(--bs-danger-rgb),var(--bs-text-opacity))!important}.text-light{--bs-text-opacity:1;color:rgba(var(--bs-light-rgb),var(--bs-text-opacity))!important}.text-dark{--bs-text-opacity:1;color:rgba(var(--bs-dark-rgb),var(--bs-text-opacity))!important}.text-black{--bs-text-opacity:1;color:rgba(var(--bs-black-rgb),var(--bs-text-opacity))!important}.text-white{--bs-text-opacity:1;color:rgba(var(--bs-white-rgb),var(--bs-text-opacity))!important}.text-body{--bs-text-opacity:1;color:rgba(var(--bs-body-rgb),var(--bs-text-opacity))!important}.text-muted{--bs-text-opacity:1;color:#6c757d!important}.text-black-50{--bs-text-opacity:1;color:rgba(0,0,0,.5)!important}.text-white-50{--bs-text-opacity:1;color:rgba(255,255,255,.5)!important}.text-reset{--bs-text-opacity:1;color:inherit!important}.text-opacity-25{--bs-text-opacity:0.25}.text-opacity-50{--bs-text-opacity:0.5}.text-opacity-75{--bs-text-opacity:0.75}.text-opacity-100{--bs-text-opacity:1}.bg-primary{--bs-bg-opacity:1;background-color:rgba(var(--bs-primary-rgb),var(--bs-bg-opacity))!important}.bg-secondary{--bs-bg-opacity:1;background-color:rgba(var(--bs-secondary-rgb),var(--bs-bg-opacity))!important}.bg-success{--bs-bg-opacity:1;background-color:rgba(var(--bs-success-rgb),var(--bs-bg-opacity))!important}.bg-info{--bs-bg-opacity:1;background-color:rgba(var(--bs-info-rgb),var(--bs-bg-opacity))!important}.bg-warning{--bs-bg-opacity:1;background-color:rgba(var(--bs-warning-rgb),var(--bs-bg-opacity))!important}.bg-danger{--bs-bg-opacity:1;background-color:rgba(var(--bs-danger-rgb),var(--bs-bg-opacity))!important}.bg-light{--bs-bg-opacity:1;background-color:rgba(var(--bs-light-rgb),var(--bs-bg-opacity))!important}.bg-dark{--bs-bg-opacity:1;background-color:rgba(var(--bs-dark-rgb),var(--bs-bg-opacity))!important}.bg-black{--bs-bg-opacity:1;background-color:rgba(var(--bs-black-rgb),var(--bs-bg-opacity))!important}.bg-white{--bs-bg-opacity:1;background-color:rgba(var(--bs-white-rgb),var(--bs-bg-opacity))!important}.bg-body{--bs-bg-opacity:1;background-color:rgba(var(--bs-body-rgb),var(--bs-bg-opacity))!important}.bg-transparent{--bs-bg-opacity:1;background-color:transparent!important}.bg-opacity-10{--bs-bg-opacity:0.1}.bg-opacity-25{--bs-bg-opacity:0.25}.bg-opacity-50{--bs-bg-opacity:0.5}.bg-opacity-75{--bs-bg-opacity:0.75}.bg-opacity-100{--bs-bg-opacity:1}.bg-gradient{background-image:var(--bs-gradient)!important}.user-select-all{-webkit-user-select:all!important;-moz-user-select:all!important;user-select:all!important}.user-select-auto{-webkit-user-select:auto!important;-moz-user-select:auto!important;user-select:auto!important}.user-select-none{-webkit-user-select:none!important;-moz-user-select:none!important;user-select:none!important}.pe-none{pointer-events:none!important}.pe-auto{pointer-events:auto!important}.rounded{border-radius:.25rem!important}.rounded-0{border-radius:0!important}.rounded-1{border-radius:.2rem!important}.rounded-2{border-radius:.25rem!important}.rounded-3{border-radius:.3rem!important}.rounded-circle{border-radius:50%!important}.rounded-pill{border-radius:50rem!important}.rounded-top{border-top-left-radius:.25rem!important;border-top-right-radius:.25rem!important}.rounded-end{border-top-right-radius:.25rem!important;border-bottom-right-radius:.25rem!important}.rounded-bottom{border-bottom-right-radius:.25rem!important;border-bottom-left-radius:.25rem!important}.rounded-start{border-bottom-left-radius:.25rem!important;border-top-left-radius:.25rem!important}.visible{visibility:visible!important}.invisible{visibility:hidden!important}@media (min-width:576px){.float-sm-start{float:left!important}.float-sm-end{float:right!important}.float-sm-none{float:none!important}.d-sm-inline{display:inline!important}.d-sm-inline-block{display:inline-block!important}.d-sm-block{display:block!important}.d-sm-grid{display:grid!important}.d-sm-table{display:table!important}.d-sm-table-row{display:table-row!important}.d-sm-table-cell{display:table-cell!important}.d-sm-flex{display:flex!important}.d-sm-inline-flex{display:inline-flex!important}.d-sm-none{display:none!important}.flex-sm-fill{flex:1 1 auto!important}.flex-sm-row{flex-direction:row!important}.flex-sm-column{flex-direction:column!important}.flex-sm-row-reverse{flex-direction:row-reverse!important}.flex-sm-column-reverse{flex-direction:column-reverse!important}.flex-sm-grow-0{flex-grow:0!important}.flex-sm-grow-1{flex-grow:1!important}.flex-sm-shrink-0{flex-shrink:0!important}.flex-sm-shrink-1{flex-shrink:1!important}.flex-sm-wrap{flex-wrap:wrap!important}.flex-sm-nowrap{flex-wrap:nowrap!important}.flex-sm-wrap-reverse{flex-wrap:wrap-reverse!important}.gap-sm-0{gap:0!important}.gap-sm-1{gap:.25rem!important}.gap-sm-2{gap:.5rem!important}.gap-sm-3{gap:1rem!important}.gap-sm-4{gap:1.5rem!important}.gap-sm-5{gap:3rem!important}.justify-content-sm-start{justify-content:flex-start!important}.justify-content-sm-end{justify-content:flex-end!important}.justify-content-sm-center{justify-content:center!important}.justify-content-sm-between{justify-content:space-between!important}.justify-content-sm-around{justify-content:space-around!important}.justify-content-sm-evenly{justify-content:space-evenly!important}.align-items-sm-start{align-items:flex-start!important}.align-items-sm-end{align-items:flex-end!important}.align-items-sm-center{align-items:center!important}.align-items-sm-baseline{align-items:baseline!important}.align-items-sm-stretch{align-items:stretch!important}.align-content-sm-start{align-content:flex-start!important}.align-content-sm-end{align-content:flex-end!important}.align-content-sm-center{align-content:center!important}.align-content-sm-between{align-content:space-between!important}.align-content-sm-around{align-content:space-around!important}.align-content-sm-stretch{align-content:stretch!important}.align-self-sm-auto{align-self:auto!important}.align-self-sm-start{align-self:flex-start!important}.align-self-sm-end{align-self:flex-end!important}.align-self-sm-center{align-self:center!important}.align-self-sm-baseline{align-self:baseline!important}.align-self-sm-stretch{align-self:stretch!important}.order-sm-first{order:-1!important}.order-sm-0{order:0!important}.order-sm-1{order:1!important}.order-sm-2{order:2!important}.order-sm-3{order:3!important}.order-sm-4{order:4!important}.order-sm-5{order:5!important}.order-sm-last{order:6!important}.m-sm-0{margin:0!important}.m-sm-1{margin:.25rem!important}.m-sm-2{margin:.5rem!important}.m-sm-3{margin:1rem!important}.m-sm-4{margin:1.5rem!important}.m-sm-5{margin:3rem!important}.m-sm-auto{margin:auto!important}.mx-sm-0{margin-right:0!important;margin-left:0!important}.mx-sm-1{margin-right:.25rem!important;margin-left:.25rem!important}.mx-sm-2{margin-right:.5rem!important;margin-left:.5rem!important}.mx-sm-3{margin-right:1rem!important;margin-left:1rem!important}.mx-sm-4{margin-right:1.5rem!important;margin-left:1.5rem!important}.mx-sm-5{margin-right:3rem!important;margin-left:3rem!important}.mx-sm-auto{margin-right:auto!important;margin-left:auto!important}.my-sm-0{margin-top:0!important;margin-bottom:0!important}.my-sm-1{margin-top:.25rem!important;margin-bottom:.25rem!important}.my-sm-2{margin-top:.5rem!important;margin-bottom:.5rem!important}.my-sm-3{margin-top:1rem!important;margin-bottom:1rem!important}.my-sm-4{margin-top:1.5rem!important;margin-bottom:1.5rem!important}.my-sm-5{margin-top:3rem!important;margin-bottom:3rem!important}.my-sm-auto{margin-top:auto!important;margin-bottom:auto!important}.mt-sm-0{margin-top:0!important}.mt-sm-1{margin-top:.25rem!important}.mt-sm-2{margin-top:.5rem!important}.mt-sm-3{margin-top:1rem!important}.mt-sm-4{margin-top:1.5rem!important}.mt-sm-5{margin-top:3rem!important}.mt-sm-auto{margin-top:auto!important}.me-sm-0{margin-right:0!important}.me-sm-1{margin-right:.25rem!important}.me-sm-2{margin-right:.5rem!important}.me-sm-3{margin-right:1rem!important}.me-sm-4{margin-right:1.5rem!important}.me-sm-5{margin-right:3rem!important}.me-sm-auto{margin-right:auto!important}.mb-sm-0{margin-bottom:0!important}.mb-sm-1{margin-bottom:.25rem!important}.mb-sm-2{margin-bottom:.5rem!important}.mb-sm-3{margin-bottom:1rem!important}.mb-sm-4{margin-bottom:1.5rem!important}.mb-sm-5{margin-bottom:3rem!important}.mb-sm-auto{margin-bottom:auto!important}.ms-sm-0{margin-left:0!important}.ms-sm-1{margin-left:.25rem!important}.ms-sm-2{margin-left:.5rem!important}.ms-sm-3{margin-left:1rem!important}.ms-sm-4{margin-left:1.5rem!important}.ms-sm-5{margin-left:3rem!important}.ms-sm-auto{margin-left:auto!important}.p-sm-0{padding:0!important}.p-sm-1{padding:.25rem!important}.p-sm-2{padding:.5rem!important}.p-sm-3{padding:1rem!important}.p-sm-4{padding:1.5rem!important}.p-sm-5{padding:3rem!important}.px-sm-0{padding-right:0!important;padding-left:0!important}.px-sm-1{padding-right:.25rem!important;padding-left:.25rem!important}.px-sm-2{padding-right:.5rem!important;padding-left:.5rem!important}.px-sm-3{padding-right:1rem!important;padding-left:1rem!important}.px-sm-4{padding-right:1.5rem!important;padding-left:1.5rem!important}.px-sm-5{padding-right:3rem!important;padding-left:3rem!important}.py-sm-0{padding-top:0!important;padding-bottom:0!important}.py-sm-1{padding-top:.25rem!important;padding-bottom:.25rem!important}.py-sm-2{padding-top:.5rem!important;padding-bottom:.5rem!important}.py-sm-3{padding-top:1rem!important;padding-bottom:1rem!important}.py-sm-4{padding-top:1.5rem!important;padding-bottom:1.5rem!important}.py-sm-5{padding-top:3rem!important;padding-bottom:3rem!important}.pt-sm-0{padding-top:0!important}.pt-sm-1{padding-top:.25rem!important}.pt-sm-2{padding-top:.5rem!important}.pt-sm-3{padding-top:1rem!important}.pt-sm-4{padding-top:1.5rem!important}.pt-sm-5{padding-top:3rem!important}.pe-sm-0{padding-right:0!important}.pe-sm-1{padding-right:.25rem!important}.pe-sm-2{padding-right:.5rem!important}.pe-sm-3{padding-right:1rem!important}.pe-sm-4{padding-right:1.5rem!important}.pe-sm-5{padding-right:3rem!important}.pb-sm-0{padding-bottom:0!important}.pb-sm-1{padding-bottom:.25rem!important}.pb-sm-2{padding-bottom:.5rem!important}.pb-sm-3{padding-bottom:1rem!important}.pb-sm-4{padding-bottom:1.5rem!important}.pb-sm-5{padding-bottom:3rem!important}.ps-sm-0{padding-left:0!important}.ps-sm-1{padding-left:.25rem!important}.ps-sm-2{padding-left:.5rem!important}.ps-sm-3{padding-left:1rem!important}.ps-sm-4{padding-left:1.5rem!important}.ps-sm-5{padding-left:3rem!important}.text-sm-start{text-align:left!important}.text-sm-end{text-align:right!important}.text-sm-center{text-align:center!important}}@media (min-width:768px){.float-md-start{float:left!important}.float-md-end{float:right!important}.float-md-none{float:none!important}.d-md-inline{display:inline!important}.d-md-inline-block{display:inline-block!important}.d-md-block{display:block!important}.d-md-grid{display:grid!important}.d-md-table{display:table!important}.d-md-table-row{display:table-row!important}.d-md-table-cell{display:table-cell!important}.d-md-flex{display:flex!important}.d-md-inline-flex{display:inline-flex!important}.d-md-none{display:none!important}.flex-md-fill{flex:1 1 auto!important}.flex-md-row{flex-direction:row!important}.flex-md-column{flex-direction:column!important}.flex-md-row-reverse{flex-direction:row-reverse!important}.flex-md-column-reverse{flex-direction:column-reverse!important}.flex-md-grow-0{flex-grow:0!important}.flex-md-grow-1{flex-grow:1!important}.flex-md-shrink-0{flex-shrink:0!important}.flex-md-shrink-1{flex-shrink:1!important}.flex-md-wrap{flex-wrap:wrap!important}.flex-md-nowrap{flex-wrap:nowrap!important}.flex-md-wrap-reverse{flex-wrap:wrap-reverse!important}.gap-md-0{gap:0!important}.gap-md-1{gap:.25rem!important}.gap-md-2{gap:.5rem!important}.gap-md-3{gap:1rem!important}.gap-md-4{gap:1.5rem!important}.gap-md-5{gap:3rem!important}.justify-content-md-start{justify-content:flex-start!important}.justify-content-md-end{justify-content:flex-end!important}.justify-content-md-center{justify-content:center!important}.justify-content-md-between{justify-content:space-between!important}.justify-content-md-around{justify-content:space-around!important}.justify-content-md-evenly{justify-content:space-evenly!important}.align-items-md-start{align-items:flex-start!important}.align-items-md-end{align-items:flex-end!important}.align-items-md-center{align-items:center!important}.align-items-md-baseline{align-items:baseline!important}.align-items-md-stretch{align-items:stretch!important}.align-content-md-start{align-content:flex-start!important}.align-content-md-end{align-content:flex-end!important}.align-content-md-center{align-content:center!important}.align-content-md-between{align-content:space-between!important}.align-content-md-around{align-content:space-around!important}.align-content-md-stretch{align-content:stretch!important}.align-self-md-auto{align-self:auto!important}.align-self-md-start{align-self:flex-start!important}.align-self-md-end{align-self:flex-end!important}.align-self-md-center{align-self:center!important}.align-self-md-baseline{align-self:baseline!important}.align-self-md-stretch{align-self:stretch!important}.order-md-first{order:-1!important}.order-md-0{order:0!important}.order-md-1{order:1!important}.order-md-2{order:2!important}.order-md-3{order:3!important}.order-md-4{order:4!important}.order-md-5{order:5!important}.order-md-last{order:6!important}.m-md-0{margin:0!important}.m-md-1{margin:.25rem!important}.m-md-2{margin:.5rem!important}.m-md-3{margin:1rem!important}.m-md-4{margin:1.5rem!important}.m-md-5{margin:3rem!important}.m-md-auto{margin:auto!important}.mx-md-0{margin-right:0!important;margin-left:0!important}.mx-md-1{margin-right:.25rem!important;margin-left:.25rem!important}.mx-md-2{margin-right:.5rem!important;margin-left:.5rem!important}.mx-md-3{margin-right:1rem!important;margin-left:1rem!important}.mx-md-4{margin-right:1.5rem!important;margin-left:1.5rem!important}.mx-md-5{margin-right:3rem!important;margin-left:3rem!important}.mx-md-auto{margin-right:auto!important;margin-left:auto!important}.my-md-0{margin-top:0!important;margin-bottom:0!important}.my-md-1{margin-top:.25rem!important;margin-bottom:.25rem!important}.my-md-2{margin-top:.5rem!important;margin-bottom:.5rem!important}.my-md-3{margin-top:1rem!important;margin-bottom:1rem!important}.my-md-4{margin-top:1.5rem!important;margin-bottom:1.5rem!important}.my-md-5{margin-top:3rem!important;margin-bottom:3rem!important}.my-md-auto{margin-top:auto!important;margin-bottom:auto!important}.mt-md-0{margin-top:0!important}.mt-md-1{margin-top:.25rem!important}.mt-md-2{margin-top:.5rem!important}.mt-md-3{margin-top:1rem!important}.mt-md-4{margin-top:1.5rem!important}.mt-md-5{margin-top:3rem!important}.mt-md-auto{margin-top:auto!important}.me-md-0{margin-right:0!important}.me-md-1{margin-right:.25rem!important}.me-md-2{margin-right:.5rem!important}.me-md-3{margin-right:1rem!important}.me-md-4{margin-right:1.5rem!important}.me-md-5{margin-right:3rem!important}.me-md-auto{margin-right:auto!important}.mb-md-0{margin-bottom:0!important}.mb-md-1{margin-bottom:.25rem!important}.mb-md-2{margin-bottom:.5rem!important}.mb-md-3{margin-bottom:1rem!important}.mb-md-4{margin-bottom:1.5rem!important}.mb-md-5{margin-bottom:3rem!important}.mb-md-auto{margin-bottom:auto!important}.ms-md-0{margin-left:0!important}.ms-md-1{margin-left:.25rem!important}.ms-md-2{margin-left:.5rem!important}.ms-md-3{margin-left:1rem!important}.ms-md-4{margin-left:1.5rem!important}.ms-md-5{margin-left:3rem!important}.ms-md-auto{margin-left:auto!important}.p-md-0{padding:0!important}.p-md-1{padding:.25rem!important}.p-md-2{padding:.5rem!important}.p-md-3{padding:1rem!important}.p-md-4{padding:1.5rem!important}.p-md-5{padding:3rem!important}.px-md-0{padding-right:0!important;padding-left:0!important}.px-md-1{padding-right:.25rem!important;padding-left:.25rem!important}.px-md-2{padding-right:.5rem!important;padding-left:.5rem!important}.px-md-3{padding-right:1rem!important;padding-left:1rem!important}.px-md-4{padding-right:1.5rem!important;padding-left:1.5rem!important}.px-md-5{padding-right:3rem!important;padding-left:3rem!important}.py-md-0{padding-top:0!important;padding-bottom:0!important}.py-md-1{padding-top:.25rem!important;padding-bottom:.25rem!important}.py-md-2{padding-top:.5rem!important;padding-bottom:.5rem!important}.py-md-3{padding-top:1rem!important;padding-bottom:1rem!important}.py-md-4{padding-top:1.5rem!important;padding-bottom:1.5rem!important}.py-md-5{padding-top:3rem!important;padding-bottom:3rem!important}.pt-md-0{padding-top:0!important}.pt-md-1{padding-top:.25rem!important}.pt-md-2{padding-top:.5rem!important}.pt-md-3{padding-top:1rem!important}.pt-md-4{padding-top:1.5rem!important}.pt-md-5{padding-top:3rem!important}.pe-md-0{padding-right:0!important}.pe-md-1{padding-right:.25rem!important}.pe-md-2{padding-right:.5rem!important}.pe-md-3{padding-right:1rem!important}.pe-md-4{padding-right:1.5rem!important}.pe-md-5{padding-right:3rem!important}.pb-md-0{padding-bottom:0!important}.pb-md-1{padding-bottom:.25rem!important}.pb-md-2{padding-bottom:.5rem!important}.pb-md-3{padding-bottom:1rem!important}.pb-md-4{padding-bottom:1.5rem!important}.pb-md-5{padding-bottom:3rem!important}.ps-md-0{padding-left:0!important}.ps-md-1{padding-left:.25rem!important}.ps-md-2{padding-left:.5rem!important}.ps-md-3{padding-left:1rem!important}.ps-md-4{padding-left:1.5rem!important}.ps-md-5{padding-left:3rem!important}.text-md-start{text-align:left!important}.text-md-end{text-align:right!important}.text-md-center{text-align:center!important}}@media (min-width:992px){.float-lg-start{float:left!important}.float-lg-end{float:right!important}.float-lg-none{float:none!important}.d-lg-inline{display:inline!important}.d-lg-inline-block{display:inline-block!important}.d-lg-block{display:block!important}.d-lg-grid{display:grid!important}.d-lg-table{display:table!important}.d-lg-table-row{display:table-row!important}.d-lg-table-cell{display:table-cell!important}.d-lg-flex{display:flex!important}.d-lg-inline-flex{display:inline-flex!important}.d-lg-none{display:none!important}.flex-lg-fill{flex:1 1 auto!important}.flex-lg-row{flex-direction:row!important}.flex-lg-column{flex-direction:column!important}.flex-lg-row-reverse{flex-direction:row-reverse!important}.flex-lg-column-reverse{flex-direction:column-reverse!important}.flex-lg-grow-0{flex-grow:0!important}.flex-lg-grow-1{flex-grow:1!important}.flex-lg-shrink-0{flex-shrink:0!important}.flex-lg-shrink-1{flex-shrink:1!important}.flex-lg-wrap{flex-wrap:wrap!important}.flex-lg-nowrap{flex-wrap:nowrap!important}.flex-lg-wrap-reverse{flex-wrap:wrap-reverse!important}.gap-lg-0{gap:0!important}.gap-lg-1{gap:.25rem!important}.gap-lg-2{gap:.5rem!important}.gap-lg-3{gap:1rem!important}.gap-lg-4{gap:1.5rem!important}.gap-lg-5{gap:3rem!important}.justify-content-lg-start{justify-content:flex-start!important}.justify-content-lg-end{justify-content:flex-end!important}.justify-content-lg-center{justify-content:center!important}.justify-content-lg-between{justify-content:space-between!important}.justify-content-lg-around{justify-content:space-around!important}.justify-content-lg-evenly{justify-content:space-evenly!important}.align-items-lg-start{align-items:flex-start!important}.align-items-lg-end{align-items:flex-end!important}.align-items-lg-center{align-items:center!important}.align-items-lg-baseline{align-items:baseline!important}.align-items-lg-stretch{align-items:stretch!important}.align-content-lg-start{align-content:flex-start!important}.align-content-lg-end{align-content:flex-end!important}.align-content-lg-center{align-content:center!important}.align-content-lg-between{align-content:space-between!important}.align-content-lg-around{align-content:space-around!important}.align-content-lg-stretch{align-content:stretch!important}.align-self-lg-auto{align-self:auto!important}.align-self-lg-start{align-self:flex-start!important}.align-self-lg-end{align-self:flex-end!important}.align-self-lg-center{align-self:center!important}.align-self-lg-baseline{align-self:baseline!important}.align-self-lg-stretch{align-self:stretch!important}.order-lg-first{order:-1!important}.order-lg-0{order:0!important}.order-lg-1{order:1!important}.order-lg-2{order:2!important}.order-lg-3{order:3!important}.order-lg-4{order:4!important}.order-lg-5{order:5!important}.order-lg-last{order:6!important}.m-lg-0{margin:0!important}.m-lg-1{margin:.25rem!important}.m-lg-2{margin:.5rem!important}.m-lg-3{margin:1rem!important}.m-lg-4{margin:1.5rem!important}.m-lg-5{margin:3rem!important}.m-lg-auto{margin:auto!important}.mx-lg-0{margin-right:0!important;margin-left:0!important}.mx-lg-1{margin-right:.25rem!important;margin-left:.25rem!important}.mx-lg-2{margin-right:.5rem!important;margin-left:.5rem!important}.mx-lg-3{margin-right:1rem!important;margin-left:1rem!important}.mx-lg-4{margin-right:1.5rem!important;margin-left:1.5rem!important}.mx-lg-5{margin-right:3rem!important;margin-left:3rem!important}.mx-lg-auto{margin-right:auto!important;margin-left:auto!important}.my-lg-0{margin-top:0!important;margin-bottom:0!important}.my-lg-1{margin-top:.25rem!important;margin-bottom:.25rem!important}.my-lg-2{margin-top:.5rem!important;margin-bottom:.5rem!important}.my-lg-3{margin-top:1rem!important;margin-bottom:1rem!important}.my-lg-4{margin-top:1.5rem!important;margin-bottom:1.5rem!important}.my-lg-5{margin-top:3rem!important;margin-bottom:3rem!important}.my-lg-auto{margin-top:auto!important;margin-bottom:auto!important}.mt-lg-0{margin-top:0!important}.mt-lg-1{margin-top:.25rem!important}.mt-lg-2{margin-top:.5rem!important}.mt-lg-3{margin-top:1rem!important}.mt-lg-4{margin-top:1.5rem!important}.mt-lg-5{margin-top:3rem!important}.mt-lg-auto{margin-top:auto!important}.me-lg-0{margin-right:0!important}.me-lg-1{margin-right:.25rem!important}.me-lg-2{margin-right:.5rem!important}.me-lg-3{margin-right:1rem!important}.me-lg-4{margin-right:1.5rem!important}.me-lg-5{margin-right:3rem!important}.me-lg-auto{margin-right:auto!important}.mb-lg-0{margin-bottom:0!important}.mb-lg-1{margin-bottom:.25rem!important}.mb-lg-2{margin-bottom:.5rem!important}.mb-lg-3{margin-bottom:1rem!important}.mb-lg-4{margin-bottom:1.5rem!important}.mb-lg-5{margin-bottom:3rem!important}.mb-lg-auto{margin-bottom:auto!important}.ms-lg-0{margin-left:0!important}.ms-lg-1{margin-left:.25rem!important}.ms-lg-2{margin-left:.5rem!important}.ms-lg-3{margin-left:1rem!important}.ms-lg-4{margin-left:1.5rem!important}.ms-lg-5{margin-left:3rem!important}.ms-lg-auto{margin-left:auto!important}.p-lg-0{padding:0!important}.p-lg-1{padding:.25rem!important}.p-lg-2{padding:.5rem!important}.p-lg-3{padding:1rem!important}.p-lg-4{padding:1.5rem!important}.p-lg-5{padding:3rem!important}.px-lg-0{padding-right:0!important;padding-left:0!important}.px-lg-1{padding-right:.25rem!important;padding-left:.25rem!important}.px-lg-2{padding-right:.5rem!important;padding-left:.5rem!important}.px-lg-3{padding-right:1rem!important;padding-left:1rem!important}.px-lg-4{padding-right:1.5rem!important;padding-left:1.5rem!important}.px-lg-5{padding-right:3rem!important;padding-left:3rem!important}.py-lg-0{padding-top:0!important;padding-bottom:0!important}.py-lg-1{padding-top:.25rem!important;padding-bottom:.25rem!important}.py-lg-2{padding-top:.5rem!important;padding-bottom:.5rem!important}.py-lg-3{padding-top:1rem!important;padding-bottom:1rem!important}.py-lg-4{padding-top:1.5rem!important;padding-bottom:1.5rem!important}.py-lg-5{padding-top:3rem!important;padding-bottom:3rem!important}.pt-lg-0{padding-top:0!important}.pt-lg-1{padding-top:.25rem!important}.pt-lg-2{padding-top:.5rem!important}.pt-lg-3{padding-top:1rem!important}.pt-lg-4{padding-top:1.5rem!important}.pt-lg-5{padding-top:3rem!important}.pe-lg-0{padding-right:0!important}.pe-lg-1{padding-right:.25rem!important}.pe-lg-2{padding-right:.5rem!important}.pe-lg-3{padding-right:1rem!important}.pe-lg-4{padding-right:1.5rem!important}.pe-lg-5{padding-right:3rem!important}.pb-lg-0{padding-bottom:0!important}.pb-lg-1{padding-bottom:.25rem!important}.pb-lg-2{padding-bottom:.5rem!important}.pb-lg-3{padding-bottom:1rem!important}.pb-lg-4{padding-bottom:1.5rem!important}.pb-lg-5{padding-bottom:3rem!important}.ps-lg-0{padding-left:0!important}.ps-lg-1{padding-left:.25rem!important}.ps-lg-2{padding-left:.5rem!important}.ps-lg-3{padding-left:1rem!important}.ps-lg-4{padding-left:1.5rem!important}.ps-lg-5{padding-left:3rem!important}.text-lg-start{text-align:left!important}.text-lg-end{text-align:right!important}.text-lg-center{text-align:center!important}}@media (min-width:1200px){.float-xl-start{float:left!important}.float-xl-end{float:right!important}.float-xl-none{float:none!important}.d-xl-inline{display:inline!important}.d-xl-inline-block{display:inline-block!important}.d-xl-block{display:block!important}.d-xl-grid{display:grid!important}.d-xl-table{display:table!important}.d-xl-table-row{display:table-row!important}.d-xl-table-cell{display:table-cell!important}.d-xl-flex{display:flex!important}.d-xl-inline-flex{display:inline-flex!important}.d-xl-none{display:none!important}.flex-xl-fill{flex:1 1 auto!important}.flex-xl-row{flex-direction:row!important}.flex-xl-column{flex-direction:column!important}.flex-xl-row-reverse{flex-direction:row-reverse!important}.flex-xl-column-reverse{flex-direction:column-reverse!important}.flex-xl-grow-0{flex-grow:0!important}.flex-xl-grow-1{flex-grow:1!important}.flex-xl-shrink-0{flex-shrink:0!important}.flex-xl-shrink-1{flex-shrink:1!important}.flex-xl-wrap{flex-wrap:wrap!important}.flex-xl-nowrap{flex-wrap:nowrap!important}.flex-xl-wrap-reverse{flex-wrap:wrap-reverse!important}.gap-xl-0{gap:0!important}.gap-xl-1{gap:.25rem!important}.gap-xl-2{gap:.5rem!important}.gap-xl-3{gap:1rem!important}.gap-xl-4{gap:1.5rem!important}.gap-xl-5{gap:3rem!important}.justify-content-xl-start{justify-content:flex-start!important}.justify-content-xl-end{justify-content:flex-end!important}.justify-content-xl-center{justify-content:center!important}.justify-content-xl-between{justify-content:space-between!important}.justify-content-xl-around{justify-content:space-around!important}.justify-content-xl-evenly{justify-content:space-evenly!important}.align-items-xl-start{align-items:flex-start!important}.align-items-xl-end{align-items:flex-end!important}.align-items-xl-center{align-items:center!important}.align-items-xl-baseline{align-items:baseline!important}.align-items-xl-stretch{align-items:stretch!important}.align-content-xl-start{align-content:flex-start!important}.align-content-xl-end{align-content:flex-end!important}.align-content-xl-center{align-content:center!important}.align-content-xl-between{align-content:space-between!important}.align-content-xl-around{align-content:space-around!important}.align-content-xl-stretch{align-content:stretch!important}.align-self-xl-auto{align-self:auto!important}.align-self-xl-start{align-self:flex-start!important}.align-self-xl-end{align-self:flex-end!important}.align-self-xl-center{align-self:center!important}.align-self-xl-baseline{align-self:baseline!important}.align-self-xl-stretch{align-self:stretch!important}.order-xl-first{order:-1!important}.order-xl-0{order:0!important}.order-xl-1{order:1!important}.order-xl-2{order:2!important}.order-xl-3{order:3!important}.order-xl-4{order:4!important}.order-xl-5{order:5!important}.order-xl-last{order:6!important}.m-xl-0{margin:0!important}.m-xl-1{margin:.25rem!important}.m-xl-2{margin:.5rem!important}.m-xl-3{margin:1rem!important}.m-xl-4{margin:1.5rem!important}.m-xl-5{margin:3rem!important}.m-xl-auto{margin:auto!important}.mx-xl-0{margin-right:0!important;margin-left:0!important}.mx-xl-1{margin-right:.25rem!important;margin-left:.25rem!important}.mx-xl-2{margin-right:.5rem!important;margin-left:.5rem!important}.mx-xl-3{margin-right:1rem!important;margin-left:1rem!important}.mx-xl-4{margin-right:1.5rem!important;margin-left:1.5rem!important}.mx-xl-5{margin-right:3rem!important;margin-left:3rem!important}.mx-xl-auto{margin-right:auto!important;margin-left:auto!important}.my-xl-0{margin-top:0!important;margin-bottom:0!important}.my-xl-1{margin-top:.25rem!important;margin-bottom:.25rem!important}.my-xl-2{margin-top:.5rem!important;margin-bottom:.5rem!important}.my-xl-3{margin-top:1rem!important;margin-bottom:1rem!important}.my-xl-4{margin-top:1.5rem!important;margin-bottom:1.5rem!important}.my-xl-5{margin-top:3rem!important;margin-bottom:3rem!important}.my-xl-auto{margin-top:auto!important;margin-bottom:auto!important}.mt-xl-0{margin-top:0!important}.mt-xl-1{margin-top:.25rem!important}.mt-xl-2{margin-top:.5rem!important}.mt-xl-3{margin-top:1rem!important}.mt-xl-4{margin-top:1.5rem!important}.mt-xl-5{margin-top:3rem!important}.mt-xl-auto{margin-top:auto!important}.me-xl-0{margin-right:0!important}.me-xl-1{margin-right:.25rem!important}.me-xl-2{margin-right:.5rem!important}.me-xl-3{margin-right:1rem!important}.me-xl-4{margin-right:1.5rem!important}.me-xl-5{margin-right:3rem!important}.me-xl-auto{margin-right:auto!important}.mb-xl-0{margin-bottom:0!important}.mb-xl-1{margin-bottom:.25rem!important}.mb-xl-2{margin-bottom:.5rem!important}.mb-xl-3{margin-bottom:1rem!important}.mb-xl-4{margin-bottom:1.5rem!important}.mb-xl-5{margin-bottom:3rem!important}.mb-xl-auto{margin-bottom:auto!important}.ms-xl-0{margin-left:0!important}.ms-xl-1{margin-left:.25rem!important}.ms-xl-2{margin-left:.5rem!important}.ms-xl-3{margin-left:1rem!important}.ms-xl-4{margin-left:1.5rem!important}.ms-xl-5{margin-left:3rem!important}.ms-xl-auto{margin-left:auto!important}.p-xl-0{padding:0!important}.p-xl-1{padding:.25rem!important}.p-xl-2{padding:.5rem!important}.p-xl-3{padding:1rem!important}.p-xl-4{padding:1.5rem!important}.p-xl-5{padding:3rem!important}.px-xl-0{padding-right:0!important;padding-left:0!important}.px-xl-1{padding-right:.25rem!important;padding-left:.25rem!important}.px-xl-2{padding-right:.5rem!important;padding-left:.5rem!important}.px-xl-3{padding-right:1rem!important;padding-left:1rem!important}.px-xl-4{padding-right:1.5rem!important;padding-left:1.5rem!important}.px-xl-5{padding-right:3rem!important;padding-left:3rem!important}.py-xl-0{padding-top:0!important;padding-bottom:0!important}.py-xl-1{padding-top:.25rem!important;padding-bottom:.25rem!important}.py-xl-2{padding-top:.5rem!important;padding-bottom:.5rem!important}.py-xl-3{padding-top:1rem!important;padding-bottom:1rem!important}.py-xl-4{padding-top:1.5rem!important;padding-bottom:1.5rem!important}.py-xl-5{padding-top:3rem!important;padding-bottom:3rem!important}.pt-xl-0{padding-top:0!important}.pt-xl-1{padding-top:.25rem!important}.pt-xl-2{padding-top:.5rem!important}.pt-xl-3{padding-top:1rem!important}.pt-xl-4{padding-top:1.5rem!important}.pt-xl-5{padding-top:3rem!important}.pe-xl-0{padding-right:0!important}.pe-xl-1{padding-right:.25rem!important}.pe-xl-2{padding-right:.5rem!important}.pe-xl-3{padding-right:1rem!important}.pe-xl-4{padding-right:1.5rem!important}.pe-xl-5{padding-right:3rem!important}.pb-xl-0{padding-bottom:0!important}.pb-xl-1{padding-bottom:.25rem!important}.pb-xl-2{padding-bottom:.5rem!important}.pb-xl-3{padding-bottom:1rem!important}.pb-xl-4{padding-bottom:1.5rem!important}.pb-xl-5{padding-bottom:3rem!important}.ps-xl-0{padding-left:0!important}.ps-xl-1{padding-left:.25rem!important}.ps-xl-2{padding-left:.5rem!important}.ps-xl-3{padding-left:1rem!important}.ps-xl-4{padding-left:1.5rem!important}.ps-xl-5{padding-left:3rem!important}.text-xl-start{text-align:left!important}.text-xl-end{text-align:right!important}.text-xl-center{text-align:center!important}}@media (min-width:1400px){.float-xxl-start{float:left!important}.float-xxl-end{float:right!important}.float-xxl-none{float:none!important}.d-xxl-inline{display:inline!important}.d-xxl-inline-block{display:inline-block!important}.d-xxl-block{display:block!important}.d-xxl-grid{display:grid!important}.d-xxl-table{display:table!important}.d-xxl-table-row{display:table-row!important}.d-xxl-table-cell{display:table-cell!important}.d-xxl-flex{display:flex!important}.d-xxl-inline-flex{display:inline-flex!important}.d-xxl-none{display:none!important}.flex-xxl-fill{flex:1 1 auto!important}.flex-xxl-row{flex-direction:row!important}.flex-xxl-column{flex-direction:column!important}.flex-xxl-row-reverse{flex-direction:row-reverse!important}.flex-xxl-column-reverse{flex-direction:column-reverse!important}.flex-xxl-grow-0{flex-grow:0!important}.flex-xxl-grow-1{flex-grow:1!important}.flex-xxl-shrink-0{flex-shrink:0!important}.flex-xxl-shrink-1{flex-shrink:1!important}.flex-xxl-wrap{flex-wrap:wrap!important}.flex-xxl-nowrap{flex-wrap:nowrap!important}.flex-xxl-wrap-reverse{flex-wrap:wrap-reverse!important}.gap-xxl-0{gap:0!important}.gap-xxl-1{gap:.25rem!important}.gap-xxl-2{gap:.5rem!important}.gap-xxl-3{gap:1rem!important}.gap-xxl-4{gap:1.5rem!important}.gap-xxl-5{gap:3rem!important}.justify-content-xxl-start{justify-content:flex-start!important}.justify-content-xxl-end{justify-content:flex-end!important}.justify-content-xxl-center{justify-content:center!important}.justify-content-xxl-between{justify-content:space-between!important}.justify-content-xxl-around{justify-content:space-around!important}.justify-content-xxl-evenly{justify-content:space-evenly!important}.align-items-xxl-start{align-items:flex-start!important}.align-items-xxl-end{align-items:flex-end!important}.align-items-xxl-center{align-items:center!important}.align-items-xxl-baseline{align-items:baseline!important}.align-items-xxl-stretch{align-items:stretch!important}.align-content-xxl-start{align-content:flex-start!important}.align-content-xxl-end{align-content:flex-end!important}.align-content-xxl-center{align-content:center!important}.align-content-xxl-between{align-content:space-between!important}.align-content-xxl-around{align-content:space-around!important}.align-content-xxl-stretch{align-content:stretch!important}.align-self-xxl-auto{align-self:auto!important}.align-self-xxl-start{align-self:flex-start!important}.align-self-xxl-end{align-self:flex-end!important}.align-self-xxl-center{align-self:center!important}.align-self-xxl-baseline{align-self:baseline!important}.align-self-xxl-stretch{align-self:stretch!important}.order-xxl-first{order:-1!important}.order-xxl-0{order:0!important}.order-xxl-1{order:1!important}.order-xxl-2{order:2!important}.order-xxl-3{order:3!important}.order-xxl-4{order:4!important}.order-xxl-5{order:5!important}.order-xxl-last{order:6!important}.m-xxl-0{margin:0!important}.m-xxl-1{margin:.25rem!important}.m-xxl-2{margin:.5rem!important}.m-xxl-3{margin:1rem!important}.m-xxl-4{margin:1.5rem!important}.m-xxl-5{margin:3rem!important}.m-xxl-auto{margin:auto!important}.mx-xxl-0{margin-right:0!important;margin-left:0!important}.mx-xxl-1{margin-right:.25rem!important;margin-left:.25rem!important}.mx-xxl-2{margin-right:.5rem!important;margin-left:.5rem!important}.mx-xxl-3{margin-right:1rem!important;margin-left:1rem!important}.mx-xxl-4{margin-right:1.5rem!important;margin-left:1.5rem!important}.mx-xxl-5{margin-right:3rem!important;margin-left:3rem!important}.mx-xxl-auto{margin-right:auto!important;margin-left:auto!important}.my-xxl-0{margin-top:0!important;margin-bottom:0!important}.my-xxl-1{margin-top:.25rem!important;margin-bottom:.25rem!important}.my-xxl-2{margin-top:.5rem!important;margin-bottom:.5rem!important}.my-xxl-3{margin-top:1rem!important;margin-bottom:1rem!important}.my-xxl-4{margin-top:1.5rem!important;margin-bottom:1.5rem!important}.my-xxl-5{margin-top:3rem!important;margin-bottom:3rem!important}.my-xxl-auto{margin-top:auto!important;margin-bottom:auto!important}.mt-xxl-0{margin-top:0!important}.mt-xxl-1{margin-top:.25rem!important}.mt-xxl-2{margin-top:.5rem!important}.mt-xxl-3{margin-top:1rem!important}.mt-xxl-4{margin-top:1.5rem!important}.mt-xxl-5{margin-top:3rem!important}.mt-xxl-auto{margin-top:auto!important}.me-xxl-0{margin-right:0!important}.me-xxl-1{margin-right:.25rem!important}.me-xxl-2{margin-right:.5rem!important}.me-xxl-3{margin-right:1rem!important}.me-xxl-4{margin-right:1.5rem!important}.me-xxl-5{margin-right:3rem!important}.me-xxl-auto{margin-right:auto!important}.mb-xxl-0{margin-bottom:0!important}.mb-xxl-1{margin-bottom:.25rem!important}.mb-xxl-2{margin-bottom:.5rem!important}.mb-xxl-3{margin-bottom:1rem!important}.mb-xxl-4{margin-bottom:1.5rem!important}.mb-xxl-5{margin-bottom:3rem!important}.mb-xxl-auto{margin-bottom:auto!important}.ms-xxl-0{margin-left:0!important}.ms-xxl-1{margin-left:.25rem!important}.ms-xxl-2{margin-left:.5rem!important}.ms-xxl-3{margin-left:1rem!important}.ms-xxl-4{margin-left:1.5rem!important}.ms-xxl-5{margin-left:3rem!important}.ms-xxl-auto{margin-left:auto!important}.p-xxl-0{padding:0!important}.p-xxl-1{padding:.25rem!important}.p-xxl-2{padding:.5rem!important}.p-xxl-3{padding:1rem!important}.p-xxl-4{padding:1.5rem!important}.p-xxl-5{padding:3rem!important}.px-xxl-0{padding-right:0!important;padding-left:0!important}.px-xxl-1{padding-right:.25rem!important;padding-left:.25rem!important}.px-xxl-2{padding-right:.5rem!important;padding-left:.5rem!important}.px-xxl-3{padding-right:1rem!important;padding-left:1rem!important}.px-xxl-4{padding-right:1.5rem!important;padding-left:1.5rem!important}.px-xxl-5{padding-right:3rem!important;padding-left:3rem!important}.py-xxl-0{padding-top:0!important;padding-bottom:0!important}.py-xxl-1{padding-top:.25rem!important;padding-bottom:.25rem!important}.py-xxl-2{padding-top:.5rem!important;padding-bottom:.5rem!important}.py-xxl-3{padding-top:1rem!important;padding-bottom:1rem!important}.py-xxl-4{padding-top:1.5rem!important;padding-bottom:1.5rem!important}.py-xxl-5{padding-top:3rem!important;padding-bottom:3rem!important}.pt-xxl-0{padding-top:0!important}.pt-xxl-1{padding-top:.25rem!important}.pt-xxl-2{padding-top:.5rem!important}.pt-xxl-3{padding-top:1rem!important}.pt-xxl-4{padding-top:1.5rem!important}.pt-xxl-5{padding-top:3rem!important}.pe-xxl-0{padding-right:0!important}.pe-xxl-1{padding-right:.25rem!important}.pe-xxl-2{padding-right:.5rem!important}.pe-xxl-3{padding-right:1rem!important}.pe-xxl-4{padding-right:1.5rem!important}.pe-xxl-5{padding-right:3rem!important}.pb-xxl-0{padding-bottom:0!important}.pb-xxl-1{padding-bottom:.25rem!important}.pb-xxl-2{padding-bottom:.5rem!important}.pb-xxl-3{padding-bottom:1rem!important}.pb-xxl-4{padding-bottom:1.5rem!important}.pb-xxl-5{padding-bottom:3rem!important}.ps-xxl-0{padding-left:0!important}.ps-xxl-1{padding-left:.25rem!important}.ps-xxl-2{padding-left:.5rem!important}.ps-xxl-3{padding-left:1rem!important}.ps-xxl-4{padding-left:1.5rem!important}.ps-xxl-5{padding-left:3rem!important}.text-xxl-start{text-align:left!important}.text-xxl-end{text-align:right!important}.text-xxl-center{text-align:center!important}}@media (min-width:1200px){.fs-1{font-size:2.5rem!important}.fs-2{font-size:2rem!important}.fs-3{font-size:1.75rem!important}.fs-4{font-size:1.5rem!important}}@media print{.d-print-inline{display:inline!important}.d-print-inline-block{display:inline-block!important}.d-print-block{display:block!important}.d-print-grid{display:grid!important}.d-print-table{display:table!important}.d-print-table-row{display:table-row!important}.d-print-table-cell{display:table-cell!important}.d-print-flex{display:flex!important}.d-print-inline-flex{display:inline-flex!important}.d-print-none{display:none!important}}\\n/*# sourceMappingURL=bootstrap.min.css.map */","/*!\\n * Bootstrap v5.1.0 (https://getbootstrap.com/)\\n * Copyright 2011-2021 The Bootstrap Authors\\n * Copyright 2011-2021 Twitter, Inc.\\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\\n */\\n\\n// scss-docs-start import-stack\\n// Configuration\\n@import \\"functions\\";\\n@import \\"variables\\";\\n@import \\"mixins\\";\\n@import \\"utilities\\";\\n\\n// Layout & components\\n@import \\"root\\";\\n@import \\"reboot\\";\\n@import \\"type\\";\\n@import \\"images\\";\\n@import \\"containers\\";\\n@import \\"grid\\";\\n@import \\"tables\\";\\n@import \\"forms\\";\\n@import \\"buttons\\";\\n@import \\"transitions\\";\\n@import \\"dropdown\\";\\n@import \\"button-group\\";\\n@import \\"nav\\";\\n@import \\"navbar\\";\\n@import \\"card\\";\\n@import \\"accordion\\";\\n@import \\"breadcrumb\\";\\n@import \\"pagination\\";\\n@import \\"badge\\";\\n@import \\"alert\\";\\n@import \\"progress\\";\\n@import \\"list-group\\";\\n@import \\"close\\";\\n@import \\"toasts\\";\\n@import \\"modal\\";\\n@import \\"tooltip\\";\\n@import \\"popover\\";\\n@import \\"carousel\\";\\n@import \\"spinners\\";\\n@import \\"offcanvas\\";\\n@import \\"placeholders\\";\\n\\n// Helpers\\n@import \\"helpers\\";\\n\\n// Utilities\\n@import \\"utilities/api\\";\\n// scss-docs-end import-stack\\n",":root {\\n  // Note: Custom variable values only support SassScript inside `#{}`.\\n\\n  // Colors\\n  //\\n  // Generate palettes for full colors, grays, and theme colors.\\n\\n  @each $color, $value in $colors {\\n    --#{$variable-prefix}#{$color}: #{$value};\\n  }\\n\\n  @each $color, $value in $grays {\\n    --#{$variable-prefix}gray-#{$color}: #{$value};\\n  }\\n\\n  @each $color, $value in $theme-colors {\\n    --#{$variable-prefix}#{$color}: #{$value};\\n  }\\n\\n  @each $color, $value in $theme-colors-rgb {\\n    --#{$variable-prefix}#{$color}-rgb: #{$value};\\n  }\\n\\n  --#{$variable-prefix}white-rgb: #{to-rgb($white)};\\n  --#{$variable-prefix}black-rgb: #{to-rgb($black)};\\n  --#{$variable-prefix}body-rgb: #{to-rgb($body-color)};\\n\\n  // Fonts\\n\\n  // Note: Use `inspect` for lists so that quoted items keep the quotes.\\n  // See https://github.com/sass/sass/issues/2383#issuecomment-336349172\\n  --#{$variable-prefix}font-sans-serif: #{inspect($font-family-sans-serif)};\\n  --#{$variable-prefix}font-monospace: #{inspect($font-family-monospace)};\\n  --#{$variable-prefix}gradient: #{$gradient};\\n\\n  // Root and body\\n  // stylelint-disable custom-property-empty-line-before\\n  // scss-docs-start root-body-variables\\n  @if $font-size-root != null {\\n    --#{$variable-prefix}root-font-size: #{$font-size-root};\\n  }\\n  --#{$variable-prefix}body-font-family: #{$font-family-base};\\n  --#{$variable-prefix}body-font-size: #{$font-size-base};\\n  --#{$variable-prefix}body-font-weight: #{$font-weight-base};\\n  --#{$variable-prefix}body-line-height: #{$line-height-base};\\n  --#{$variable-prefix}body-color: #{$body-color};\\n  @if $body-text-align != null {\\n    --#{$variable-prefix}body-text-align: #{$body-text-align};\\n  }\\n  --#{$variable-prefix}body-bg: #{$body-bg};\\n  // scss-docs-end root-body-variables\\n  // stylelint-enable custom-property-empty-line-before\\n}\\n","@charset \\"UTF-8\\";\\n/*!\\n * Bootstrap v5.1.0 (https://getbootstrap.com/)\\n * Copyright 2011-2021 The Bootstrap Authors\\n * Copyright 2011-2021 Twitter, Inc.\\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\\n */\\n:root {\\n  --bs-blue: #0d6efd;\\n  --bs-indigo: #6610f2;\\n  --bs-purple: #6f42c1;\\n  --bs-pink: #d63384;\\n  --bs-red: #dc3545;\\n  --bs-orange: #fd7e14;\\n  --bs-yellow: #ffc107;\\n  --bs-green: #198754;\\n  --bs-teal: #20c997;\\n  --bs-cyan: #0dcaf0;\\n  --bs-white: #fff;\\n  --bs-gray: #6c757d;\\n  --bs-gray-dark: #343a40;\\n  --bs-gray-100: #f8f9fa;\\n  --bs-gray-200: #e9ecef;\\n  --bs-gray-300: #dee2e6;\\n  --bs-gray-400: #ced4da;\\n  --bs-gray-500: #adb5bd;\\n  --bs-gray-600: #6c757d;\\n  --bs-gray-700: #495057;\\n  --bs-gray-800: #343a40;\\n  --bs-gray-900: #212529;\\n  --bs-primary: #0d6efd;\\n  --bs-secondary: #6c757d;\\n  --bs-success: #198754;\\n  --bs-info: #0dcaf0;\\n  --bs-warning: #ffc107;\\n  --bs-danger: #dc3545;\\n  --bs-light: #f8f9fa;\\n  --bs-dark: #212529;\\n  --bs-primary-rgb: 13, 110, 253;\\n  --bs-secondary-rgb: 108, 117, 125;\\n  --bs-success-rgb: 25, 135, 84;\\n  --bs-info-rgb: 13, 202, 240;\\n  --bs-warning-rgb: 255, 193, 7;\\n  --bs-danger-rgb: 220, 53, 69;\\n  --bs-light-rgb: 248, 249, 250;\\n  --bs-dark-rgb: 33, 37, 41;\\n  --bs-white-rgb: 255, 255, 255;\\n  --bs-black-rgb: 0, 0, 0;\\n  --bs-body-rgb: 33, 37, 41;\\n  --bs-font-sans-serif: system-ui, -apple-system, \\"Segoe UI\\", Roboto, \\"Helvetica Neue\\", Arial, \\"Noto Sans\\", \\"Liberation Sans\\", sans-serif, \\"Apple Color Emoji\\", \\"Segoe UI Emoji\\", \\"Segoe UI Symbol\\", \\"Noto Color Emoji\\";\\n  --bs-font-monospace: SFMono-Regular, Menlo, Monaco, Consolas, \\"Liberation Mono\\", \\"Courier New\\", monospace;\\n  --bs-gradient: linear-gradient(180deg, rgba(255, 255, 255, 0.15), rgba(255, 255, 255, 0));\\n  --bs-body-font-family: var(--bs-font-sans-serif);\\n  --bs-body-font-size: 1rem;\\n  --bs-body-font-weight: 400;\\n  --bs-body-line-height: 1.5;\\n  --bs-body-color: #212529;\\n  --bs-body-bg: #fff;\\n}\\n\\n*,\\n*::before,\\n*::after {\\n  box-sizing: border-box;\\n}\\n\\n@media (prefers-reduced-motion: no-preference) {\\n  :root {\\n    scroll-behavior: smooth;\\n  }\\n}\\n\\nbody {\\n  margin: 0;\\n  font-family: var(--bs-body-font-family);\\n  font-size: var(--bs-body-font-size);\\n  font-weight: var(--bs-body-font-weight);\\n  line-height: var(--bs-body-line-height);\\n  color: var(--bs-body-color);\\n  text-align: var(--bs-body-text-align);\\n  background-color: var(--bs-body-bg);\\n  -webkit-text-size-adjust: 100%;\\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\\n}\\n\\nhr {\\n  margin: 1rem 0;\\n  color: inherit;\\n  background-color: currentColor;\\n  border: 0;\\n  opacity: 0.25;\\n}\\n\\nhr:not([size]) {\\n  height: 1px;\\n}\\n\\nh6, .h6, h5, .h5, h4, .h4, h3, .h3, h2, .h2, h1, .h1 {\\n  margin-top: 0;\\n  margin-bottom: 0.5rem;\\n  font-weight: 500;\\n  line-height: 1.2;\\n}\\n\\nh1, .h1 {\\n  font-size: calc(1.375rem + 1.5vw);\\n}\\n@media (min-width: 1200px) {\\n  h1, .h1 {\\n    font-size: 2.5rem;\\n  }\\n}\\n\\nh2, .h2 {\\n  font-size: calc(1.325rem + 0.9vw);\\n}\\n@media (min-width: 1200px) {\\n  h2, .h2 {\\n    font-size: 2rem;\\n  }\\n}\\n\\nh3, .h3 {\\n  font-size: calc(1.3rem + 0.6vw);\\n}\\n@media (min-width: 1200px) {\\n  h3, .h3 {\\n    font-size: 1.75rem;\\n  }\\n}\\n\\nh4, .h4 {\\n  font-size: calc(1.275rem + 0.3vw);\\n}\\n@media (min-width: 1200px) {\\n  h4, .h4 {\\n    font-size: 1.5rem;\\n  }\\n}\\n\\nh5, .h5 {\\n  font-size: 1.25rem;\\n}\\n\\nh6, .h6 {\\n  font-size: 1rem;\\n}\\n\\np {\\n  margin-top: 0;\\n  margin-bottom: 1rem;\\n}\\n\\nabbr[title],\\nabbr[data-bs-original-title] {\\n  -webkit-text-decoration: underline dotted;\\n  text-decoration: underline dotted;\\n  cursor: help;\\n  -webkit-text-decoration-skip-ink: none;\\n  text-decoration-skip-ink: none;\\n}\\n\\naddress {\\n  margin-bottom: 1rem;\\n  font-style: normal;\\n  line-height: inherit;\\n}\\n\\nol,\\nul {\\n  padding-left: 2rem;\\n}\\n\\nol,\\nul,\\ndl {\\n  margin-top: 0;\\n  margin-bottom: 1rem;\\n}\\n\\nol ol,\\nul ul,\\nol ul,\\nul ol {\\n  margin-bottom: 0;\\n}\\n\\ndt {\\n  font-weight: 700;\\n}\\n\\ndd {\\n  margin-bottom: 0.5rem;\\n  margin-left: 0;\\n}\\n\\nblockquote {\\n  margin: 0 0 1rem;\\n}\\n\\nb,\\nstrong {\\n  font-weight: bolder;\\n}\\n\\nsmall, .small {\\n  font-size: 0.875em;\\n}\\n\\nmark, .mark {\\n  padding: 0.2em;\\n  background-color: #fcf8e3;\\n}\\n\\nsub,\\nsup {\\n  position: relative;\\n  font-size: 0.75em;\\n  line-height: 0;\\n  vertical-align: baseline;\\n}\\n\\nsub {\\n  bottom: -0.25em;\\n}\\n\\nsup {\\n  top: -0.5em;\\n}\\n\\na {\\n  color: #0d6efd;\\n  text-decoration: underline;\\n}\\na:hover {\\n  color: #0a58ca;\\n}\\n\\na:not([href]):not([class]), a:not([href]):not([class]):hover {\\n  color: inherit;\\n  text-decoration: none;\\n}\\n\\npre,\\ncode,\\nkbd,\\nsamp {\\n  font-family: var(--bs-font-monospace);\\n  font-size: 1em;\\n  direction: ltr /* rtl:ignore */;\\n  unicode-bidi: bidi-override;\\n}\\n\\npre {\\n  display: block;\\n  margin-top: 0;\\n  margin-bottom: 1rem;\\n  overflow: auto;\\n  font-size: 0.875em;\\n}\\npre code {\\n  font-size: inherit;\\n  color: inherit;\\n  word-break: normal;\\n}\\n\\ncode {\\n  font-size: 0.875em;\\n  color: #d63384;\\n  word-wrap: break-word;\\n}\\na > code {\\n  color: inherit;\\n}\\n\\nkbd {\\n  padding: 0.2rem 0.4rem;\\n  font-size: 0.875em;\\n  color: #fff;\\n  background-color: #212529;\\n  border-radius: 0.2rem;\\n}\\nkbd kbd {\\n  padding: 0;\\n  font-size: 1em;\\n  font-weight: 700;\\n}\\n\\nfigure {\\n  margin: 0 0 1rem;\\n}\\n\\nimg,\\nsvg {\\n  vertical-align: middle;\\n}\\n\\ntable {\\n  caption-side: bottom;\\n  border-collapse: collapse;\\n}\\n\\ncaption {\\n  padding-top: 0.5rem;\\n  padding-bottom: 0.5rem;\\n  color: #6c757d;\\n  text-align: left;\\n}\\n\\nth {\\n  text-align: inherit;\\n  text-align: -webkit-match-parent;\\n}\\n\\nthead,\\ntbody,\\ntfoot,\\ntr,\\ntd,\\nth {\\n  border-color: inherit;\\n  border-style: solid;\\n  border-width: 0;\\n}\\n\\nlabel {\\n  display: inline-block;\\n}\\n\\nbutton {\\n  border-radius: 0;\\n}\\n\\nbutton:focus:not(:focus-visible) {\\n  outline: 0;\\n}\\n\\ninput,\\nbutton,\\nselect,\\noptgroup,\\ntextarea {\\n  margin: 0;\\n  font-family: inherit;\\n  font-size: inherit;\\n  line-height: inherit;\\n}\\n\\nbutton,\\nselect {\\n  text-transform: none;\\n}\\n\\n[role=button] {\\n  cursor: pointer;\\n}\\n\\nselect {\\n  word-wrap: normal;\\n}\\nselect:disabled {\\n  opacity: 1;\\n}\\n\\n[list]::-webkit-calendar-picker-indicator {\\n  display: none;\\n}\\n\\nbutton,\\n[type=button],\\n[type=reset],\\n[type=submit] {\\n  -webkit-appearance: button;\\n}\\nbutton:not(:disabled),\\n[type=button]:not(:disabled),\\n[type=reset]:not(:disabled),\\n[type=submit]:not(:disabled) {\\n  cursor: pointer;\\n}\\n\\n::-moz-focus-inner {\\n  padding: 0;\\n  border-style: none;\\n}\\n\\ntextarea {\\n  resize: vertical;\\n}\\n\\nfieldset {\\n  min-width: 0;\\n  padding: 0;\\n  margin: 0;\\n  border: 0;\\n}\\n\\nlegend {\\n  float: left;\\n  width: 100%;\\n  padding: 0;\\n  margin-bottom: 0.5rem;\\n  font-size: calc(1.275rem + 0.3vw);\\n  line-height: inherit;\\n}\\n@media (min-width: 1200px) {\\n  legend {\\n    font-size: 1.5rem;\\n  }\\n}\\nlegend + * {\\n  clear: left;\\n}\\n\\n::-webkit-datetime-edit-fields-wrapper,\\n::-webkit-datetime-edit-text,\\n::-webkit-datetime-edit-minute,\\n::-webkit-datetime-edit-hour-field,\\n::-webkit-datetime-edit-day-field,\\n::-webkit-datetime-edit-month-field,\\n::-webkit-datetime-edit-year-field {\\n  padding: 0;\\n}\\n\\n::-webkit-inner-spin-button {\\n  height: auto;\\n}\\n\\n[type=search] {\\n  outline-offset: -2px;\\n  -webkit-appearance: textfield;\\n}\\n\\n/* rtl:raw:\\n[type=\\"tel\\"],\\n[type=\\"url\\"],\\n[type=\\"email\\"],\\n[type=\\"number\\"] {\\n  direction: ltr;\\n}\\n*/\\n::-webkit-search-decoration {\\n  -webkit-appearance: none;\\n}\\n\\n::-webkit-color-swatch-wrapper {\\n  padding: 0;\\n}\\n\\n::file-selector-button {\\n  font: inherit;\\n}\\n\\n::-webkit-file-upload-button {\\n  font: inherit;\\n  -webkit-appearance: button;\\n}\\n\\noutput {\\n  display: inline-block;\\n}\\n\\niframe {\\n  border: 0;\\n}\\n\\nsummary {\\n  display: list-item;\\n  cursor: pointer;\\n}\\n\\nprogress {\\n  vertical-align: baseline;\\n}\\n\\n[hidden] {\\n  display: none !important;\\n}\\n\\n.lead {\\n  font-size: 1.25rem;\\n  font-weight: 300;\\n}\\n\\n.display-1 {\\n  font-size: calc(1.625rem + 4.5vw);\\n  font-weight: 300;\\n  line-height: 1.2;\\n}\\n@media (min-width: 1200px) {\\n  .display-1 {\\n    font-size: 5rem;\\n  }\\n}\\n\\n.display-2 {\\n  font-size: calc(1.575rem + 3.9vw);\\n  font-weight: 300;\\n  line-height: 1.2;\\n}\\n@media (min-width: 1200px) {\\n  .display-2 {\\n    font-size: 4.5rem;\\n  }\\n}\\n\\n.display-3 {\\n  font-size: calc(1.525rem + 3.3vw);\\n  font-weight: 300;\\n  line-height: 1.2;\\n}\\n@media (min-width: 1200px) {\\n  .display-3 {\\n    font-size: 4rem;\\n  }\\n}\\n\\n.display-4 {\\n  font-size: calc(1.475rem + 2.7vw);\\n  font-weight: 300;\\n  line-height: 1.2;\\n}\\n@media (min-width: 1200px) {\\n  .display-4 {\\n    font-size: 3.5rem;\\n  }\\n}\\n\\n.display-5 {\\n  font-size: calc(1.425rem + 2.1vw);\\n  font-weight: 300;\\n  line-height: 1.2;\\n}\\n@media (min-width: 1200px) {\\n  .display-5 {\\n    font-size: 3rem;\\n  }\\n}\\n\\n.display-6 {\\n  font-size: calc(1.375rem + 1.5vw);\\n  font-weight: 300;\\n  line-height: 1.2;\\n}\\n@media (min-width: 1200px) {\\n  .display-6 {\\n    font-size: 2.5rem;\\n  }\\n}\\n\\n.list-unstyled {\\n  padding-left: 0;\\n  list-style: none;\\n}\\n\\n.list-inline {\\n  padding-left: 0;\\n  list-style: none;\\n}\\n\\n.list-inline-item {\\n  display: inline-block;\\n}\\n.list-inline-item:not(:last-child) {\\n  margin-right: 0.5rem;\\n}\\n\\n.initialism {\\n  font-size: 0.875em;\\n  text-transform: uppercase;\\n}\\n\\n.blockquote {\\n  margin-bottom: 1rem;\\n  font-size: 1.25rem;\\n}\\n.blockquote > :last-child {\\n  margin-bottom: 0;\\n}\\n\\n.blockquote-footer {\\n  margin-top: -1rem;\\n  margin-bottom: 1rem;\\n  font-size: 0.875em;\\n  color: #6c757d;\\n}\\n.blockquote-footer::before {\\n  content: \\"— \\";\\n}\\n\\n.img-fluid {\\n  max-width: 100%;\\n  height: auto;\\n}\\n\\n.img-thumbnail {\\n  padding: 0.25rem;\\n  background-color: #fff;\\n  border: 1px solid #dee2e6;\\n  border-radius: 0.25rem;\\n  max-width: 100%;\\n  height: auto;\\n}\\n\\n.figure {\\n  display: inline-block;\\n}\\n\\n.figure-img {\\n  margin-bottom: 0.5rem;\\n  line-height: 1;\\n}\\n\\n.figure-caption {\\n  font-size: 0.875em;\\n  color: #6c757d;\\n}\\n\\n.container,\\n.container-fluid,\\n.container-xxl,\\n.container-xl,\\n.container-lg,\\n.container-md,\\n.container-sm {\\n  width: 100%;\\n  padding-right: var(--bs-gutter-x, 0.75rem);\\n  padding-left: var(--bs-gutter-x, 0.75rem);\\n  margin-right: auto;\\n  margin-left: auto;\\n}\\n\\n@media (min-width: 576px) {\\n  .container-sm, .container {\\n    max-width: 540px;\\n  }\\n}\\n@media (min-width: 768px) {\\n  .container-md, .container-sm, .container {\\n    max-width: 720px;\\n  }\\n}\\n@media (min-width: 992px) {\\n  .container-lg, .container-md, .container-sm, .container {\\n    max-width: 960px;\\n  }\\n}\\n@media (min-width: 1200px) {\\n  .container-xl, .container-lg, .container-md, .container-sm, .container {\\n    max-width: 1140px;\\n  }\\n}\\n@media (min-width: 1400px) {\\n  .container-xxl, .container-xl, .container-lg, .container-md, .container-sm, .container {\\n    max-width: 1320px;\\n  }\\n}\\n.row {\\n  --bs-gutter-x: 1.5rem;\\n  --bs-gutter-y: 0;\\n  display: flex;\\n  flex-wrap: wrap;\\n  margin-top: calc(var(--bs-gutter-y) * -1);\\n  margin-right: calc(var(--bs-gutter-x) * -.5);\\n  margin-left: calc(var(--bs-gutter-x) * -.5);\\n}\\n.row > * {\\n  flex-shrink: 0;\\n  width: 100%;\\n  max-width: 100%;\\n  padding-right: calc(var(--bs-gutter-x) * .5);\\n  padding-left: calc(var(--bs-gutter-x) * .5);\\n  margin-top: var(--bs-gutter-y);\\n}\\n\\n.col {\\n  flex: 1 0 0%;\\n}\\n\\n.row-cols-auto > * {\\n  flex: 0 0 auto;\\n  width: auto;\\n}\\n\\n.row-cols-1 > * {\\n  flex: 0 0 auto;\\n  width: 100%;\\n}\\n\\n.row-cols-2 > * {\\n  flex: 0 0 auto;\\n  width: 50%;\\n}\\n\\n.row-cols-3 > * {\\n  flex: 0 0 auto;\\n  width: 33.3333333333%;\\n}\\n\\n.row-cols-4 > * {\\n  flex: 0 0 auto;\\n  width: 25%;\\n}\\n\\n.row-cols-5 > * {\\n  flex: 0 0 auto;\\n  width: 20%;\\n}\\n\\n.row-cols-6 > * {\\n  flex: 0 0 auto;\\n  width: 16.6666666667%;\\n}\\n\\n.col-auto {\\n  flex: 0 0 auto;\\n  width: auto;\\n}\\n\\n.col-1 {\\n  flex: 0 0 auto;\\n  width: 8.33333333%;\\n}\\n\\n.col-2 {\\n  flex: 0 0 auto;\\n  width: 16.66666667%;\\n}\\n\\n.col-3 {\\n  flex: 0 0 auto;\\n  width: 25%;\\n}\\n\\n.col-4 {\\n  flex: 0 0 auto;\\n  width: 33.33333333%;\\n}\\n\\n.col-5 {\\n  flex: 0 0 auto;\\n  width: 41.66666667%;\\n}\\n\\n.col-6 {\\n  flex: 0 0 auto;\\n  width: 50%;\\n}\\n\\n.col-7 {\\n  flex: 0 0 auto;\\n  width: 58.33333333%;\\n}\\n\\n.col-8 {\\n  flex: 0 0 auto;\\n  width: 66.66666667%;\\n}\\n\\n.col-9 {\\n  flex: 0 0 auto;\\n  width: 75%;\\n}\\n\\n.col-10 {\\n  flex: 0 0 auto;\\n  width: 83.33333333%;\\n}\\n\\n.col-11 {\\n  flex: 0 0 auto;\\n  width: 91.66666667%;\\n}\\n\\n.col-12 {\\n  flex: 0 0 auto;\\n  width: 100%;\\n}\\n\\n.offset-1 {\\n  margin-left: 8.33333333%;\\n}\\n\\n.offset-2 {\\n  margin-left: 16.66666667%;\\n}\\n\\n.offset-3 {\\n  margin-left: 25%;\\n}\\n\\n.offset-4 {\\n  margin-left: 33.33333333%;\\n}\\n\\n.offset-5 {\\n  margin-left: 41.66666667%;\\n}\\n\\n.offset-6 {\\n  margin-left: 50%;\\n}\\n\\n.offset-7 {\\n  margin-left: 58.33333333%;\\n}\\n\\n.offset-8 {\\n  margin-left: 66.66666667%;\\n}\\n\\n.offset-9 {\\n  margin-left: 75%;\\n}\\n\\n.offset-10 {\\n  margin-left: 83.33333333%;\\n}\\n\\n.offset-11 {\\n  margin-left: 91.66666667%;\\n}\\n\\n.g-0,\\n.gx-0 {\\n  --bs-gutter-x: 0;\\n}\\n\\n.g-0,\\n.gy-0 {\\n  --bs-gutter-y: 0;\\n}\\n\\n.g-1,\\n.gx-1 {\\n  --bs-gutter-x: 0.25rem;\\n}\\n\\n.g-1,\\n.gy-1 {\\n  --bs-gutter-y: 0.25rem;\\n}\\n\\n.g-2,\\n.gx-2 {\\n  --bs-gutter-x: 0.5rem;\\n}\\n\\n.g-2,\\n.gy-2 {\\n  --bs-gutter-y: 0.5rem;\\n}\\n\\n.g-3,\\n.gx-3 {\\n  --bs-gutter-x: 1rem;\\n}\\n\\n.g-3,\\n.gy-3 {\\n  --bs-gutter-y: 1rem;\\n}\\n\\n.g-4,\\n.gx-4 {\\n  --bs-gutter-x: 1.5rem;\\n}\\n\\n.g-4,\\n.gy-4 {\\n  --bs-gutter-y: 1.5rem;\\n}\\n\\n.g-5,\\n.gx-5 {\\n  --bs-gutter-x: 3rem;\\n}\\n\\n.g-5,\\n.gy-5 {\\n  --bs-gutter-y: 3rem;\\n}\\n\\n@media (min-width: 576px) {\\n  .col-sm {\\n    flex: 1 0 0%;\\n  }\\n\\n  .row-cols-sm-auto > * {\\n    flex: 0 0 auto;\\n    width: auto;\\n  }\\n\\n  .row-cols-sm-1 > * {\\n    flex: 0 0 auto;\\n    width: 100%;\\n  }\\n\\n  .row-cols-sm-2 > * {\\n    flex: 0 0 auto;\\n    width: 50%;\\n  }\\n\\n  .row-cols-sm-3 > * {\\n    flex: 0 0 auto;\\n    width: 33.3333333333%;\\n  }\\n\\n  .row-cols-sm-4 > * {\\n    flex: 0 0 auto;\\n    width: 25%;\\n  }\\n\\n  .row-cols-sm-5 > * {\\n    flex: 0 0 auto;\\n    width: 20%;\\n  }\\n\\n  .row-cols-sm-6 > * {\\n    flex: 0 0 auto;\\n    width: 16.6666666667%;\\n  }\\n\\n  .col-sm-auto {\\n    flex: 0 0 auto;\\n    width: auto;\\n  }\\n\\n  .col-sm-1 {\\n    flex: 0 0 auto;\\n    width: 8.33333333%;\\n  }\\n\\n  .col-sm-2 {\\n    flex: 0 0 auto;\\n    width: 16.66666667%;\\n  }\\n\\n  .col-sm-3 {\\n    flex: 0 0 auto;\\n    width: 25%;\\n  }\\n\\n  .col-sm-4 {\\n    flex: 0 0 auto;\\n    width: 33.33333333%;\\n  }\\n\\n  .col-sm-5 {\\n    flex: 0 0 auto;\\n    width: 41.66666667%;\\n  }\\n\\n  .col-sm-6 {\\n    flex: 0 0 auto;\\n    width: 50%;\\n  }\\n\\n  .col-sm-7 {\\n    flex: 0 0 auto;\\n    width: 58.33333333%;\\n  }\\n\\n  .col-sm-8 {\\n    flex: 0 0 auto;\\n    width: 66.66666667%;\\n  }\\n\\n  .col-sm-9 {\\n    flex: 0 0 auto;\\n    width: 75%;\\n  }\\n\\n  .col-sm-10 {\\n    flex: 0 0 auto;\\n    width: 83.33333333%;\\n  }\\n\\n  .col-sm-11 {\\n    flex: 0 0 auto;\\n    width: 91.66666667%;\\n  }\\n\\n  .col-sm-12 {\\n    flex: 0 0 auto;\\n    width: 100%;\\n  }\\n\\n  .offset-sm-0 {\\n    margin-left: 0;\\n  }\\n\\n  .offset-sm-1 {\\n    margin-left: 8.33333333%;\\n  }\\n\\n  .offset-sm-2 {\\n    margin-left: 16.66666667%;\\n  }\\n\\n  .offset-sm-3 {\\n    margin-left: 25%;\\n  }\\n\\n  .offset-sm-4 {\\n    margin-left: 33.33333333%;\\n  }\\n\\n  .offset-sm-5 {\\n    margin-left: 41.66666667%;\\n  }\\n\\n  .offset-sm-6 {\\n    margin-left: 50%;\\n  }\\n\\n  .offset-sm-7 {\\n    margin-left: 58.33333333%;\\n  }\\n\\n  .offset-sm-8 {\\n    margin-left: 66.66666667%;\\n  }\\n\\n  .offset-sm-9 {\\n    margin-left: 75%;\\n  }\\n\\n  .offset-sm-10 {\\n    margin-left: 83.33333333%;\\n  }\\n\\n  .offset-sm-11 {\\n    margin-left: 91.66666667%;\\n  }\\n\\n  .g-sm-0,\\n.gx-sm-0 {\\n    --bs-gutter-x: 0;\\n  }\\n\\n  .g-sm-0,\\n.gy-sm-0 {\\n    --bs-gutter-y: 0;\\n  }\\n\\n  .g-sm-1,\\n.gx-sm-1 {\\n    --bs-gutter-x: 0.25rem;\\n  }\\n\\n  .g-sm-1,\\n.gy-sm-1 {\\n    --bs-gutter-y: 0.25rem;\\n  }\\n\\n  .g-sm-2,\\n.gx-sm-2 {\\n    --bs-gutter-x: 0.5rem;\\n  }\\n\\n  .g-sm-2,\\n.gy-sm-2 {\\n    --bs-gutter-y: 0.5rem;\\n  }\\n\\n  .g-sm-3,\\n.gx-sm-3 {\\n    --bs-gutter-x: 1rem;\\n  }\\n\\n  .g-sm-3,\\n.gy-sm-3 {\\n    --bs-gutter-y: 1rem;\\n  }\\n\\n  .g-sm-4,\\n.gx-sm-4 {\\n    --bs-gutter-x: 1.5rem;\\n  }\\n\\n  .g-sm-4,\\n.gy-sm-4 {\\n    --bs-gutter-y: 1.5rem;\\n  }\\n\\n  .g-sm-5,\\n.gx-sm-5 {\\n    --bs-gutter-x: 3rem;\\n  }\\n\\n  .g-sm-5,\\n.gy-sm-5 {\\n    --bs-gutter-y: 3rem;\\n  }\\n}\\n@media (min-width: 768px) {\\n  .col-md {\\n    flex: 1 0 0%;\\n  }\\n\\n  .row-cols-md-auto > * {\\n    flex: 0 0 auto;\\n    width: auto;\\n  }\\n\\n  .row-cols-md-1 > * {\\n    flex: 0 0 auto;\\n    width: 100%;\\n  }\\n\\n  .row-cols-md-2 > * {\\n    flex: 0 0 auto;\\n    width: 50%;\\n  }\\n\\n  .row-cols-md-3 > * {\\n    flex: 0 0 auto;\\n    width: 33.3333333333%;\\n  }\\n\\n  .row-cols-md-4 > * {\\n    flex: 0 0 auto;\\n    width: 25%;\\n  }\\n\\n  .row-cols-md-5 > * {\\n    flex: 0 0 auto;\\n    width: 20%;\\n  }\\n\\n  .row-cols-md-6 > * {\\n    flex: 0 0 auto;\\n    width: 16.6666666667%;\\n  }\\n\\n  .col-md-auto {\\n    flex: 0 0 auto;\\n    width: auto;\\n  }\\n\\n  .col-md-1 {\\n    flex: 0 0 auto;\\n    width: 8.33333333%;\\n  }\\n\\n  .col-md-2 {\\n    flex: 0 0 auto;\\n    width: 16.66666667%;\\n  }\\n\\n  .col-md-3 {\\n    flex: 0 0 auto;\\n    width: 25%;\\n  }\\n\\n  .col-md-4 {\\n    flex: 0 0 auto;\\n    width: 33.33333333%;\\n  }\\n\\n  .col-md-5 {\\n    flex: 0 0 auto;\\n    width: 41.66666667%;\\n  }\\n\\n  .col-md-6 {\\n    flex: 0 0 auto;\\n    width: 50%;\\n  }\\n\\n  .col-md-7 {\\n    flex: 0 0 auto;\\n    width: 58.33333333%;\\n  }\\n\\n  .col-md-8 {\\n    flex: 0 0 auto;\\n    width: 66.66666667%;\\n  }\\n\\n  .col-md-9 {\\n    flex: 0 0 auto;\\n    width: 75%;\\n  }\\n\\n  .col-md-10 {\\n    flex: 0 0 auto;\\n    width: 83.33333333%;\\n  }\\n\\n  .col-md-11 {\\n    flex: 0 0 auto;\\n    width: 91.66666667%;\\n  }\\n\\n  .col-md-12 {\\n    flex: 0 0 auto;\\n    width: 100%;\\n  }\\n\\n  .offset-md-0 {\\n    margin-left: 0;\\n  }\\n\\n  .offset-md-1 {\\n    margin-left: 8.33333333%;\\n  }\\n\\n  .offset-md-2 {\\n    margin-left: 16.66666667%;\\n  }\\n\\n  .offset-md-3 {\\n    margin-left: 25%;\\n  }\\n\\n  .offset-md-4 {\\n    margin-left: 33.33333333%;\\n  }\\n\\n  .offset-md-5 {\\n    margin-left: 41.66666667%;\\n  }\\n\\n  .offset-md-6 {\\n    margin-left: 50%;\\n  }\\n\\n  .offset-md-7 {\\n    margin-left: 58.33333333%;\\n  }\\n\\n  .offset-md-8 {\\n    margin-left: 66.66666667%;\\n  }\\n\\n  .offset-md-9 {\\n    margin-left: 75%;\\n  }\\n\\n  .offset-md-10 {\\n    margin-left: 83.33333333%;\\n  }\\n\\n  .offset-md-11 {\\n    margin-left: 91.66666667%;\\n  }\\n\\n  .g-md-0,\\n.gx-md-0 {\\n    --bs-gutter-x: 0;\\n  }\\n\\n  .g-md-0,\\n.gy-md-0 {\\n    --bs-gutter-y: 0;\\n  }\\n\\n  .g-md-1,\\n.gx-md-1 {\\n    --bs-gutter-x: 0.25rem;\\n  }\\n\\n  .g-md-1,\\n.gy-md-1 {\\n    --bs-gutter-y: 0.25rem;\\n  }\\n\\n  .g-md-2,\\n.gx-md-2 {\\n    --bs-gutter-x: 0.5rem;\\n  }\\n\\n  .g-md-2,\\n.gy-md-2 {\\n    --bs-gutter-y: 0.5rem;\\n  }\\n\\n  .g-md-3,\\n.gx-md-3 {\\n    --bs-gutter-x: 1rem;\\n  }\\n\\n  .g-md-3,\\n.gy-md-3 {\\n    --bs-gutter-y: 1rem;\\n  }\\n\\n  .g-md-4,\\n.gx-md-4 {\\n    --bs-gutter-x: 1.5rem;\\n  }\\n\\n  .g-md-4,\\n.gy-md-4 {\\n    --bs-gutter-y: 1.5rem;\\n  }\\n\\n  .g-md-5,\\n.gx-md-5 {\\n    --bs-gutter-x: 3rem;\\n  }\\n\\n  .g-md-5,\\n.gy-md-5 {\\n    --bs-gutter-y: 3rem;\\n  }\\n}\\n@media (min-width: 992px) {\\n  .col-lg {\\n    flex: 1 0 0%;\\n  }\\n\\n  .row-cols-lg-auto > * {\\n    flex: 0 0 auto;\\n    width: auto;\\n  }\\n\\n  .row-cols-lg-1 > * {\\n    flex: 0 0 auto;\\n    width: 100%;\\n  }\\n\\n  .row-cols-lg-2 > * {\\n    flex: 0 0 auto;\\n    width: 50%;\\n  }\\n\\n  .row-cols-lg-3 > * {\\n    flex: 0 0 auto;\\n    width: 33.3333333333%;\\n  }\\n\\n  .row-cols-lg-4 > * {\\n    flex: 0 0 auto;\\n    width: 25%;\\n  }\\n\\n  .row-cols-lg-5 > * {\\n    flex: 0 0 auto;\\n    width: 20%;\\n  }\\n\\n  .row-cols-lg-6 > * {\\n    flex: 0 0 auto;\\n    width: 16.6666666667%;\\n  }\\n\\n  .col-lg-auto {\\n    flex: 0 0 auto;\\n    width: auto;\\n  }\\n\\n  .col-lg-1 {\\n    flex: 0 0 auto;\\n    width: 8.33333333%;\\n  }\\n\\n  .col-lg-2 {\\n    flex: 0 0 auto;\\n    width: 16.66666667%;\\n  }\\n\\n  .col-lg-3 {\\n    flex: 0 0 auto;\\n    width: 25%;\\n  }\\n\\n  .col-lg-4 {\\n    flex: 0 0 auto;\\n    width: 33.33333333%;\\n  }\\n\\n  .col-lg-5 {\\n    flex: 0 0 auto;\\n    width: 41.66666667%;\\n  }\\n\\n  .col-lg-6 {\\n    flex: 0 0 auto;\\n    width: 50%;\\n  }\\n\\n  .col-lg-7 {\\n    flex: 0 0 auto;\\n    width: 58.33333333%;\\n  }\\n\\n  .col-lg-8 {\\n    flex: 0 0 auto;\\n    width: 66.66666667%;\\n  }\\n\\n  .col-lg-9 {\\n    flex: 0 0 auto;\\n    width: 75%;\\n  }\\n\\n  .col-lg-10 {\\n    flex: 0 0 auto;\\n    width: 83.33333333%;\\n  }\\n\\n  .col-lg-11 {\\n    flex: 0 0 auto;\\n    width: 91.66666667%;\\n  }\\n\\n  .col-lg-12 {\\n    flex: 0 0 auto;\\n    width: 100%;\\n  }\\n\\n  .offset-lg-0 {\\n    margin-left: 0;\\n  }\\n\\n  .offset-lg-1 {\\n    margin-left: 8.33333333%;\\n  }\\n\\n  .offset-lg-2 {\\n    margin-left: 16.66666667%;\\n  }\\n\\n  .offset-lg-3 {\\n    margin-left: 25%;\\n  }\\n\\n  .offset-lg-4 {\\n    margin-left: 33.33333333%;\\n  }\\n\\n  .offset-lg-5 {\\n    margin-left: 41.66666667%;\\n  }\\n\\n  .offset-lg-6 {\\n    margin-left: 50%;\\n  }\\n\\n  .offset-lg-7 {\\n    margin-left: 58.33333333%;\\n  }\\n\\n  .offset-lg-8 {\\n    margin-left: 66.66666667%;\\n  }\\n\\n  .offset-lg-9 {\\n    margin-left: 75%;\\n  }\\n\\n  .offset-lg-10 {\\n    margin-left: 83.33333333%;\\n  }\\n\\n  .offset-lg-11 {\\n    margin-left: 91.66666667%;\\n  }\\n\\n  .g-lg-0,\\n.gx-lg-0 {\\n    --bs-gutter-x: 0;\\n  }\\n\\n  .g-lg-0,\\n.gy-lg-0 {\\n    --bs-gutter-y: 0;\\n  }\\n\\n  .g-lg-1,\\n.gx-lg-1 {\\n    --bs-gutter-x: 0.25rem;\\n  }\\n\\n  .g-lg-1,\\n.gy-lg-1 {\\n    --bs-gutter-y: 0.25rem;\\n  }\\n\\n  .g-lg-2,\\n.gx-lg-2 {\\n    --bs-gutter-x: 0.5rem;\\n  }\\n\\n  .g-lg-2,\\n.gy-lg-2 {\\n    --bs-gutter-y: 0.5rem;\\n  }\\n\\n  .g-lg-3,\\n.gx-lg-3 {\\n    --bs-gutter-x: 1rem;\\n  }\\n\\n  .g-lg-3,\\n.gy-lg-3 {\\n    --bs-gutter-y: 1rem;\\n  }\\n\\n  .g-lg-4,\\n.gx-lg-4 {\\n    --bs-gutter-x: 1.5rem;\\n  }\\n\\n  .g-lg-4,\\n.gy-lg-4 {\\n    --bs-gutter-y: 1.5rem;\\n  }\\n\\n  .g-lg-5,\\n.gx-lg-5 {\\n    --bs-gutter-x: 3rem;\\n  }\\n\\n  .g-lg-5,\\n.gy-lg-5 {\\n    --bs-gutter-y: 3rem;\\n  }\\n}\\n@media (min-width: 1200px) {\\n  .col-xl {\\n    flex: 1 0 0%;\\n  }\\n\\n  .row-cols-xl-auto > * {\\n    flex: 0 0 auto;\\n    width: auto;\\n  }\\n\\n  .row-cols-xl-1 > * {\\n    flex: 0 0 auto;\\n    width: 100%;\\n  }\\n\\n  .row-cols-xl-2 > * {\\n    flex: 0 0 auto;\\n    width: 50%;\\n  }\\n\\n  .row-cols-xl-3 > * {\\n    flex: 0 0 auto;\\n    width: 33.3333333333%;\\n  }\\n\\n  .row-cols-xl-4 > * {\\n    flex: 0 0 auto;\\n    width: 25%;\\n  }\\n\\n  .row-cols-xl-5 > * {\\n    flex: 0 0 auto;\\n    width: 20%;\\n  }\\n\\n  .row-cols-xl-6 > * {\\n    flex: 0 0 auto;\\n    width: 16.6666666667%;\\n  }\\n\\n  .col-xl-auto {\\n    flex: 0 0 auto;\\n    width: auto;\\n  }\\n\\n  .col-xl-1 {\\n    flex: 0 0 auto;\\n    width: 8.33333333%;\\n  }\\n\\n  .col-xl-2 {\\n    flex: 0 0 auto;\\n    width: 16.66666667%;\\n  }\\n\\n  .col-xl-3 {\\n    flex: 0 0 auto;\\n    width: 25%;\\n  }\\n\\n  .col-xl-4 {\\n    flex: 0 0 auto;\\n    width: 33.33333333%;\\n  }\\n\\n  .col-xl-5 {\\n    flex: 0 0 auto;\\n    width: 41.66666667%;\\n  }\\n\\n  .col-xl-6 {\\n    flex: 0 0 auto;\\n    width: 50%;\\n  }\\n\\n  .col-xl-7 {\\n    flex: 0 0 auto;\\n    width: 58.33333333%;\\n  }\\n\\n  .col-xl-8 {\\n    flex: 0 0 auto;\\n    width: 66.66666667%;\\n  }\\n\\n  .col-xl-9 {\\n    flex: 0 0 auto;\\n    width: 75%;\\n  }\\n\\n  .col-xl-10 {\\n    flex: 0 0 auto;\\n    width: 83.33333333%;\\n  }\\n\\n  .col-xl-11 {\\n    flex: 0 0 auto;\\n    width: 91.66666667%;\\n  }\\n\\n  .col-xl-12 {\\n    flex: 0 0 auto;\\n    width: 100%;\\n  }\\n\\n  .offset-xl-0 {\\n    margin-left: 0;\\n  }\\n\\n  .offset-xl-1 {\\n    margin-left: 8.33333333%;\\n  }\\n\\n  .offset-xl-2 {\\n    margin-left: 16.66666667%;\\n  }\\n\\n  .offset-xl-3 {\\n    margin-left: 25%;\\n  }\\n\\n  .offset-xl-4 {\\n    margin-left: 33.33333333%;\\n  }\\n\\n  .offset-xl-5 {\\n    margin-left: 41.66666667%;\\n  }\\n\\n  .offset-xl-6 {\\n    margin-left: 50%;\\n  }\\n\\n  .offset-xl-7 {\\n    margin-left: 58.33333333%;\\n  }\\n\\n  .offset-xl-8 {\\n    margin-left: 66.66666667%;\\n  }\\n\\n  .offset-xl-9 {\\n    margin-left: 75%;\\n  }\\n\\n  .offset-xl-10 {\\n    margin-left: 83.33333333%;\\n  }\\n\\n  .offset-xl-11 {\\n    margin-left: 91.66666667%;\\n  }\\n\\n  .g-xl-0,\\n.gx-xl-0 {\\n    --bs-gutter-x: 0;\\n  }\\n\\n  .g-xl-0,\\n.gy-xl-0 {\\n    --bs-gutter-y: 0;\\n  }\\n\\n  .g-xl-1,\\n.gx-xl-1 {\\n    --bs-gutter-x: 0.25rem;\\n  }\\n\\n  .g-xl-1,\\n.gy-xl-1 {\\n    --bs-gutter-y: 0.25rem;\\n  }\\n\\n  .g-xl-2,\\n.gx-xl-2 {\\n    --bs-gutter-x: 0.5rem;\\n  }\\n\\n  .g-xl-2,\\n.gy-xl-2 {\\n    --bs-gutter-y: 0.5rem;\\n  }\\n\\n  .g-xl-3,\\n.gx-xl-3 {\\n    --bs-gutter-x: 1rem;\\n  }\\n\\n  .g-xl-3,\\n.gy-xl-3 {\\n    --bs-gutter-y: 1rem;\\n  }\\n\\n  .g-xl-4,\\n.gx-xl-4 {\\n    --bs-gutter-x: 1.5rem;\\n  }\\n\\n  .g-xl-4,\\n.gy-xl-4 {\\n    --bs-gutter-y: 1.5rem;\\n  }\\n\\n  .g-xl-5,\\n.gx-xl-5 {\\n    --bs-gutter-x: 3rem;\\n  }\\n\\n  .g-xl-5,\\n.gy-xl-5 {\\n    --bs-gutter-y: 3rem;\\n  }\\n}\\n@media (min-width: 1400px) {\\n  .col-xxl {\\n    flex: 1 0 0%;\\n  }\\n\\n  .row-cols-xxl-auto > * {\\n    flex: 0 0 auto;\\n    width: auto;\\n  }\\n\\n  .row-cols-xxl-1 > * {\\n    flex: 0 0 auto;\\n    width: 100%;\\n  }\\n\\n  .row-cols-xxl-2 > * {\\n    flex: 0 0 auto;\\n    width: 50%;\\n  }\\n\\n  .row-cols-xxl-3 > * {\\n    flex: 0 0 auto;\\n    width: 33.3333333333%;\\n  }\\n\\n  .row-cols-xxl-4 > * {\\n    flex: 0 0 auto;\\n    width: 25%;\\n  }\\n\\n  .row-cols-xxl-5 > * {\\n    flex: 0 0 auto;\\n    width: 20%;\\n  }\\n\\n  .row-cols-xxl-6 > * {\\n    flex: 0 0 auto;\\n    width: 16.6666666667%;\\n  }\\n\\n  .col-xxl-auto {\\n    flex: 0 0 auto;\\n    width: auto;\\n  }\\n\\n  .col-xxl-1 {\\n    flex: 0 0 auto;\\n    width: 8.33333333%;\\n  }\\n\\n  .col-xxl-2 {\\n    flex: 0 0 auto;\\n    width: 16.66666667%;\\n  }\\n\\n  .col-xxl-3 {\\n    flex: 0 0 auto;\\n    width: 25%;\\n  }\\n\\n  .col-xxl-4 {\\n    flex: 0 0 auto;\\n    width: 33.33333333%;\\n  }\\n\\n  .col-xxl-5 {\\n    flex: 0 0 auto;\\n    width: 41.66666667%;\\n  }\\n\\n  .col-xxl-6 {\\n    flex: 0 0 auto;\\n    width: 50%;\\n  }\\n\\n  .col-xxl-7 {\\n    flex: 0 0 auto;\\n    width: 58.33333333%;\\n  }\\n\\n  .col-xxl-8 {\\n    flex: 0 0 auto;\\n    width: 66.66666667%;\\n  }\\n\\n  .col-xxl-9 {\\n    flex: 0 0 auto;\\n    width: 75%;\\n  }\\n\\n  .col-xxl-10 {\\n    flex: 0 0 auto;\\n    width: 83.33333333%;\\n  }\\n\\n  .col-xxl-11 {\\n    flex: 0 0 auto;\\n    width: 91.66666667%;\\n  }\\n\\n  .col-xxl-12 {\\n    flex: 0 0 auto;\\n    width: 100%;\\n  }\\n\\n  .offset-xxl-0 {\\n    margin-left: 0;\\n  }\\n\\n  .offset-xxl-1 {\\n    margin-left: 8.33333333%;\\n  }\\n\\n  .offset-xxl-2 {\\n    margin-left: 16.66666667%;\\n  }\\n\\n  .offset-xxl-3 {\\n    margin-left: 25%;\\n  }\\n\\n  .offset-xxl-4 {\\n    margin-left: 33.33333333%;\\n  }\\n\\n  .offset-xxl-5 {\\n    margin-left: 41.66666667%;\\n  }\\n\\n  .offset-xxl-6 {\\n    margin-left: 50%;\\n  }\\n\\n  .offset-xxl-7 {\\n    margin-left: 58.33333333%;\\n  }\\n\\n  .offset-xxl-8 {\\n    margin-left: 66.66666667%;\\n  }\\n\\n  .offset-xxl-9 {\\n    margin-left: 75%;\\n  }\\n\\n  .offset-xxl-10 {\\n    margin-left: 83.33333333%;\\n  }\\n\\n  .offset-xxl-11 {\\n    margin-left: 91.66666667%;\\n  }\\n\\n  .g-xxl-0,\\n.gx-xxl-0 {\\n    --bs-gutter-x: 0;\\n  }\\n\\n  .g-xxl-0,\\n.gy-xxl-0 {\\n    --bs-gutter-y: 0;\\n  }\\n\\n  .g-xxl-1,\\n.gx-xxl-1 {\\n    --bs-gutter-x: 0.25rem;\\n  }\\n\\n  .g-xxl-1,\\n.gy-xxl-1 {\\n    --bs-gutter-y: 0.25rem;\\n  }\\n\\n  .g-xxl-2,\\n.gx-xxl-2 {\\n    --bs-gutter-x: 0.5rem;\\n  }\\n\\n  .g-xxl-2,\\n.gy-xxl-2 {\\n    --bs-gutter-y: 0.5rem;\\n  }\\n\\n  .g-xxl-3,\\n.gx-xxl-3 {\\n    --bs-gutter-x: 1rem;\\n  }\\n\\n  .g-xxl-3,\\n.gy-xxl-3 {\\n    --bs-gutter-y: 1rem;\\n  }\\n\\n  .g-xxl-4,\\n.gx-xxl-4 {\\n    --bs-gutter-x: 1.5rem;\\n  }\\n\\n  .g-xxl-4,\\n.gy-xxl-4 {\\n    --bs-gutter-y: 1.5rem;\\n  }\\n\\n  .g-xxl-5,\\n.gx-xxl-5 {\\n    --bs-gutter-x: 3rem;\\n  }\\n\\n  .g-xxl-5,\\n.gy-xxl-5 {\\n    --bs-gutter-y: 3rem;\\n  }\\n}\\n.table {\\n  --bs-table-bg: transparent;\\n  --bs-table-accent-bg: transparent;\\n  --bs-table-striped-color: #212529;\\n  --bs-table-striped-bg: rgba(0, 0, 0, 0.05);\\n  --bs-table-active-color: #212529;\\n  --bs-table-active-bg: rgba(0, 0, 0, 0.1);\\n  --bs-table-hover-color: #212529;\\n  --bs-table-hover-bg: rgba(0, 0, 0, 0.075);\\n  width: 100%;\\n  margin-bottom: 1rem;\\n  color: #212529;\\n  vertical-align: top;\\n  border-color: #dee2e6;\\n}\\n.table > :not(caption) > * > * {\\n  padding: 0.5rem 0.5rem;\\n  background-color: var(--bs-table-bg);\\n  border-bottom-width: 1px;\\n  box-shadow: inset 0 0 0 9999px var(--bs-table-accent-bg);\\n}\\n.table > tbody {\\n  vertical-align: inherit;\\n}\\n.table > thead {\\n  vertical-align: bottom;\\n}\\n.table > :not(:last-child) > :last-child > * {\\n  border-bottom-color: currentColor;\\n}\\n\\n.caption-top {\\n  caption-side: top;\\n}\\n\\n.table-sm > :not(caption) > * > * {\\n  padding: 0.25rem 0.25rem;\\n}\\n\\n.table-bordered > :not(caption) > * {\\n  border-width: 1px 0;\\n}\\n.table-bordered > :not(caption) > * > * {\\n  border-width: 0 1px;\\n}\\n\\n.table-borderless > :not(caption) > * > * {\\n  border-bottom-width: 0;\\n}\\n\\n.table-striped > tbody > tr:nth-of-type(odd) {\\n  --bs-table-accent-bg: var(--bs-table-striped-bg);\\n  color: var(--bs-table-striped-color);\\n}\\n\\n.table-active {\\n  --bs-table-accent-bg: var(--bs-table-active-bg);\\n  color: var(--bs-table-active-color);\\n}\\n\\n.table-hover > tbody > tr:hover {\\n  --bs-table-accent-bg: var(--bs-table-hover-bg);\\n  color: var(--bs-table-hover-color);\\n}\\n\\n.table-primary {\\n  --bs-table-bg: #cfe2ff;\\n  --bs-table-striped-bg: #c5d7f2;\\n  --bs-table-striped-color: #000;\\n  --bs-table-active-bg: #bacbe6;\\n  --bs-table-active-color: #000;\\n  --bs-table-hover-bg: #bfd1ec;\\n  --bs-table-hover-color: #000;\\n  color: #000;\\n  border-color: #bacbe6;\\n}\\n\\n.table-secondary {\\n  --bs-table-bg: #e2e3e5;\\n  --bs-table-striped-bg: #d7d8da;\\n  --bs-table-striped-color: #000;\\n  --bs-table-active-bg: #cbccce;\\n  --bs-table-active-color: #000;\\n  --bs-table-hover-bg: #d1d2d4;\\n  --bs-table-hover-color: #000;\\n  color: #000;\\n  border-color: #cbccce;\\n}\\n\\n.table-success {\\n  --bs-table-bg: #d1e7dd;\\n  --bs-table-striped-bg: #c7dbd2;\\n  --bs-table-striped-color: #000;\\n  --bs-table-active-bg: #bcd0c7;\\n  --bs-table-active-color: #000;\\n  --bs-table-hover-bg: #c1d6cc;\\n  --bs-table-hover-color: #000;\\n  color: #000;\\n  border-color: #bcd0c7;\\n}\\n\\n.table-info {\\n  --bs-table-bg: #cff4fc;\\n  --bs-table-striped-bg: #c5e8ef;\\n  --bs-table-striped-color: #000;\\n  --bs-table-active-bg: #badce3;\\n  --bs-table-active-color: #000;\\n  --bs-table-hover-bg: #bfe2e9;\\n  --bs-table-hover-color: #000;\\n  color: #000;\\n  border-color: #badce3;\\n}\\n\\n.table-warning {\\n  --bs-table-bg: #fff3cd;\\n  --bs-table-striped-bg: #f2e7c3;\\n  --bs-table-striped-color: #000;\\n  --bs-table-active-bg: #e6dbb9;\\n  --bs-table-active-color: #000;\\n  --bs-table-hover-bg: #ece1be;\\n  --bs-table-hover-color: #000;\\n  color: #000;\\n  border-color: #e6dbb9;\\n}\\n\\n.table-danger {\\n  --bs-table-bg: #f8d7da;\\n  --bs-table-striped-bg: #eccccf;\\n  --bs-table-striped-color: #000;\\n  --bs-table-active-bg: #dfc2c4;\\n  --bs-table-active-color: #000;\\n  --bs-table-hover-bg: #e5c7ca;\\n  --bs-table-hover-color: #000;\\n  color: #000;\\n  border-color: #dfc2c4;\\n}\\n\\n.table-light {\\n  --bs-table-bg: #f8f9fa;\\n  --bs-table-striped-bg: #ecedee;\\n  --bs-table-striped-color: #000;\\n  --bs-table-active-bg: #dfe0e1;\\n  --bs-table-active-color: #000;\\n  --bs-table-hover-bg: #e5e6e7;\\n  --bs-table-hover-color: #000;\\n  color: #000;\\n  border-color: #dfe0e1;\\n}\\n\\n.table-dark {\\n  --bs-table-bg: #212529;\\n  --bs-table-striped-bg: #2c3034;\\n  --bs-table-striped-color: #fff;\\n  --bs-table-active-bg: #373b3e;\\n  --bs-table-active-color: #fff;\\n  --bs-table-hover-bg: #323539;\\n  --bs-table-hover-color: #fff;\\n  color: #fff;\\n  border-color: #373b3e;\\n}\\n\\n.table-responsive {\\n  overflow-x: auto;\\n  -webkit-overflow-scrolling: touch;\\n}\\n\\n@media (max-width: 575.98px) {\\n  .table-responsive-sm {\\n    overflow-x: auto;\\n    -webkit-overflow-scrolling: touch;\\n  }\\n}\\n@media (max-width: 767.98px) {\\n  .table-responsive-md {\\n    overflow-x: auto;\\n    -webkit-overflow-scrolling: touch;\\n  }\\n}\\n@media (max-width: 991.98px) {\\n  .table-responsive-lg {\\n    overflow-x: auto;\\n    -webkit-overflow-scrolling: touch;\\n  }\\n}\\n@media (max-width: 1199.98px) {\\n  .table-responsive-xl {\\n    overflow-x: auto;\\n    -webkit-overflow-scrolling: touch;\\n  }\\n}\\n@media (max-width: 1399.98px) {\\n  .table-responsive-xxl {\\n    overflow-x: auto;\\n    -webkit-overflow-scrolling: touch;\\n  }\\n}\\n.form-label {\\n  margin-bottom: 0.5rem;\\n}\\n\\n.col-form-label {\\n  padding-top: calc(0.375rem + 1px);\\n  padding-bottom: calc(0.375rem + 1px);\\n  margin-bottom: 0;\\n  font-size: inherit;\\n  line-height: 1.5;\\n}\\n\\n.col-form-label-lg {\\n  padding-top: calc(0.5rem + 1px);\\n  padding-bottom: calc(0.5rem + 1px);\\n  font-size: 1.25rem;\\n}\\n\\n.col-form-label-sm {\\n  padding-top: calc(0.25rem + 1px);\\n  padding-bottom: calc(0.25rem + 1px);\\n  font-size: 0.875rem;\\n}\\n\\n.form-text {\\n  margin-top: 0.25rem;\\n  font-size: 0.875em;\\n  color: #6c757d;\\n}\\n\\n.form-control {\\n  display: block;\\n  width: 100%;\\n  padding: 0.375rem 0.75rem;\\n  font-size: 1rem;\\n  font-weight: 400;\\n  line-height: 1.5;\\n  color: #212529;\\n  background-color: #fff;\\n  background-clip: padding-box;\\n  border: 1px solid #ced4da;\\n  -webkit-appearance: none;\\n  -moz-appearance: none;\\n  appearance: none;\\n  border-radius: 0.25rem;\\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\\n}\\n@media (prefers-reduced-motion: reduce) {\\n  .form-control {\\n    transition: none;\\n  }\\n}\\n.form-control[type=file] {\\n  overflow: hidden;\\n}\\n.form-control[type=file]:not(:disabled):not([readonly]) {\\n  cursor: pointer;\\n}\\n.form-control:focus {\\n  color: #212529;\\n  background-color: #fff;\\n  border-color: #86b7fe;\\n  outline: 0;\\n  box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);\\n}\\n.form-control::-webkit-date-and-time-value {\\n  height: 1.5em;\\n}\\n.form-control::-moz-placeholder {\\n  color: #6c757d;\\n  opacity: 1;\\n}\\n.form-control::placeholder {\\n  color: #6c757d;\\n  opacity: 1;\\n}\\n.form-control:disabled, .form-control[readonly] {\\n  background-color: #e9ecef;\\n  opacity: 1;\\n}\\n.form-control::file-selector-button {\\n  padding: 0.375rem 0.75rem;\\n  margin: -0.375rem -0.75rem;\\n  -webkit-margin-end: 0.75rem;\\n  margin-inline-end: 0.75rem;\\n  color: #212529;\\n  background-color: #e9ecef;\\n  pointer-events: none;\\n  border-color: inherit;\\n  border-style: solid;\\n  border-width: 0;\\n  border-inline-end-width: 1px;\\n  border-radius: 0;\\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\\n}\\n@media (prefers-reduced-motion: reduce) {\\n  .form-control::file-selector-button {\\n    transition: none;\\n  }\\n}\\n.form-control:hover:not(:disabled):not([readonly])::file-selector-button {\\n  background-color: #dde0e3;\\n}\\n.form-control::-webkit-file-upload-button {\\n  padding: 0.375rem 0.75rem;\\n  margin: -0.375rem -0.75rem;\\n  -webkit-margin-end: 0.75rem;\\n  margin-inline-end: 0.75rem;\\n  color: #212529;\\n  background-color: #e9ecef;\\n  pointer-events: none;\\n  border-color: inherit;\\n  border-style: solid;\\n  border-width: 0;\\n  border-inline-end-width: 1px;\\n  border-radius: 0;\\n  -webkit-transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\\n}\\n@media (prefers-reduced-motion: reduce) {\\n  .form-control::-webkit-file-upload-button {\\n    -webkit-transition: none;\\n    transition: none;\\n  }\\n}\\n.form-control:hover:not(:disabled):not([readonly])::-webkit-file-upload-button {\\n  background-color: #dde0e3;\\n}\\n\\n.form-control-plaintext {\\n  display: block;\\n  width: 100%;\\n  padding: 0.375rem 0;\\n  margin-bottom: 0;\\n  line-height: 1.5;\\n  color: #212529;\\n  background-color: transparent;\\n  border: solid transparent;\\n  border-width: 1px 0;\\n}\\n.form-control-plaintext.form-control-sm, .form-control-plaintext.form-control-lg {\\n  padding-right: 0;\\n  padding-left: 0;\\n}\\n\\n.form-control-sm {\\n  min-height: calc(1.5em + 0.5rem + 2px);\\n  padding: 0.25rem 0.5rem;\\n  font-size: 0.875rem;\\n  border-radius: 0.2rem;\\n}\\n.form-control-sm::file-selector-button {\\n  padding: 0.25rem 0.5rem;\\n  margin: -0.25rem -0.5rem;\\n  -webkit-margin-end: 0.5rem;\\n  margin-inline-end: 0.5rem;\\n}\\n.form-control-sm::-webkit-file-upload-button {\\n  padding: 0.25rem 0.5rem;\\n  margin: -0.25rem -0.5rem;\\n  -webkit-margin-end: 0.5rem;\\n  margin-inline-end: 0.5rem;\\n}\\n\\n.form-control-lg {\\n  min-height: calc(1.5em + 1rem + 2px);\\n  padding: 0.5rem 1rem;\\n  font-size: 1.25rem;\\n  border-radius: 0.3rem;\\n}\\n.form-control-lg::file-selector-button {\\n  padding: 0.5rem 1rem;\\n  margin: -0.5rem -1rem;\\n  -webkit-margin-end: 1rem;\\n  margin-inline-end: 1rem;\\n}\\n.form-control-lg::-webkit-file-upload-button {\\n  padding: 0.5rem 1rem;\\n  margin: -0.5rem -1rem;\\n  -webkit-margin-end: 1rem;\\n  margin-inline-end: 1rem;\\n}\\n\\ntextarea.form-control {\\n  min-height: calc(1.5em + 0.75rem + 2px);\\n}\\ntextarea.form-control-sm {\\n  min-height: calc(1.5em + 0.5rem + 2px);\\n}\\ntextarea.form-control-lg {\\n  min-height: calc(1.5em + 1rem + 2px);\\n}\\n\\n.form-control-color {\\n  width: 3rem;\\n  height: auto;\\n  padding: 0.375rem;\\n}\\n.form-control-color:not(:disabled):not([readonly]) {\\n  cursor: pointer;\\n}\\n.form-control-color::-moz-color-swatch {\\n  height: 1.5em;\\n  border-radius: 0.25rem;\\n}\\n.form-control-color::-webkit-color-swatch {\\n  height: 1.5em;\\n  border-radius: 0.25rem;\\n}\\n\\n.form-select {\\n  display: block;\\n  width: 100%;\\n  padding: 0.375rem 2.25rem 0.375rem 0.75rem;\\n  -moz-padding-start: calc(0.75rem - 3px);\\n  font-size: 1rem;\\n  font-weight: 400;\\n  line-height: 1.5;\\n  color: #212529;\\n  background-color: #fff;\\n  background-image: url(\\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 16 16\'%3e%3cpath fill=\'none\' stroke=\'%23343a40\' stroke-linecap=\'round\' stroke-linejoin=\'round\' stroke-width=\'2\' d=\'M2 5l6 6 6-6\'/%3e%3c/svg%3e\\");\\n  background-repeat: no-repeat;\\n  background-position: right 0.75rem center;\\n  background-size: 16px 12px;\\n  border: 1px solid #ced4da;\\n  border-radius: 0.25rem;\\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\\n  -webkit-appearance: none;\\n  -moz-appearance: none;\\n  appearance: none;\\n}\\n@media (prefers-reduced-motion: reduce) {\\n  .form-select {\\n    transition: none;\\n  }\\n}\\n.form-select:focus {\\n  border-color: #86b7fe;\\n  outline: 0;\\n  box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);\\n}\\n.form-select[multiple], .form-select[size]:not([size=\\"1\\"]) {\\n  padding-right: 0.75rem;\\n  background-image: none;\\n}\\n.form-select:disabled {\\n  background-color: #e9ecef;\\n}\\n.form-select:-moz-focusring {\\n  color: transparent;\\n  text-shadow: 0 0 0 #212529;\\n}\\n\\n.form-select-sm {\\n  padding-top: 0.25rem;\\n  padding-bottom: 0.25rem;\\n  padding-left: 0.5rem;\\n  font-size: 0.875rem;\\n}\\n\\n.form-select-lg {\\n  padding-top: 0.5rem;\\n  padding-bottom: 0.5rem;\\n  padding-left: 1rem;\\n  font-size: 1.25rem;\\n}\\n\\n.form-check {\\n  display: block;\\n  min-height: 1.5rem;\\n  padding-left: 1.5em;\\n  margin-bottom: 0.125rem;\\n}\\n.form-check .form-check-input {\\n  float: left;\\n  margin-left: -1.5em;\\n}\\n\\n.form-check-input {\\n  width: 1em;\\n  height: 1em;\\n  margin-top: 0.25em;\\n  vertical-align: top;\\n  background-color: #fff;\\n  background-repeat: no-repeat;\\n  background-position: center;\\n  background-size: contain;\\n  border: 1px solid rgba(0, 0, 0, 0.25);\\n  -webkit-appearance: none;\\n  -moz-appearance: none;\\n  appearance: none;\\n  -webkit-print-color-adjust: exact;\\n  color-adjust: exact;\\n}\\n.form-check-input[type=checkbox] {\\n  border-radius: 0.25em;\\n}\\n.form-check-input[type=radio] {\\n  border-radius: 50%;\\n}\\n.form-check-input:active {\\n  filter: brightness(90%);\\n}\\n.form-check-input:focus {\\n  border-color: #86b7fe;\\n  outline: 0;\\n  box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);\\n}\\n.form-check-input:checked {\\n  background-color: #0d6efd;\\n  border-color: #0d6efd;\\n}\\n.form-check-input:checked[type=checkbox] {\\n  background-image: url(\\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 20 20\'%3e%3cpath fill=\'none\' stroke=\'%23fff\' stroke-linecap=\'round\' stroke-linejoin=\'round\' stroke-width=\'3\' d=\'M6 10l3 3l6-6\'/%3e%3c/svg%3e\\");\\n}\\n.form-check-input:checked[type=radio] {\\n  background-image: url(\\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'-4 -4 8 8\'%3e%3ccircle r=\'2\' fill=\'%23fff\'/%3e%3c/svg%3e\\");\\n}\\n.form-check-input[type=checkbox]:indeterminate {\\n  background-color: #0d6efd;\\n  border-color: #0d6efd;\\n  background-image: url(\\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 20 20\'%3e%3cpath fill=\'none\' stroke=\'%23fff\' stroke-linecap=\'round\' stroke-linejoin=\'round\' stroke-width=\'3\' d=\'M6 10h8\'/%3e%3c/svg%3e\\");\\n}\\n.form-check-input:disabled {\\n  pointer-events: none;\\n  filter: none;\\n  opacity: 0.5;\\n}\\n.form-check-input[disabled] ~ .form-check-label, .form-check-input:disabled ~ .form-check-label {\\n  opacity: 0.5;\\n}\\n\\n.form-switch {\\n  padding-left: 2.5em;\\n}\\n.form-switch .form-check-input {\\n  width: 2em;\\n  margin-left: -2.5em;\\n  background-image: url(\\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'-4 -4 8 8\'%3e%3ccircle r=\'3\' fill=\'rgba%280, 0, 0, 0.25%29\'/%3e%3c/svg%3e\\");\\n  background-position: left center;\\n  border-radius: 2em;\\n  transition: background-position 0.15s ease-in-out;\\n}\\n@media (prefers-reduced-motion: reduce) {\\n  .form-switch .form-check-input {\\n    transition: none;\\n  }\\n}\\n.form-switch .form-check-input:focus {\\n  background-image: url(\\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'-4 -4 8 8\'%3e%3ccircle r=\'3\' fill=\'%2386b7fe\'/%3e%3c/svg%3e\\");\\n}\\n.form-switch .form-check-input:checked {\\n  background-position: right center;\\n  background-image: url(\\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'-4 -4 8 8\'%3e%3ccircle r=\'3\' fill=\'%23fff\'/%3e%3c/svg%3e\\");\\n}\\n\\n.form-check-inline {\\n  display: inline-block;\\n  margin-right: 1rem;\\n}\\n\\n.btn-check {\\n  position: absolute;\\n  clip: rect(0, 0, 0, 0);\\n  pointer-events: none;\\n}\\n.btn-check[disabled] + .btn, .btn-check:disabled + .btn {\\n  pointer-events: none;\\n  filter: none;\\n  opacity: 0.65;\\n}\\n\\n.form-range {\\n  width: 100%;\\n  height: 1.5rem;\\n  padding: 0;\\n  background-color: transparent;\\n  -webkit-appearance: none;\\n  -moz-appearance: none;\\n  appearance: none;\\n}\\n.form-range:focus {\\n  outline: 0;\\n}\\n.form-range:focus::-webkit-slider-thumb {\\n  box-shadow: 0 0 0 1px #fff, 0 0 0 0.25rem rgba(13, 110, 253, 0.25);\\n}\\n.form-range:focus::-moz-range-thumb {\\n  box-shadow: 0 0 0 1px #fff, 0 0 0 0.25rem rgba(13, 110, 253, 0.25);\\n}\\n.form-range::-moz-focus-outer {\\n  border: 0;\\n}\\n.form-range::-webkit-slider-thumb {\\n  width: 1rem;\\n  height: 1rem;\\n  margin-top: -0.25rem;\\n  background-color: #0d6efd;\\n  border: 0;\\n  border-radius: 1rem;\\n  -webkit-transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\\n  transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\\n  -webkit-appearance: none;\\n  appearance: none;\\n}\\n@media (prefers-reduced-motion: reduce) {\\n  .form-range::-webkit-slider-thumb {\\n    -webkit-transition: none;\\n    transition: none;\\n  }\\n}\\n.form-range::-webkit-slider-thumb:active {\\n  background-color: #b6d4fe;\\n}\\n.form-range::-webkit-slider-runnable-track {\\n  width: 100%;\\n  height: 0.5rem;\\n  color: transparent;\\n  cursor: pointer;\\n  background-color: #dee2e6;\\n  border-color: transparent;\\n  border-radius: 1rem;\\n}\\n.form-range::-moz-range-thumb {\\n  width: 1rem;\\n  height: 1rem;\\n  background-color: #0d6efd;\\n  border: 0;\\n  border-radius: 1rem;\\n  -moz-transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\\n  transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\\n  -moz-appearance: none;\\n  appearance: none;\\n}\\n@media (prefers-reduced-motion: reduce) {\\n  .form-range::-moz-range-thumb {\\n    -moz-transition: none;\\n    transition: none;\\n  }\\n}\\n.form-range::-moz-range-thumb:active {\\n  background-color: #b6d4fe;\\n}\\n.form-range::-moz-range-track {\\n  width: 100%;\\n  height: 0.5rem;\\n  color: transparent;\\n  cursor: pointer;\\n  background-color: #dee2e6;\\n  border-color: transparent;\\n  border-radius: 1rem;\\n}\\n.form-range:disabled {\\n  pointer-events: none;\\n}\\n.form-range:disabled::-webkit-slider-thumb {\\n  background-color: #adb5bd;\\n}\\n.form-range:disabled::-moz-range-thumb {\\n  background-color: #adb5bd;\\n}\\n\\n.form-floating {\\n  position: relative;\\n}\\n.form-floating > .form-control,\\n.form-floating > .form-select {\\n  height: calc(3.5rem + 2px);\\n  line-height: 1.25;\\n}\\n.form-floating > label {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  height: 100%;\\n  padding: 1rem 0.75rem;\\n  pointer-events: none;\\n  border: 1px solid transparent;\\n  transform-origin: 0 0;\\n  transition: opacity 0.1s ease-in-out, transform 0.1s ease-in-out;\\n}\\n@media (prefers-reduced-motion: reduce) {\\n  .form-floating > label {\\n    transition: none;\\n  }\\n}\\n.form-floating > .form-control {\\n  padding: 1rem 0.75rem;\\n}\\n.form-floating > .form-control::-moz-placeholder {\\n  color: transparent;\\n}\\n.form-floating > .form-control::placeholder {\\n  color: transparent;\\n}\\n.form-floating > .form-control:not(:-moz-placeholder-shown) {\\n  padding-top: 1.625rem;\\n  padding-bottom: 0.625rem;\\n}\\n.form-floating > .form-control:focus, .form-floating > .form-control:not(:placeholder-shown) {\\n  padding-top: 1.625rem;\\n  padding-bottom: 0.625rem;\\n}\\n.form-floating > .form-control:-webkit-autofill {\\n  padding-top: 1.625rem;\\n  padding-bottom: 0.625rem;\\n}\\n.form-floating > .form-select {\\n  padding-top: 1.625rem;\\n  padding-bottom: 0.625rem;\\n}\\n.form-floating > .form-control:not(:-moz-placeholder-shown) ~ label {\\n  opacity: 0.65;\\n  transform: scale(0.85) translateY(-0.5rem) translateX(0.15rem);\\n}\\n.form-floating > .form-control:focus ~ label,\\n.form-floating > .form-control:not(:placeholder-shown) ~ label,\\n.form-floating > .form-select ~ label {\\n  opacity: 0.65;\\n  transform: scale(0.85) translateY(-0.5rem) translateX(0.15rem);\\n}\\n.form-floating > .form-control:-webkit-autofill ~ label {\\n  opacity: 0.65;\\n  transform: scale(0.85) translateY(-0.5rem) translateX(0.15rem);\\n}\\n\\n.input-group {\\n  position: relative;\\n  display: flex;\\n  flex-wrap: wrap;\\n  align-items: stretch;\\n  width: 100%;\\n}\\n.input-group > .form-control,\\n.input-group > .form-select {\\n  position: relative;\\n  flex: 1 1 auto;\\n  width: 1%;\\n  min-width: 0;\\n}\\n.input-group > .form-control:focus,\\n.input-group > .form-select:focus {\\n  z-index: 3;\\n}\\n.input-group .btn {\\n  position: relative;\\n  z-index: 2;\\n}\\n.input-group .btn:focus {\\n  z-index: 3;\\n}\\n\\n.input-group-text {\\n  display: flex;\\n  align-items: center;\\n  padding: 0.375rem 0.75rem;\\n  font-size: 1rem;\\n  font-weight: 400;\\n  line-height: 1.5;\\n  color: #212529;\\n  text-align: center;\\n  white-space: nowrap;\\n  background-color: #e9ecef;\\n  border: 1px solid #ced4da;\\n  border-radius: 0.25rem;\\n}\\n\\n.input-group-lg > .form-control,\\n.input-group-lg > .form-select,\\n.input-group-lg > .input-group-text,\\n.input-group-lg > .btn {\\n  padding: 0.5rem 1rem;\\n  font-size: 1.25rem;\\n  border-radius: 0.3rem;\\n}\\n\\n.input-group-sm > .form-control,\\n.input-group-sm > .form-select,\\n.input-group-sm > .input-group-text,\\n.input-group-sm > .btn {\\n  padding: 0.25rem 0.5rem;\\n  font-size: 0.875rem;\\n  border-radius: 0.2rem;\\n}\\n\\n.input-group-lg > .form-select,\\n.input-group-sm > .form-select {\\n  padding-right: 3rem;\\n}\\n\\n.input-group:not(.has-validation) > :not(:last-child):not(.dropdown-toggle):not(.dropdown-menu),\\n.input-group:not(.has-validation) > .dropdown-toggle:nth-last-child(n+3) {\\n  border-top-right-radius: 0;\\n  border-bottom-right-radius: 0;\\n}\\n.input-group.has-validation > :nth-last-child(n+3):not(.dropdown-toggle):not(.dropdown-menu),\\n.input-group.has-validation > .dropdown-toggle:nth-last-child(n+4) {\\n  border-top-right-radius: 0;\\n  border-bottom-right-radius: 0;\\n}\\n.input-group > :not(:first-child):not(.dropdown-menu):not(.valid-tooltip):not(.valid-feedback):not(.invalid-tooltip):not(.invalid-feedback) {\\n  margin-left: -1px;\\n  border-top-left-radius: 0;\\n  border-bottom-left-radius: 0;\\n}\\n\\n.valid-feedback {\\n  display: none;\\n  width: 100%;\\n  margin-top: 0.25rem;\\n  font-size: 0.875em;\\n  color: #198754;\\n}\\n\\n.valid-tooltip {\\n  position: absolute;\\n  top: 100%;\\n  z-index: 5;\\n  display: none;\\n  max-width: 100%;\\n  padding: 0.25rem 0.5rem;\\n  margin-top: 0.1rem;\\n  font-size: 0.875rem;\\n  color: #fff;\\n  background-color: rgba(25, 135, 84, 0.9);\\n  border-radius: 0.25rem;\\n}\\n\\n.was-validated :valid ~ .valid-feedback,\\n.was-validated :valid ~ .valid-tooltip,\\n.is-valid ~ .valid-feedback,\\n.is-valid ~ .valid-tooltip {\\n  display: block;\\n}\\n\\n.was-validated .form-control:valid, .form-control.is-valid {\\n  border-color: #198754;\\n  padding-right: calc(1.5em + 0.75rem);\\n  background-image: url(\\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 8 8\'%3e%3cpath fill=\'%23198754\' d=\'M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z\'/%3e%3c/svg%3e\\");\\n  background-repeat: no-repeat;\\n  background-position: right calc(0.375em + 0.1875rem) center;\\n  background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);\\n}\\n.was-validated .form-control:valid:focus, .form-control.is-valid:focus {\\n  border-color: #198754;\\n  box-shadow: 0 0 0 0.25rem rgba(25, 135, 84, 0.25);\\n}\\n\\n.was-validated textarea.form-control:valid, textarea.form-control.is-valid {\\n  padding-right: calc(1.5em + 0.75rem);\\n  background-position: top calc(0.375em + 0.1875rem) right calc(0.375em + 0.1875rem);\\n}\\n\\n.was-validated .form-select:valid, .form-select.is-valid {\\n  border-color: #198754;\\n}\\n.was-validated .form-select:valid:not([multiple]):not([size]), .was-validated .form-select:valid:not([multiple])[size=\\"1\\"], .form-select.is-valid:not([multiple]):not([size]), .form-select.is-valid:not([multiple])[size=\\"1\\"] {\\n  padding-right: 4.125rem;\\n  background-image: url(\\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 16 16\'%3e%3cpath fill=\'none\' stroke=\'%23343a40\' stroke-linecap=\'round\' stroke-linejoin=\'round\' stroke-width=\'2\' d=\'M2 5l6 6 6-6\'/%3e%3c/svg%3e\\"), url(\\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 8 8\'%3e%3cpath fill=\'%23198754\' d=\'M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z\'/%3e%3c/svg%3e\\");\\n  background-position: right 0.75rem center, center right 2.25rem;\\n  background-size: 16px 12px, calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);\\n}\\n.was-validated .form-select:valid:focus, .form-select.is-valid:focus {\\n  border-color: #198754;\\n  box-shadow: 0 0 0 0.25rem rgba(25, 135, 84, 0.25);\\n}\\n\\n.was-validated .form-check-input:valid, .form-check-input.is-valid {\\n  border-color: #198754;\\n}\\n.was-validated .form-check-input:valid:checked, .form-check-input.is-valid:checked {\\n  background-color: #198754;\\n}\\n.was-validated .form-check-input:valid:focus, .form-check-input.is-valid:focus {\\n  box-shadow: 0 0 0 0.25rem rgba(25, 135, 84, 0.25);\\n}\\n.was-validated .form-check-input:valid ~ .form-check-label, .form-check-input.is-valid ~ .form-check-label {\\n  color: #198754;\\n}\\n\\n.form-check-inline .form-check-input ~ .valid-feedback {\\n  margin-left: 0.5em;\\n}\\n\\n.was-validated .input-group .form-control:valid, .input-group .form-control.is-valid,\\n.was-validated .input-group .form-select:valid,\\n.input-group .form-select.is-valid {\\n  z-index: 1;\\n}\\n.was-validated .input-group .form-control:valid:focus, .input-group .form-control.is-valid:focus,\\n.was-validated .input-group .form-select:valid:focus,\\n.input-group .form-select.is-valid:focus {\\n  z-index: 3;\\n}\\n\\n.invalid-feedback {\\n  display: none;\\n  width: 100%;\\n  margin-top: 0.25rem;\\n  font-size: 0.875em;\\n  color: #dc3545;\\n}\\n\\n.invalid-tooltip {\\n  position: absolute;\\n  top: 100%;\\n  z-index: 5;\\n  display: none;\\n  max-width: 100%;\\n  padding: 0.25rem 0.5rem;\\n  margin-top: 0.1rem;\\n  font-size: 0.875rem;\\n  color: #fff;\\n  background-color: rgba(220, 53, 69, 0.9);\\n  border-radius: 0.25rem;\\n}\\n\\n.was-validated :invalid ~ .invalid-feedback,\\n.was-validated :invalid ~ .invalid-tooltip,\\n.is-invalid ~ .invalid-feedback,\\n.is-invalid ~ .invalid-tooltip {\\n  display: block;\\n}\\n\\n.was-validated .form-control:invalid, .form-control.is-invalid {\\n  border-color: #dc3545;\\n  padding-right: calc(1.5em + 0.75rem);\\n  background-image: url(\\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 12 12\' width=\'12\' height=\'12\' fill=\'none\' stroke=\'%23dc3545\'%3e%3ccircle cx=\'6\' cy=\'6\' r=\'4.5\'/%3e%3cpath stroke-linejoin=\'round\' d=\'M5.8 3.6h.4L6 6.5z\'/%3e%3ccircle cx=\'6\' cy=\'8.2\' r=\'.6\' fill=\'%23dc3545\' stroke=\'none\'/%3e%3c/svg%3e\\");\\n  background-repeat: no-repeat;\\n  background-position: right calc(0.375em + 0.1875rem) center;\\n  background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);\\n}\\n.was-validated .form-control:invalid:focus, .form-control.is-invalid:focus {\\n  border-color: #dc3545;\\n  box-shadow: 0 0 0 0.25rem rgba(220, 53, 69, 0.25);\\n}\\n\\n.was-validated textarea.form-control:invalid, textarea.form-control.is-invalid {\\n  padding-right: calc(1.5em + 0.75rem);\\n  background-position: top calc(0.375em + 0.1875rem) right calc(0.375em + 0.1875rem);\\n}\\n\\n.was-validated .form-select:invalid, .form-select.is-invalid {\\n  border-color: #dc3545;\\n}\\n.was-validated .form-select:invalid:not([multiple]):not([size]), .was-validated .form-select:invalid:not([multiple])[size=\\"1\\"], .form-select.is-invalid:not([multiple]):not([size]), .form-select.is-invalid:not([multiple])[size=\\"1\\"] {\\n  padding-right: 4.125rem;\\n  background-image: url(\\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 16 16\'%3e%3cpath fill=\'none\' stroke=\'%23343a40\' stroke-linecap=\'round\' stroke-linejoin=\'round\' stroke-width=\'2\' d=\'M2 5l6 6 6-6\'/%3e%3c/svg%3e\\"), url(\\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 12 12\' width=\'12\' height=\'12\' fill=\'none\' stroke=\'%23dc3545\'%3e%3ccircle cx=\'6\' cy=\'6\' r=\'4.5\'/%3e%3cpath stroke-linejoin=\'round\' d=\'M5.8 3.6h.4L6 6.5z\'/%3e%3ccircle cx=\'6\' cy=\'8.2\' r=\'.6\' fill=\'%23dc3545\' stroke=\'none\'/%3e%3c/svg%3e\\");\\n  background-position: right 0.75rem center, center right 2.25rem;\\n  background-size: 16px 12px, calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);\\n}\\n.was-validated .form-select:invalid:focus, .form-select.is-invalid:focus {\\n  border-color: #dc3545;\\n  box-shadow: 0 0 0 0.25rem rgba(220, 53, 69, 0.25);\\n}\\n\\n.was-validated .form-check-input:invalid, .form-check-input.is-invalid {\\n  border-color: #dc3545;\\n}\\n.was-validated .form-check-input:invalid:checked, .form-check-input.is-invalid:checked {\\n  background-color: #dc3545;\\n}\\n.was-validated .form-check-input:invalid:focus, .form-check-input.is-invalid:focus {\\n  box-shadow: 0 0 0 0.25rem rgba(220, 53, 69, 0.25);\\n}\\n.was-validated .form-check-input:invalid ~ .form-check-label, .form-check-input.is-invalid ~ .form-check-label {\\n  color: #dc3545;\\n}\\n\\n.form-check-inline .form-check-input ~ .invalid-feedback {\\n  margin-left: 0.5em;\\n}\\n\\n.was-validated .input-group .form-control:invalid, .input-group .form-control.is-invalid,\\n.was-validated .input-group .form-select:invalid,\\n.input-group .form-select.is-invalid {\\n  z-index: 2;\\n}\\n.was-validated .input-group .form-control:invalid:focus, .input-group .form-control.is-invalid:focus,\\n.was-validated .input-group .form-select:invalid:focus,\\n.input-group .form-select.is-invalid:focus {\\n  z-index: 3;\\n}\\n\\n.btn {\\n  display: inline-block;\\n  font-weight: 400;\\n  line-height: 1.5;\\n  color: #212529;\\n  text-align: center;\\n  text-decoration: none;\\n  vertical-align: middle;\\n  cursor: pointer;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  user-select: none;\\n  background-color: transparent;\\n  border: 1px solid transparent;\\n  padding: 0.375rem 0.75rem;\\n  font-size: 1rem;\\n  border-radius: 0.25rem;\\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\\n}\\n@media (prefers-reduced-motion: reduce) {\\n  .btn {\\n    transition: none;\\n  }\\n}\\n.btn:hover {\\n  color: #212529;\\n}\\n.btn-check:focus + .btn, .btn:focus {\\n  outline: 0;\\n  box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);\\n}\\n.btn:disabled, .btn.disabled, fieldset:disabled .btn {\\n  pointer-events: none;\\n  opacity: 0.65;\\n}\\n\\n.btn-primary {\\n  color: #fff;\\n  background-color: #0d6efd;\\n  border-color: #0d6efd;\\n}\\n.btn-primary:hover {\\n  color: #fff;\\n  background-color: #0b5ed7;\\n  border-color: #0a58ca;\\n}\\n.btn-check:focus + .btn-primary, .btn-primary:focus {\\n  color: #fff;\\n  background-color: #0b5ed7;\\n  border-color: #0a58ca;\\n  box-shadow: 0 0 0 0.25rem rgba(49, 132, 253, 0.5);\\n}\\n.btn-check:checked + .btn-primary, .btn-check:active + .btn-primary, .btn-primary:active, .btn-primary.active, .show > .btn-primary.dropdown-toggle {\\n  color: #fff;\\n  background-color: #0a58ca;\\n  border-color: #0a53be;\\n}\\n.btn-check:checked + .btn-primary:focus, .btn-check:active + .btn-primary:focus, .btn-primary:active:focus, .btn-primary.active:focus, .show > .btn-primary.dropdown-toggle:focus {\\n  box-shadow: 0 0 0 0.25rem rgba(49, 132, 253, 0.5);\\n}\\n.btn-primary:disabled, .btn-primary.disabled {\\n  color: #fff;\\n  background-color: #0d6efd;\\n  border-color: #0d6efd;\\n}\\n\\n.btn-secondary {\\n  color: #fff;\\n  background-color: #6c757d;\\n  border-color: #6c757d;\\n}\\n.btn-secondary:hover {\\n  color: #fff;\\n  background-color: #5c636a;\\n  border-color: #565e64;\\n}\\n.btn-check:focus + .btn-secondary, .btn-secondary:focus {\\n  color: #fff;\\n  background-color: #5c636a;\\n  border-color: #565e64;\\n  box-shadow: 0 0 0 0.25rem rgba(130, 138, 145, 0.5);\\n}\\n.btn-check:checked + .btn-secondary, .btn-check:active + .btn-secondary, .btn-secondary:active, .btn-secondary.active, .show > .btn-secondary.dropdown-toggle {\\n  color: #fff;\\n  background-color: #565e64;\\n  border-color: #51585e;\\n}\\n.btn-check:checked + .btn-secondary:focus, .btn-check:active + .btn-secondary:focus, .btn-secondary:active:focus, .btn-secondary.active:focus, .show > .btn-secondary.dropdown-toggle:focus {\\n  box-shadow: 0 0 0 0.25rem rgba(130, 138, 145, 0.5);\\n}\\n.btn-secondary:disabled, .btn-secondary.disabled {\\n  color: #fff;\\n  background-color: #6c757d;\\n  border-color: #6c757d;\\n}\\n\\n.btn-success {\\n  color: #fff;\\n  background-color: #198754;\\n  border-color: #198754;\\n}\\n.btn-success:hover {\\n  color: #fff;\\n  background-color: #157347;\\n  border-color: #146c43;\\n}\\n.btn-check:focus + .btn-success, .btn-success:focus {\\n  color: #fff;\\n  background-color: #157347;\\n  border-color: #146c43;\\n  box-shadow: 0 0 0 0.25rem rgba(60, 153, 110, 0.5);\\n}\\n.btn-check:checked + .btn-success, .btn-check:active + .btn-success, .btn-success:active, .btn-success.active, .show > .btn-success.dropdown-toggle {\\n  color: #fff;\\n  background-color: #146c43;\\n  border-color: #13653f;\\n}\\n.btn-check:checked + .btn-success:focus, .btn-check:active + .btn-success:focus, .btn-success:active:focus, .btn-success.active:focus, .show > .btn-success.dropdown-toggle:focus {\\n  box-shadow: 0 0 0 0.25rem rgba(60, 153, 110, 0.5);\\n}\\n.btn-success:disabled, .btn-success.disabled {\\n  color: #fff;\\n  background-color: #198754;\\n  border-color: #198754;\\n}\\n\\n.btn-info {\\n  color: #000;\\n  background-color: #0dcaf0;\\n  border-color: #0dcaf0;\\n}\\n.btn-info:hover {\\n  color: #000;\\n  background-color: #31d2f2;\\n  border-color: #25cff2;\\n}\\n.btn-check:focus + .btn-info, .btn-info:focus {\\n  color: #000;\\n  background-color: #31d2f2;\\n  border-color: #25cff2;\\n  box-shadow: 0 0 0 0.25rem rgba(11, 172, 204, 0.5);\\n}\\n.btn-check:checked + .btn-info, .btn-check:active + .btn-info, .btn-info:active, .btn-info.active, .show > .btn-info.dropdown-toggle {\\n  color: #000;\\n  background-color: #3dd5f3;\\n  border-color: #25cff2;\\n}\\n.btn-check:checked + .btn-info:focus, .btn-check:active + .btn-info:focus, .btn-info:active:focus, .btn-info.active:focus, .show > .btn-info.dropdown-toggle:focus {\\n  box-shadow: 0 0 0 0.25rem rgba(11, 172, 204, 0.5);\\n}\\n.btn-info:disabled, .btn-info.disabled {\\n  color: #000;\\n  background-color: #0dcaf0;\\n  border-color: #0dcaf0;\\n}\\n\\n.btn-warning {\\n  color: #000;\\n  background-color: #ffc107;\\n  border-color: #ffc107;\\n}\\n.btn-warning:hover {\\n  color: #000;\\n  background-color: #ffca2c;\\n  border-color: #ffc720;\\n}\\n.btn-check:focus + .btn-warning, .btn-warning:focus {\\n  color: #000;\\n  background-color: #ffca2c;\\n  border-color: #ffc720;\\n  box-shadow: 0 0 0 0.25rem rgba(217, 164, 6, 0.5);\\n}\\n.btn-check:checked + .btn-warning, .btn-check:active + .btn-warning, .btn-warning:active, .btn-warning.active, .show > .btn-warning.dropdown-toggle {\\n  color: #000;\\n  background-color: #ffcd39;\\n  border-color: #ffc720;\\n}\\n.btn-check:checked + .btn-warning:focus, .btn-check:active + .btn-warning:focus, .btn-warning:active:focus, .btn-warning.active:focus, .show > .btn-warning.dropdown-toggle:focus {\\n  box-shadow: 0 0 0 0.25rem rgba(217, 164, 6, 0.5);\\n}\\n.btn-warning:disabled, .btn-warning.disabled {\\n  color: #000;\\n  background-color: #ffc107;\\n  border-color: #ffc107;\\n}\\n\\n.btn-danger {\\n  color: #fff;\\n  background-color: #dc3545;\\n  border-color: #dc3545;\\n}\\n.btn-danger:hover {\\n  color: #fff;\\n  background-color: #bb2d3b;\\n  border-color: #b02a37;\\n}\\n.btn-check:focus + .btn-danger, .btn-danger:focus {\\n  color: #fff;\\n  background-color: #bb2d3b;\\n  border-color: #b02a37;\\n  box-shadow: 0 0 0 0.25rem rgba(225, 83, 97, 0.5);\\n}\\n.btn-check:checked + .btn-danger, .btn-check:active + .btn-danger, .btn-danger:active, .btn-danger.active, .show > .btn-danger.dropdown-toggle {\\n  color: #fff;\\n  background-color: #b02a37;\\n  border-color: #a52834;\\n}\\n.btn-check:checked + .btn-danger:focus, .btn-check:active + .btn-danger:focus, .btn-danger:active:focus, .btn-danger.active:focus, .show > .btn-danger.dropdown-toggle:focus {\\n  box-shadow: 0 0 0 0.25rem rgba(225, 83, 97, 0.5);\\n}\\n.btn-danger:disabled, .btn-danger.disabled {\\n  color: #fff;\\n  background-color: #dc3545;\\n  border-color: #dc3545;\\n}\\n\\n.btn-light {\\n  color: #000;\\n  background-color: #f8f9fa;\\n  border-color: #f8f9fa;\\n}\\n.btn-light:hover {\\n  color: #000;\\n  background-color: #f9fafb;\\n  border-color: #f9fafb;\\n}\\n.btn-check:focus + .btn-light, .btn-light:focus {\\n  color: #000;\\n  background-color: #f9fafb;\\n  border-color: #f9fafb;\\n  box-shadow: 0 0 0 0.25rem rgba(211, 212, 213, 0.5);\\n}\\n.btn-check:checked + .btn-light, .btn-check:active + .btn-light, .btn-light:active, .btn-light.active, .show > .btn-light.dropdown-toggle {\\n  color: #000;\\n  background-color: #f9fafb;\\n  border-color: #f9fafb;\\n}\\n.btn-check:checked + .btn-light:focus, .btn-check:active + .btn-light:focus, .btn-light:active:focus, .btn-light.active:focus, .show > .btn-light.dropdown-toggle:focus {\\n  box-shadow: 0 0 0 0.25rem rgba(211, 212, 213, 0.5);\\n}\\n.btn-light:disabled, .btn-light.disabled {\\n  color: #000;\\n  background-color: #f8f9fa;\\n  border-color: #f8f9fa;\\n}\\n\\n.btn-dark {\\n  color: #fff;\\n  background-color: #212529;\\n  border-color: #212529;\\n}\\n.btn-dark:hover {\\n  color: #fff;\\n  background-color: #1c1f23;\\n  border-color: #1a1e21;\\n}\\n.btn-check:focus + .btn-dark, .btn-dark:focus {\\n  color: #fff;\\n  background-color: #1c1f23;\\n  border-color: #1a1e21;\\n  box-shadow: 0 0 0 0.25rem rgba(66, 70, 73, 0.5);\\n}\\n.btn-check:checked + .btn-dark, .btn-check:active + .btn-dark, .btn-dark:active, .btn-dark.active, .show > .btn-dark.dropdown-toggle {\\n  color: #fff;\\n  background-color: #1a1e21;\\n  border-color: #191c1f;\\n}\\n.btn-check:checked + .btn-dark:focus, .btn-check:active + .btn-dark:focus, .btn-dark:active:focus, .btn-dark.active:focus, .show > .btn-dark.dropdown-toggle:focus {\\n  box-shadow: 0 0 0 0.25rem rgba(66, 70, 73, 0.5);\\n}\\n.btn-dark:disabled, .btn-dark.disabled {\\n  color: #fff;\\n  background-color: #212529;\\n  border-color: #212529;\\n}\\n\\n.btn-outline-primary {\\n  color: #0d6efd;\\n  border-color: #0d6efd;\\n}\\n.btn-outline-primary:hover {\\n  color: #fff;\\n  background-color: #0d6efd;\\n  border-color: #0d6efd;\\n}\\n.btn-check:focus + .btn-outline-primary, .btn-outline-primary:focus {\\n  box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.5);\\n}\\n.btn-check:checked + .btn-outline-primary, .btn-check:active + .btn-outline-primary, .btn-outline-primary:active, .btn-outline-primary.active, .btn-outline-primary.dropdown-toggle.show {\\n  color: #fff;\\n  background-color: #0d6efd;\\n  border-color: #0d6efd;\\n}\\n.btn-check:checked + .btn-outline-primary:focus, .btn-check:active + .btn-outline-primary:focus, .btn-outline-primary:active:focus, .btn-outline-primary.active:focus, .btn-outline-primary.dropdown-toggle.show:focus {\\n  box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.5);\\n}\\n.btn-outline-primary:disabled, .btn-outline-primary.disabled {\\n  color: #0d6efd;\\n  background-color: transparent;\\n}\\n\\n.btn-outline-secondary {\\n  color: #6c757d;\\n  border-color: #6c757d;\\n}\\n.btn-outline-secondary:hover {\\n  color: #fff;\\n  background-color: #6c757d;\\n  border-color: #6c757d;\\n}\\n.btn-check:focus + .btn-outline-secondary, .btn-outline-secondary:focus {\\n  box-shadow: 0 0 0 0.25rem rgba(108, 117, 125, 0.5);\\n}\\n.btn-check:checked + .btn-outline-secondary, .btn-check:active + .btn-outline-secondary, .btn-outline-secondary:active, .btn-outline-secondary.active, .btn-outline-secondary.dropdown-toggle.show {\\n  color: #fff;\\n  background-color: #6c757d;\\n  border-color: #6c757d;\\n}\\n.btn-check:checked + .btn-outline-secondary:focus, .btn-check:active + .btn-outline-secondary:focus, .btn-outline-secondary:active:focus, .btn-outline-secondary.active:focus, .btn-outline-secondary.dropdown-toggle.show:focus {\\n  box-shadow: 0 0 0 0.25rem rgba(108, 117, 125, 0.5);\\n}\\n.btn-outline-secondary:disabled, .btn-outline-secondary.disabled {\\n  color: #6c757d;\\n  background-color: transparent;\\n}\\n\\n.btn-outline-success {\\n  color: #198754;\\n  border-color: #198754;\\n}\\n.btn-outline-success:hover {\\n  color: #fff;\\n  background-color: #198754;\\n  border-color: #198754;\\n}\\n.btn-check:focus + .btn-outline-success, .btn-outline-success:focus {\\n  box-shadow: 0 0 0 0.25rem rgba(25, 135, 84, 0.5);\\n}\\n.btn-check:checked + .btn-outline-success, .btn-check:active + .btn-outline-success, .btn-outline-success:active, .btn-outline-success.active, .btn-outline-success.dropdown-toggle.show {\\n  color: #fff;\\n  background-color: #198754;\\n  border-color: #198754;\\n}\\n.btn-check:checked + .btn-outline-success:focus, .btn-check:active + .btn-outline-success:focus, .btn-outline-success:active:focus, .btn-outline-success.active:focus, .btn-outline-success.dropdown-toggle.show:focus {\\n  box-shadow: 0 0 0 0.25rem rgba(25, 135, 84, 0.5);\\n}\\n.btn-outline-success:disabled, .btn-outline-success.disabled {\\n  color: #198754;\\n  background-color: transparent;\\n}\\n\\n.btn-outline-info {\\n  color: #0dcaf0;\\n  border-color: #0dcaf0;\\n}\\n.btn-outline-info:hover {\\n  color: #000;\\n  background-color: #0dcaf0;\\n  border-color: #0dcaf0;\\n}\\n.btn-check:focus + .btn-outline-info, .btn-outline-info:focus {\\n  box-shadow: 0 0 0 0.25rem rgba(13, 202, 240, 0.5);\\n}\\n.btn-check:checked + .btn-outline-info, .btn-check:active + .btn-outline-info, .btn-outline-info:active, .btn-outline-info.active, .btn-outline-info.dropdown-toggle.show {\\n  color: #000;\\n  background-color: #0dcaf0;\\n  border-color: #0dcaf0;\\n}\\n.btn-check:checked + .btn-outline-info:focus, .btn-check:active + .btn-outline-info:focus, .btn-outline-info:active:focus, .btn-outline-info.active:focus, .btn-outline-info.dropdown-toggle.show:focus {\\n  box-shadow: 0 0 0 0.25rem rgba(13, 202, 240, 0.5);\\n}\\n.btn-outline-info:disabled, .btn-outline-info.disabled {\\n  color: #0dcaf0;\\n  background-color: transparent;\\n}\\n\\n.btn-outline-warning {\\n  color: #ffc107;\\n  border-color: #ffc107;\\n}\\n.btn-outline-warning:hover {\\n  color: #000;\\n  background-color: #ffc107;\\n  border-color: #ffc107;\\n}\\n.btn-check:focus + .btn-outline-warning, .btn-outline-warning:focus {\\n  box-shadow: 0 0 0 0.25rem rgba(255, 193, 7, 0.5);\\n}\\n.btn-check:checked + .btn-outline-warning, .btn-check:active + .btn-outline-warning, .btn-outline-warning:active, .btn-outline-warning.active, .btn-outline-warning.dropdown-toggle.show {\\n  color: #000;\\n  background-color: #ffc107;\\n  border-color: #ffc107;\\n}\\n.btn-check:checked + .btn-outline-warning:focus, .btn-check:active + .btn-outline-warning:focus, .btn-outline-warning:active:focus, .btn-outline-warning.active:focus, .btn-outline-warning.dropdown-toggle.show:focus {\\n  box-shadow: 0 0 0 0.25rem rgba(255, 193, 7, 0.5);\\n}\\n.btn-outline-warning:disabled, .btn-outline-warning.disabled {\\n  color: #ffc107;\\n  background-color: transparent;\\n}\\n\\n.btn-outline-danger {\\n  color: #dc3545;\\n  border-color: #dc3545;\\n}\\n.btn-outline-danger:hover {\\n  color: #fff;\\n  background-color: #dc3545;\\n  border-color: #dc3545;\\n}\\n.btn-check:focus + .btn-outline-danger, .btn-outline-danger:focus {\\n  box-shadow: 0 0 0 0.25rem rgba(220, 53, 69, 0.5);\\n}\\n.btn-check:checked + .btn-outline-danger, .btn-check:active + .btn-outline-danger, .btn-outline-danger:active, .btn-outline-danger.active, .btn-outline-danger.dropdown-toggle.show {\\n  color: #fff;\\n  background-color: #dc3545;\\n  border-color: #dc3545;\\n}\\n.btn-check:checked + .btn-outline-danger:focus, .btn-check:active + .btn-outline-danger:focus, .btn-outline-danger:active:focus, .btn-outline-danger.active:focus, .btn-outline-danger.dropdown-toggle.show:focus {\\n  box-shadow: 0 0 0 0.25rem rgba(220, 53, 69, 0.5);\\n}\\n.btn-outline-danger:disabled, .btn-outline-danger.disabled {\\n  color: #dc3545;\\n  background-color: transparent;\\n}\\n\\n.btn-outline-light {\\n  color: #f8f9fa;\\n  border-color: #f8f9fa;\\n}\\n.btn-outline-light:hover {\\n  color: #000;\\n  background-color: #f8f9fa;\\n  border-color: #f8f9fa;\\n}\\n.btn-check:focus + .btn-outline-light, .btn-outline-light:focus {\\n  box-shadow: 0 0 0 0.25rem rgba(248, 249, 250, 0.5);\\n}\\n.btn-check:checked + .btn-outline-light, .btn-check:active + .btn-outline-light, .btn-outline-light:active, .btn-outline-light.active, .btn-outline-light.dropdown-toggle.show {\\n  color: #000;\\n  background-color: #f8f9fa;\\n  border-color: #f8f9fa;\\n}\\n.btn-check:checked + .btn-outline-light:focus, .btn-check:active + .btn-outline-light:focus, .btn-outline-light:active:focus, .btn-outline-light.active:focus, .btn-outline-light.dropdown-toggle.show:focus {\\n  box-shadow: 0 0 0 0.25rem rgba(248, 249, 250, 0.5);\\n}\\n.btn-outline-light:disabled, .btn-outline-light.disabled {\\n  color: #f8f9fa;\\n  background-color: transparent;\\n}\\n\\n.btn-outline-dark {\\n  color: #212529;\\n  border-color: #212529;\\n}\\n.btn-outline-dark:hover {\\n  color: #fff;\\n  background-color: #212529;\\n  border-color: #212529;\\n}\\n.btn-check:focus + .btn-outline-dark, .btn-outline-dark:focus {\\n  box-shadow: 0 0 0 0.25rem rgba(33, 37, 41, 0.5);\\n}\\n.btn-check:checked + .btn-outline-dark, .btn-check:active + .btn-outline-dark, .btn-outline-dark:active, .btn-outline-dark.active, .btn-outline-dark.dropdown-toggle.show {\\n  color: #fff;\\n  background-color: #212529;\\n  border-color: #212529;\\n}\\n.btn-check:checked + .btn-outline-dark:focus, .btn-check:active + .btn-outline-dark:focus, .btn-outline-dark:active:focus, .btn-outline-dark.active:focus, .btn-outline-dark.dropdown-toggle.show:focus {\\n  box-shadow: 0 0 0 0.25rem rgba(33, 37, 41, 0.5);\\n}\\n.btn-outline-dark:disabled, .btn-outline-dark.disabled {\\n  color: #212529;\\n  background-color: transparent;\\n}\\n\\n.btn-link {\\n  font-weight: 400;\\n  color: #0d6efd;\\n  text-decoration: underline;\\n}\\n.btn-link:hover {\\n  color: #0a58ca;\\n}\\n.btn-link:disabled, .btn-link.disabled {\\n  color: #6c757d;\\n}\\n\\n.btn-lg, .btn-group-lg > .btn {\\n  padding: 0.5rem 1rem;\\n  font-size: 1.25rem;\\n  border-radius: 0.3rem;\\n}\\n\\n.btn-sm, .btn-group-sm > .btn {\\n  padding: 0.25rem 0.5rem;\\n  font-size: 0.875rem;\\n  border-radius: 0.2rem;\\n}\\n\\n.fade {\\n  transition: opacity 0.15s linear;\\n}\\n@media (prefers-reduced-motion: reduce) {\\n  .fade {\\n    transition: none;\\n  }\\n}\\n.fade:not(.show) {\\n  opacity: 0;\\n}\\n\\n.collapse:not(.show) {\\n  display: none;\\n}\\n\\n.collapsing {\\n  height: 0;\\n  overflow: hidden;\\n  transition: height 0.35s ease;\\n}\\n@media (prefers-reduced-motion: reduce) {\\n  .collapsing {\\n    transition: none;\\n  }\\n}\\n.collapsing.collapse-horizontal {\\n  width: 0;\\n  height: auto;\\n  transition: width 0.35s ease;\\n}\\n@media (prefers-reduced-motion: reduce) {\\n  .collapsing.collapse-horizontal {\\n    transition: none;\\n  }\\n}\\n\\n.dropup,\\n.dropend,\\n.dropdown,\\n.dropstart {\\n  position: relative;\\n}\\n\\n.dropdown-toggle {\\n  white-space: nowrap;\\n}\\n.dropdown-toggle::after {\\n  display: inline-block;\\n  margin-left: 0.255em;\\n  vertical-align: 0.255em;\\n  content: \\"\\";\\n  border-top: 0.3em solid;\\n  border-right: 0.3em solid transparent;\\n  border-bottom: 0;\\n  border-left: 0.3em solid transparent;\\n}\\n.dropdown-toggle:empty::after {\\n  margin-left: 0;\\n}\\n\\n.dropdown-menu {\\n  position: absolute;\\n  z-index: 1000;\\n  display: none;\\n  min-width: 10rem;\\n  padding: 0.5rem 0;\\n  margin: 0;\\n  font-size: 1rem;\\n  color: #212529;\\n  text-align: left;\\n  list-style: none;\\n  background-color: #fff;\\n  background-clip: padding-box;\\n  border: 1px solid rgba(0, 0, 0, 0.15);\\n  border-radius: 0.25rem;\\n}\\n.dropdown-menu[data-bs-popper] {\\n  top: 100%;\\n  left: 0;\\n  margin-top: 0.125rem;\\n}\\n\\n.dropdown-menu-start {\\n  --bs-position: start;\\n}\\n.dropdown-menu-start[data-bs-popper] {\\n  right: auto;\\n  left: 0;\\n}\\n\\n.dropdown-menu-end {\\n  --bs-position: end;\\n}\\n.dropdown-menu-end[data-bs-popper] {\\n  right: 0;\\n  left: auto;\\n}\\n\\n@media (min-width: 576px) {\\n  .dropdown-menu-sm-start {\\n    --bs-position: start;\\n  }\\n  .dropdown-menu-sm-start[data-bs-popper] {\\n    right: auto;\\n    left: 0;\\n  }\\n\\n  .dropdown-menu-sm-end {\\n    --bs-position: end;\\n  }\\n  .dropdown-menu-sm-end[data-bs-popper] {\\n    right: 0;\\n    left: auto;\\n  }\\n}\\n@media (min-width: 768px) {\\n  .dropdown-menu-md-start {\\n    --bs-position: start;\\n  }\\n  .dropdown-menu-md-start[data-bs-popper] {\\n    right: auto;\\n    left: 0;\\n  }\\n\\n  .dropdown-menu-md-end {\\n    --bs-position: end;\\n  }\\n  .dropdown-menu-md-end[data-bs-popper] {\\n    right: 0;\\n    left: auto;\\n  }\\n}\\n@media (min-width: 992px) {\\n  .dropdown-menu-lg-start {\\n    --bs-position: start;\\n  }\\n  .dropdown-menu-lg-start[data-bs-popper] {\\n    right: auto;\\n    left: 0;\\n  }\\n\\n  .dropdown-menu-lg-end {\\n    --bs-position: end;\\n  }\\n  .dropdown-menu-lg-end[data-bs-popper] {\\n    right: 0;\\n    left: auto;\\n  }\\n}\\n@media (min-width: 1200px) {\\n  .dropdown-menu-xl-start {\\n    --bs-position: start;\\n  }\\n  .dropdown-menu-xl-start[data-bs-popper] {\\n    right: auto;\\n    left: 0;\\n  }\\n\\n  .dropdown-menu-xl-end {\\n    --bs-position: end;\\n  }\\n  .dropdown-menu-xl-end[data-bs-popper] {\\n    right: 0;\\n    left: auto;\\n  }\\n}\\n@media (min-width: 1400px) {\\n  .dropdown-menu-xxl-start {\\n    --bs-position: start;\\n  }\\n  .dropdown-menu-xxl-start[data-bs-popper] {\\n    right: auto;\\n    left: 0;\\n  }\\n\\n  .dropdown-menu-xxl-end {\\n    --bs-position: end;\\n  }\\n  .dropdown-menu-xxl-end[data-bs-popper] {\\n    right: 0;\\n    left: auto;\\n  }\\n}\\n.dropup .dropdown-menu[data-bs-popper] {\\n  top: auto;\\n  bottom: 100%;\\n  margin-top: 0;\\n  margin-bottom: 0.125rem;\\n}\\n.dropup .dropdown-toggle::after {\\n  display: inline-block;\\n  margin-left: 0.255em;\\n  vertical-align: 0.255em;\\n  content: \\"\\";\\n  border-top: 0;\\n  border-right: 0.3em solid transparent;\\n  border-bottom: 0.3em solid;\\n  border-left: 0.3em solid transparent;\\n}\\n.dropup .dropdown-toggle:empty::after {\\n  margin-left: 0;\\n}\\n\\n.dropend .dropdown-menu[data-bs-popper] {\\n  top: 0;\\n  right: auto;\\n  left: 100%;\\n  margin-top: 0;\\n  margin-left: 0.125rem;\\n}\\n.dropend .dropdown-toggle::after {\\n  display: inline-block;\\n  margin-left: 0.255em;\\n  vertical-align: 0.255em;\\n  content: \\"\\";\\n  border-top: 0.3em solid transparent;\\n  border-right: 0;\\n  border-bottom: 0.3em solid transparent;\\n  border-left: 0.3em solid;\\n}\\n.dropend .dropdown-toggle:empty::after {\\n  margin-left: 0;\\n}\\n.dropend .dropdown-toggle::after {\\n  vertical-align: 0;\\n}\\n\\n.dropstart .dropdown-menu[data-bs-popper] {\\n  top: 0;\\n  right: 100%;\\n  left: auto;\\n  margin-top: 0;\\n  margin-right: 0.125rem;\\n}\\n.dropstart .dropdown-toggle::after {\\n  display: inline-block;\\n  margin-left: 0.255em;\\n  vertical-align: 0.255em;\\n  content: \\"\\";\\n}\\n.dropstart .dropdown-toggle::after {\\n  display: none;\\n}\\n.dropstart .dropdown-toggle::before {\\n  display: inline-block;\\n  margin-right: 0.255em;\\n  vertical-align: 0.255em;\\n  content: \\"\\";\\n  border-top: 0.3em solid transparent;\\n  border-right: 0.3em solid;\\n  border-bottom: 0.3em solid transparent;\\n}\\n.dropstart .dropdown-toggle:empty::after {\\n  margin-left: 0;\\n}\\n.dropstart .dropdown-toggle::before {\\n  vertical-align: 0;\\n}\\n\\n.dropdown-divider {\\n  height: 0;\\n  margin: 0.5rem 0;\\n  overflow: hidden;\\n  border-top: 1px solid rgba(0, 0, 0, 0.15);\\n}\\n\\n.dropdown-item {\\n  display: block;\\n  width: 100%;\\n  padding: 0.25rem 1rem;\\n  clear: both;\\n  font-weight: 400;\\n  color: #212529;\\n  text-align: inherit;\\n  text-decoration: none;\\n  white-space: nowrap;\\n  background-color: transparent;\\n  border: 0;\\n}\\n.dropdown-item:hover, .dropdown-item:focus {\\n  color: #1e2125;\\n  background-color: #e9ecef;\\n}\\n.dropdown-item.active, .dropdown-item:active {\\n  color: #fff;\\n  text-decoration: none;\\n  background-color: #0d6efd;\\n}\\n.dropdown-item.disabled, .dropdown-item:disabled {\\n  color: #adb5bd;\\n  pointer-events: none;\\n  background-color: transparent;\\n}\\n\\n.dropdown-menu.show {\\n  display: block;\\n}\\n\\n.dropdown-header {\\n  display: block;\\n  padding: 0.5rem 1rem;\\n  margin-bottom: 0;\\n  font-size: 0.875rem;\\n  color: #6c757d;\\n  white-space: nowrap;\\n}\\n\\n.dropdown-item-text {\\n  display: block;\\n  padding: 0.25rem 1rem;\\n  color: #212529;\\n}\\n\\n.dropdown-menu-dark {\\n  color: #dee2e6;\\n  background-color: #343a40;\\n  border-color: rgba(0, 0, 0, 0.15);\\n}\\n.dropdown-menu-dark .dropdown-item {\\n  color: #dee2e6;\\n}\\n.dropdown-menu-dark .dropdown-item:hover, .dropdown-menu-dark .dropdown-item:focus {\\n  color: #fff;\\n  background-color: rgba(255, 255, 255, 0.15);\\n}\\n.dropdown-menu-dark .dropdown-item.active, .dropdown-menu-dark .dropdown-item:active {\\n  color: #fff;\\n  background-color: #0d6efd;\\n}\\n.dropdown-menu-dark .dropdown-item.disabled, .dropdown-menu-dark .dropdown-item:disabled {\\n  color: #adb5bd;\\n}\\n.dropdown-menu-dark .dropdown-divider {\\n  border-color: rgba(0, 0, 0, 0.15);\\n}\\n.dropdown-menu-dark .dropdown-item-text {\\n  color: #dee2e6;\\n}\\n.dropdown-menu-dark .dropdown-header {\\n  color: #adb5bd;\\n}\\n\\n.btn-group,\\n.btn-group-vertical {\\n  position: relative;\\n  display: inline-flex;\\n  vertical-align: middle;\\n}\\n.btn-group > .btn,\\n.btn-group-vertical > .btn {\\n  position: relative;\\n  flex: 1 1 auto;\\n}\\n.btn-group > .btn-check:checked + .btn,\\n.btn-group > .btn-check:focus + .btn,\\n.btn-group > .btn:hover,\\n.btn-group > .btn:focus,\\n.btn-group > .btn:active,\\n.btn-group > .btn.active,\\n.btn-group-vertical > .btn-check:checked + .btn,\\n.btn-group-vertical > .btn-check:focus + .btn,\\n.btn-group-vertical > .btn:hover,\\n.btn-group-vertical > .btn:focus,\\n.btn-group-vertical > .btn:active,\\n.btn-group-vertical > .btn.active {\\n  z-index: 1;\\n}\\n\\n.btn-toolbar {\\n  display: flex;\\n  flex-wrap: wrap;\\n  justify-content: flex-start;\\n}\\n.btn-toolbar .input-group {\\n  width: auto;\\n}\\n\\n.btn-group > .btn:not(:first-child),\\n.btn-group > .btn-group:not(:first-child) {\\n  margin-left: -1px;\\n}\\n.btn-group > .btn:not(:last-child):not(.dropdown-toggle),\\n.btn-group > .btn-group:not(:last-child) > .btn {\\n  border-top-right-radius: 0;\\n  border-bottom-right-radius: 0;\\n}\\n.btn-group > .btn:nth-child(n+3),\\n.btn-group > :not(.btn-check) + .btn,\\n.btn-group > .btn-group:not(:first-child) > .btn {\\n  border-top-left-radius: 0;\\n  border-bottom-left-radius: 0;\\n}\\n\\n.dropdown-toggle-split {\\n  padding-right: 0.5625rem;\\n  padding-left: 0.5625rem;\\n}\\n.dropdown-toggle-split::after, .dropup .dropdown-toggle-split::after, .dropend .dropdown-toggle-split::after {\\n  margin-left: 0;\\n}\\n.dropstart .dropdown-toggle-split::before {\\n  margin-right: 0;\\n}\\n\\n.btn-sm + .dropdown-toggle-split, .btn-group-sm > .btn + .dropdown-toggle-split {\\n  padding-right: 0.375rem;\\n  padding-left: 0.375rem;\\n}\\n\\n.btn-lg + .dropdown-toggle-split, .btn-group-lg > .btn + .dropdown-toggle-split {\\n  padding-right: 0.75rem;\\n  padding-left: 0.75rem;\\n}\\n\\n.btn-group-vertical {\\n  flex-direction: column;\\n  align-items: flex-start;\\n  justify-content: center;\\n}\\n.btn-group-vertical > .btn,\\n.btn-group-vertical > .btn-group {\\n  width: 100%;\\n}\\n.btn-group-vertical > .btn:not(:first-child),\\n.btn-group-vertical > .btn-group:not(:first-child) {\\n  margin-top: -1px;\\n}\\n.btn-group-vertical > .btn:not(:last-child):not(.dropdown-toggle),\\n.btn-group-vertical > .btn-group:not(:last-child) > .btn {\\n  border-bottom-right-radius: 0;\\n  border-bottom-left-radius: 0;\\n}\\n.btn-group-vertical > .btn ~ .btn,\\n.btn-group-vertical > .btn-group:not(:first-child) > .btn {\\n  border-top-left-radius: 0;\\n  border-top-right-radius: 0;\\n}\\n\\n.nav {\\n  display: flex;\\n  flex-wrap: wrap;\\n  padding-left: 0;\\n  margin-bottom: 0;\\n  list-style: none;\\n}\\n\\n.nav-link {\\n  display: block;\\n  padding: 0.5rem 1rem;\\n  color: #0d6efd;\\n  text-decoration: none;\\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out;\\n}\\n@media (prefers-reduced-motion: reduce) {\\n  .nav-link {\\n    transition: none;\\n  }\\n}\\n.nav-link:hover, .nav-link:focus {\\n  color: #0a58ca;\\n}\\n.nav-link.disabled {\\n  color: #6c757d;\\n  pointer-events: none;\\n  cursor: default;\\n}\\n\\n.nav-tabs {\\n  border-bottom: 1px solid #dee2e6;\\n}\\n.nav-tabs .nav-link {\\n  margin-bottom: -1px;\\n  background: none;\\n  border: 1px solid transparent;\\n  border-top-left-radius: 0.25rem;\\n  border-top-right-radius: 0.25rem;\\n}\\n.nav-tabs .nav-link:hover, .nav-tabs .nav-link:focus {\\n  border-color: #e9ecef #e9ecef #dee2e6;\\n  isolation: isolate;\\n}\\n.nav-tabs .nav-link.disabled {\\n  color: #6c757d;\\n  background-color: transparent;\\n  border-color: transparent;\\n}\\n.nav-tabs .nav-link.active,\\n.nav-tabs .nav-item.show .nav-link {\\n  color: #495057;\\n  background-color: #fff;\\n  border-color: #dee2e6 #dee2e6 #fff;\\n}\\n.nav-tabs .dropdown-menu {\\n  margin-top: -1px;\\n  border-top-left-radius: 0;\\n  border-top-right-radius: 0;\\n}\\n\\n.nav-pills .nav-link {\\n  background: none;\\n  border: 0;\\n  border-radius: 0.25rem;\\n}\\n.nav-pills .nav-link.active,\\n.nav-pills .show > .nav-link {\\n  color: #fff;\\n  background-color: #0d6efd;\\n}\\n\\n.nav-fill > .nav-link,\\n.nav-fill .nav-item {\\n  flex: 1 1 auto;\\n  text-align: center;\\n}\\n\\n.nav-justified > .nav-link,\\n.nav-justified .nav-item {\\n  flex-basis: 0;\\n  flex-grow: 1;\\n  text-align: center;\\n}\\n\\n.nav-fill .nav-item .nav-link,\\n.nav-justified .nav-item .nav-link {\\n  width: 100%;\\n}\\n\\n.tab-content > .tab-pane {\\n  display: none;\\n}\\n.tab-content > .active {\\n  display: block;\\n}\\n\\n.navbar {\\n  position: relative;\\n  display: flex;\\n  flex-wrap: wrap;\\n  align-items: center;\\n  justify-content: space-between;\\n  padding-top: 0.5rem;\\n  padding-bottom: 0.5rem;\\n}\\n.navbar > .container,\\n.navbar > .container-fluid,\\n.navbar > .container-sm,\\n.navbar > .container-md,\\n.navbar > .container-lg,\\n.navbar > .container-xl,\\n.navbar > .container-xxl {\\n  display: flex;\\n  flex-wrap: inherit;\\n  align-items: center;\\n  justify-content: space-between;\\n}\\n.navbar-brand {\\n  padding-top: 0.3125rem;\\n  padding-bottom: 0.3125rem;\\n  margin-right: 1rem;\\n  font-size: 1.25rem;\\n  text-decoration: none;\\n  white-space: nowrap;\\n}\\n.navbar-nav {\\n  display: flex;\\n  flex-direction: column;\\n  padding-left: 0;\\n  margin-bottom: 0;\\n  list-style: none;\\n}\\n.navbar-nav .nav-link {\\n  padding-right: 0;\\n  padding-left: 0;\\n}\\n.navbar-nav .dropdown-menu {\\n  position: static;\\n}\\n\\n.navbar-text {\\n  padding-top: 0.5rem;\\n  padding-bottom: 0.5rem;\\n}\\n\\n.navbar-collapse {\\n  flex-basis: 100%;\\n  flex-grow: 1;\\n  align-items: center;\\n}\\n\\n.navbar-toggler {\\n  padding: 0.25rem 0.75rem;\\n  font-size: 1.25rem;\\n  line-height: 1;\\n  background-color: transparent;\\n  border: 1px solid transparent;\\n  border-radius: 0.25rem;\\n  transition: box-shadow 0.15s ease-in-out;\\n}\\n@media (prefers-reduced-motion: reduce) {\\n  .navbar-toggler {\\n    transition: none;\\n  }\\n}\\n.navbar-toggler:hover {\\n  text-decoration: none;\\n}\\n.navbar-toggler:focus {\\n  text-decoration: none;\\n  outline: 0;\\n  box-shadow: 0 0 0 0.25rem;\\n}\\n\\n.navbar-toggler-icon {\\n  display: inline-block;\\n  width: 1.5em;\\n  height: 1.5em;\\n  vertical-align: middle;\\n  background-repeat: no-repeat;\\n  background-position: center;\\n  background-size: 100%;\\n}\\n\\n.navbar-nav-scroll {\\n  max-height: var(--bs-scroll-height, 75vh);\\n  overflow-y: auto;\\n}\\n\\n@media (min-width: 576px) {\\n  .navbar-expand-sm {\\n    flex-wrap: nowrap;\\n    justify-content: flex-start;\\n  }\\n  .navbar-expand-sm .navbar-nav {\\n    flex-direction: row;\\n  }\\n  .navbar-expand-sm .navbar-nav .dropdown-menu {\\n    position: absolute;\\n  }\\n  .navbar-expand-sm .navbar-nav .nav-link {\\n    padding-right: 0.5rem;\\n    padding-left: 0.5rem;\\n  }\\n  .navbar-expand-sm .navbar-nav-scroll {\\n    overflow: visible;\\n  }\\n  .navbar-expand-sm .navbar-collapse {\\n    display: flex !important;\\n    flex-basis: auto;\\n  }\\n  .navbar-expand-sm .navbar-toggler {\\n    display: none;\\n  }\\n  .navbar-expand-sm .offcanvas-header {\\n    display: none;\\n  }\\n  .navbar-expand-sm .offcanvas {\\n    position: inherit;\\n    bottom: 0;\\n    z-index: 1000;\\n    flex-grow: 1;\\n    visibility: visible !important;\\n    background-color: transparent;\\n    border-right: 0;\\n    border-left: 0;\\n    transition: none;\\n    transform: none;\\n  }\\n  .navbar-expand-sm .offcanvas-top,\\n.navbar-expand-sm .offcanvas-bottom {\\n    height: auto;\\n    border-top: 0;\\n    border-bottom: 0;\\n  }\\n  .navbar-expand-sm .offcanvas-body {\\n    display: flex;\\n    flex-grow: 0;\\n    padding: 0;\\n    overflow-y: visible;\\n  }\\n}\\n@media (min-width: 768px) {\\n  .navbar-expand-md {\\n    flex-wrap: nowrap;\\n    justify-content: flex-start;\\n  }\\n  .navbar-expand-md .navbar-nav {\\n    flex-direction: row;\\n  }\\n  .navbar-expand-md .navbar-nav .dropdown-menu {\\n    position: absolute;\\n  }\\n  .navbar-expand-md .navbar-nav .nav-link {\\n    padding-right: 0.5rem;\\n    padding-left: 0.5rem;\\n  }\\n  .navbar-expand-md .navbar-nav-scroll {\\n    overflow: visible;\\n  }\\n  .navbar-expand-md .navbar-collapse {\\n    display: flex !important;\\n    flex-basis: auto;\\n  }\\n  .navbar-expand-md .navbar-toggler {\\n    display: none;\\n  }\\n  .navbar-expand-md .offcanvas-header {\\n    display: none;\\n  }\\n  .navbar-expand-md .offcanvas {\\n    position: inherit;\\n    bottom: 0;\\n    z-index: 1000;\\n    flex-grow: 1;\\n    visibility: visible !important;\\n    background-color: transparent;\\n    border-right: 0;\\n    border-left: 0;\\n    transition: none;\\n    transform: none;\\n  }\\n  .navbar-expand-md .offcanvas-top,\\n.navbar-expand-md .offcanvas-bottom {\\n    height: auto;\\n    border-top: 0;\\n    border-bottom: 0;\\n  }\\n  .navbar-expand-md .offcanvas-body {\\n    display: flex;\\n    flex-grow: 0;\\n    padding: 0;\\n    overflow-y: visible;\\n  }\\n}\\n@media (min-width: 992px) {\\n  .navbar-expand-lg {\\n    flex-wrap: nowrap;\\n    justify-content: flex-start;\\n  }\\n  .navbar-expand-lg .navbar-nav {\\n    flex-direction: row;\\n  }\\n  .navbar-expand-lg .navbar-nav .dropdown-menu {\\n    position: absolute;\\n  }\\n  .navbar-expand-lg .navbar-nav .nav-link {\\n    padding-right: 0.5rem;\\n    padding-left: 0.5rem;\\n  }\\n  .navbar-expand-lg .navbar-nav-scroll {\\n    overflow: visible;\\n  }\\n  .navbar-expand-lg .navbar-collapse {\\n    display: flex !important;\\n    flex-basis: auto;\\n  }\\n  .navbar-expand-lg .navbar-toggler {\\n    display: none;\\n  }\\n  .navbar-expand-lg .offcanvas-header {\\n    display: none;\\n  }\\n  .navbar-expand-lg .offcanvas {\\n    position: inherit;\\n    bottom: 0;\\n    z-index: 1000;\\n    flex-grow: 1;\\n    visibility: visible !important;\\n    background-color: transparent;\\n    border-right: 0;\\n    border-left: 0;\\n    transition: none;\\n    transform: none;\\n  }\\n  .navbar-expand-lg .offcanvas-top,\\n.navbar-expand-lg .offcanvas-bottom {\\n    height: auto;\\n    border-top: 0;\\n    border-bottom: 0;\\n  }\\n  .navbar-expand-lg .offcanvas-body {\\n    display: flex;\\n    flex-grow: 0;\\n    padding: 0;\\n    overflow-y: visible;\\n  }\\n}\\n@media (min-width: 1200px) {\\n  .navbar-expand-xl {\\n    flex-wrap: nowrap;\\n    justify-content: flex-start;\\n  }\\n  .navbar-expand-xl .navbar-nav {\\n    flex-direction: row;\\n  }\\n  .navbar-expand-xl .navbar-nav .dropdown-menu {\\n    position: absolute;\\n  }\\n  .navbar-expand-xl .navbar-nav .nav-link {\\n    padding-right: 0.5rem;\\n    padding-left: 0.5rem;\\n  }\\n  .navbar-expand-xl .navbar-nav-scroll {\\n    overflow: visible;\\n  }\\n  .navbar-expand-xl .navbar-collapse {\\n    display: flex !important;\\n    flex-basis: auto;\\n  }\\n  .navbar-expand-xl .navbar-toggler {\\n    display: none;\\n  }\\n  .navbar-expand-xl .offcanvas-header {\\n    display: none;\\n  }\\n  .navbar-expand-xl .offcanvas {\\n    position: inherit;\\n    bottom: 0;\\n    z-index: 1000;\\n    flex-grow: 1;\\n    visibility: visible !important;\\n    background-color: transparent;\\n    border-right: 0;\\n    border-left: 0;\\n    transition: none;\\n    transform: none;\\n  }\\n  .navbar-expand-xl .offcanvas-top,\\n.navbar-expand-xl .offcanvas-bottom {\\n    height: auto;\\n    border-top: 0;\\n    border-bottom: 0;\\n  }\\n  .navbar-expand-xl .offcanvas-body {\\n    display: flex;\\n    flex-grow: 0;\\n    padding: 0;\\n    overflow-y: visible;\\n  }\\n}\\n@media (min-width: 1400px) {\\n  .navbar-expand-xxl {\\n    flex-wrap: nowrap;\\n    justify-content: flex-start;\\n  }\\n  .navbar-expand-xxl .navbar-nav {\\n    flex-direction: row;\\n  }\\n  .navbar-expand-xxl .navbar-nav .dropdown-menu {\\n    position: absolute;\\n  }\\n  .navbar-expand-xxl .navbar-nav .nav-link {\\n    padding-right: 0.5rem;\\n    padding-left: 0.5rem;\\n  }\\n  .navbar-expand-xxl .navbar-nav-scroll {\\n    overflow: visible;\\n  }\\n  .navbar-expand-xxl .navbar-collapse {\\n    display: flex !important;\\n    flex-basis: auto;\\n  }\\n  .navbar-expand-xxl .navbar-toggler {\\n    display: none;\\n  }\\n  .navbar-expand-xxl .offcanvas-header {\\n    display: none;\\n  }\\n  .navbar-expand-xxl .offcanvas {\\n    position: inherit;\\n    bottom: 0;\\n    z-index: 1000;\\n    flex-grow: 1;\\n    visibility: visible !important;\\n    background-color: transparent;\\n    border-right: 0;\\n    border-left: 0;\\n    transition: none;\\n    transform: none;\\n  }\\n  .navbar-expand-xxl .offcanvas-top,\\n.navbar-expand-xxl .offcanvas-bottom {\\n    height: auto;\\n    border-top: 0;\\n    border-bottom: 0;\\n  }\\n  .navbar-expand-xxl .offcanvas-body {\\n    display: flex;\\n    flex-grow: 0;\\n    padding: 0;\\n    overflow-y: visible;\\n  }\\n}\\n.navbar-expand {\\n  flex-wrap: nowrap;\\n  justify-content: flex-start;\\n}\\n.navbar-expand .navbar-nav {\\n  flex-direction: row;\\n}\\n.navbar-expand .navbar-nav .dropdown-menu {\\n  position: absolute;\\n}\\n.navbar-expand .navbar-nav .nav-link {\\n  padding-right: 0.5rem;\\n  padding-left: 0.5rem;\\n}\\n.navbar-expand .navbar-nav-scroll {\\n  overflow: visible;\\n}\\n.navbar-expand .navbar-collapse {\\n  display: flex !important;\\n  flex-basis: auto;\\n}\\n.navbar-expand .navbar-toggler {\\n  display: none;\\n}\\n.navbar-expand .offcanvas-header {\\n  display: none;\\n}\\n.navbar-expand .offcanvas {\\n  position: inherit;\\n  bottom: 0;\\n  z-index: 1000;\\n  flex-grow: 1;\\n  visibility: visible !important;\\n  background-color: transparent;\\n  border-right: 0;\\n  border-left: 0;\\n  transition: none;\\n  transform: none;\\n}\\n.navbar-expand .offcanvas-top,\\n.navbar-expand .offcanvas-bottom {\\n  height: auto;\\n  border-top: 0;\\n  border-bottom: 0;\\n}\\n.navbar-expand .offcanvas-body {\\n  display: flex;\\n  flex-grow: 0;\\n  padding: 0;\\n  overflow-y: visible;\\n}\\n\\n.navbar-light .navbar-brand {\\n  color: rgba(0, 0, 0, 0.9);\\n}\\n.navbar-light .navbar-brand:hover, .navbar-light .navbar-brand:focus {\\n  color: rgba(0, 0, 0, 0.9);\\n}\\n.navbar-light .navbar-nav .nav-link {\\n  color: rgba(0, 0, 0, 0.55);\\n}\\n.navbar-light .navbar-nav .nav-link:hover, .navbar-light .navbar-nav .nav-link:focus {\\n  color: rgba(0, 0, 0, 0.7);\\n}\\n.navbar-light .navbar-nav .nav-link.disabled {\\n  color: rgba(0, 0, 0, 0.3);\\n}\\n.navbar-light .navbar-nav .show > .nav-link,\\n.navbar-light .navbar-nav .nav-link.active {\\n  color: rgba(0, 0, 0, 0.9);\\n}\\n.navbar-light .navbar-toggler {\\n  color: rgba(0, 0, 0, 0.55);\\n  border-color: rgba(0, 0, 0, 0.1);\\n}\\n.navbar-light .navbar-toggler-icon {\\n  background-image: url(\\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 30 30\'%3e%3cpath stroke=\'rgba%280, 0, 0, 0.55%29\' stroke-linecap=\'round\' stroke-miterlimit=\'10\' stroke-width=\'2\' d=\'M4 7h22M4 15h22M4 23h22\'/%3e%3c/svg%3e\\");\\n}\\n.navbar-light .navbar-text {\\n  color: rgba(0, 0, 0, 0.55);\\n}\\n.navbar-light .navbar-text a,\\n.navbar-light .navbar-text a:hover,\\n.navbar-light .navbar-text a:focus {\\n  color: rgba(0, 0, 0, 0.9);\\n}\\n\\n.navbar-dark .navbar-brand {\\n  color: #fff;\\n}\\n.navbar-dark .navbar-brand:hover, .navbar-dark .navbar-brand:focus {\\n  color: #fff;\\n}\\n.navbar-dark .navbar-nav .nav-link {\\n  color: rgba(255, 255, 255, 0.55);\\n}\\n.navbar-dark .navbar-nav .nav-link:hover, .navbar-dark .navbar-nav .nav-link:focus {\\n  color: rgba(255, 255, 255, 0.75);\\n}\\n.navbar-dark .navbar-nav .nav-link.disabled {\\n  color: rgba(255, 255, 255, 0.25);\\n}\\n.navbar-dark .navbar-nav .show > .nav-link,\\n.navbar-dark .navbar-nav .nav-link.active {\\n  color: #fff;\\n}\\n.navbar-dark .navbar-toggler {\\n  color: rgba(255, 255, 255, 0.55);\\n  border-color: rgba(255, 255, 255, 0.1);\\n}\\n.navbar-dark .navbar-toggler-icon {\\n  background-image: url(\\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 30 30\'%3e%3cpath stroke=\'rgba%28255, 255, 255, 0.55%29\' stroke-linecap=\'round\' stroke-miterlimit=\'10\' stroke-width=\'2\' d=\'M4 7h22M4 15h22M4 23h22\'/%3e%3c/svg%3e\\");\\n}\\n.navbar-dark .navbar-text {\\n  color: rgba(255, 255, 255, 0.55);\\n}\\n.navbar-dark .navbar-text a,\\n.navbar-dark .navbar-text a:hover,\\n.navbar-dark .navbar-text a:focus {\\n  color: #fff;\\n}\\n\\n.card {\\n  position: relative;\\n  display: flex;\\n  flex-direction: column;\\n  min-width: 0;\\n  word-wrap: break-word;\\n  background-color: #fff;\\n  background-clip: border-box;\\n  border: 1px solid rgba(0, 0, 0, 0.125);\\n  border-radius: 0.25rem;\\n}\\n.card > hr {\\n  margin-right: 0;\\n  margin-left: 0;\\n}\\n.card > .list-group {\\n  border-top: inherit;\\n  border-bottom: inherit;\\n}\\n.card > .list-group:first-child {\\n  border-top-width: 0;\\n  border-top-left-radius: calc(0.25rem - 1px);\\n  border-top-right-radius: calc(0.25rem - 1px);\\n}\\n.card > .list-group:last-child {\\n  border-bottom-width: 0;\\n  border-bottom-right-radius: calc(0.25rem - 1px);\\n  border-bottom-left-radius: calc(0.25rem - 1px);\\n}\\n.card > .card-header + .list-group,\\n.card > .list-group + .card-footer {\\n  border-top: 0;\\n}\\n\\n.card-body {\\n  flex: 1 1 auto;\\n  padding: 1rem 1rem;\\n}\\n\\n.card-title {\\n  margin-bottom: 0.5rem;\\n}\\n\\n.card-subtitle {\\n  margin-top: -0.25rem;\\n  margin-bottom: 0;\\n}\\n\\n.card-text:last-child {\\n  margin-bottom: 0;\\n}\\n\\n.card-link + .card-link {\\n  margin-left: 1rem;\\n}\\n\\n.card-header {\\n  padding: 0.5rem 1rem;\\n  margin-bottom: 0;\\n  background-color: rgba(0, 0, 0, 0.03);\\n  border-bottom: 1px solid rgba(0, 0, 0, 0.125);\\n}\\n.card-header:first-child {\\n  border-radius: calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0;\\n}\\n\\n.card-footer {\\n  padding: 0.5rem 1rem;\\n  background-color: rgba(0, 0, 0, 0.03);\\n  border-top: 1px solid rgba(0, 0, 0, 0.125);\\n}\\n.card-footer:last-child {\\n  border-radius: 0 0 calc(0.25rem - 1px) calc(0.25rem - 1px);\\n}\\n\\n.card-header-tabs {\\n  margin-right: -0.5rem;\\n  margin-bottom: -0.5rem;\\n  margin-left: -0.5rem;\\n  border-bottom: 0;\\n}\\n\\n.card-header-pills {\\n  margin-right: -0.5rem;\\n  margin-left: -0.5rem;\\n}\\n\\n.card-img-overlay {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n  padding: 1rem;\\n  border-radius: calc(0.25rem - 1px);\\n}\\n\\n.card-img,\\n.card-img-top,\\n.card-img-bottom {\\n  width: 100%;\\n}\\n\\n.card-img,\\n.card-img-top {\\n  border-top-left-radius: calc(0.25rem - 1px);\\n  border-top-right-radius: calc(0.25rem - 1px);\\n}\\n\\n.card-img,\\n.card-img-bottom {\\n  border-bottom-right-radius: calc(0.25rem - 1px);\\n  border-bottom-left-radius: calc(0.25rem - 1px);\\n}\\n\\n.card-group > .card {\\n  margin-bottom: 0.75rem;\\n}\\n@media (min-width: 576px) {\\n  .card-group {\\n    display: flex;\\n    flex-flow: row wrap;\\n  }\\n  .card-group > .card {\\n    flex: 1 0 0%;\\n    margin-bottom: 0;\\n  }\\n  .card-group > .card + .card {\\n    margin-left: 0;\\n    border-left: 0;\\n  }\\n  .card-group > .card:not(:last-child) {\\n    border-top-right-radius: 0;\\n    border-bottom-right-radius: 0;\\n  }\\n  .card-group > .card:not(:last-child) .card-img-top,\\n.card-group > .card:not(:last-child) .card-header {\\n    border-top-right-radius: 0;\\n  }\\n  .card-group > .card:not(:last-child) .card-img-bottom,\\n.card-group > .card:not(:last-child) .card-footer {\\n    border-bottom-right-radius: 0;\\n  }\\n  .card-group > .card:not(:first-child) {\\n    border-top-left-radius: 0;\\n    border-bottom-left-radius: 0;\\n  }\\n  .card-group > .card:not(:first-child) .card-img-top,\\n.card-group > .card:not(:first-child) .card-header {\\n    border-top-left-radius: 0;\\n  }\\n  .card-group > .card:not(:first-child) .card-img-bottom,\\n.card-group > .card:not(:first-child) .card-footer {\\n    border-bottom-left-radius: 0;\\n  }\\n}\\n\\n.accordion-button {\\n  position: relative;\\n  display: flex;\\n  align-items: center;\\n  width: 100%;\\n  padding: 1rem 1.25rem;\\n  font-size: 1rem;\\n  color: #212529;\\n  text-align: left;\\n  background-color: #fff;\\n  border: 0;\\n  border-radius: 0;\\n  overflow-anchor: none;\\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out, border-radius 0.15s ease;\\n}\\n@media (prefers-reduced-motion: reduce) {\\n  .accordion-button {\\n    transition: none;\\n  }\\n}\\n.accordion-button:not(.collapsed) {\\n  color: #0c63e4;\\n  background-color: #e7f1ff;\\n  box-shadow: inset 0 -1px 0 rgba(0, 0, 0, 0.125);\\n}\\n.accordion-button:not(.collapsed)::after {\\n  background-image: url(\\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 16 16\' fill=\'%230c63e4\'%3e%3cpath fill-rule=\'evenodd\' d=\'M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\'/%3e%3c/svg%3e\\");\\n  transform: rotate(-180deg);\\n}\\n.accordion-button::after {\\n  flex-shrink: 0;\\n  width: 1.25rem;\\n  height: 1.25rem;\\n  margin-left: auto;\\n  content: \\"\\";\\n  background-image: url(\\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 16 16\' fill=\'%23212529\'%3e%3cpath fill-rule=\'evenodd\' d=\'M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\'/%3e%3c/svg%3e\\");\\n  background-repeat: no-repeat;\\n  background-size: 1.25rem;\\n  transition: transform 0.2s ease-in-out;\\n}\\n@media (prefers-reduced-motion: reduce) {\\n  .accordion-button::after {\\n    transition: none;\\n  }\\n}\\n.accordion-button:hover {\\n  z-index: 2;\\n}\\n.accordion-button:focus {\\n  z-index: 3;\\n  border-color: #86b7fe;\\n  outline: 0;\\n  box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);\\n}\\n\\n.accordion-header {\\n  margin-bottom: 0;\\n}\\n\\n.accordion-item {\\n  background-color: #fff;\\n  border: 1px solid rgba(0, 0, 0, 0.125);\\n}\\n.accordion-item:first-of-type {\\n  border-top-left-radius: 0.25rem;\\n  border-top-right-radius: 0.25rem;\\n}\\n.accordion-item:first-of-type .accordion-button {\\n  border-top-left-radius: calc(0.25rem - 1px);\\n  border-top-right-radius: calc(0.25rem - 1px);\\n}\\n.accordion-item:not(:first-of-type) {\\n  border-top: 0;\\n}\\n.accordion-item:last-of-type {\\n  border-bottom-right-radius: 0.25rem;\\n  border-bottom-left-radius: 0.25rem;\\n}\\n.accordion-item:last-of-type .accordion-button.collapsed {\\n  border-bottom-right-radius: calc(0.25rem - 1px);\\n  border-bottom-left-radius: calc(0.25rem - 1px);\\n}\\n.accordion-item:last-of-type .accordion-collapse {\\n  border-bottom-right-radius: 0.25rem;\\n  border-bottom-left-radius: 0.25rem;\\n}\\n\\n.accordion-body {\\n  padding: 1rem 1.25rem;\\n}\\n\\n.accordion-flush .accordion-collapse {\\n  border-width: 0;\\n}\\n.accordion-flush .accordion-item {\\n  border-right: 0;\\n  border-left: 0;\\n  border-radius: 0;\\n}\\n.accordion-flush .accordion-item:first-child {\\n  border-top: 0;\\n}\\n.accordion-flush .accordion-item:last-child {\\n  border-bottom: 0;\\n}\\n.accordion-flush .accordion-item .accordion-button {\\n  border-radius: 0;\\n}\\n\\n.breadcrumb {\\n  display: flex;\\n  flex-wrap: wrap;\\n  padding: 0 0;\\n  margin-bottom: 1rem;\\n  list-style: none;\\n}\\n\\n.breadcrumb-item + .breadcrumb-item {\\n  padding-left: 0.5rem;\\n}\\n.breadcrumb-item + .breadcrumb-item::before {\\n  float: left;\\n  padding-right: 0.5rem;\\n  color: #6c757d;\\n  content: var(--bs-breadcrumb-divider, \\"/\\") /* rtl: var(--bs-breadcrumb-divider, \\"/\\") */;\\n}\\n.breadcrumb-item.active {\\n  color: #6c757d;\\n}\\n\\n.pagination {\\n  display: flex;\\n  padding-left: 0;\\n  list-style: none;\\n}\\n\\n.page-link {\\n  position: relative;\\n  display: block;\\n  color: #0d6efd;\\n  text-decoration: none;\\n  background-color: #fff;\\n  border: 1px solid #dee2e6;\\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\\n}\\n@media (prefers-reduced-motion: reduce) {\\n  .page-link {\\n    transition: none;\\n  }\\n}\\n.page-link:hover {\\n  z-index: 2;\\n  color: #0a58ca;\\n  background-color: #e9ecef;\\n  border-color: #dee2e6;\\n}\\n.page-link:focus {\\n  z-index: 3;\\n  color: #0a58ca;\\n  background-color: #e9ecef;\\n  outline: 0;\\n  box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);\\n}\\n\\n.page-item:not(:first-child) .page-link {\\n  margin-left: -1px;\\n}\\n.page-item.active .page-link {\\n  z-index: 3;\\n  color: #fff;\\n  background-color: #0d6efd;\\n  border-color: #0d6efd;\\n}\\n.page-item.disabled .page-link {\\n  color: #6c757d;\\n  pointer-events: none;\\n  background-color: #fff;\\n  border-color: #dee2e6;\\n}\\n\\n.page-link {\\n  padding: 0.375rem 0.75rem;\\n}\\n\\n.page-item:first-child .page-link {\\n  border-top-left-radius: 0.25rem;\\n  border-bottom-left-radius: 0.25rem;\\n}\\n.page-item:last-child .page-link {\\n  border-top-right-radius: 0.25rem;\\n  border-bottom-right-radius: 0.25rem;\\n}\\n\\n.pagination-lg .page-link {\\n  padding: 0.75rem 1.5rem;\\n  font-size: 1.25rem;\\n}\\n.pagination-lg .page-item:first-child .page-link {\\n  border-top-left-radius: 0.3rem;\\n  border-bottom-left-radius: 0.3rem;\\n}\\n.pagination-lg .page-item:last-child .page-link {\\n  border-top-right-radius: 0.3rem;\\n  border-bottom-right-radius: 0.3rem;\\n}\\n\\n.pagination-sm .page-link {\\n  padding: 0.25rem 0.5rem;\\n  font-size: 0.875rem;\\n}\\n.pagination-sm .page-item:first-child .page-link {\\n  border-top-left-radius: 0.2rem;\\n  border-bottom-left-radius: 0.2rem;\\n}\\n.pagination-sm .page-item:last-child .page-link {\\n  border-top-right-radius: 0.2rem;\\n  border-bottom-right-radius: 0.2rem;\\n}\\n\\n.badge {\\n  display: inline-block;\\n  padding: 0.35em 0.65em;\\n  font-size: 0.75em;\\n  font-weight: 700;\\n  line-height: 1;\\n  color: #fff;\\n  text-align: center;\\n  white-space: nowrap;\\n  vertical-align: baseline;\\n  border-radius: 0.25rem;\\n}\\n.badge:empty {\\n  display: none;\\n}\\n\\n.btn .badge {\\n  position: relative;\\n  top: -1px;\\n}\\n\\n.alert {\\n  position: relative;\\n  padding: 1rem 1rem;\\n  margin-bottom: 1rem;\\n  border: 1px solid transparent;\\n  border-radius: 0.25rem;\\n}\\n\\n.alert-heading {\\n  color: inherit;\\n}\\n\\n.alert-link {\\n  font-weight: 700;\\n}\\n\\n.alert-dismissible {\\n  padding-right: 3rem;\\n}\\n.alert-dismissible .btn-close {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  z-index: 2;\\n  padding: 1.25rem 1rem;\\n}\\n\\n.alert-primary {\\n  color: #084298;\\n  background-color: #cfe2ff;\\n  border-color: #b6d4fe;\\n}\\n.alert-primary .alert-link {\\n  color: #06357a;\\n}\\n\\n.alert-secondary {\\n  color: #41464b;\\n  background-color: #e2e3e5;\\n  border-color: #d3d6d8;\\n}\\n.alert-secondary .alert-link {\\n  color: #34383c;\\n}\\n\\n.alert-success {\\n  color: #0f5132;\\n  background-color: #d1e7dd;\\n  border-color: #badbcc;\\n}\\n.alert-success .alert-link {\\n  color: #0c4128;\\n}\\n\\n.alert-info {\\n  color: #055160;\\n  background-color: #cff4fc;\\n  border-color: #b6effb;\\n}\\n.alert-info .alert-link {\\n  color: #04414d;\\n}\\n\\n.alert-warning {\\n  color: #664d03;\\n  background-color: #fff3cd;\\n  border-color: #ffecb5;\\n}\\n.alert-warning .alert-link {\\n  color: #523e02;\\n}\\n\\n.alert-danger {\\n  color: #842029;\\n  background-color: #f8d7da;\\n  border-color: #f5c2c7;\\n}\\n.alert-danger .alert-link {\\n  color: #6a1a21;\\n}\\n\\n.alert-light {\\n  color: #636464;\\n  background-color: #fefefe;\\n  border-color: #fdfdfe;\\n}\\n.alert-light .alert-link {\\n  color: #4f5050;\\n}\\n\\n.alert-dark {\\n  color: #141619;\\n  background-color: #d3d3d4;\\n  border-color: #bcbebf;\\n}\\n.alert-dark .alert-link {\\n  color: #101214;\\n}\\n\\n@-webkit-keyframes progress-bar-stripes {\\n  0% {\\n    background-position-x: 1rem;\\n  }\\n}\\n\\n@keyframes progress-bar-stripes {\\n  0% {\\n    background-position-x: 1rem;\\n  }\\n}\\n.progress {\\n  display: flex;\\n  height: 1rem;\\n  overflow: hidden;\\n  font-size: 0.75rem;\\n  background-color: #e9ecef;\\n  border-radius: 0.25rem;\\n}\\n\\n.progress-bar {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  overflow: hidden;\\n  color: #fff;\\n  text-align: center;\\n  white-space: nowrap;\\n  background-color: #0d6efd;\\n  transition: width 0.6s ease;\\n}\\n@media (prefers-reduced-motion: reduce) {\\n  .progress-bar {\\n    transition: none;\\n  }\\n}\\n\\n.progress-bar-striped {\\n  background-image: linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\\n  background-size: 1rem 1rem;\\n}\\n\\n.progress-bar-animated {\\n  -webkit-animation: 1s linear infinite progress-bar-stripes;\\n  animation: 1s linear infinite progress-bar-stripes;\\n}\\n@media (prefers-reduced-motion: reduce) {\\n  .progress-bar-animated {\\n    -webkit-animation: none;\\n    animation: none;\\n  }\\n}\\n\\n.list-group {\\n  display: flex;\\n  flex-direction: column;\\n  padding-left: 0;\\n  margin-bottom: 0;\\n  border-radius: 0.25rem;\\n}\\n\\n.list-group-numbered {\\n  list-style-type: none;\\n  counter-reset: section;\\n}\\n.list-group-numbered > li::before {\\n  content: counters(section, \\".\\") \\". \\";\\n  counter-increment: section;\\n}\\n\\n.list-group-item-action {\\n  width: 100%;\\n  color: #495057;\\n  text-align: inherit;\\n}\\n.list-group-item-action:hover, .list-group-item-action:focus {\\n  z-index: 1;\\n  color: #495057;\\n  text-decoration: none;\\n  background-color: #f8f9fa;\\n}\\n.list-group-item-action:active {\\n  color: #212529;\\n  background-color: #e9ecef;\\n}\\n\\n.list-group-item {\\n  position: relative;\\n  display: block;\\n  padding: 0.5rem 1rem;\\n  color: #212529;\\n  text-decoration: none;\\n  background-color: #fff;\\n  border: 1px solid rgba(0, 0, 0, 0.125);\\n}\\n.list-group-item:first-child {\\n  border-top-left-radius: inherit;\\n  border-top-right-radius: inherit;\\n}\\n.list-group-item:last-child {\\n  border-bottom-right-radius: inherit;\\n  border-bottom-left-radius: inherit;\\n}\\n.list-group-item.disabled, .list-group-item:disabled {\\n  color: #6c757d;\\n  pointer-events: none;\\n  background-color: #fff;\\n}\\n.list-group-item.active {\\n  z-index: 2;\\n  color: #fff;\\n  background-color: #0d6efd;\\n  border-color: #0d6efd;\\n}\\n.list-group-item + .list-group-item {\\n  border-top-width: 0;\\n}\\n.list-group-item + .list-group-item.active {\\n  margin-top: -1px;\\n  border-top-width: 1px;\\n}\\n\\n.list-group-horizontal {\\n  flex-direction: row;\\n}\\n.list-group-horizontal > .list-group-item:first-child {\\n  border-bottom-left-radius: 0.25rem;\\n  border-top-right-radius: 0;\\n}\\n.list-group-horizontal > .list-group-item:last-child {\\n  border-top-right-radius: 0.25rem;\\n  border-bottom-left-radius: 0;\\n}\\n.list-group-horizontal > .list-group-item.active {\\n  margin-top: 0;\\n}\\n.list-group-horizontal > .list-group-item + .list-group-item {\\n  border-top-width: 1px;\\n  border-left-width: 0;\\n}\\n.list-group-horizontal > .list-group-item + .list-group-item.active {\\n  margin-left: -1px;\\n  border-left-width: 1px;\\n}\\n\\n@media (min-width: 576px) {\\n  .list-group-horizontal-sm {\\n    flex-direction: row;\\n  }\\n  .list-group-horizontal-sm > .list-group-item:first-child {\\n    border-bottom-left-radius: 0.25rem;\\n    border-top-right-radius: 0;\\n  }\\n  .list-group-horizontal-sm > .list-group-item:last-child {\\n    border-top-right-radius: 0.25rem;\\n    border-bottom-left-radius: 0;\\n  }\\n  .list-group-horizontal-sm > .list-group-item.active {\\n    margin-top: 0;\\n  }\\n  .list-group-horizontal-sm > .list-group-item + .list-group-item {\\n    border-top-width: 1px;\\n    border-left-width: 0;\\n  }\\n  .list-group-horizontal-sm > .list-group-item + .list-group-item.active {\\n    margin-left: -1px;\\n    border-left-width: 1px;\\n  }\\n}\\n@media (min-width: 768px) {\\n  .list-group-horizontal-md {\\n    flex-direction: row;\\n  }\\n  .list-group-horizontal-md > .list-group-item:first-child {\\n    border-bottom-left-radius: 0.25rem;\\n    border-top-right-radius: 0;\\n  }\\n  .list-group-horizontal-md > .list-group-item:last-child {\\n    border-top-right-radius: 0.25rem;\\n    border-bottom-left-radius: 0;\\n  }\\n  .list-group-horizontal-md > .list-group-item.active {\\n    margin-top: 0;\\n  }\\n  .list-group-horizontal-md > .list-group-item + .list-group-item {\\n    border-top-width: 1px;\\n    border-left-width: 0;\\n  }\\n  .list-group-horizontal-md > .list-group-item + .list-group-item.active {\\n    margin-left: -1px;\\n    border-left-width: 1px;\\n  }\\n}\\n@media (min-width: 992px) {\\n  .list-group-horizontal-lg {\\n    flex-direction: row;\\n  }\\n  .list-group-horizontal-lg > .list-group-item:first-child {\\n    border-bottom-left-radius: 0.25rem;\\n    border-top-right-radius: 0;\\n  }\\n  .list-group-horizontal-lg > .list-group-item:last-child {\\n    border-top-right-radius: 0.25rem;\\n    border-bottom-left-radius: 0;\\n  }\\n  .list-group-horizontal-lg > .list-group-item.active {\\n    margin-top: 0;\\n  }\\n  .list-group-horizontal-lg > .list-group-item + .list-group-item {\\n    border-top-width: 1px;\\n    border-left-width: 0;\\n  }\\n  .list-group-horizontal-lg > .list-group-item + .list-group-item.active {\\n    margin-left: -1px;\\n    border-left-width: 1px;\\n  }\\n}\\n@media (min-width: 1200px) {\\n  .list-group-horizontal-xl {\\n    flex-direction: row;\\n  }\\n  .list-group-horizontal-xl > .list-group-item:first-child {\\n    border-bottom-left-radius: 0.25rem;\\n    border-top-right-radius: 0;\\n  }\\n  .list-group-horizontal-xl > .list-group-item:last-child {\\n    border-top-right-radius: 0.25rem;\\n    border-bottom-left-radius: 0;\\n  }\\n  .list-group-horizontal-xl > .list-group-item.active {\\n    margin-top: 0;\\n  }\\n  .list-group-horizontal-xl > .list-group-item + .list-group-item {\\n    border-top-width: 1px;\\n    border-left-width: 0;\\n  }\\n  .list-group-horizontal-xl > .list-group-item + .list-group-item.active {\\n    margin-left: -1px;\\n    border-left-width: 1px;\\n  }\\n}\\n@media (min-width: 1400px) {\\n  .list-group-horizontal-xxl {\\n    flex-direction: row;\\n  }\\n  .list-group-horizontal-xxl > .list-group-item:first-child {\\n    border-bottom-left-radius: 0.25rem;\\n    border-top-right-radius: 0;\\n  }\\n  .list-group-horizontal-xxl > .list-group-item:last-child {\\n    border-top-right-radius: 0.25rem;\\n    border-bottom-left-radius: 0;\\n  }\\n  .list-group-horizontal-xxl > .list-group-item.active {\\n    margin-top: 0;\\n  }\\n  .list-group-horizontal-xxl > .list-group-item + .list-group-item {\\n    border-top-width: 1px;\\n    border-left-width: 0;\\n  }\\n  .list-group-horizontal-xxl > .list-group-item + .list-group-item.active {\\n    margin-left: -1px;\\n    border-left-width: 1px;\\n  }\\n}\\n.list-group-flush {\\n  border-radius: 0;\\n}\\n.list-group-flush > .list-group-item {\\n  border-width: 0 0 1px;\\n}\\n.list-group-flush > .list-group-item:last-child {\\n  border-bottom-width: 0;\\n}\\n\\n.list-group-item-primary {\\n  color: #084298;\\n  background-color: #cfe2ff;\\n}\\n.list-group-item-primary.list-group-item-action:hover, .list-group-item-primary.list-group-item-action:focus {\\n  color: #084298;\\n  background-color: #bacbe6;\\n}\\n.list-group-item-primary.list-group-item-action.active {\\n  color: #fff;\\n  background-color: #084298;\\n  border-color: #084298;\\n}\\n\\n.list-group-item-secondary {\\n  color: #41464b;\\n  background-color: #e2e3e5;\\n}\\n.list-group-item-secondary.list-group-item-action:hover, .list-group-item-secondary.list-group-item-action:focus {\\n  color: #41464b;\\n  background-color: #cbccce;\\n}\\n.list-group-item-secondary.list-group-item-action.active {\\n  color: #fff;\\n  background-color: #41464b;\\n  border-color: #41464b;\\n}\\n\\n.list-group-item-success {\\n  color: #0f5132;\\n  background-color: #d1e7dd;\\n}\\n.list-group-item-success.list-group-item-action:hover, .list-group-item-success.list-group-item-action:focus {\\n  color: #0f5132;\\n  background-color: #bcd0c7;\\n}\\n.list-group-item-success.list-group-item-action.active {\\n  color: #fff;\\n  background-color: #0f5132;\\n  border-color: #0f5132;\\n}\\n\\n.list-group-item-info {\\n  color: #055160;\\n  background-color: #cff4fc;\\n}\\n.list-group-item-info.list-group-item-action:hover, .list-group-item-info.list-group-item-action:focus {\\n  color: #055160;\\n  background-color: #badce3;\\n}\\n.list-group-item-info.list-group-item-action.active {\\n  color: #fff;\\n  background-color: #055160;\\n  border-color: #055160;\\n}\\n\\n.list-group-item-warning {\\n  color: #664d03;\\n  background-color: #fff3cd;\\n}\\n.list-group-item-warning.list-group-item-action:hover, .list-group-item-warning.list-group-item-action:focus {\\n  color: #664d03;\\n  background-color: #e6dbb9;\\n}\\n.list-group-item-warning.list-group-item-action.active {\\n  color: #fff;\\n  background-color: #664d03;\\n  border-color: #664d03;\\n}\\n\\n.list-group-item-danger {\\n  color: #842029;\\n  background-color: #f8d7da;\\n}\\n.list-group-item-danger.list-group-item-action:hover, .list-group-item-danger.list-group-item-action:focus {\\n  color: #842029;\\n  background-color: #dfc2c4;\\n}\\n.list-group-item-danger.list-group-item-action.active {\\n  color: #fff;\\n  background-color: #842029;\\n  border-color: #842029;\\n}\\n\\n.list-group-item-light {\\n  color: #636464;\\n  background-color: #fefefe;\\n}\\n.list-group-item-light.list-group-item-action:hover, .list-group-item-light.list-group-item-action:focus {\\n  color: #636464;\\n  background-color: #e5e5e5;\\n}\\n.list-group-item-light.list-group-item-action.active {\\n  color: #fff;\\n  background-color: #636464;\\n  border-color: #636464;\\n}\\n\\n.list-group-item-dark {\\n  color: #141619;\\n  background-color: #d3d3d4;\\n}\\n.list-group-item-dark.list-group-item-action:hover, .list-group-item-dark.list-group-item-action:focus {\\n  color: #141619;\\n  background-color: #bebebf;\\n}\\n.list-group-item-dark.list-group-item-action.active {\\n  color: #fff;\\n  background-color: #141619;\\n  border-color: #141619;\\n}\\n\\n.btn-close {\\n  box-sizing: content-box;\\n  width: 1em;\\n  height: 1em;\\n  padding: 0.25em 0.25em;\\n  color: #000;\\n  background: transparent url(\\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 16 16\' fill=\'%23000\'%3e%3cpath d=\'M.293.293a1 1 0 011.414 0L8 6.586 14.293.293a1 1 0 111.414 1.414L9.414 8l6.293 6.293a1 1 0 01-1.414 1.414L8 9.414l-6.293 6.293a1 1 0 01-1.414-1.414L6.586 8 .293 1.707a1 1 0 010-1.414z\'/%3e%3c/svg%3e\\") center/1em auto no-repeat;\\n  border: 0;\\n  border-radius: 0.25rem;\\n  opacity: 0.5;\\n}\\n.btn-close:hover {\\n  color: #000;\\n  text-decoration: none;\\n  opacity: 0.75;\\n}\\n.btn-close:focus {\\n  outline: 0;\\n  box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);\\n  opacity: 1;\\n}\\n.btn-close:disabled, .btn-close.disabled {\\n  pointer-events: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  user-select: none;\\n  opacity: 0.25;\\n}\\n\\n.btn-close-white {\\n  filter: invert(1) grayscale(100%) brightness(200%);\\n}\\n\\n.toast {\\n  width: 350px;\\n  max-width: 100%;\\n  font-size: 0.875rem;\\n  pointer-events: auto;\\n  background-color: rgba(255, 255, 255, 0.85);\\n  background-clip: padding-box;\\n  border: 1px solid rgba(0, 0, 0, 0.1);\\n  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);\\n  border-radius: 0.25rem;\\n}\\n.toast.showing {\\n  opacity: 0;\\n}\\n.toast:not(.show) {\\n  display: none;\\n}\\n\\n.toast-container {\\n  width: -webkit-max-content;\\n  width: -moz-max-content;\\n  width: max-content;\\n  max-width: 100%;\\n  pointer-events: none;\\n}\\n.toast-container > :not(:last-child) {\\n  margin-bottom: 0.75rem;\\n}\\n\\n.toast-header {\\n  display: flex;\\n  align-items: center;\\n  padding: 0.5rem 0.75rem;\\n  color: #6c757d;\\n  background-color: rgba(255, 255, 255, 0.85);\\n  background-clip: padding-box;\\n  border-bottom: 1px solid rgba(0, 0, 0, 0.05);\\n  border-top-left-radius: calc(0.25rem - 1px);\\n  border-top-right-radius: calc(0.25rem - 1px);\\n}\\n.toast-header .btn-close {\\n  margin-right: -0.375rem;\\n  margin-left: 0.75rem;\\n}\\n\\n.toast-body {\\n  padding: 0.75rem;\\n  word-wrap: break-word;\\n}\\n\\n.modal {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  z-index: 1055;\\n  display: none;\\n  width: 100%;\\n  height: 100%;\\n  overflow-x: hidden;\\n  overflow-y: auto;\\n  outline: 0;\\n}\\n\\n.modal-dialog {\\n  position: relative;\\n  width: auto;\\n  margin: 0.5rem;\\n  pointer-events: none;\\n}\\n.modal.fade .modal-dialog {\\n  transition: transform 0.3s ease-out;\\n  transform: translate(0, -50px);\\n}\\n@media (prefers-reduced-motion: reduce) {\\n  .modal.fade .modal-dialog {\\n    transition: none;\\n  }\\n}\\n.modal.show .modal-dialog {\\n  transform: none;\\n}\\n.modal.modal-static .modal-dialog {\\n  transform: scale(1.02);\\n}\\n\\n.modal-dialog-scrollable {\\n  height: calc(100% - 1rem);\\n}\\n.modal-dialog-scrollable .modal-content {\\n  max-height: 100%;\\n  overflow: hidden;\\n}\\n.modal-dialog-scrollable .modal-body {\\n  overflow-y: auto;\\n}\\n\\n.modal-dialog-centered {\\n  display: flex;\\n  align-items: center;\\n  min-height: calc(100% - 1rem);\\n}\\n\\n.modal-content {\\n  position: relative;\\n  display: flex;\\n  flex-direction: column;\\n  width: 100%;\\n  pointer-events: auto;\\n  background-color: #fff;\\n  background-clip: padding-box;\\n  border: 1px solid rgba(0, 0, 0, 0.2);\\n  border-radius: 0.3rem;\\n  outline: 0;\\n}\\n\\n.modal-backdrop {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  z-index: 1050;\\n  width: 100vw;\\n  height: 100vh;\\n  background-color: #000;\\n}\\n.modal-backdrop.fade {\\n  opacity: 0;\\n}\\n.modal-backdrop.show {\\n  opacity: 0.5;\\n}\\n\\n.modal-header {\\n  display: flex;\\n  flex-shrink: 0;\\n  align-items: center;\\n  justify-content: space-between;\\n  padding: 1rem 1rem;\\n  border-bottom: 1px solid #dee2e6;\\n  border-top-left-radius: calc(0.3rem - 1px);\\n  border-top-right-radius: calc(0.3rem - 1px);\\n}\\n.modal-header .btn-close {\\n  padding: 0.5rem 0.5rem;\\n  margin: -0.5rem -0.5rem -0.5rem auto;\\n}\\n\\n.modal-title {\\n  margin-bottom: 0;\\n  line-height: 1.5;\\n}\\n\\n.modal-body {\\n  position: relative;\\n  flex: 1 1 auto;\\n  padding: 1rem;\\n}\\n\\n.modal-footer {\\n  display: flex;\\n  flex-wrap: wrap;\\n  flex-shrink: 0;\\n  align-items: center;\\n  justify-content: flex-end;\\n  padding: 0.75rem;\\n  border-top: 1px solid #dee2e6;\\n  border-bottom-right-radius: calc(0.3rem - 1px);\\n  border-bottom-left-radius: calc(0.3rem - 1px);\\n}\\n.modal-footer > * {\\n  margin: 0.25rem;\\n}\\n\\n@media (min-width: 576px) {\\n  .modal-dialog {\\n    max-width: 500px;\\n    margin: 1.75rem auto;\\n  }\\n\\n  .modal-dialog-scrollable {\\n    height: calc(100% - 3.5rem);\\n  }\\n\\n  .modal-dialog-centered {\\n    min-height: calc(100% - 3.5rem);\\n  }\\n\\n  .modal-sm {\\n    max-width: 300px;\\n  }\\n}\\n@media (min-width: 992px) {\\n  .modal-lg,\\n.modal-xl {\\n    max-width: 800px;\\n  }\\n}\\n@media (min-width: 1200px) {\\n  .modal-xl {\\n    max-width: 1140px;\\n  }\\n}\\n.modal-fullscreen {\\n  width: 100vw;\\n  max-width: none;\\n  height: 100%;\\n  margin: 0;\\n}\\n.modal-fullscreen .modal-content {\\n  height: 100%;\\n  border: 0;\\n  border-radius: 0;\\n}\\n.modal-fullscreen .modal-header {\\n  border-radius: 0;\\n}\\n.modal-fullscreen .modal-body {\\n  overflow-y: auto;\\n}\\n.modal-fullscreen .modal-footer {\\n  border-radius: 0;\\n}\\n\\n@media (max-width: 575.98px) {\\n  .modal-fullscreen-sm-down {\\n    width: 100vw;\\n    max-width: none;\\n    height: 100%;\\n    margin: 0;\\n  }\\n  .modal-fullscreen-sm-down .modal-content {\\n    height: 100%;\\n    border: 0;\\n    border-radius: 0;\\n  }\\n  .modal-fullscreen-sm-down .modal-header {\\n    border-radius: 0;\\n  }\\n  .modal-fullscreen-sm-down .modal-body {\\n    overflow-y: auto;\\n  }\\n  .modal-fullscreen-sm-down .modal-footer {\\n    border-radius: 0;\\n  }\\n}\\n@media (max-width: 767.98px) {\\n  .modal-fullscreen-md-down {\\n    width: 100vw;\\n    max-width: none;\\n    height: 100%;\\n    margin: 0;\\n  }\\n  .modal-fullscreen-md-down .modal-content {\\n    height: 100%;\\n    border: 0;\\n    border-radius: 0;\\n  }\\n  .modal-fullscreen-md-down .modal-header {\\n    border-radius: 0;\\n  }\\n  .modal-fullscreen-md-down .modal-body {\\n    overflow-y: auto;\\n  }\\n  .modal-fullscreen-md-down .modal-footer {\\n    border-radius: 0;\\n  }\\n}\\n@media (max-width: 991.98px) {\\n  .modal-fullscreen-lg-down {\\n    width: 100vw;\\n    max-width: none;\\n    height: 100%;\\n    margin: 0;\\n  }\\n  .modal-fullscreen-lg-down .modal-content {\\n    height: 100%;\\n    border: 0;\\n    border-radius: 0;\\n  }\\n  .modal-fullscreen-lg-down .modal-header {\\n    border-radius: 0;\\n  }\\n  .modal-fullscreen-lg-down .modal-body {\\n    overflow-y: auto;\\n  }\\n  .modal-fullscreen-lg-down .modal-footer {\\n    border-radius: 0;\\n  }\\n}\\n@media (max-width: 1199.98px) {\\n  .modal-fullscreen-xl-down {\\n    width: 100vw;\\n    max-width: none;\\n    height: 100%;\\n    margin: 0;\\n  }\\n  .modal-fullscreen-xl-down .modal-content {\\n    height: 100%;\\n    border: 0;\\n    border-radius: 0;\\n  }\\n  .modal-fullscreen-xl-down .modal-header {\\n    border-radius: 0;\\n  }\\n  .modal-fullscreen-xl-down .modal-body {\\n    overflow-y: auto;\\n  }\\n  .modal-fullscreen-xl-down .modal-footer {\\n    border-radius: 0;\\n  }\\n}\\n@media (max-width: 1399.98px) {\\n  .modal-fullscreen-xxl-down {\\n    width: 100vw;\\n    max-width: none;\\n    height: 100%;\\n    margin: 0;\\n  }\\n  .modal-fullscreen-xxl-down .modal-content {\\n    height: 100%;\\n    border: 0;\\n    border-radius: 0;\\n  }\\n  .modal-fullscreen-xxl-down .modal-header {\\n    border-radius: 0;\\n  }\\n  .modal-fullscreen-xxl-down .modal-body {\\n    overflow-y: auto;\\n  }\\n  .modal-fullscreen-xxl-down .modal-footer {\\n    border-radius: 0;\\n  }\\n}\\n.tooltip {\\n  position: absolute;\\n  z-index: 1080;\\n  display: block;\\n  margin: 0;\\n  font-family: var(--bs-font-sans-serif);\\n  font-style: normal;\\n  font-weight: 400;\\n  line-height: 1.5;\\n  text-align: left;\\n  text-align: start;\\n  text-decoration: none;\\n  text-shadow: none;\\n  text-transform: none;\\n  letter-spacing: normal;\\n  word-break: normal;\\n  word-spacing: normal;\\n  white-space: normal;\\n  line-break: auto;\\n  font-size: 0.875rem;\\n  word-wrap: break-word;\\n  opacity: 0;\\n}\\n.tooltip.show {\\n  opacity: 0.9;\\n}\\n.tooltip .tooltip-arrow {\\n  position: absolute;\\n  display: block;\\n  width: 0.8rem;\\n  height: 0.4rem;\\n}\\n.tooltip .tooltip-arrow::before {\\n  position: absolute;\\n  content: \\"\\";\\n  border-color: transparent;\\n  border-style: solid;\\n}\\n\\n.bs-tooltip-top, .bs-tooltip-auto[data-popper-placement^=top] {\\n  padding: 0.4rem 0;\\n}\\n.bs-tooltip-top .tooltip-arrow, .bs-tooltip-auto[data-popper-placement^=top] .tooltip-arrow {\\n  bottom: 0;\\n}\\n.bs-tooltip-top .tooltip-arrow::before, .bs-tooltip-auto[data-popper-placement^=top] .tooltip-arrow::before {\\n  top: -1px;\\n  border-width: 0.4rem 0.4rem 0;\\n  border-top-color: #000;\\n}\\n\\n.bs-tooltip-end, .bs-tooltip-auto[data-popper-placement^=right] {\\n  padding: 0 0.4rem;\\n}\\n.bs-tooltip-end .tooltip-arrow, .bs-tooltip-auto[data-popper-placement^=right] .tooltip-arrow {\\n  left: 0;\\n  width: 0.4rem;\\n  height: 0.8rem;\\n}\\n.bs-tooltip-end .tooltip-arrow::before, .bs-tooltip-auto[data-popper-placement^=right] .tooltip-arrow::before {\\n  right: -1px;\\n  border-width: 0.4rem 0.4rem 0.4rem 0;\\n  border-right-color: #000;\\n}\\n\\n.bs-tooltip-bottom, .bs-tooltip-auto[data-popper-placement^=bottom] {\\n  padding: 0.4rem 0;\\n}\\n.bs-tooltip-bottom .tooltip-arrow, .bs-tooltip-auto[data-popper-placement^=bottom] .tooltip-arrow {\\n  top: 0;\\n}\\n.bs-tooltip-bottom .tooltip-arrow::before, .bs-tooltip-auto[data-popper-placement^=bottom] .tooltip-arrow::before {\\n  bottom: -1px;\\n  border-width: 0 0.4rem 0.4rem;\\n  border-bottom-color: #000;\\n}\\n\\n.bs-tooltip-start, .bs-tooltip-auto[data-popper-placement^=left] {\\n  padding: 0 0.4rem;\\n}\\n.bs-tooltip-start .tooltip-arrow, .bs-tooltip-auto[data-popper-placement^=left] .tooltip-arrow {\\n  right: 0;\\n  width: 0.4rem;\\n  height: 0.8rem;\\n}\\n.bs-tooltip-start .tooltip-arrow::before, .bs-tooltip-auto[data-popper-placement^=left] .tooltip-arrow::before {\\n  left: -1px;\\n  border-width: 0.4rem 0 0.4rem 0.4rem;\\n  border-left-color: #000;\\n}\\n\\n.tooltip-inner {\\n  max-width: 200px;\\n  padding: 0.25rem 0.5rem;\\n  color: #fff;\\n  text-align: center;\\n  background-color: #000;\\n  border-radius: 0.25rem;\\n}\\n\\n.popover {\\n  position: absolute;\\n  top: 0;\\n  left: 0 /* rtl:ignore */;\\n  z-index: 1070;\\n  display: block;\\n  max-width: 276px;\\n  font-family: var(--bs-font-sans-serif);\\n  font-style: normal;\\n  font-weight: 400;\\n  line-height: 1.5;\\n  text-align: left;\\n  text-align: start;\\n  text-decoration: none;\\n  text-shadow: none;\\n  text-transform: none;\\n  letter-spacing: normal;\\n  word-break: normal;\\n  word-spacing: normal;\\n  white-space: normal;\\n  line-break: auto;\\n  font-size: 0.875rem;\\n  word-wrap: break-word;\\n  background-color: #fff;\\n  background-clip: padding-box;\\n  border: 1px solid rgba(0, 0, 0, 0.2);\\n  border-radius: 0.3rem;\\n}\\n.popover .popover-arrow {\\n  position: absolute;\\n  display: block;\\n  width: 1rem;\\n  height: 0.5rem;\\n}\\n.popover .popover-arrow::before, .popover .popover-arrow::after {\\n  position: absolute;\\n  display: block;\\n  content: \\"\\";\\n  border-color: transparent;\\n  border-style: solid;\\n}\\n\\n.bs-popover-top > .popover-arrow, .bs-popover-auto[data-popper-placement^=top] > .popover-arrow {\\n  bottom: calc(-0.5rem - 1px);\\n}\\n.bs-popover-top > .popover-arrow::before, .bs-popover-auto[data-popper-placement^=top] > .popover-arrow::before {\\n  bottom: 0;\\n  border-width: 0.5rem 0.5rem 0;\\n  border-top-color: rgba(0, 0, 0, 0.25);\\n}\\n.bs-popover-top > .popover-arrow::after, .bs-popover-auto[data-popper-placement^=top] > .popover-arrow::after {\\n  bottom: 1px;\\n  border-width: 0.5rem 0.5rem 0;\\n  border-top-color: #fff;\\n}\\n\\n.bs-popover-end > .popover-arrow, .bs-popover-auto[data-popper-placement^=right] > .popover-arrow {\\n  left: calc(-0.5rem - 1px);\\n  width: 0.5rem;\\n  height: 1rem;\\n}\\n.bs-popover-end > .popover-arrow::before, .bs-popover-auto[data-popper-placement^=right] > .popover-arrow::before {\\n  left: 0;\\n  border-width: 0.5rem 0.5rem 0.5rem 0;\\n  border-right-color: rgba(0, 0, 0, 0.25);\\n}\\n.bs-popover-end > .popover-arrow::after, .bs-popover-auto[data-popper-placement^=right] > .popover-arrow::after {\\n  left: 1px;\\n  border-width: 0.5rem 0.5rem 0.5rem 0;\\n  border-right-color: #fff;\\n}\\n\\n.bs-popover-bottom > .popover-arrow, .bs-popover-auto[data-popper-placement^=bottom] > .popover-arrow {\\n  top: calc(-0.5rem - 1px);\\n}\\n.bs-popover-bottom > .popover-arrow::before, .bs-popover-auto[data-popper-placement^=bottom] > .popover-arrow::before {\\n  top: 0;\\n  border-width: 0 0.5rem 0.5rem 0.5rem;\\n  border-bottom-color: rgba(0, 0, 0, 0.25);\\n}\\n.bs-popover-bottom > .popover-arrow::after, .bs-popover-auto[data-popper-placement^=bottom] > .popover-arrow::after {\\n  top: 1px;\\n  border-width: 0 0.5rem 0.5rem 0.5rem;\\n  border-bottom-color: #fff;\\n}\\n.bs-popover-bottom .popover-header::before, .bs-popover-auto[data-popper-placement^=bottom] .popover-header::before {\\n  position: absolute;\\n  top: 0;\\n  left: 50%;\\n  display: block;\\n  width: 1rem;\\n  margin-left: -0.5rem;\\n  content: \\"\\";\\n  border-bottom: 1px solid #f0f0f0;\\n}\\n\\n.bs-popover-start > .popover-arrow, .bs-popover-auto[data-popper-placement^=left] > .popover-arrow {\\n  right: calc(-0.5rem - 1px);\\n  width: 0.5rem;\\n  height: 1rem;\\n}\\n.bs-popover-start > .popover-arrow::before, .bs-popover-auto[data-popper-placement^=left] > .popover-arrow::before {\\n  right: 0;\\n  border-width: 0.5rem 0 0.5rem 0.5rem;\\n  border-left-color: rgba(0, 0, 0, 0.25);\\n}\\n.bs-popover-start > .popover-arrow::after, .bs-popover-auto[data-popper-placement^=left] > .popover-arrow::after {\\n  right: 1px;\\n  border-width: 0.5rem 0 0.5rem 0.5rem;\\n  border-left-color: #fff;\\n}\\n\\n.popover-header {\\n  padding: 0.5rem 1rem;\\n  margin-bottom: 0;\\n  font-size: 1rem;\\n  background-color: #f0f0f0;\\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\\n  border-top-left-radius: calc(0.3rem - 1px);\\n  border-top-right-radius: calc(0.3rem - 1px);\\n}\\n.popover-header:empty {\\n  display: none;\\n}\\n\\n.popover-body {\\n  padding: 1rem 1rem;\\n  color: #212529;\\n}\\n\\n.carousel {\\n  position: relative;\\n}\\n\\n.carousel.pointer-event {\\n  touch-action: pan-y;\\n}\\n\\n.carousel-inner {\\n  position: relative;\\n  width: 100%;\\n  overflow: hidden;\\n}\\n.carousel-inner::after {\\n  display: block;\\n  clear: both;\\n  content: \\"\\";\\n}\\n\\n.carousel-item {\\n  position: relative;\\n  display: none;\\n  float: left;\\n  width: 100%;\\n  margin-right: -100%;\\n  -webkit-backface-visibility: hidden;\\n  backface-visibility: hidden;\\n  transition: transform 0.6s ease-in-out;\\n}\\n@media (prefers-reduced-motion: reduce) {\\n  .carousel-item {\\n    transition: none;\\n  }\\n}\\n\\n.carousel-item.active,\\n.carousel-item-next,\\n.carousel-item-prev {\\n  display: block;\\n}\\n\\n/* rtl:begin:ignore */\\n.carousel-item-next:not(.carousel-item-start),\\n.active.carousel-item-end {\\n  transform: translateX(100%);\\n}\\n\\n.carousel-item-prev:not(.carousel-item-end),\\n.active.carousel-item-start {\\n  transform: translateX(-100%);\\n}\\n\\n/* rtl:end:ignore */\\n.carousel-fade .carousel-item {\\n  opacity: 0;\\n  transition-property: opacity;\\n  transform: none;\\n}\\n.carousel-fade .carousel-item.active,\\n.carousel-fade .carousel-item-next.carousel-item-start,\\n.carousel-fade .carousel-item-prev.carousel-item-end {\\n  z-index: 1;\\n  opacity: 1;\\n}\\n.carousel-fade .active.carousel-item-start,\\n.carousel-fade .active.carousel-item-end {\\n  z-index: 0;\\n  opacity: 0;\\n  transition: opacity 0s 0.6s;\\n}\\n@media (prefers-reduced-motion: reduce) {\\n  .carousel-fade .active.carousel-item-start,\\n.carousel-fade .active.carousel-item-end {\\n    transition: none;\\n  }\\n}\\n\\n.carousel-control-prev,\\n.carousel-control-next {\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  z-index: 1;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  width: 15%;\\n  padding: 0;\\n  color: #fff;\\n  text-align: center;\\n  background: none;\\n  border: 0;\\n  opacity: 0.5;\\n  transition: opacity 0.15s ease;\\n}\\n@media (prefers-reduced-motion: reduce) {\\n  .carousel-control-prev,\\n.carousel-control-next {\\n    transition: none;\\n  }\\n}\\n.carousel-control-prev:hover, .carousel-control-prev:focus,\\n.carousel-control-next:hover,\\n.carousel-control-next:focus {\\n  color: #fff;\\n  text-decoration: none;\\n  outline: 0;\\n  opacity: 0.9;\\n}\\n\\n.carousel-control-prev {\\n  left: 0;\\n}\\n\\n.carousel-control-next {\\n  right: 0;\\n}\\n\\n.carousel-control-prev-icon,\\n.carousel-control-next-icon {\\n  display: inline-block;\\n  width: 2rem;\\n  height: 2rem;\\n  background-repeat: no-repeat;\\n  background-position: 50%;\\n  background-size: 100% 100%;\\n}\\n\\n/* rtl:options: {\\n  \\"autoRename\\": true,\\n  \\"stringMap\\":[ {\\n    \\"name\\"    : \\"prev-next\\",\\n    \\"search\\"  : \\"prev\\",\\n    \\"replace\\" : \\"next\\"\\n  } ]\\n} */\\n.carousel-control-prev-icon {\\n  background-image: url(\\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 16 16\' fill=\'%23fff\'%3e%3cpath d=\'M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z\'/%3e%3c/svg%3e\\");\\n}\\n\\n.carousel-control-next-icon {\\n  background-image: url(\\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 16 16\' fill=\'%23fff\'%3e%3cpath d=\'M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z\'/%3e%3c/svg%3e\\");\\n}\\n\\n.carousel-indicators {\\n  position: absolute;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n  z-index: 2;\\n  display: flex;\\n  justify-content: center;\\n  padding: 0;\\n  margin-right: 15%;\\n  margin-bottom: 1rem;\\n  margin-left: 15%;\\n  list-style: none;\\n}\\n.carousel-indicators [data-bs-target] {\\n  box-sizing: content-box;\\n  flex: 0 1 auto;\\n  width: 30px;\\n  height: 3px;\\n  padding: 0;\\n  margin-right: 3px;\\n  margin-left: 3px;\\n  text-indent: -999px;\\n  cursor: pointer;\\n  background-color: #fff;\\n  background-clip: padding-box;\\n  border: 0;\\n  border-top: 10px solid transparent;\\n  border-bottom: 10px solid transparent;\\n  opacity: 0.5;\\n  transition: opacity 0.6s ease;\\n}\\n@media (prefers-reduced-motion: reduce) {\\n  .carousel-indicators [data-bs-target] {\\n    transition: none;\\n  }\\n}\\n.carousel-indicators .active {\\n  opacity: 1;\\n}\\n\\n.carousel-caption {\\n  position: absolute;\\n  right: 15%;\\n  bottom: 1.25rem;\\n  left: 15%;\\n  padding-top: 1.25rem;\\n  padding-bottom: 1.25rem;\\n  color: #fff;\\n  text-align: center;\\n}\\n\\n.carousel-dark .carousel-control-prev-icon,\\n.carousel-dark .carousel-control-next-icon {\\n  filter: invert(1) grayscale(100);\\n}\\n.carousel-dark .carousel-indicators [data-bs-target] {\\n  background-color: #000;\\n}\\n.carousel-dark .carousel-caption {\\n  color: #000;\\n}\\n\\n@-webkit-keyframes spinner-border {\\n  to {\\n    transform: rotate(360deg) /* rtl:ignore */;\\n  }\\n}\\n\\n@keyframes spinner-border {\\n  to {\\n    transform: rotate(360deg) /* rtl:ignore */;\\n  }\\n}\\n.spinner-border {\\n  display: inline-block;\\n  width: 2rem;\\n  height: 2rem;\\n  vertical-align: -0.125em;\\n  border: 0.25em solid currentColor;\\n  border-right-color: transparent;\\n  border-radius: 50%;\\n  -webkit-animation: 0.75s linear infinite spinner-border;\\n  animation: 0.75s linear infinite spinner-border;\\n}\\n\\n.spinner-border-sm {\\n  width: 1rem;\\n  height: 1rem;\\n  border-width: 0.2em;\\n}\\n\\n@-webkit-keyframes spinner-grow {\\n  0% {\\n    transform: scale(0);\\n  }\\n  50% {\\n    opacity: 1;\\n    transform: none;\\n  }\\n}\\n\\n@keyframes spinner-grow {\\n  0% {\\n    transform: scale(0);\\n  }\\n  50% {\\n    opacity: 1;\\n    transform: none;\\n  }\\n}\\n.spinner-grow {\\n  display: inline-block;\\n  width: 2rem;\\n  height: 2rem;\\n  vertical-align: -0.125em;\\n  background-color: currentColor;\\n  border-radius: 50%;\\n  opacity: 0;\\n  -webkit-animation: 0.75s linear infinite spinner-grow;\\n  animation: 0.75s linear infinite spinner-grow;\\n}\\n\\n.spinner-grow-sm {\\n  width: 1rem;\\n  height: 1rem;\\n}\\n\\n@media (prefers-reduced-motion: reduce) {\\n  .spinner-border,\\n.spinner-grow {\\n    -webkit-animation-duration: 1.5s;\\n    animation-duration: 1.5s;\\n  }\\n}\\n.offcanvas {\\n  position: fixed;\\n  bottom: 0;\\n  z-index: 1045;\\n  display: flex;\\n  flex-direction: column;\\n  max-width: 100%;\\n  visibility: hidden;\\n  background-color: #fff;\\n  background-clip: padding-box;\\n  outline: 0;\\n  transition: transform 0.3s ease-in-out;\\n}\\n@media (prefers-reduced-motion: reduce) {\\n  .offcanvas {\\n    transition: none;\\n  }\\n}\\n\\n.offcanvas-backdrop {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  z-index: 1040;\\n  width: 100vw;\\n  height: 100vh;\\n  background-color: #000;\\n}\\n.offcanvas-backdrop.fade {\\n  opacity: 0;\\n}\\n.offcanvas-backdrop.show {\\n  opacity: 0.5;\\n}\\n\\n.offcanvas-header {\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  padding: 1rem 1rem;\\n}\\n.offcanvas-header .btn-close {\\n  padding: 0.5rem 0.5rem;\\n  margin-top: -0.5rem;\\n  margin-right: -0.5rem;\\n  margin-bottom: -0.5rem;\\n}\\n\\n.offcanvas-title {\\n  margin-bottom: 0;\\n  line-height: 1.5;\\n}\\n\\n.offcanvas-body {\\n  flex-grow: 1;\\n  padding: 1rem 1rem;\\n  overflow-y: auto;\\n}\\n\\n.offcanvas-start {\\n  top: 0;\\n  left: 0;\\n  width: 400px;\\n  border-right: 1px solid rgba(0, 0, 0, 0.2);\\n  transform: translateX(-100%);\\n}\\n\\n.offcanvas-end {\\n  top: 0;\\n  right: 0;\\n  width: 400px;\\n  border-left: 1px solid rgba(0, 0, 0, 0.2);\\n  transform: translateX(100%);\\n}\\n\\n.offcanvas-top {\\n  top: 0;\\n  right: 0;\\n  left: 0;\\n  height: 30vh;\\n  max-height: 100%;\\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\\n  transform: translateY(-100%);\\n}\\n\\n.offcanvas-bottom {\\n  right: 0;\\n  left: 0;\\n  height: 30vh;\\n  max-height: 100%;\\n  border-top: 1px solid rgba(0, 0, 0, 0.2);\\n  transform: translateY(100%);\\n}\\n\\n.offcanvas.show {\\n  transform: none;\\n}\\n\\n.placeholder {\\n  display: inline-block;\\n  min-height: 1em;\\n  vertical-align: middle;\\n  cursor: wait;\\n  background-color: currentColor;\\n  opacity: 0.5;\\n}\\n.placeholder.btn::before {\\n  display: inline-block;\\n  content: \\"\\";\\n}\\n\\n.placeholder-xs {\\n  min-height: 0.6em;\\n}\\n\\n.placeholder-sm {\\n  min-height: 0.8em;\\n}\\n\\n.placeholder-lg {\\n  min-height: 1.2em;\\n}\\n\\n.placeholder-glow .placeholder {\\n  -webkit-animation: placeholder-glow 2s ease-in-out infinite;\\n  animation: placeholder-glow 2s ease-in-out infinite;\\n}\\n\\n@-webkit-keyframes placeholder-glow {\\n  50% {\\n    opacity: 0.2;\\n  }\\n}\\n\\n@keyframes placeholder-glow {\\n  50% {\\n    opacity: 0.2;\\n  }\\n}\\n.placeholder-wave {\\n  -webkit-mask-image: linear-gradient(130deg, #000 55%, rgba(0, 0, 0, 0.8) 75%, #000 95%);\\n  mask-image: linear-gradient(130deg, #000 55%, rgba(0, 0, 0, 0.8) 75%, #000 95%);\\n  -webkit-mask-size: 200% 100%;\\n  mask-size: 200% 100%;\\n  -webkit-animation: placeholder-wave 2s linear infinite;\\n  animation: placeholder-wave 2s linear infinite;\\n}\\n\\n@-webkit-keyframes placeholder-wave {\\n  100% {\\n    -webkit-mask-position: -200% 0%;\\n    mask-position: -200% 0%;\\n  }\\n}\\n\\n@keyframes placeholder-wave {\\n  100% {\\n    -webkit-mask-position: -200% 0%;\\n    mask-position: -200% 0%;\\n  }\\n}\\n.clearfix::after {\\n  display: block;\\n  clear: both;\\n  content: \\"\\";\\n}\\n\\n.link-primary {\\n  color: #0d6efd;\\n}\\n.link-primary:hover, .link-primary:focus {\\n  color: #0a58ca;\\n}\\n\\n.link-secondary {\\n  color: #6c757d;\\n}\\n.link-secondary:hover, .link-secondary:focus {\\n  color: #565e64;\\n}\\n\\n.link-success {\\n  color: #198754;\\n}\\n.link-success:hover, .link-success:focus {\\n  color: #146c43;\\n}\\n\\n.link-info {\\n  color: #0dcaf0;\\n}\\n.link-info:hover, .link-info:focus {\\n  color: #3dd5f3;\\n}\\n\\n.link-warning {\\n  color: #ffc107;\\n}\\n.link-warning:hover, .link-warning:focus {\\n  color: #ffcd39;\\n}\\n\\n.link-danger {\\n  color: #dc3545;\\n}\\n.link-danger:hover, .link-danger:focus {\\n  color: #b02a37;\\n}\\n\\n.link-light {\\n  color: #f8f9fa;\\n}\\n.link-light:hover, .link-light:focus {\\n  color: #f9fafb;\\n}\\n\\n.link-dark {\\n  color: #212529;\\n}\\n.link-dark:hover, .link-dark:focus {\\n  color: #1a1e21;\\n}\\n\\n.ratio {\\n  position: relative;\\n  width: 100%;\\n}\\n.ratio::before {\\n  display: block;\\n  padding-top: var(--bs-aspect-ratio);\\n  content: \\"\\";\\n}\\n.ratio > * {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.ratio-1x1 {\\n  --bs-aspect-ratio: 100%;\\n}\\n\\n.ratio-4x3 {\\n  --bs-aspect-ratio: calc(3 / 4 * 100%);\\n}\\n\\n.ratio-16x9 {\\n  --bs-aspect-ratio: calc(9 / 16 * 100%);\\n}\\n\\n.ratio-21x9 {\\n  --bs-aspect-ratio: calc(9 / 21 * 100%);\\n}\\n\\n.fixed-top {\\n  position: fixed;\\n  top: 0;\\n  right: 0;\\n  left: 0;\\n  z-index: 1030;\\n}\\n\\n.fixed-bottom {\\n  position: fixed;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n  z-index: 1030;\\n}\\n\\n.sticky-top {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0;\\n  z-index: 1020;\\n}\\n\\n@media (min-width: 576px) {\\n  .sticky-sm-top {\\n    position: -webkit-sticky;\\n    position: sticky;\\n    top: 0;\\n    z-index: 1020;\\n  }\\n}\\n@media (min-width: 768px) {\\n  .sticky-md-top {\\n    position: -webkit-sticky;\\n    position: sticky;\\n    top: 0;\\n    z-index: 1020;\\n  }\\n}\\n@media (min-width: 992px) {\\n  .sticky-lg-top {\\n    position: -webkit-sticky;\\n    position: sticky;\\n    top: 0;\\n    z-index: 1020;\\n  }\\n}\\n@media (min-width: 1200px) {\\n  .sticky-xl-top {\\n    position: -webkit-sticky;\\n    position: sticky;\\n    top: 0;\\n    z-index: 1020;\\n  }\\n}\\n@media (min-width: 1400px) {\\n  .sticky-xxl-top {\\n    position: -webkit-sticky;\\n    position: sticky;\\n    top: 0;\\n    z-index: 1020;\\n  }\\n}\\n.hstack {\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  align-self: stretch;\\n}\\n\\n.vstack {\\n  display: flex;\\n  flex: 1 1 auto;\\n  flex-direction: column;\\n  align-self: stretch;\\n}\\n\\n.visually-hidden,\\n.visually-hidden-focusable:not(:focus):not(:focus-within) {\\n  position: absolute !important;\\n  width: 1px !important;\\n  height: 1px !important;\\n  padding: 0 !important;\\n  margin: -1px !important;\\n  overflow: hidden !important;\\n  clip: rect(0, 0, 0, 0) !important;\\n  white-space: nowrap !important;\\n  border: 0 !important;\\n}\\n\\n.stretched-link::after {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n  z-index: 1;\\n  content: \\"\\";\\n}\\n\\n.text-truncate {\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n}\\n\\n.vr {\\n  display: inline-block;\\n  align-self: stretch;\\n  width: 1px;\\n  min-height: 1em;\\n  background-color: currentColor;\\n  opacity: 0.25;\\n}\\n\\n.align-baseline {\\n  vertical-align: baseline !important;\\n}\\n\\n.align-top {\\n  vertical-align: top !important;\\n}\\n\\n.align-middle {\\n  vertical-align: middle !important;\\n}\\n\\n.align-bottom {\\n  vertical-align: bottom !important;\\n}\\n\\n.align-text-bottom {\\n  vertical-align: text-bottom !important;\\n}\\n\\n.align-text-top {\\n  vertical-align: text-top !important;\\n}\\n\\n.float-start {\\n  float: left !important;\\n}\\n\\n.float-end {\\n  float: right !important;\\n}\\n\\n.float-none {\\n  float: none !important;\\n}\\n\\n.opacity-0 {\\n  opacity: 0 !important;\\n}\\n\\n.opacity-25 {\\n  opacity: 0.25 !important;\\n}\\n\\n.opacity-50 {\\n  opacity: 0.5 !important;\\n}\\n\\n.opacity-75 {\\n  opacity: 0.75 !important;\\n}\\n\\n.opacity-100 {\\n  opacity: 1 !important;\\n}\\n\\n.overflow-auto {\\n  overflow: auto !important;\\n}\\n\\n.overflow-hidden {\\n  overflow: hidden !important;\\n}\\n\\n.overflow-visible {\\n  overflow: visible !important;\\n}\\n\\n.overflow-scroll {\\n  overflow: scroll !important;\\n}\\n\\n.d-inline {\\n  display: inline !important;\\n}\\n\\n.d-inline-block {\\n  display: inline-block !important;\\n}\\n\\n.d-block {\\n  display: block !important;\\n}\\n\\n.d-grid {\\n  display: grid !important;\\n}\\n\\n.d-table {\\n  display: table !important;\\n}\\n\\n.d-table-row {\\n  display: table-row !important;\\n}\\n\\n.d-table-cell {\\n  display: table-cell !important;\\n}\\n\\n.d-flex {\\n  display: flex !important;\\n}\\n\\n.d-inline-flex {\\n  display: inline-flex !important;\\n}\\n\\n.d-none {\\n  display: none !important;\\n}\\n\\n.shadow {\\n  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;\\n}\\n\\n.shadow-sm {\\n  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;\\n}\\n\\n.shadow-lg {\\n  box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.175) !important;\\n}\\n\\n.shadow-none {\\n  box-shadow: none !important;\\n}\\n\\n.position-static {\\n  position: static !important;\\n}\\n\\n.position-relative {\\n  position: relative !important;\\n}\\n\\n.position-absolute {\\n  position: absolute !important;\\n}\\n\\n.position-fixed {\\n  position: fixed !important;\\n}\\n\\n.position-sticky {\\n  position: -webkit-sticky !important;\\n  position: sticky !important;\\n}\\n\\n.top-0 {\\n  top: 0 !important;\\n}\\n\\n.top-50 {\\n  top: 50% !important;\\n}\\n\\n.top-100 {\\n  top: 100% !important;\\n}\\n\\n.bottom-0 {\\n  bottom: 0 !important;\\n}\\n\\n.bottom-50 {\\n  bottom: 50% !important;\\n}\\n\\n.bottom-100 {\\n  bottom: 100% !important;\\n}\\n\\n.start-0 {\\n  left: 0 !important;\\n}\\n\\n.start-50 {\\n  left: 50% !important;\\n}\\n\\n.start-100 {\\n  left: 100% !important;\\n}\\n\\n.end-0 {\\n  right: 0 !important;\\n}\\n\\n.end-50 {\\n  right: 50% !important;\\n}\\n\\n.end-100 {\\n  right: 100% !important;\\n}\\n\\n.translate-middle {\\n  transform: translate(-50%, -50%) !important;\\n}\\n\\n.translate-middle-x {\\n  transform: translateX(-50%) !important;\\n}\\n\\n.translate-middle-y {\\n  transform: translateY(-50%) !important;\\n}\\n\\n.border {\\n  border: 1px solid #dee2e6 !important;\\n}\\n\\n.border-0 {\\n  border: 0 !important;\\n}\\n\\n.border-top {\\n  border-top: 1px solid #dee2e6 !important;\\n}\\n\\n.border-top-0 {\\n  border-top: 0 !important;\\n}\\n\\n.border-end {\\n  border-right: 1px solid #dee2e6 !important;\\n}\\n\\n.border-end-0 {\\n  border-right: 0 !important;\\n}\\n\\n.border-bottom {\\n  border-bottom: 1px solid #dee2e6 !important;\\n}\\n\\n.border-bottom-0 {\\n  border-bottom: 0 !important;\\n}\\n\\n.border-start {\\n  border-left: 1px solid #dee2e6 !important;\\n}\\n\\n.border-start-0 {\\n  border-left: 0 !important;\\n}\\n\\n.border-primary {\\n  border-color: #0d6efd !important;\\n}\\n\\n.border-secondary {\\n  border-color: #6c757d !important;\\n}\\n\\n.border-success {\\n  border-color: #198754 !important;\\n}\\n\\n.border-info {\\n  border-color: #0dcaf0 !important;\\n}\\n\\n.border-warning {\\n  border-color: #ffc107 !important;\\n}\\n\\n.border-danger {\\n  border-color: #dc3545 !important;\\n}\\n\\n.border-light {\\n  border-color: #f8f9fa !important;\\n}\\n\\n.border-dark {\\n  border-color: #212529 !important;\\n}\\n\\n.border-white {\\n  border-color: #fff !important;\\n}\\n\\n.border-1 {\\n  border-width: 1px !important;\\n}\\n\\n.border-2 {\\n  border-width: 2px !important;\\n}\\n\\n.border-3 {\\n  border-width: 3px !important;\\n}\\n\\n.border-4 {\\n  border-width: 4px !important;\\n}\\n\\n.border-5 {\\n  border-width: 5px !important;\\n}\\n\\n.w-25 {\\n  width: 25% !important;\\n}\\n\\n.w-50 {\\n  width: 50% !important;\\n}\\n\\n.w-75 {\\n  width: 75% !important;\\n}\\n\\n.w-100 {\\n  width: 100% !important;\\n}\\n\\n.w-auto {\\n  width: auto !important;\\n}\\n\\n.mw-100 {\\n  max-width: 100% !important;\\n}\\n\\n.vw-100 {\\n  width: 100vw !important;\\n}\\n\\n.min-vw-100 {\\n  min-width: 100vw !important;\\n}\\n\\n.h-25 {\\n  height: 25% !important;\\n}\\n\\n.h-50 {\\n  height: 50% !important;\\n}\\n\\n.h-75 {\\n  height: 75% !important;\\n}\\n\\n.h-100 {\\n  height: 100% !important;\\n}\\n\\n.h-auto {\\n  height: auto !important;\\n}\\n\\n.mh-100 {\\n  max-height: 100% !important;\\n}\\n\\n.vh-100 {\\n  height: 100vh !important;\\n}\\n\\n.min-vh-100 {\\n  min-height: 100vh !important;\\n}\\n\\n.flex-fill {\\n  flex: 1 1 auto !important;\\n}\\n\\n.flex-row {\\n  flex-direction: row !important;\\n}\\n\\n.flex-column {\\n  flex-direction: column !important;\\n}\\n\\n.flex-row-reverse {\\n  flex-direction: row-reverse !important;\\n}\\n\\n.flex-column-reverse {\\n  flex-direction: column-reverse !important;\\n}\\n\\n.flex-grow-0 {\\n  flex-grow: 0 !important;\\n}\\n\\n.flex-grow-1 {\\n  flex-grow: 1 !important;\\n}\\n\\n.flex-shrink-0 {\\n  flex-shrink: 0 !important;\\n}\\n\\n.flex-shrink-1 {\\n  flex-shrink: 1 !important;\\n}\\n\\n.flex-wrap {\\n  flex-wrap: wrap !important;\\n}\\n\\n.flex-nowrap {\\n  flex-wrap: nowrap !important;\\n}\\n\\n.flex-wrap-reverse {\\n  flex-wrap: wrap-reverse !important;\\n}\\n\\n.gap-0 {\\n  gap: 0 !important;\\n}\\n\\n.gap-1 {\\n  gap: 0.25rem !important;\\n}\\n\\n.gap-2 {\\n  gap: 0.5rem !important;\\n}\\n\\n.gap-3 {\\n  gap: 1rem !important;\\n}\\n\\n.gap-4 {\\n  gap: 1.5rem !important;\\n}\\n\\n.gap-5 {\\n  gap: 3rem !important;\\n}\\n\\n.justify-content-start {\\n  justify-content: flex-start !important;\\n}\\n\\n.justify-content-end {\\n  justify-content: flex-end !important;\\n}\\n\\n.justify-content-center {\\n  justify-content: center !important;\\n}\\n\\n.justify-content-between {\\n  justify-content: space-between !important;\\n}\\n\\n.justify-content-around {\\n  justify-content: space-around !important;\\n}\\n\\n.justify-content-evenly {\\n  justify-content: space-evenly !important;\\n}\\n\\n.align-items-start {\\n  align-items: flex-start !important;\\n}\\n\\n.align-items-end {\\n  align-items: flex-end !important;\\n}\\n\\n.align-items-center {\\n  align-items: center !important;\\n}\\n\\n.align-items-baseline {\\n  align-items: baseline !important;\\n}\\n\\n.align-items-stretch {\\n  align-items: stretch !important;\\n}\\n\\n.align-content-start {\\n  align-content: flex-start !important;\\n}\\n\\n.align-content-end {\\n  align-content: flex-end !important;\\n}\\n\\n.align-content-center {\\n  align-content: center !important;\\n}\\n\\n.align-content-between {\\n  align-content: space-between !important;\\n}\\n\\n.align-content-around {\\n  align-content: space-around !important;\\n}\\n\\n.align-content-stretch {\\n  align-content: stretch !important;\\n}\\n\\n.align-self-auto {\\n  align-self: auto !important;\\n}\\n\\n.align-self-start {\\n  align-self: flex-start !important;\\n}\\n\\n.align-self-end {\\n  align-self: flex-end !important;\\n}\\n\\n.align-self-center {\\n  align-self: center !important;\\n}\\n\\n.align-self-baseline {\\n  align-self: baseline !important;\\n}\\n\\n.align-self-stretch {\\n  align-self: stretch !important;\\n}\\n\\n.order-first {\\n  order: -1 !important;\\n}\\n\\n.order-0 {\\n  order: 0 !important;\\n}\\n\\n.order-1 {\\n  order: 1 !important;\\n}\\n\\n.order-2 {\\n  order: 2 !important;\\n}\\n\\n.order-3 {\\n  order: 3 !important;\\n}\\n\\n.order-4 {\\n  order: 4 !important;\\n}\\n\\n.order-5 {\\n  order: 5 !important;\\n}\\n\\n.order-last {\\n  order: 6 !important;\\n}\\n\\n.m-0 {\\n  margin: 0 !important;\\n}\\n\\n.m-1 {\\n  margin: 0.25rem !important;\\n}\\n\\n.m-2 {\\n  margin: 0.5rem !important;\\n}\\n\\n.m-3 {\\n  margin: 1rem !important;\\n}\\n\\n.m-4 {\\n  margin: 1.5rem !important;\\n}\\n\\n.m-5 {\\n  margin: 3rem !important;\\n}\\n\\n.m-auto {\\n  margin: auto !important;\\n}\\n\\n.mx-0 {\\n  margin-right: 0 !important;\\n  margin-left: 0 !important;\\n}\\n\\n.mx-1 {\\n  margin-right: 0.25rem !important;\\n  margin-left: 0.25rem !important;\\n}\\n\\n.mx-2 {\\n  margin-right: 0.5rem !important;\\n  margin-left: 0.5rem !important;\\n}\\n\\n.mx-3 {\\n  margin-right: 1rem !important;\\n  margin-left: 1rem !important;\\n}\\n\\n.mx-4 {\\n  margin-right: 1.5rem !important;\\n  margin-left: 1.5rem !important;\\n}\\n\\n.mx-5 {\\n  margin-right: 3rem !important;\\n  margin-left: 3rem !important;\\n}\\n\\n.mx-auto {\\n  margin-right: auto !important;\\n  margin-left: auto !important;\\n}\\n\\n.my-0 {\\n  margin-top: 0 !important;\\n  margin-bottom: 0 !important;\\n}\\n\\n.my-1 {\\n  margin-top: 0.25rem !important;\\n  margin-bottom: 0.25rem !important;\\n}\\n\\n.my-2 {\\n  margin-top: 0.5rem !important;\\n  margin-bottom: 0.5rem !important;\\n}\\n\\n.my-3 {\\n  margin-top: 1rem !important;\\n  margin-bottom: 1rem !important;\\n}\\n\\n.my-4 {\\n  margin-top: 1.5rem !important;\\n  margin-bottom: 1.5rem !important;\\n}\\n\\n.my-5 {\\n  margin-top: 3rem !important;\\n  margin-bottom: 3rem !important;\\n}\\n\\n.my-auto {\\n  margin-top: auto !important;\\n  margin-bottom: auto !important;\\n}\\n\\n.mt-0 {\\n  margin-top: 0 !important;\\n}\\n\\n.mt-1 {\\n  margin-top: 0.25rem !important;\\n}\\n\\n.mt-2 {\\n  margin-top: 0.5rem !important;\\n}\\n\\n.mt-3 {\\n  margin-top: 1rem !important;\\n}\\n\\n.mt-4 {\\n  margin-top: 1.5rem !important;\\n}\\n\\n.mt-5 {\\n  margin-top: 3rem !important;\\n}\\n\\n.mt-auto {\\n  margin-top: auto !important;\\n}\\n\\n.me-0 {\\n  margin-right: 0 !important;\\n}\\n\\n.me-1 {\\n  margin-right: 0.25rem !important;\\n}\\n\\n.me-2 {\\n  margin-right: 0.5rem !important;\\n}\\n\\n.me-3 {\\n  margin-right: 1rem !important;\\n}\\n\\n.me-4 {\\n  margin-right: 1.5rem !important;\\n}\\n\\n.me-5 {\\n  margin-right: 3rem !important;\\n}\\n\\n.me-auto {\\n  margin-right: auto !important;\\n}\\n\\n.mb-0 {\\n  margin-bottom: 0 !important;\\n}\\n\\n.mb-1 {\\n  margin-bottom: 0.25rem !important;\\n}\\n\\n.mb-2 {\\n  margin-bottom: 0.5rem !important;\\n}\\n\\n.mb-3 {\\n  margin-bottom: 1rem !important;\\n}\\n\\n.mb-4 {\\n  margin-bottom: 1.5rem !important;\\n}\\n\\n.mb-5 {\\n  margin-bottom: 3rem !important;\\n}\\n\\n.mb-auto {\\n  margin-bottom: auto !important;\\n}\\n\\n.ms-0 {\\n  margin-left: 0 !important;\\n}\\n\\n.ms-1 {\\n  margin-left: 0.25rem !important;\\n}\\n\\n.ms-2 {\\n  margin-left: 0.5rem !important;\\n}\\n\\n.ms-3 {\\n  margin-left: 1rem !important;\\n}\\n\\n.ms-4 {\\n  margin-left: 1.5rem !important;\\n}\\n\\n.ms-5 {\\n  margin-left: 3rem !important;\\n}\\n\\n.ms-auto {\\n  margin-left: auto !important;\\n}\\n\\n.p-0 {\\n  padding: 0 !important;\\n}\\n\\n.p-1 {\\n  padding: 0.25rem !important;\\n}\\n\\n.p-2 {\\n  padding: 0.5rem !important;\\n}\\n\\n.p-3 {\\n  padding: 1rem !important;\\n}\\n\\n.p-4 {\\n  padding: 1.5rem !important;\\n}\\n\\n.p-5 {\\n  padding: 3rem !important;\\n}\\n\\n.px-0 {\\n  padding-right: 0 !important;\\n  padding-left: 0 !important;\\n}\\n\\n.px-1 {\\n  padding-right: 0.25rem !important;\\n  padding-left: 0.25rem !important;\\n}\\n\\n.px-2 {\\n  padding-right: 0.5rem !important;\\n  padding-left: 0.5rem !important;\\n}\\n\\n.px-3 {\\n  padding-right: 1rem !important;\\n  padding-left: 1rem !important;\\n}\\n\\n.px-4 {\\n  padding-right: 1.5rem !important;\\n  padding-left: 1.5rem !important;\\n}\\n\\n.px-5 {\\n  padding-right: 3rem !important;\\n  padding-left: 3rem !important;\\n}\\n\\n.py-0 {\\n  padding-top: 0 !important;\\n  padding-bottom: 0 !important;\\n}\\n\\n.py-1 {\\n  padding-top: 0.25rem !important;\\n  padding-bottom: 0.25rem !important;\\n}\\n\\n.py-2 {\\n  padding-top: 0.5rem !important;\\n  padding-bottom: 0.5rem !important;\\n}\\n\\n.py-3 {\\n  padding-top: 1rem !important;\\n  padding-bottom: 1rem !important;\\n}\\n\\n.py-4 {\\n  padding-top: 1.5rem !important;\\n  padding-bottom: 1.5rem !important;\\n}\\n\\n.py-5 {\\n  padding-top: 3rem !important;\\n  padding-bottom: 3rem !important;\\n}\\n\\n.pt-0 {\\n  padding-top: 0 !important;\\n}\\n\\n.pt-1 {\\n  padding-top: 0.25rem !important;\\n}\\n\\n.pt-2 {\\n  padding-top: 0.5rem !important;\\n}\\n\\n.pt-3 {\\n  padding-top: 1rem !important;\\n}\\n\\n.pt-4 {\\n  padding-top: 1.5rem !important;\\n}\\n\\n.pt-5 {\\n  padding-top: 3rem !important;\\n}\\n\\n.pe-0 {\\n  padding-right: 0 !important;\\n}\\n\\n.pe-1 {\\n  padding-right: 0.25rem !important;\\n}\\n\\n.pe-2 {\\n  padding-right: 0.5rem !important;\\n}\\n\\n.pe-3 {\\n  padding-right: 1rem !important;\\n}\\n\\n.pe-4 {\\n  padding-right: 1.5rem !important;\\n}\\n\\n.pe-5 {\\n  padding-right: 3rem !important;\\n}\\n\\n.pb-0 {\\n  padding-bottom: 0 !important;\\n}\\n\\n.pb-1 {\\n  padding-bottom: 0.25rem !important;\\n}\\n\\n.pb-2 {\\n  padding-bottom: 0.5rem !important;\\n}\\n\\n.pb-3 {\\n  padding-bottom: 1rem !important;\\n}\\n\\n.pb-4 {\\n  padding-bottom: 1.5rem !important;\\n}\\n\\n.pb-5 {\\n  padding-bottom: 3rem !important;\\n}\\n\\n.ps-0 {\\n  padding-left: 0 !important;\\n}\\n\\n.ps-1 {\\n  padding-left: 0.25rem !important;\\n}\\n\\n.ps-2 {\\n  padding-left: 0.5rem !important;\\n}\\n\\n.ps-3 {\\n  padding-left: 1rem !important;\\n}\\n\\n.ps-4 {\\n  padding-left: 1.5rem !important;\\n}\\n\\n.ps-5 {\\n  padding-left: 3rem !important;\\n}\\n\\n.font-monospace {\\n  font-family: var(--bs-font-monospace) !important;\\n}\\n\\n.fs-1 {\\n  font-size: calc(1.375rem + 1.5vw) !important;\\n}\\n\\n.fs-2 {\\n  font-size: calc(1.325rem + 0.9vw) !important;\\n}\\n\\n.fs-3 {\\n  font-size: calc(1.3rem + 0.6vw) !important;\\n}\\n\\n.fs-4 {\\n  font-size: calc(1.275rem + 0.3vw) !important;\\n}\\n\\n.fs-5 {\\n  font-size: 1.25rem !important;\\n}\\n\\n.fs-6 {\\n  font-size: 1rem !important;\\n}\\n\\n.fst-italic {\\n  font-style: italic !important;\\n}\\n\\n.fst-normal {\\n  font-style: normal !important;\\n}\\n\\n.fw-light {\\n  font-weight: 300 !important;\\n}\\n\\n.fw-lighter {\\n  font-weight: lighter !important;\\n}\\n\\n.fw-normal {\\n  font-weight: 400 !important;\\n}\\n\\n.fw-bold {\\n  font-weight: 700 !important;\\n}\\n\\n.fw-bolder {\\n  font-weight: bolder !important;\\n}\\n\\n.lh-1 {\\n  line-height: 1 !important;\\n}\\n\\n.lh-sm {\\n  line-height: 1.25 !important;\\n}\\n\\n.lh-base {\\n  line-height: 1.5 !important;\\n}\\n\\n.lh-lg {\\n  line-height: 2 !important;\\n}\\n\\n.text-start {\\n  text-align: left !important;\\n}\\n\\n.text-end {\\n  text-align: right !important;\\n}\\n\\n.text-center {\\n  text-align: center !important;\\n}\\n\\n.text-decoration-none {\\n  text-decoration: none !important;\\n}\\n\\n.text-decoration-underline {\\n  text-decoration: underline !important;\\n}\\n\\n.text-decoration-line-through {\\n  text-decoration: line-through !important;\\n}\\n\\n.text-lowercase {\\n  text-transform: lowercase !important;\\n}\\n\\n.text-uppercase {\\n  text-transform: uppercase !important;\\n}\\n\\n.text-capitalize {\\n  text-transform: capitalize !important;\\n}\\n\\n.text-wrap {\\n  white-space: normal !important;\\n}\\n\\n.text-nowrap {\\n  white-space: nowrap !important;\\n}\\n\\n/* rtl:begin:remove */\\n.text-break {\\n  word-wrap: break-word !important;\\n  word-break: break-word !important;\\n}\\n\\n/* rtl:end:remove */\\n.text-primary {\\n  --bs-text-opacity: 1;\\n  color: rgba(var(--bs-primary-rgb), var(--bs-text-opacity)) !important;\\n}\\n\\n.text-secondary {\\n  --bs-text-opacity: 1;\\n  color: rgba(var(--bs-secondary-rgb), var(--bs-text-opacity)) !important;\\n}\\n\\n.text-success {\\n  --bs-text-opacity: 1;\\n  color: rgba(var(--bs-success-rgb), var(--bs-text-opacity)) !important;\\n}\\n\\n.text-info {\\n  --bs-text-opacity: 1;\\n  color: rgba(var(--bs-info-rgb), var(--bs-text-opacity)) !important;\\n}\\n\\n.text-warning {\\n  --bs-text-opacity: 1;\\n  color: rgba(var(--bs-warning-rgb), var(--bs-text-opacity)) !important;\\n}\\n\\n.text-danger {\\n  --bs-text-opacity: 1;\\n  color: rgba(var(--bs-danger-rgb), var(--bs-text-opacity)) !important;\\n}\\n\\n.text-light {\\n  --bs-text-opacity: 1;\\n  color: rgba(var(--bs-light-rgb), var(--bs-text-opacity)) !important;\\n}\\n\\n.text-dark {\\n  --bs-text-opacity: 1;\\n  color: rgba(var(--bs-dark-rgb), var(--bs-text-opacity)) !important;\\n}\\n\\n.text-black {\\n  --bs-text-opacity: 1;\\n  color: rgba(var(--bs-black-rgb), var(--bs-text-opacity)) !important;\\n}\\n\\n.text-white {\\n  --bs-text-opacity: 1;\\n  color: rgba(var(--bs-white-rgb), var(--bs-text-opacity)) !important;\\n}\\n\\n.text-body {\\n  --bs-text-opacity: 1;\\n  color: rgba(var(--bs-body-rgb), var(--bs-text-opacity)) !important;\\n}\\n\\n.text-muted {\\n  --bs-text-opacity: 1;\\n  color: #6c757d !important;\\n}\\n\\n.text-black-50 {\\n  --bs-text-opacity: 1;\\n  color: rgba(0, 0, 0, 0.5) !important;\\n}\\n\\n.text-white-50 {\\n  --bs-text-opacity: 1;\\n  color: rgba(255, 255, 255, 0.5) !important;\\n}\\n\\n.text-reset {\\n  --bs-text-opacity: 1;\\n  color: inherit !important;\\n}\\n\\n.text-opacity-25 {\\n  --bs-text-opacity: 0.25;\\n}\\n\\n.text-opacity-50 {\\n  --bs-text-opacity: 0.5;\\n}\\n\\n.text-opacity-75 {\\n  --bs-text-opacity: 0.75;\\n}\\n\\n.text-opacity-100 {\\n  --bs-text-opacity: 1;\\n}\\n\\n.bg-primary {\\n  --bs-bg-opacity: 1;\\n  background-color: rgba(var(--bs-primary-rgb), var(--bs-bg-opacity)) !important;\\n}\\n\\n.bg-secondary {\\n  --bs-bg-opacity: 1;\\n  background-color: rgba(var(--bs-secondary-rgb), var(--bs-bg-opacity)) !important;\\n}\\n\\n.bg-success {\\n  --bs-bg-opacity: 1;\\n  background-color: rgba(var(--bs-success-rgb), var(--bs-bg-opacity)) !important;\\n}\\n\\n.bg-info {\\n  --bs-bg-opacity: 1;\\n  background-color: rgba(var(--bs-info-rgb), var(--bs-bg-opacity)) !important;\\n}\\n\\n.bg-warning {\\n  --bs-bg-opacity: 1;\\n  background-color: rgba(var(--bs-warning-rgb), var(--bs-bg-opacity)) !important;\\n}\\n\\n.bg-danger {\\n  --bs-bg-opacity: 1;\\n  background-color: rgba(var(--bs-danger-rgb), var(--bs-bg-opacity)) !important;\\n}\\n\\n.bg-light {\\n  --bs-bg-opacity: 1;\\n  background-color: rgba(var(--bs-light-rgb), var(--bs-bg-opacity)) !important;\\n}\\n\\n.bg-dark {\\n  --bs-bg-opacity: 1;\\n  background-color: rgba(var(--bs-dark-rgb), var(--bs-bg-opacity)) !important;\\n}\\n\\n.bg-black {\\n  --bs-bg-opacity: 1;\\n  background-color: rgba(var(--bs-black-rgb), var(--bs-bg-opacity)) !important;\\n}\\n\\n.bg-white {\\n  --bs-bg-opacity: 1;\\n  background-color: rgba(var(--bs-white-rgb), var(--bs-bg-opacity)) !important;\\n}\\n\\n.bg-body {\\n  --bs-bg-opacity: 1;\\n  background-color: rgba(var(--bs-body-rgb), var(--bs-bg-opacity)) !important;\\n}\\n\\n.bg-transparent {\\n  --bs-bg-opacity: 1;\\n  background-color: transparent !important;\\n}\\n\\n.bg-opacity-10 {\\n  --bs-bg-opacity: 0.1;\\n}\\n\\n.bg-opacity-25 {\\n  --bs-bg-opacity: 0.25;\\n}\\n\\n.bg-opacity-50 {\\n  --bs-bg-opacity: 0.5;\\n}\\n\\n.bg-opacity-75 {\\n  --bs-bg-opacity: 0.75;\\n}\\n\\n.bg-opacity-100 {\\n  --bs-bg-opacity: 1;\\n}\\n\\n.bg-gradient {\\n  background-image: var(--bs-gradient) !important;\\n}\\n\\n.user-select-all {\\n  -webkit-user-select: all !important;\\n  -moz-user-select: all !important;\\n  user-select: all !important;\\n}\\n\\n.user-select-auto {\\n  -webkit-user-select: auto !important;\\n  -moz-user-select: auto !important;\\n  user-select: auto !important;\\n}\\n\\n.user-select-none {\\n  -webkit-user-select: none !important;\\n  -moz-user-select: none !important;\\n  user-select: none !important;\\n}\\n\\n.pe-none {\\n  pointer-events: none !important;\\n}\\n\\n.pe-auto {\\n  pointer-events: auto !important;\\n}\\n\\n.rounded {\\n  border-radius: 0.25rem !important;\\n}\\n\\n.rounded-0 {\\n  border-radius: 0 !important;\\n}\\n\\n.rounded-1 {\\n  border-radius: 0.2rem !important;\\n}\\n\\n.rounded-2 {\\n  border-radius: 0.25rem !important;\\n}\\n\\n.rounded-3 {\\n  border-radius: 0.3rem !important;\\n}\\n\\n.rounded-circle {\\n  border-radius: 50% !important;\\n}\\n\\n.rounded-pill {\\n  border-radius: 50rem !important;\\n}\\n\\n.rounded-top {\\n  border-top-left-radius: 0.25rem !important;\\n  border-top-right-radius: 0.25rem !important;\\n}\\n\\n.rounded-end {\\n  border-top-right-radius: 0.25rem !important;\\n  border-bottom-right-radius: 0.25rem !important;\\n}\\n\\n.rounded-bottom {\\n  border-bottom-right-radius: 0.25rem !important;\\n  border-bottom-left-radius: 0.25rem !important;\\n}\\n\\n.rounded-start {\\n  border-bottom-left-radius: 0.25rem !important;\\n  border-top-left-radius: 0.25rem !important;\\n}\\n\\n.visible {\\n  visibility: visible !important;\\n}\\n\\n.invisible {\\n  visibility: hidden !important;\\n}\\n\\n@media (min-width: 576px) {\\n  .float-sm-start {\\n    float: left !important;\\n  }\\n\\n  .float-sm-end {\\n    float: right !important;\\n  }\\n\\n  .float-sm-none {\\n    float: none !important;\\n  }\\n\\n  .d-sm-inline {\\n    display: inline !important;\\n  }\\n\\n  .d-sm-inline-block {\\n    display: inline-block !important;\\n  }\\n\\n  .d-sm-block {\\n    display: block !important;\\n  }\\n\\n  .d-sm-grid {\\n    display: grid !important;\\n  }\\n\\n  .d-sm-table {\\n    display: table !important;\\n  }\\n\\n  .d-sm-table-row {\\n    display: table-row !important;\\n  }\\n\\n  .d-sm-table-cell {\\n    display: table-cell !important;\\n  }\\n\\n  .d-sm-flex {\\n    display: flex !important;\\n  }\\n\\n  .d-sm-inline-flex {\\n    display: inline-flex !important;\\n  }\\n\\n  .d-sm-none {\\n    display: none !important;\\n  }\\n\\n  .flex-sm-fill {\\n    flex: 1 1 auto !important;\\n  }\\n\\n  .flex-sm-row {\\n    flex-direction: row !important;\\n  }\\n\\n  .flex-sm-column {\\n    flex-direction: column !important;\\n  }\\n\\n  .flex-sm-row-reverse {\\n    flex-direction: row-reverse !important;\\n  }\\n\\n  .flex-sm-column-reverse {\\n    flex-direction: column-reverse !important;\\n  }\\n\\n  .flex-sm-grow-0 {\\n    flex-grow: 0 !important;\\n  }\\n\\n  .flex-sm-grow-1 {\\n    flex-grow: 1 !important;\\n  }\\n\\n  .flex-sm-shrink-0 {\\n    flex-shrink: 0 !important;\\n  }\\n\\n  .flex-sm-shrink-1 {\\n    flex-shrink: 1 !important;\\n  }\\n\\n  .flex-sm-wrap {\\n    flex-wrap: wrap !important;\\n  }\\n\\n  .flex-sm-nowrap {\\n    flex-wrap: nowrap !important;\\n  }\\n\\n  .flex-sm-wrap-reverse {\\n    flex-wrap: wrap-reverse !important;\\n  }\\n\\n  .gap-sm-0 {\\n    gap: 0 !important;\\n  }\\n\\n  .gap-sm-1 {\\n    gap: 0.25rem !important;\\n  }\\n\\n  .gap-sm-2 {\\n    gap: 0.5rem !important;\\n  }\\n\\n  .gap-sm-3 {\\n    gap: 1rem !important;\\n  }\\n\\n  .gap-sm-4 {\\n    gap: 1.5rem !important;\\n  }\\n\\n  .gap-sm-5 {\\n    gap: 3rem !important;\\n  }\\n\\n  .justify-content-sm-start {\\n    justify-content: flex-start !important;\\n  }\\n\\n  .justify-content-sm-end {\\n    justify-content: flex-end !important;\\n  }\\n\\n  .justify-content-sm-center {\\n    justify-content: center !important;\\n  }\\n\\n  .justify-content-sm-between {\\n    justify-content: space-between !important;\\n  }\\n\\n  .justify-content-sm-around {\\n    justify-content: space-around !important;\\n  }\\n\\n  .justify-content-sm-evenly {\\n    justify-content: space-evenly !important;\\n  }\\n\\n  .align-items-sm-start {\\n    align-items: flex-start !important;\\n  }\\n\\n  .align-items-sm-end {\\n    align-items: flex-end !important;\\n  }\\n\\n  .align-items-sm-center {\\n    align-items: center !important;\\n  }\\n\\n  .align-items-sm-baseline {\\n    align-items: baseline !important;\\n  }\\n\\n  .align-items-sm-stretch {\\n    align-items: stretch !important;\\n  }\\n\\n  .align-content-sm-start {\\n    align-content: flex-start !important;\\n  }\\n\\n  .align-content-sm-end {\\n    align-content: flex-end !important;\\n  }\\n\\n  .align-content-sm-center {\\n    align-content: center !important;\\n  }\\n\\n  .align-content-sm-between {\\n    align-content: space-between !important;\\n  }\\n\\n  .align-content-sm-around {\\n    align-content: space-around !important;\\n  }\\n\\n  .align-content-sm-stretch {\\n    align-content: stretch !important;\\n  }\\n\\n  .align-self-sm-auto {\\n    align-self: auto !important;\\n  }\\n\\n  .align-self-sm-start {\\n    align-self: flex-start !important;\\n  }\\n\\n  .align-self-sm-end {\\n    align-self: flex-end !important;\\n  }\\n\\n  .align-self-sm-center {\\n    align-self: center !important;\\n  }\\n\\n  .align-self-sm-baseline {\\n    align-self: baseline !important;\\n  }\\n\\n  .align-self-sm-stretch {\\n    align-self: stretch !important;\\n  }\\n\\n  .order-sm-first {\\n    order: -1 !important;\\n  }\\n\\n  .order-sm-0 {\\n    order: 0 !important;\\n  }\\n\\n  .order-sm-1 {\\n    order: 1 !important;\\n  }\\n\\n  .order-sm-2 {\\n    order: 2 !important;\\n  }\\n\\n  .order-sm-3 {\\n    order: 3 !important;\\n  }\\n\\n  .order-sm-4 {\\n    order: 4 !important;\\n  }\\n\\n  .order-sm-5 {\\n    order: 5 !important;\\n  }\\n\\n  .order-sm-last {\\n    order: 6 !important;\\n  }\\n\\n  .m-sm-0 {\\n    margin: 0 !important;\\n  }\\n\\n  .m-sm-1 {\\n    margin: 0.25rem !important;\\n  }\\n\\n  .m-sm-2 {\\n    margin: 0.5rem !important;\\n  }\\n\\n  .m-sm-3 {\\n    margin: 1rem !important;\\n  }\\n\\n  .m-sm-4 {\\n    margin: 1.5rem !important;\\n  }\\n\\n  .m-sm-5 {\\n    margin: 3rem !important;\\n  }\\n\\n  .m-sm-auto {\\n    margin: auto !important;\\n  }\\n\\n  .mx-sm-0 {\\n    margin-right: 0 !important;\\n    margin-left: 0 !important;\\n  }\\n\\n  .mx-sm-1 {\\n    margin-right: 0.25rem !important;\\n    margin-left: 0.25rem !important;\\n  }\\n\\n  .mx-sm-2 {\\n    margin-right: 0.5rem !important;\\n    margin-left: 0.5rem !important;\\n  }\\n\\n  .mx-sm-3 {\\n    margin-right: 1rem !important;\\n    margin-left: 1rem !important;\\n  }\\n\\n  .mx-sm-4 {\\n    margin-right: 1.5rem !important;\\n    margin-left: 1.5rem !important;\\n  }\\n\\n  .mx-sm-5 {\\n    margin-right: 3rem !important;\\n    margin-left: 3rem !important;\\n  }\\n\\n  .mx-sm-auto {\\n    margin-right: auto !important;\\n    margin-left: auto !important;\\n  }\\n\\n  .my-sm-0 {\\n    margin-top: 0 !important;\\n    margin-bottom: 0 !important;\\n  }\\n\\n  .my-sm-1 {\\n    margin-top: 0.25rem !important;\\n    margin-bottom: 0.25rem !important;\\n  }\\n\\n  .my-sm-2 {\\n    margin-top: 0.5rem !important;\\n    margin-bottom: 0.5rem !important;\\n  }\\n\\n  .my-sm-3 {\\n    margin-top: 1rem !important;\\n    margin-bottom: 1rem !important;\\n  }\\n\\n  .my-sm-4 {\\n    margin-top: 1.5rem !important;\\n    margin-bottom: 1.5rem !important;\\n  }\\n\\n  .my-sm-5 {\\n    margin-top: 3rem !important;\\n    margin-bottom: 3rem !important;\\n  }\\n\\n  .my-sm-auto {\\n    margin-top: auto !important;\\n    margin-bottom: auto !important;\\n  }\\n\\n  .mt-sm-0 {\\n    margin-top: 0 !important;\\n  }\\n\\n  .mt-sm-1 {\\n    margin-top: 0.25rem !important;\\n  }\\n\\n  .mt-sm-2 {\\n    margin-top: 0.5rem !important;\\n  }\\n\\n  .mt-sm-3 {\\n    margin-top: 1rem !important;\\n  }\\n\\n  .mt-sm-4 {\\n    margin-top: 1.5rem !important;\\n  }\\n\\n  .mt-sm-5 {\\n    margin-top: 3rem !important;\\n  }\\n\\n  .mt-sm-auto {\\n    margin-top: auto !important;\\n  }\\n\\n  .me-sm-0 {\\n    margin-right: 0 !important;\\n  }\\n\\n  .me-sm-1 {\\n    margin-right: 0.25rem !important;\\n  }\\n\\n  .me-sm-2 {\\n    margin-right: 0.5rem !important;\\n  }\\n\\n  .me-sm-3 {\\n    margin-right: 1rem !important;\\n  }\\n\\n  .me-sm-4 {\\n    margin-right: 1.5rem !important;\\n  }\\n\\n  .me-sm-5 {\\n    margin-right: 3rem !important;\\n  }\\n\\n  .me-sm-auto {\\n    margin-right: auto !important;\\n  }\\n\\n  .mb-sm-0 {\\n    margin-bottom: 0 !important;\\n  }\\n\\n  .mb-sm-1 {\\n    margin-bottom: 0.25rem !important;\\n  }\\n\\n  .mb-sm-2 {\\n    margin-bottom: 0.5rem !important;\\n  }\\n\\n  .mb-sm-3 {\\n    margin-bottom: 1rem !important;\\n  }\\n\\n  .mb-sm-4 {\\n    margin-bottom: 1.5rem !important;\\n  }\\n\\n  .mb-sm-5 {\\n    margin-bottom: 3rem !important;\\n  }\\n\\n  .mb-sm-auto {\\n    margin-bottom: auto !important;\\n  }\\n\\n  .ms-sm-0 {\\n    margin-left: 0 !important;\\n  }\\n\\n  .ms-sm-1 {\\n    margin-left: 0.25rem !important;\\n  }\\n\\n  .ms-sm-2 {\\n    margin-left: 0.5rem !important;\\n  }\\n\\n  .ms-sm-3 {\\n    margin-left: 1rem !important;\\n  }\\n\\n  .ms-sm-4 {\\n    margin-left: 1.5rem !important;\\n  }\\n\\n  .ms-sm-5 {\\n    margin-left: 3rem !important;\\n  }\\n\\n  .ms-sm-auto {\\n    margin-left: auto !important;\\n  }\\n\\n  .p-sm-0 {\\n    padding: 0 !important;\\n  }\\n\\n  .p-sm-1 {\\n    padding: 0.25rem !important;\\n  }\\n\\n  .p-sm-2 {\\n    padding: 0.5rem !important;\\n  }\\n\\n  .p-sm-3 {\\n    padding: 1rem !important;\\n  }\\n\\n  .p-sm-4 {\\n    padding: 1.5rem !important;\\n  }\\n\\n  .p-sm-5 {\\n    padding: 3rem !important;\\n  }\\n\\n  .px-sm-0 {\\n    padding-right: 0 !important;\\n    padding-left: 0 !important;\\n  }\\n\\n  .px-sm-1 {\\n    padding-right: 0.25rem !important;\\n    padding-left: 0.25rem !important;\\n  }\\n\\n  .px-sm-2 {\\n    padding-right: 0.5rem !important;\\n    padding-left: 0.5rem !important;\\n  }\\n\\n  .px-sm-3 {\\n    padding-right: 1rem !important;\\n    padding-left: 1rem !important;\\n  }\\n\\n  .px-sm-4 {\\n    padding-right: 1.5rem !important;\\n    padding-left: 1.5rem !important;\\n  }\\n\\n  .px-sm-5 {\\n    padding-right: 3rem !important;\\n    padding-left: 3rem !important;\\n  }\\n\\n  .py-sm-0 {\\n    padding-top: 0 !important;\\n    padding-bottom: 0 !important;\\n  }\\n\\n  .py-sm-1 {\\n    padding-top: 0.25rem !important;\\n    padding-bottom: 0.25rem !important;\\n  }\\n\\n  .py-sm-2 {\\n    padding-top: 0.5rem !important;\\n    padding-bottom: 0.5rem !important;\\n  }\\n\\n  .py-sm-3 {\\n    padding-top: 1rem !important;\\n    padding-bottom: 1rem !important;\\n  }\\n\\n  .py-sm-4 {\\n    padding-top: 1.5rem !important;\\n    padding-bottom: 1.5rem !important;\\n  }\\n\\n  .py-sm-5 {\\n    padding-top: 3rem !important;\\n    padding-bottom: 3rem !important;\\n  }\\n\\n  .pt-sm-0 {\\n    padding-top: 0 !important;\\n  }\\n\\n  .pt-sm-1 {\\n    padding-top: 0.25rem !important;\\n  }\\n\\n  .pt-sm-2 {\\n    padding-top: 0.5rem !important;\\n  }\\n\\n  .pt-sm-3 {\\n    padding-top: 1rem !important;\\n  }\\n\\n  .pt-sm-4 {\\n    padding-top: 1.5rem !important;\\n  }\\n\\n  .pt-sm-5 {\\n    padding-top: 3rem !important;\\n  }\\n\\n  .pe-sm-0 {\\n    padding-right: 0 !important;\\n  }\\n\\n  .pe-sm-1 {\\n    padding-right: 0.25rem !important;\\n  }\\n\\n  .pe-sm-2 {\\n    padding-right: 0.5rem !important;\\n  }\\n\\n  .pe-sm-3 {\\n    padding-right: 1rem !important;\\n  }\\n\\n  .pe-sm-4 {\\n    padding-right: 1.5rem !important;\\n  }\\n\\n  .pe-sm-5 {\\n    padding-right: 3rem !important;\\n  }\\n\\n  .pb-sm-0 {\\n    padding-bottom: 0 !important;\\n  }\\n\\n  .pb-sm-1 {\\n    padding-bottom: 0.25rem !important;\\n  }\\n\\n  .pb-sm-2 {\\n    padding-bottom: 0.5rem !important;\\n  }\\n\\n  .pb-sm-3 {\\n    padding-bottom: 1rem !important;\\n  }\\n\\n  .pb-sm-4 {\\n    padding-bottom: 1.5rem !important;\\n  }\\n\\n  .pb-sm-5 {\\n    padding-bottom: 3rem !important;\\n  }\\n\\n  .ps-sm-0 {\\n    padding-left: 0 !important;\\n  }\\n\\n  .ps-sm-1 {\\n    padding-left: 0.25rem !important;\\n  }\\n\\n  .ps-sm-2 {\\n    padding-left: 0.5rem !important;\\n  }\\n\\n  .ps-sm-3 {\\n    padding-left: 1rem !important;\\n  }\\n\\n  .ps-sm-4 {\\n    padding-left: 1.5rem !important;\\n  }\\n\\n  .ps-sm-5 {\\n    padding-left: 3rem !important;\\n  }\\n\\n  .text-sm-start {\\n    text-align: left !important;\\n  }\\n\\n  .text-sm-end {\\n    text-align: right !important;\\n  }\\n\\n  .text-sm-center {\\n    text-align: center !important;\\n  }\\n}\\n@media (min-width: 768px) {\\n  .float-md-start {\\n    float: left !important;\\n  }\\n\\n  .float-md-end {\\n    float: right !important;\\n  }\\n\\n  .float-md-none {\\n    float: none !important;\\n  }\\n\\n  .d-md-inline {\\n    display: inline !important;\\n  }\\n\\n  .d-md-inline-block {\\n    display: inline-block !important;\\n  }\\n\\n  .d-md-block {\\n    display: block !important;\\n  }\\n\\n  .d-md-grid {\\n    display: grid !important;\\n  }\\n\\n  .d-md-table {\\n    display: table !important;\\n  }\\n\\n  .d-md-table-row {\\n    display: table-row !important;\\n  }\\n\\n  .d-md-table-cell {\\n    display: table-cell !important;\\n  }\\n\\n  .d-md-flex {\\n    display: flex !important;\\n  }\\n\\n  .d-md-inline-flex {\\n    display: inline-flex !important;\\n  }\\n\\n  .d-md-none {\\n    display: none !important;\\n  }\\n\\n  .flex-md-fill {\\n    flex: 1 1 auto !important;\\n  }\\n\\n  .flex-md-row {\\n    flex-direction: row !important;\\n  }\\n\\n  .flex-md-column {\\n    flex-direction: column !important;\\n  }\\n\\n  .flex-md-row-reverse {\\n    flex-direction: row-reverse !important;\\n  }\\n\\n  .flex-md-column-reverse {\\n    flex-direction: column-reverse !important;\\n  }\\n\\n  .flex-md-grow-0 {\\n    flex-grow: 0 !important;\\n  }\\n\\n  .flex-md-grow-1 {\\n    flex-grow: 1 !important;\\n  }\\n\\n  .flex-md-shrink-0 {\\n    flex-shrink: 0 !important;\\n  }\\n\\n  .flex-md-shrink-1 {\\n    flex-shrink: 1 !important;\\n  }\\n\\n  .flex-md-wrap {\\n    flex-wrap: wrap !important;\\n  }\\n\\n  .flex-md-nowrap {\\n    flex-wrap: nowrap !important;\\n  }\\n\\n  .flex-md-wrap-reverse {\\n    flex-wrap: wrap-reverse !important;\\n  }\\n\\n  .gap-md-0 {\\n    gap: 0 !important;\\n  }\\n\\n  .gap-md-1 {\\n    gap: 0.25rem !important;\\n  }\\n\\n  .gap-md-2 {\\n    gap: 0.5rem !important;\\n  }\\n\\n  .gap-md-3 {\\n    gap: 1rem !important;\\n  }\\n\\n  .gap-md-4 {\\n    gap: 1.5rem !important;\\n  }\\n\\n  .gap-md-5 {\\n    gap: 3rem !important;\\n  }\\n\\n  .justify-content-md-start {\\n    justify-content: flex-start !important;\\n  }\\n\\n  .justify-content-md-end {\\n    justify-content: flex-end !important;\\n  }\\n\\n  .justify-content-md-center {\\n    justify-content: center !important;\\n  }\\n\\n  .justify-content-md-between {\\n    justify-content: space-between !important;\\n  }\\n\\n  .justify-content-md-around {\\n    justify-content: space-around !important;\\n  }\\n\\n  .justify-content-md-evenly {\\n    justify-content: space-evenly !important;\\n  }\\n\\n  .align-items-md-start {\\n    align-items: flex-start !important;\\n  }\\n\\n  .align-items-md-end {\\n    align-items: flex-end !important;\\n  }\\n\\n  .align-items-md-center {\\n    align-items: center !important;\\n  }\\n\\n  .align-items-md-baseline {\\n    align-items: baseline !important;\\n  }\\n\\n  .align-items-md-stretch {\\n    align-items: stretch !important;\\n  }\\n\\n  .align-content-md-start {\\n    align-content: flex-start !important;\\n  }\\n\\n  .align-content-md-end {\\n    align-content: flex-end !important;\\n  }\\n\\n  .align-content-md-center {\\n    align-content: center !important;\\n  }\\n\\n  .align-content-md-between {\\n    align-content: space-between !important;\\n  }\\n\\n  .align-content-md-around {\\n    align-content: space-around !important;\\n  }\\n\\n  .align-content-md-stretch {\\n    align-content: stretch !important;\\n  }\\n\\n  .align-self-md-auto {\\n    align-self: auto !important;\\n  }\\n\\n  .align-self-md-start {\\n    align-self: flex-start !important;\\n  }\\n\\n  .align-self-md-end {\\n    align-self: flex-end !important;\\n  }\\n\\n  .align-self-md-center {\\n    align-self: center !important;\\n  }\\n\\n  .align-self-md-baseline {\\n    align-self: baseline !important;\\n  }\\n\\n  .align-self-md-stretch {\\n    align-self: stretch !important;\\n  }\\n\\n  .order-md-first {\\n    order: -1 !important;\\n  }\\n\\n  .order-md-0 {\\n    order: 0 !important;\\n  }\\n\\n  .order-md-1 {\\n    order: 1 !important;\\n  }\\n\\n  .order-md-2 {\\n    order: 2 !important;\\n  }\\n\\n  .order-md-3 {\\n    order: 3 !important;\\n  }\\n\\n  .order-md-4 {\\n    order: 4 !important;\\n  }\\n\\n  .order-md-5 {\\n    order: 5 !important;\\n  }\\n\\n  .order-md-last {\\n    order: 6 !important;\\n  }\\n\\n  .m-md-0 {\\n    margin: 0 !important;\\n  }\\n\\n  .m-md-1 {\\n    margin: 0.25rem !important;\\n  }\\n\\n  .m-md-2 {\\n    margin: 0.5rem !important;\\n  }\\n\\n  .m-md-3 {\\n    margin: 1rem !important;\\n  }\\n\\n  .m-md-4 {\\n    margin: 1.5rem !important;\\n  }\\n\\n  .m-md-5 {\\n    margin: 3rem !important;\\n  }\\n\\n  .m-md-auto {\\n    margin: auto !important;\\n  }\\n\\n  .mx-md-0 {\\n    margin-right: 0 !important;\\n    margin-left: 0 !important;\\n  }\\n\\n  .mx-md-1 {\\n    margin-right: 0.25rem !important;\\n    margin-left: 0.25rem !important;\\n  }\\n\\n  .mx-md-2 {\\n    margin-right: 0.5rem !important;\\n    margin-left: 0.5rem !important;\\n  }\\n\\n  .mx-md-3 {\\n    margin-right: 1rem !important;\\n    margin-left: 1rem !important;\\n  }\\n\\n  .mx-md-4 {\\n    margin-right: 1.5rem !important;\\n    margin-left: 1.5rem !important;\\n  }\\n\\n  .mx-md-5 {\\n    margin-right: 3rem !important;\\n    margin-left: 3rem !important;\\n  }\\n\\n  .mx-md-auto {\\n    margin-right: auto !important;\\n    margin-left: auto !important;\\n  }\\n\\n  .my-md-0 {\\n    margin-top: 0 !important;\\n    margin-bottom: 0 !important;\\n  }\\n\\n  .my-md-1 {\\n    margin-top: 0.25rem !important;\\n    margin-bottom: 0.25rem !important;\\n  }\\n\\n  .my-md-2 {\\n    margin-top: 0.5rem !important;\\n    margin-bottom: 0.5rem !important;\\n  }\\n\\n  .my-md-3 {\\n    margin-top: 1rem !important;\\n    margin-bottom: 1rem !important;\\n  }\\n\\n  .my-md-4 {\\n    margin-top: 1.5rem !important;\\n    margin-bottom: 1.5rem !important;\\n  }\\n\\n  .my-md-5 {\\n    margin-top: 3rem !important;\\n    margin-bottom: 3rem !important;\\n  }\\n\\n  .my-md-auto {\\n    margin-top: auto !important;\\n    margin-bottom: auto !important;\\n  }\\n\\n  .mt-md-0 {\\n    margin-top: 0 !important;\\n  }\\n\\n  .mt-md-1 {\\n    margin-top: 0.25rem !important;\\n  }\\n\\n  .mt-md-2 {\\n    margin-top: 0.5rem !important;\\n  }\\n\\n  .mt-md-3 {\\n    margin-top: 1rem !important;\\n  }\\n\\n  .mt-md-4 {\\n    margin-top: 1.5rem !important;\\n  }\\n\\n  .mt-md-5 {\\n    margin-top: 3rem !important;\\n  }\\n\\n  .mt-md-auto {\\n    margin-top: auto !important;\\n  }\\n\\n  .me-md-0 {\\n    margin-right: 0 !important;\\n  }\\n\\n  .me-md-1 {\\n    margin-right: 0.25rem !important;\\n  }\\n\\n  .me-md-2 {\\n    margin-right: 0.5rem !important;\\n  }\\n\\n  .me-md-3 {\\n    margin-right: 1rem !important;\\n  }\\n\\n  .me-md-4 {\\n    margin-right: 1.5rem !important;\\n  }\\n\\n  .me-md-5 {\\n    margin-right: 3rem !important;\\n  }\\n\\n  .me-md-auto {\\n    margin-right: auto !important;\\n  }\\n\\n  .mb-md-0 {\\n    margin-bottom: 0 !important;\\n  }\\n\\n  .mb-md-1 {\\n    margin-bottom: 0.25rem !important;\\n  }\\n\\n  .mb-md-2 {\\n    margin-bottom: 0.5rem !important;\\n  }\\n\\n  .mb-md-3 {\\n    margin-bottom: 1rem !important;\\n  }\\n\\n  .mb-md-4 {\\n    margin-bottom: 1.5rem !important;\\n  }\\n\\n  .mb-md-5 {\\n    margin-bottom: 3rem !important;\\n  }\\n\\n  .mb-md-auto {\\n    margin-bottom: auto !important;\\n  }\\n\\n  .ms-md-0 {\\n    margin-left: 0 !important;\\n  }\\n\\n  .ms-md-1 {\\n    margin-left: 0.25rem !important;\\n  }\\n\\n  .ms-md-2 {\\n    margin-left: 0.5rem !important;\\n  }\\n\\n  .ms-md-3 {\\n    margin-left: 1rem !important;\\n  }\\n\\n  .ms-md-4 {\\n    margin-left: 1.5rem !important;\\n  }\\n\\n  .ms-md-5 {\\n    margin-left: 3rem !important;\\n  }\\n\\n  .ms-md-auto {\\n    margin-left: auto !important;\\n  }\\n\\n  .p-md-0 {\\n    padding: 0 !important;\\n  }\\n\\n  .p-md-1 {\\n    padding: 0.25rem !important;\\n  }\\n\\n  .p-md-2 {\\n    padding: 0.5rem !important;\\n  }\\n\\n  .p-md-3 {\\n    padding: 1rem !important;\\n  }\\n\\n  .p-md-4 {\\n    padding: 1.5rem !important;\\n  }\\n\\n  .p-md-5 {\\n    padding: 3rem !important;\\n  }\\n\\n  .px-md-0 {\\n    padding-right: 0 !important;\\n    padding-left: 0 !important;\\n  }\\n\\n  .px-md-1 {\\n    padding-right: 0.25rem !important;\\n    padding-left: 0.25rem !important;\\n  }\\n\\n  .px-md-2 {\\n    padding-right: 0.5rem !important;\\n    padding-left: 0.5rem !important;\\n  }\\n\\n  .px-md-3 {\\n    padding-right: 1rem !important;\\n    padding-left: 1rem !important;\\n  }\\n\\n  .px-md-4 {\\n    padding-right: 1.5rem !important;\\n    padding-left: 1.5rem !important;\\n  }\\n\\n  .px-md-5 {\\n    padding-right: 3rem !important;\\n    padding-left: 3rem !important;\\n  }\\n\\n  .py-md-0 {\\n    padding-top: 0 !important;\\n    padding-bottom: 0 !important;\\n  }\\n\\n  .py-md-1 {\\n    padding-top: 0.25rem !important;\\n    padding-bottom: 0.25rem !important;\\n  }\\n\\n  .py-md-2 {\\n    padding-top: 0.5rem !important;\\n    padding-bottom: 0.5rem !important;\\n  }\\n\\n  .py-md-3 {\\n    padding-top: 1rem !important;\\n    padding-bottom: 1rem !important;\\n  }\\n\\n  .py-md-4 {\\n    padding-top: 1.5rem !important;\\n    padding-bottom: 1.5rem !important;\\n  }\\n\\n  .py-md-5 {\\n    padding-top: 3rem !important;\\n    padding-bottom: 3rem !important;\\n  }\\n\\n  .pt-md-0 {\\n    padding-top: 0 !important;\\n  }\\n\\n  .pt-md-1 {\\n    padding-top: 0.25rem !important;\\n  }\\n\\n  .pt-md-2 {\\n    padding-top: 0.5rem !important;\\n  }\\n\\n  .pt-md-3 {\\n    padding-top: 1rem !important;\\n  }\\n\\n  .pt-md-4 {\\n    padding-top: 1.5rem !important;\\n  }\\n\\n  .pt-md-5 {\\n    padding-top: 3rem !important;\\n  }\\n\\n  .pe-md-0 {\\n    padding-right: 0 !important;\\n  }\\n\\n  .pe-md-1 {\\n    padding-right: 0.25rem !important;\\n  }\\n\\n  .pe-md-2 {\\n    padding-right: 0.5rem !important;\\n  }\\n\\n  .pe-md-3 {\\n    padding-right: 1rem !important;\\n  }\\n\\n  .pe-md-4 {\\n    padding-right: 1.5rem !important;\\n  }\\n\\n  .pe-md-5 {\\n    padding-right: 3rem !important;\\n  }\\n\\n  .pb-md-0 {\\n    padding-bottom: 0 !important;\\n  }\\n\\n  .pb-md-1 {\\n    padding-bottom: 0.25rem !important;\\n  }\\n\\n  .pb-md-2 {\\n    padding-bottom: 0.5rem !important;\\n  }\\n\\n  .pb-md-3 {\\n    padding-bottom: 1rem !important;\\n  }\\n\\n  .pb-md-4 {\\n    padding-bottom: 1.5rem !important;\\n  }\\n\\n  .pb-md-5 {\\n    padding-bottom: 3rem !important;\\n  }\\n\\n  .ps-md-0 {\\n    padding-left: 0 !important;\\n  }\\n\\n  .ps-md-1 {\\n    padding-left: 0.25rem !important;\\n  }\\n\\n  .ps-md-2 {\\n    padding-left: 0.5rem !important;\\n  }\\n\\n  .ps-md-3 {\\n    padding-left: 1rem !important;\\n  }\\n\\n  .ps-md-4 {\\n    padding-left: 1.5rem !important;\\n  }\\n\\n  .ps-md-5 {\\n    padding-left: 3rem !important;\\n  }\\n\\n  .text-md-start {\\n    text-align: left !important;\\n  }\\n\\n  .text-md-end {\\n    text-align: right !important;\\n  }\\n\\n  .text-md-center {\\n    text-align: center !important;\\n  }\\n}\\n@media (min-width: 992px) {\\n  .float-lg-start {\\n    float: left !important;\\n  }\\n\\n  .float-lg-end {\\n    float: right !important;\\n  }\\n\\n  .float-lg-none {\\n    float: none !important;\\n  }\\n\\n  .d-lg-inline {\\n    display: inline !important;\\n  }\\n\\n  .d-lg-inline-block {\\n    display: inline-block !important;\\n  }\\n\\n  .d-lg-block {\\n    display: block !important;\\n  }\\n\\n  .d-lg-grid {\\n    display: grid !important;\\n  }\\n\\n  .d-lg-table {\\n    display: table !important;\\n  }\\n\\n  .d-lg-table-row {\\n    display: table-row !important;\\n  }\\n\\n  .d-lg-table-cell {\\n    display: table-cell !important;\\n  }\\n\\n  .d-lg-flex {\\n    display: flex !important;\\n  }\\n\\n  .d-lg-inline-flex {\\n    display: inline-flex !important;\\n  }\\n\\n  .d-lg-none {\\n    display: none !important;\\n  }\\n\\n  .flex-lg-fill {\\n    flex: 1 1 auto !important;\\n  }\\n\\n  .flex-lg-row {\\n    flex-direction: row !important;\\n  }\\n\\n  .flex-lg-column {\\n    flex-direction: column !important;\\n  }\\n\\n  .flex-lg-row-reverse {\\n    flex-direction: row-reverse !important;\\n  }\\n\\n  .flex-lg-column-reverse {\\n    flex-direction: column-reverse !important;\\n  }\\n\\n  .flex-lg-grow-0 {\\n    flex-grow: 0 !important;\\n  }\\n\\n  .flex-lg-grow-1 {\\n    flex-grow: 1 !important;\\n  }\\n\\n  .flex-lg-shrink-0 {\\n    flex-shrink: 0 !important;\\n  }\\n\\n  .flex-lg-shrink-1 {\\n    flex-shrink: 1 !important;\\n  }\\n\\n  .flex-lg-wrap {\\n    flex-wrap: wrap !important;\\n  }\\n\\n  .flex-lg-nowrap {\\n    flex-wrap: nowrap !important;\\n  }\\n\\n  .flex-lg-wrap-reverse {\\n    flex-wrap: wrap-reverse !important;\\n  }\\n\\n  .gap-lg-0 {\\n    gap: 0 !important;\\n  }\\n\\n  .gap-lg-1 {\\n    gap: 0.25rem !important;\\n  }\\n\\n  .gap-lg-2 {\\n    gap: 0.5rem !important;\\n  }\\n\\n  .gap-lg-3 {\\n    gap: 1rem !important;\\n  }\\n\\n  .gap-lg-4 {\\n    gap: 1.5rem !important;\\n  }\\n\\n  .gap-lg-5 {\\n    gap: 3rem !important;\\n  }\\n\\n  .justify-content-lg-start {\\n    justify-content: flex-start !important;\\n  }\\n\\n  .justify-content-lg-end {\\n    justify-content: flex-end !important;\\n  }\\n\\n  .justify-content-lg-center {\\n    justify-content: center !important;\\n  }\\n\\n  .justify-content-lg-between {\\n    justify-content: space-between !important;\\n  }\\n\\n  .justify-content-lg-around {\\n    justify-content: space-around !important;\\n  }\\n\\n  .justify-content-lg-evenly {\\n    justify-content: space-evenly !important;\\n  }\\n\\n  .align-items-lg-start {\\n    align-items: flex-start !important;\\n  }\\n\\n  .align-items-lg-end {\\n    align-items: flex-end !important;\\n  }\\n\\n  .align-items-lg-center {\\n    align-items: center !important;\\n  }\\n\\n  .align-items-lg-baseline {\\n    align-items: baseline !important;\\n  }\\n\\n  .align-items-lg-stretch {\\n    align-items: stretch !important;\\n  }\\n\\n  .align-content-lg-start {\\n    align-content: flex-start !important;\\n  }\\n\\n  .align-content-lg-end {\\n    align-content: flex-end !important;\\n  }\\n\\n  .align-content-lg-center {\\n    align-content: center !important;\\n  }\\n\\n  .align-content-lg-between {\\n    align-content: space-between !important;\\n  }\\n\\n  .align-content-lg-around {\\n    align-content: space-around !important;\\n  }\\n\\n  .align-content-lg-stretch {\\n    align-content: stretch !important;\\n  }\\n\\n  .align-self-lg-auto {\\n    align-self: auto !important;\\n  }\\n\\n  .align-self-lg-start {\\n    align-self: flex-start !important;\\n  }\\n\\n  .align-self-lg-end {\\n    align-self: flex-end !important;\\n  }\\n\\n  .align-self-lg-center {\\n    align-self: center !important;\\n  }\\n\\n  .align-self-lg-baseline {\\n    align-self: baseline !important;\\n  }\\n\\n  .align-self-lg-stretch {\\n    align-self: stretch !important;\\n  }\\n\\n  .order-lg-first {\\n    order: -1 !important;\\n  }\\n\\n  .order-lg-0 {\\n    order: 0 !important;\\n  }\\n\\n  .order-lg-1 {\\n    order: 1 !important;\\n  }\\n\\n  .order-lg-2 {\\n    order: 2 !important;\\n  }\\n\\n  .order-lg-3 {\\n    order: 3 !important;\\n  }\\n\\n  .order-lg-4 {\\n    order: 4 !important;\\n  }\\n\\n  .order-lg-5 {\\n    order: 5 !important;\\n  }\\n\\n  .order-lg-last {\\n    order: 6 !important;\\n  }\\n\\n  .m-lg-0 {\\n    margin: 0 !important;\\n  }\\n\\n  .m-lg-1 {\\n    margin: 0.25rem !important;\\n  }\\n\\n  .m-lg-2 {\\n    margin: 0.5rem !important;\\n  }\\n\\n  .m-lg-3 {\\n    margin: 1rem !important;\\n  }\\n\\n  .m-lg-4 {\\n    margin: 1.5rem !important;\\n  }\\n\\n  .m-lg-5 {\\n    margin: 3rem !important;\\n  }\\n\\n  .m-lg-auto {\\n    margin: auto !important;\\n  }\\n\\n  .mx-lg-0 {\\n    margin-right: 0 !important;\\n    margin-left: 0 !important;\\n  }\\n\\n  .mx-lg-1 {\\n    margin-right: 0.25rem !important;\\n    margin-left: 0.25rem !important;\\n  }\\n\\n  .mx-lg-2 {\\n    margin-right: 0.5rem !important;\\n    margin-left: 0.5rem !important;\\n  }\\n\\n  .mx-lg-3 {\\n    margin-right: 1rem !important;\\n    margin-left: 1rem !important;\\n  }\\n\\n  .mx-lg-4 {\\n    margin-right: 1.5rem !important;\\n    margin-left: 1.5rem !important;\\n  }\\n\\n  .mx-lg-5 {\\n    margin-right: 3rem !important;\\n    margin-left: 3rem !important;\\n  }\\n\\n  .mx-lg-auto {\\n    margin-right: auto !important;\\n    margin-left: auto !important;\\n  }\\n\\n  .my-lg-0 {\\n    margin-top: 0 !important;\\n    margin-bottom: 0 !important;\\n  }\\n\\n  .my-lg-1 {\\n    margin-top: 0.25rem !important;\\n    margin-bottom: 0.25rem !important;\\n  }\\n\\n  .my-lg-2 {\\n    margin-top: 0.5rem !important;\\n    margin-bottom: 0.5rem !important;\\n  }\\n\\n  .my-lg-3 {\\n    margin-top: 1rem !important;\\n    margin-bottom: 1rem !important;\\n  }\\n\\n  .my-lg-4 {\\n    margin-top: 1.5rem !important;\\n    margin-bottom: 1.5rem !important;\\n  }\\n\\n  .my-lg-5 {\\n    margin-top: 3rem !important;\\n    margin-bottom: 3rem !important;\\n  }\\n\\n  .my-lg-auto {\\n    margin-top: auto !important;\\n    margin-bottom: auto !important;\\n  }\\n\\n  .mt-lg-0 {\\n    margin-top: 0 !important;\\n  }\\n\\n  .mt-lg-1 {\\n    margin-top: 0.25rem !important;\\n  }\\n\\n  .mt-lg-2 {\\n    margin-top: 0.5rem !important;\\n  }\\n\\n  .mt-lg-3 {\\n    margin-top: 1rem !important;\\n  }\\n\\n  .mt-lg-4 {\\n    margin-top: 1.5rem !important;\\n  }\\n\\n  .mt-lg-5 {\\n    margin-top: 3rem !important;\\n  }\\n\\n  .mt-lg-auto {\\n    margin-top: auto !important;\\n  }\\n\\n  .me-lg-0 {\\n    margin-right: 0 !important;\\n  }\\n\\n  .me-lg-1 {\\n    margin-right: 0.25rem !important;\\n  }\\n\\n  .me-lg-2 {\\n    margin-right: 0.5rem !important;\\n  }\\n\\n  .me-lg-3 {\\n    margin-right: 1rem !important;\\n  }\\n\\n  .me-lg-4 {\\n    margin-right: 1.5rem !important;\\n  }\\n\\n  .me-lg-5 {\\n    margin-right: 3rem !important;\\n  }\\n\\n  .me-lg-auto {\\n    margin-right: auto !important;\\n  }\\n\\n  .mb-lg-0 {\\n    margin-bottom: 0 !important;\\n  }\\n\\n  .mb-lg-1 {\\n    margin-bottom: 0.25rem !important;\\n  }\\n\\n  .mb-lg-2 {\\n    margin-bottom: 0.5rem !important;\\n  }\\n\\n  .mb-lg-3 {\\n    margin-bottom: 1rem !important;\\n  }\\n\\n  .mb-lg-4 {\\n    margin-bottom: 1.5rem !important;\\n  }\\n\\n  .mb-lg-5 {\\n    margin-bottom: 3rem !important;\\n  }\\n\\n  .mb-lg-auto {\\n    margin-bottom: auto !important;\\n  }\\n\\n  .ms-lg-0 {\\n    margin-left: 0 !important;\\n  }\\n\\n  .ms-lg-1 {\\n    margin-left: 0.25rem !important;\\n  }\\n\\n  .ms-lg-2 {\\n    margin-left: 0.5rem !important;\\n  }\\n\\n  .ms-lg-3 {\\n    margin-left: 1rem !important;\\n  }\\n\\n  .ms-lg-4 {\\n    margin-left: 1.5rem !important;\\n  }\\n\\n  .ms-lg-5 {\\n    margin-left: 3rem !important;\\n  }\\n\\n  .ms-lg-auto {\\n    margin-left: auto !important;\\n  }\\n\\n  .p-lg-0 {\\n    padding: 0 !important;\\n  }\\n\\n  .p-lg-1 {\\n    padding: 0.25rem !important;\\n  }\\n\\n  .p-lg-2 {\\n    padding: 0.5rem !important;\\n  }\\n\\n  .p-lg-3 {\\n    padding: 1rem !important;\\n  }\\n\\n  .p-lg-4 {\\n    padding: 1.5rem !important;\\n  }\\n\\n  .p-lg-5 {\\n    padding: 3rem !important;\\n  }\\n\\n  .px-lg-0 {\\n    padding-right: 0 !important;\\n    padding-left: 0 !important;\\n  }\\n\\n  .px-lg-1 {\\n    padding-right: 0.25rem !important;\\n    padding-left: 0.25rem !important;\\n  }\\n\\n  .px-lg-2 {\\n    padding-right: 0.5rem !important;\\n    padding-left: 0.5rem !important;\\n  }\\n\\n  .px-lg-3 {\\n    padding-right: 1rem !important;\\n    padding-left: 1rem !important;\\n  }\\n\\n  .px-lg-4 {\\n    padding-right: 1.5rem !important;\\n    padding-left: 1.5rem !important;\\n  }\\n\\n  .px-lg-5 {\\n    padding-right: 3rem !important;\\n    padding-left: 3rem !important;\\n  }\\n\\n  .py-lg-0 {\\n    padding-top: 0 !important;\\n    padding-bottom: 0 !important;\\n  }\\n\\n  .py-lg-1 {\\n    padding-top: 0.25rem !important;\\n    padding-bottom: 0.25rem !important;\\n  }\\n\\n  .py-lg-2 {\\n    padding-top: 0.5rem !important;\\n    padding-bottom: 0.5rem !important;\\n  }\\n\\n  .py-lg-3 {\\n    padding-top: 1rem !important;\\n    padding-bottom: 1rem !important;\\n  }\\n\\n  .py-lg-4 {\\n    padding-top: 1.5rem !important;\\n    padding-bottom: 1.5rem !important;\\n  }\\n\\n  .py-lg-5 {\\n    padding-top: 3rem !important;\\n    padding-bottom: 3rem !important;\\n  }\\n\\n  .pt-lg-0 {\\n    padding-top: 0 !important;\\n  }\\n\\n  .pt-lg-1 {\\n    padding-top: 0.25rem !important;\\n  }\\n\\n  .pt-lg-2 {\\n    padding-top: 0.5rem !important;\\n  }\\n\\n  .pt-lg-3 {\\n    padding-top: 1rem !important;\\n  }\\n\\n  .pt-lg-4 {\\n    padding-top: 1.5rem !important;\\n  }\\n\\n  .pt-lg-5 {\\n    padding-top: 3rem !important;\\n  }\\n\\n  .pe-lg-0 {\\n    padding-right: 0 !important;\\n  }\\n\\n  .pe-lg-1 {\\n    padding-right: 0.25rem !important;\\n  }\\n\\n  .pe-lg-2 {\\n    padding-right: 0.5rem !important;\\n  }\\n\\n  .pe-lg-3 {\\n    padding-right: 1rem !important;\\n  }\\n\\n  .pe-lg-4 {\\n    padding-right: 1.5rem !important;\\n  }\\n\\n  .pe-lg-5 {\\n    padding-right: 3rem !important;\\n  }\\n\\n  .pb-lg-0 {\\n    padding-bottom: 0 !important;\\n  }\\n\\n  .pb-lg-1 {\\n    padding-bottom: 0.25rem !important;\\n  }\\n\\n  .pb-lg-2 {\\n    padding-bottom: 0.5rem !important;\\n  }\\n\\n  .pb-lg-3 {\\n    padding-bottom: 1rem !important;\\n  }\\n\\n  .pb-lg-4 {\\n    padding-bottom: 1.5rem !important;\\n  }\\n\\n  .pb-lg-5 {\\n    padding-bottom: 3rem !important;\\n  }\\n\\n  .ps-lg-0 {\\n    padding-left: 0 !important;\\n  }\\n\\n  .ps-lg-1 {\\n    padding-left: 0.25rem !important;\\n  }\\n\\n  .ps-lg-2 {\\n    padding-left: 0.5rem !important;\\n  }\\n\\n  .ps-lg-3 {\\n    padding-left: 1rem !important;\\n  }\\n\\n  .ps-lg-4 {\\n    padding-left: 1.5rem !important;\\n  }\\n\\n  .ps-lg-5 {\\n    padding-left: 3rem !important;\\n  }\\n\\n  .text-lg-start {\\n    text-align: left !important;\\n  }\\n\\n  .text-lg-end {\\n    text-align: right !important;\\n  }\\n\\n  .text-lg-center {\\n    text-align: center !important;\\n  }\\n}\\n@media (min-width: 1200px) {\\n  .float-xl-start {\\n    float: left !important;\\n  }\\n\\n  .float-xl-end {\\n    float: right !important;\\n  }\\n\\n  .float-xl-none {\\n    float: none !important;\\n  }\\n\\n  .d-xl-inline {\\n    display: inline !important;\\n  }\\n\\n  .d-xl-inline-block {\\n    display: inline-block !important;\\n  }\\n\\n  .d-xl-block {\\n    display: block !important;\\n  }\\n\\n  .d-xl-grid {\\n    display: grid !important;\\n  }\\n\\n  .d-xl-table {\\n    display: table !important;\\n  }\\n\\n  .d-xl-table-row {\\n    display: table-row !important;\\n  }\\n\\n  .d-xl-table-cell {\\n    display: table-cell !important;\\n  }\\n\\n  .d-xl-flex {\\n    display: flex !important;\\n  }\\n\\n  .d-xl-inline-flex {\\n    display: inline-flex !important;\\n  }\\n\\n  .d-xl-none {\\n    display: none !important;\\n  }\\n\\n  .flex-xl-fill {\\n    flex: 1 1 auto !important;\\n  }\\n\\n  .flex-xl-row {\\n    flex-direction: row !important;\\n  }\\n\\n  .flex-xl-column {\\n    flex-direction: column !important;\\n  }\\n\\n  .flex-xl-row-reverse {\\n    flex-direction: row-reverse !important;\\n  }\\n\\n  .flex-xl-column-reverse {\\n    flex-direction: column-reverse !important;\\n  }\\n\\n  .flex-xl-grow-0 {\\n    flex-grow: 0 !important;\\n  }\\n\\n  .flex-xl-grow-1 {\\n    flex-grow: 1 !important;\\n  }\\n\\n  .flex-xl-shrink-0 {\\n    flex-shrink: 0 !important;\\n  }\\n\\n  .flex-xl-shrink-1 {\\n    flex-shrink: 1 !important;\\n  }\\n\\n  .flex-xl-wrap {\\n    flex-wrap: wrap !important;\\n  }\\n\\n  .flex-xl-nowrap {\\n    flex-wrap: nowrap !important;\\n  }\\n\\n  .flex-xl-wrap-reverse {\\n    flex-wrap: wrap-reverse !important;\\n  }\\n\\n  .gap-xl-0 {\\n    gap: 0 !important;\\n  }\\n\\n  .gap-xl-1 {\\n    gap: 0.25rem !important;\\n  }\\n\\n  .gap-xl-2 {\\n    gap: 0.5rem !important;\\n  }\\n\\n  .gap-xl-3 {\\n    gap: 1rem !important;\\n  }\\n\\n  .gap-xl-4 {\\n    gap: 1.5rem !important;\\n  }\\n\\n  .gap-xl-5 {\\n    gap: 3rem !important;\\n  }\\n\\n  .justify-content-xl-start {\\n    justify-content: flex-start !important;\\n  }\\n\\n  .justify-content-xl-end {\\n    justify-content: flex-end !important;\\n  }\\n\\n  .justify-content-xl-center {\\n    justify-content: center !important;\\n  }\\n\\n  .justify-content-xl-between {\\n    justify-content: space-between !important;\\n  }\\n\\n  .justify-content-xl-around {\\n    justify-content: space-around !important;\\n  }\\n\\n  .justify-content-xl-evenly {\\n    justify-content: space-evenly !important;\\n  }\\n\\n  .align-items-xl-start {\\n    align-items: flex-start !important;\\n  }\\n\\n  .align-items-xl-end {\\n    align-items: flex-end !important;\\n  }\\n\\n  .align-items-xl-center {\\n    align-items: center !important;\\n  }\\n\\n  .align-items-xl-baseline {\\n    align-items: baseline !important;\\n  }\\n\\n  .align-items-xl-stretch {\\n    align-items: stretch !important;\\n  }\\n\\n  .align-content-xl-start {\\n    align-content: flex-start !important;\\n  }\\n\\n  .align-content-xl-end {\\n    align-content: flex-end !important;\\n  }\\n\\n  .align-content-xl-center {\\n    align-content: center !important;\\n  }\\n\\n  .align-content-xl-between {\\n    align-content: space-between !important;\\n  }\\n\\n  .align-content-xl-around {\\n    align-content: space-around !important;\\n  }\\n\\n  .align-content-xl-stretch {\\n    align-content: stretch !important;\\n  }\\n\\n  .align-self-xl-auto {\\n    align-self: auto !important;\\n  }\\n\\n  .align-self-xl-start {\\n    align-self: flex-start !important;\\n  }\\n\\n  .align-self-xl-end {\\n    align-self: flex-end !important;\\n  }\\n\\n  .align-self-xl-center {\\n    align-self: center !important;\\n  }\\n\\n  .align-self-xl-baseline {\\n    align-self: baseline !important;\\n  }\\n\\n  .align-self-xl-stretch {\\n    align-self: stretch !important;\\n  }\\n\\n  .order-xl-first {\\n    order: -1 !important;\\n  }\\n\\n  .order-xl-0 {\\n    order: 0 !important;\\n  }\\n\\n  .order-xl-1 {\\n    order: 1 !important;\\n  }\\n\\n  .order-xl-2 {\\n    order: 2 !important;\\n  }\\n\\n  .order-xl-3 {\\n    order: 3 !important;\\n  }\\n\\n  .order-xl-4 {\\n    order: 4 !important;\\n  }\\n\\n  .order-xl-5 {\\n    order: 5 !important;\\n  }\\n\\n  .order-xl-last {\\n    order: 6 !important;\\n  }\\n\\n  .m-xl-0 {\\n    margin: 0 !important;\\n  }\\n\\n  .m-xl-1 {\\n    margin: 0.25rem !important;\\n  }\\n\\n  .m-xl-2 {\\n    margin: 0.5rem !important;\\n  }\\n\\n  .m-xl-3 {\\n    margin: 1rem !important;\\n  }\\n\\n  .m-xl-4 {\\n    margin: 1.5rem !important;\\n  }\\n\\n  .m-xl-5 {\\n    margin: 3rem !important;\\n  }\\n\\n  .m-xl-auto {\\n    margin: auto !important;\\n  }\\n\\n  .mx-xl-0 {\\n    margin-right: 0 !important;\\n    margin-left: 0 !important;\\n  }\\n\\n  .mx-xl-1 {\\n    margin-right: 0.25rem !important;\\n    margin-left: 0.25rem !important;\\n  }\\n\\n  .mx-xl-2 {\\n    margin-right: 0.5rem !important;\\n    margin-left: 0.5rem !important;\\n  }\\n\\n  .mx-xl-3 {\\n    margin-right: 1rem !important;\\n    margin-left: 1rem !important;\\n  }\\n\\n  .mx-xl-4 {\\n    margin-right: 1.5rem !important;\\n    margin-left: 1.5rem !important;\\n  }\\n\\n  .mx-xl-5 {\\n    margin-right: 3rem !important;\\n    margin-left: 3rem !important;\\n  }\\n\\n  .mx-xl-auto {\\n    margin-right: auto !important;\\n    margin-left: auto !important;\\n  }\\n\\n  .my-xl-0 {\\n    margin-top: 0 !important;\\n    margin-bottom: 0 !important;\\n  }\\n\\n  .my-xl-1 {\\n    margin-top: 0.25rem !important;\\n    margin-bottom: 0.25rem !important;\\n  }\\n\\n  .my-xl-2 {\\n    margin-top: 0.5rem !important;\\n    margin-bottom: 0.5rem !important;\\n  }\\n\\n  .my-xl-3 {\\n    margin-top: 1rem !important;\\n    margin-bottom: 1rem !important;\\n  }\\n\\n  .my-xl-4 {\\n    margin-top: 1.5rem !important;\\n    margin-bottom: 1.5rem !important;\\n  }\\n\\n  .my-xl-5 {\\n    margin-top: 3rem !important;\\n    margin-bottom: 3rem !important;\\n  }\\n\\n  .my-xl-auto {\\n    margin-top: auto !important;\\n    margin-bottom: auto !important;\\n  }\\n\\n  .mt-xl-0 {\\n    margin-top: 0 !important;\\n  }\\n\\n  .mt-xl-1 {\\n    margin-top: 0.25rem !important;\\n  }\\n\\n  .mt-xl-2 {\\n    margin-top: 0.5rem !important;\\n  }\\n\\n  .mt-xl-3 {\\n    margin-top: 1rem !important;\\n  }\\n\\n  .mt-xl-4 {\\n    margin-top: 1.5rem !important;\\n  }\\n\\n  .mt-xl-5 {\\n    margin-top: 3rem !important;\\n  }\\n\\n  .mt-xl-auto {\\n    margin-top: auto !important;\\n  }\\n\\n  .me-xl-0 {\\n    margin-right: 0 !important;\\n  }\\n\\n  .me-xl-1 {\\n    margin-right: 0.25rem !important;\\n  }\\n\\n  .me-xl-2 {\\n    margin-right: 0.5rem !important;\\n  }\\n\\n  .me-xl-3 {\\n    margin-right: 1rem !important;\\n  }\\n\\n  .me-xl-4 {\\n    margin-right: 1.5rem !important;\\n  }\\n\\n  .me-xl-5 {\\n    margin-right: 3rem !important;\\n  }\\n\\n  .me-xl-auto {\\n    margin-right: auto !important;\\n  }\\n\\n  .mb-xl-0 {\\n    margin-bottom: 0 !important;\\n  }\\n\\n  .mb-xl-1 {\\n    margin-bottom: 0.25rem !important;\\n  }\\n\\n  .mb-xl-2 {\\n    margin-bottom: 0.5rem !important;\\n  }\\n\\n  .mb-xl-3 {\\n    margin-bottom: 1rem !important;\\n  }\\n\\n  .mb-xl-4 {\\n    margin-bottom: 1.5rem !important;\\n  }\\n\\n  .mb-xl-5 {\\n    margin-bottom: 3rem !important;\\n  }\\n\\n  .mb-xl-auto {\\n    margin-bottom: auto !important;\\n  }\\n\\n  .ms-xl-0 {\\n    margin-left: 0 !important;\\n  }\\n\\n  .ms-xl-1 {\\n    margin-left: 0.25rem !important;\\n  }\\n\\n  .ms-xl-2 {\\n    margin-left: 0.5rem !important;\\n  }\\n\\n  .ms-xl-3 {\\n    margin-left: 1rem !important;\\n  }\\n\\n  .ms-xl-4 {\\n    margin-left: 1.5rem !important;\\n  }\\n\\n  .ms-xl-5 {\\n    margin-left: 3rem !important;\\n  }\\n\\n  .ms-xl-auto {\\n    margin-left: auto !important;\\n  }\\n\\n  .p-xl-0 {\\n    padding: 0 !important;\\n  }\\n\\n  .p-xl-1 {\\n    padding: 0.25rem !important;\\n  }\\n\\n  .p-xl-2 {\\n    padding: 0.5rem !important;\\n  }\\n\\n  .p-xl-3 {\\n    padding: 1rem !important;\\n  }\\n\\n  .p-xl-4 {\\n    padding: 1.5rem !important;\\n  }\\n\\n  .p-xl-5 {\\n    padding: 3rem !important;\\n  }\\n\\n  .px-xl-0 {\\n    padding-right: 0 !important;\\n    padding-left: 0 !important;\\n  }\\n\\n  .px-xl-1 {\\n    padding-right: 0.25rem !important;\\n    padding-left: 0.25rem !important;\\n  }\\n\\n  .px-xl-2 {\\n    padding-right: 0.5rem !important;\\n    padding-left: 0.5rem !important;\\n  }\\n\\n  .px-xl-3 {\\n    padding-right: 1rem !important;\\n    padding-left: 1rem !important;\\n  }\\n\\n  .px-xl-4 {\\n    padding-right: 1.5rem !important;\\n    padding-left: 1.5rem !important;\\n  }\\n\\n  .px-xl-5 {\\n    padding-right: 3rem !important;\\n    padding-left: 3rem !important;\\n  }\\n\\n  .py-xl-0 {\\n    padding-top: 0 !important;\\n    padding-bottom: 0 !important;\\n  }\\n\\n  .py-xl-1 {\\n    padding-top: 0.25rem !important;\\n    padding-bottom: 0.25rem !important;\\n  }\\n\\n  .py-xl-2 {\\n    padding-top: 0.5rem !important;\\n    padding-bottom: 0.5rem !important;\\n  }\\n\\n  .py-xl-3 {\\n    padding-top: 1rem !important;\\n    padding-bottom: 1rem !important;\\n  }\\n\\n  .py-xl-4 {\\n    padding-top: 1.5rem !important;\\n    padding-bottom: 1.5rem !important;\\n  }\\n\\n  .py-xl-5 {\\n    padding-top: 3rem !important;\\n    padding-bottom: 3rem !important;\\n  }\\n\\n  .pt-xl-0 {\\n    padding-top: 0 !important;\\n  }\\n\\n  .pt-xl-1 {\\n    padding-top: 0.25rem !important;\\n  }\\n\\n  .pt-xl-2 {\\n    padding-top: 0.5rem !important;\\n  }\\n\\n  .pt-xl-3 {\\n    padding-top: 1rem !important;\\n  }\\n\\n  .pt-xl-4 {\\n    padding-top: 1.5rem !important;\\n  }\\n\\n  .pt-xl-5 {\\n    padding-top: 3rem !important;\\n  }\\n\\n  .pe-xl-0 {\\n    padding-right: 0 !important;\\n  }\\n\\n  .pe-xl-1 {\\n    padding-right: 0.25rem !important;\\n  }\\n\\n  .pe-xl-2 {\\n    padding-right: 0.5rem !important;\\n  }\\n\\n  .pe-xl-3 {\\n    padding-right: 1rem !important;\\n  }\\n\\n  .pe-xl-4 {\\n    padding-right: 1.5rem !important;\\n  }\\n\\n  .pe-xl-5 {\\n    padding-right: 3rem !important;\\n  }\\n\\n  .pb-xl-0 {\\n    padding-bottom: 0 !important;\\n  }\\n\\n  .pb-xl-1 {\\n    padding-bottom: 0.25rem !important;\\n  }\\n\\n  .pb-xl-2 {\\n    padding-bottom: 0.5rem !important;\\n  }\\n\\n  .pb-xl-3 {\\n    padding-bottom: 1rem !important;\\n  }\\n\\n  .pb-xl-4 {\\n    padding-bottom: 1.5rem !important;\\n  }\\n\\n  .pb-xl-5 {\\n    padding-bottom: 3rem !important;\\n  }\\n\\n  .ps-xl-0 {\\n    padding-left: 0 !important;\\n  }\\n\\n  .ps-xl-1 {\\n    padding-left: 0.25rem !important;\\n  }\\n\\n  .ps-xl-2 {\\n    padding-left: 0.5rem !important;\\n  }\\n\\n  .ps-xl-3 {\\n    padding-left: 1rem !important;\\n  }\\n\\n  .ps-xl-4 {\\n    padding-left: 1.5rem !important;\\n  }\\n\\n  .ps-xl-5 {\\n    padding-left: 3rem !important;\\n  }\\n\\n  .text-xl-start {\\n    text-align: left !important;\\n  }\\n\\n  .text-xl-end {\\n    text-align: right !important;\\n  }\\n\\n  .text-xl-center {\\n    text-align: center !important;\\n  }\\n}\\n@media (min-width: 1400px) {\\n  .float-xxl-start {\\n    float: left !important;\\n  }\\n\\n  .float-xxl-end {\\n    float: right !important;\\n  }\\n\\n  .float-xxl-none {\\n    float: none !important;\\n  }\\n\\n  .d-xxl-inline {\\n    display: inline !important;\\n  }\\n\\n  .d-xxl-inline-block {\\n    display: inline-block !important;\\n  }\\n\\n  .d-xxl-block {\\n    display: block !important;\\n  }\\n\\n  .d-xxl-grid {\\n    display: grid !important;\\n  }\\n\\n  .d-xxl-table {\\n    display: table !important;\\n  }\\n\\n  .d-xxl-table-row {\\n    display: table-row !important;\\n  }\\n\\n  .d-xxl-table-cell {\\n    display: table-cell !important;\\n  }\\n\\n  .d-xxl-flex {\\n    display: flex !important;\\n  }\\n\\n  .d-xxl-inline-flex {\\n    display: inline-flex !important;\\n  }\\n\\n  .d-xxl-none {\\n    display: none !important;\\n  }\\n\\n  .flex-xxl-fill {\\n    flex: 1 1 auto !important;\\n  }\\n\\n  .flex-xxl-row {\\n    flex-direction: row !important;\\n  }\\n\\n  .flex-xxl-column {\\n    flex-direction: column !important;\\n  }\\n\\n  .flex-xxl-row-reverse {\\n    flex-direction: row-reverse !important;\\n  }\\n\\n  .flex-xxl-column-reverse {\\n    flex-direction: column-reverse !important;\\n  }\\n\\n  .flex-xxl-grow-0 {\\n    flex-grow: 0 !important;\\n  }\\n\\n  .flex-xxl-grow-1 {\\n    flex-grow: 1 !important;\\n  }\\n\\n  .flex-xxl-shrink-0 {\\n    flex-shrink: 0 !important;\\n  }\\n\\n  .flex-xxl-shrink-1 {\\n    flex-shrink: 1 !important;\\n  }\\n\\n  .flex-xxl-wrap {\\n    flex-wrap: wrap !important;\\n  }\\n\\n  .flex-xxl-nowrap {\\n    flex-wrap: nowrap !important;\\n  }\\n\\n  .flex-xxl-wrap-reverse {\\n    flex-wrap: wrap-reverse !important;\\n  }\\n\\n  .gap-xxl-0 {\\n    gap: 0 !important;\\n  }\\n\\n  .gap-xxl-1 {\\n    gap: 0.25rem !important;\\n  }\\n\\n  .gap-xxl-2 {\\n    gap: 0.5rem !important;\\n  }\\n\\n  .gap-xxl-3 {\\n    gap: 1rem !important;\\n  }\\n\\n  .gap-xxl-4 {\\n    gap: 1.5rem !important;\\n  }\\n\\n  .gap-xxl-5 {\\n    gap: 3rem !important;\\n  }\\n\\n  .justify-content-xxl-start {\\n    justify-content: flex-start !important;\\n  }\\n\\n  .justify-content-xxl-end {\\n    justify-content: flex-end !important;\\n  }\\n\\n  .justify-content-xxl-center {\\n    justify-content: center !important;\\n  }\\n\\n  .justify-content-xxl-between {\\n    justify-content: space-between !important;\\n  }\\n\\n  .justify-content-xxl-around {\\n    justify-content: space-around !important;\\n  }\\n\\n  .justify-content-xxl-evenly {\\n    justify-content: space-evenly !important;\\n  }\\n\\n  .align-items-xxl-start {\\n    align-items: flex-start !important;\\n  }\\n\\n  .align-items-xxl-end {\\n    align-items: flex-end !important;\\n  }\\n\\n  .align-items-xxl-center {\\n    align-items: center !important;\\n  }\\n\\n  .align-items-xxl-baseline {\\n    align-items: baseline !important;\\n  }\\n\\n  .align-items-xxl-stretch {\\n    align-items: stretch !important;\\n  }\\n\\n  .align-content-xxl-start {\\n    align-content: flex-start !important;\\n  }\\n\\n  .align-content-xxl-end {\\n    align-content: flex-end !important;\\n  }\\n\\n  .align-content-xxl-center {\\n    align-content: center !important;\\n  }\\n\\n  .align-content-xxl-between {\\n    align-content: space-between !important;\\n  }\\n\\n  .align-content-xxl-around {\\n    align-content: space-around !important;\\n  }\\n\\n  .align-content-xxl-stretch {\\n    align-content: stretch !important;\\n  }\\n\\n  .align-self-xxl-auto {\\n    align-self: auto !important;\\n  }\\n\\n  .align-self-xxl-start {\\n    align-self: flex-start !important;\\n  }\\n\\n  .align-self-xxl-end {\\n    align-self: flex-end !important;\\n  }\\n\\n  .align-self-xxl-center {\\n    align-self: center !important;\\n  }\\n\\n  .align-self-xxl-baseline {\\n    align-self: baseline !important;\\n  }\\n\\n  .align-self-xxl-stretch {\\n    align-self: stretch !important;\\n  }\\n\\n  .order-xxl-first {\\n    order: -1 !important;\\n  }\\n\\n  .order-xxl-0 {\\n    order: 0 !important;\\n  }\\n\\n  .order-xxl-1 {\\n    order: 1 !important;\\n  }\\n\\n  .order-xxl-2 {\\n    order: 2 !important;\\n  }\\n\\n  .order-xxl-3 {\\n    order: 3 !important;\\n  }\\n\\n  .order-xxl-4 {\\n    order: 4 !important;\\n  }\\n\\n  .order-xxl-5 {\\n    order: 5 !important;\\n  }\\n\\n  .order-xxl-last {\\n    order: 6 !important;\\n  }\\n\\n  .m-xxl-0 {\\n    margin: 0 !important;\\n  }\\n\\n  .m-xxl-1 {\\n    margin: 0.25rem !important;\\n  }\\n\\n  .m-xxl-2 {\\n    margin: 0.5rem !important;\\n  }\\n\\n  .m-xxl-3 {\\n    margin: 1rem !important;\\n  }\\n\\n  .m-xxl-4 {\\n    margin: 1.5rem !important;\\n  }\\n\\n  .m-xxl-5 {\\n    margin: 3rem !important;\\n  }\\n\\n  .m-xxl-auto {\\n    margin: auto !important;\\n  }\\n\\n  .mx-xxl-0 {\\n    margin-right: 0 !important;\\n    margin-left: 0 !important;\\n  }\\n\\n  .mx-xxl-1 {\\n    margin-right: 0.25rem !important;\\n    margin-left: 0.25rem !important;\\n  }\\n\\n  .mx-xxl-2 {\\n    margin-right: 0.5rem !important;\\n    margin-left: 0.5rem !important;\\n  }\\n\\n  .mx-xxl-3 {\\n    margin-right: 1rem !important;\\n    margin-left: 1rem !important;\\n  }\\n\\n  .mx-xxl-4 {\\n    margin-right: 1.5rem !important;\\n    margin-left: 1.5rem !important;\\n  }\\n\\n  .mx-xxl-5 {\\n    margin-right: 3rem !important;\\n    margin-left: 3rem !important;\\n  }\\n\\n  .mx-xxl-auto {\\n    margin-right: auto !important;\\n    margin-left: auto !important;\\n  }\\n\\n  .my-xxl-0 {\\n    margin-top: 0 !important;\\n    margin-bottom: 0 !important;\\n  }\\n\\n  .my-xxl-1 {\\n    margin-top: 0.25rem !important;\\n    margin-bottom: 0.25rem !important;\\n  }\\n\\n  .my-xxl-2 {\\n    margin-top: 0.5rem !important;\\n    margin-bottom: 0.5rem !important;\\n  }\\n\\n  .my-xxl-3 {\\n    margin-top: 1rem !important;\\n    margin-bottom: 1rem !important;\\n  }\\n\\n  .my-xxl-4 {\\n    margin-top: 1.5rem !important;\\n    margin-bottom: 1.5rem !important;\\n  }\\n\\n  .my-xxl-5 {\\n    margin-top: 3rem !important;\\n    margin-bottom: 3rem !important;\\n  }\\n\\n  .my-xxl-auto {\\n    margin-top: auto !important;\\n    margin-bottom: auto !important;\\n  }\\n\\n  .mt-xxl-0 {\\n    margin-top: 0 !important;\\n  }\\n\\n  .mt-xxl-1 {\\n    margin-top: 0.25rem !important;\\n  }\\n\\n  .mt-xxl-2 {\\n    margin-top: 0.5rem !important;\\n  }\\n\\n  .mt-xxl-3 {\\n    margin-top: 1rem !important;\\n  }\\n\\n  .mt-xxl-4 {\\n    margin-top: 1.5rem !important;\\n  }\\n\\n  .mt-xxl-5 {\\n    margin-top: 3rem !important;\\n  }\\n\\n  .mt-xxl-auto {\\n    margin-top: auto !important;\\n  }\\n\\n  .me-xxl-0 {\\n    margin-right: 0 !important;\\n  }\\n\\n  .me-xxl-1 {\\n    margin-right: 0.25rem !important;\\n  }\\n\\n  .me-xxl-2 {\\n    margin-right: 0.5rem !important;\\n  }\\n\\n  .me-xxl-3 {\\n    margin-right: 1rem !important;\\n  }\\n\\n  .me-xxl-4 {\\n    margin-right: 1.5rem !important;\\n  }\\n\\n  .me-xxl-5 {\\n    margin-right: 3rem !important;\\n  }\\n\\n  .me-xxl-auto {\\n    margin-right: auto !important;\\n  }\\n\\n  .mb-xxl-0 {\\n    margin-bottom: 0 !important;\\n  }\\n\\n  .mb-xxl-1 {\\n    margin-bottom: 0.25rem !important;\\n  }\\n\\n  .mb-xxl-2 {\\n    margin-bottom: 0.5rem !important;\\n  }\\n\\n  .mb-xxl-3 {\\n    margin-bottom: 1rem !important;\\n  }\\n\\n  .mb-xxl-4 {\\n    margin-bottom: 1.5rem !important;\\n  }\\n\\n  .mb-xxl-5 {\\n    margin-bottom: 3rem !important;\\n  }\\n\\n  .mb-xxl-auto {\\n    margin-bottom: auto !important;\\n  }\\n\\n  .ms-xxl-0 {\\n    margin-left: 0 !important;\\n  }\\n\\n  .ms-xxl-1 {\\n    margin-left: 0.25rem !important;\\n  }\\n\\n  .ms-xxl-2 {\\n    margin-left: 0.5rem !important;\\n  }\\n\\n  .ms-xxl-3 {\\n    margin-left: 1rem !important;\\n  }\\n\\n  .ms-xxl-4 {\\n    margin-left: 1.5rem !important;\\n  }\\n\\n  .ms-xxl-5 {\\n    margin-left: 3rem !important;\\n  }\\n\\n  .ms-xxl-auto {\\n    margin-left: auto !important;\\n  }\\n\\n  .p-xxl-0 {\\n    padding: 0 !important;\\n  }\\n\\n  .p-xxl-1 {\\n    padding: 0.25rem !important;\\n  }\\n\\n  .p-xxl-2 {\\n    padding: 0.5rem !important;\\n  }\\n\\n  .p-xxl-3 {\\n    padding: 1rem !important;\\n  }\\n\\n  .p-xxl-4 {\\n    padding: 1.5rem !important;\\n  }\\n\\n  .p-xxl-5 {\\n    padding: 3rem !important;\\n  }\\n\\n  .px-xxl-0 {\\n    padding-right: 0 !important;\\n    padding-left: 0 !important;\\n  }\\n\\n  .px-xxl-1 {\\n    padding-right: 0.25rem !important;\\n    padding-left: 0.25rem !important;\\n  }\\n\\n  .px-xxl-2 {\\n    padding-right: 0.5rem !important;\\n    padding-left: 0.5rem !important;\\n  }\\n\\n  .px-xxl-3 {\\n    padding-right: 1rem !important;\\n    padding-left: 1rem !important;\\n  }\\n\\n  .px-xxl-4 {\\n    padding-right: 1.5rem !important;\\n    padding-left: 1.5rem !important;\\n  }\\n\\n  .px-xxl-5 {\\n    padding-right: 3rem !important;\\n    padding-left: 3rem !important;\\n  }\\n\\n  .py-xxl-0 {\\n    padding-top: 0 !important;\\n    padding-bottom: 0 !important;\\n  }\\n\\n  .py-xxl-1 {\\n    padding-top: 0.25rem !important;\\n    padding-bottom: 0.25rem !important;\\n  }\\n\\n  .py-xxl-2 {\\n    padding-top: 0.5rem !important;\\n    padding-bottom: 0.5rem !important;\\n  }\\n\\n  .py-xxl-3 {\\n    padding-top: 1rem !important;\\n    padding-bottom: 1rem !important;\\n  }\\n\\n  .py-xxl-4 {\\n    padding-top: 1.5rem !important;\\n    padding-bottom: 1.5rem !important;\\n  }\\n\\n  .py-xxl-5 {\\n    padding-top: 3rem !important;\\n    padding-bottom: 3rem !important;\\n  }\\n\\n  .pt-xxl-0 {\\n    padding-top: 0 !important;\\n  }\\n\\n  .pt-xxl-1 {\\n    padding-top: 0.25rem !important;\\n  }\\n\\n  .pt-xxl-2 {\\n    padding-top: 0.5rem !important;\\n  }\\n\\n  .pt-xxl-3 {\\n    padding-top: 1rem !important;\\n  }\\n\\n  .pt-xxl-4 {\\n    padding-top: 1.5rem !important;\\n  }\\n\\n  .pt-xxl-5 {\\n    padding-top: 3rem !important;\\n  }\\n\\n  .pe-xxl-0 {\\n    padding-right: 0 !important;\\n  }\\n\\n  .pe-xxl-1 {\\n    padding-right: 0.25rem !important;\\n  }\\n\\n  .pe-xxl-2 {\\n    padding-right: 0.5rem !important;\\n  }\\n\\n  .pe-xxl-3 {\\n    padding-right: 1rem !important;\\n  }\\n\\n  .pe-xxl-4 {\\n    padding-right: 1.5rem !important;\\n  }\\n\\n  .pe-xxl-5 {\\n    padding-right: 3rem !important;\\n  }\\n\\n  .pb-xxl-0 {\\n    padding-bottom: 0 !important;\\n  }\\n\\n  .pb-xxl-1 {\\n    padding-bottom: 0.25rem !important;\\n  }\\n\\n  .pb-xxl-2 {\\n    padding-bottom: 0.5rem !important;\\n  }\\n\\n  .pb-xxl-3 {\\n    padding-bottom: 1rem !important;\\n  }\\n\\n  .pb-xxl-4 {\\n    padding-bottom: 1.5rem !important;\\n  }\\n\\n  .pb-xxl-5 {\\n    padding-bottom: 3rem !important;\\n  }\\n\\n  .ps-xxl-0 {\\n    padding-left: 0 !important;\\n  }\\n\\n  .ps-xxl-1 {\\n    padding-left: 0.25rem !important;\\n  }\\n\\n  .ps-xxl-2 {\\n    padding-left: 0.5rem !important;\\n  }\\n\\n  .ps-xxl-3 {\\n    padding-left: 1rem !important;\\n  }\\n\\n  .ps-xxl-4 {\\n    padding-left: 1.5rem !important;\\n  }\\n\\n  .ps-xxl-5 {\\n    padding-left: 3rem !important;\\n  }\\n\\n  .text-xxl-start {\\n    text-align: left !important;\\n  }\\n\\n  .text-xxl-end {\\n    text-align: right !important;\\n  }\\n\\n  .text-xxl-center {\\n    text-align: center !important;\\n  }\\n}\\n@media (min-width: 1200px) {\\n  .fs-1 {\\n    font-size: 2.5rem !important;\\n  }\\n\\n  .fs-2 {\\n    font-size: 2rem !important;\\n  }\\n\\n  .fs-3 {\\n    font-size: 1.75rem !important;\\n  }\\n\\n  .fs-4 {\\n    font-size: 1.5rem !important;\\n  }\\n}\\n@media print {\\n  .d-print-inline {\\n    display: inline !important;\\n  }\\n\\n  .d-print-inline-block {\\n    display: inline-block !important;\\n  }\\n\\n  .d-print-block {\\n    display: block !important;\\n  }\\n\\n  .d-print-grid {\\n    display: grid !important;\\n  }\\n\\n  .d-print-table {\\n    display: table !important;\\n  }\\n\\n  .d-print-table-row {\\n    display: table-row !important;\\n  }\\n\\n  .d-print-table-cell {\\n    display: table-cell !important;\\n  }\\n\\n  .d-print-flex {\\n    display: flex !important;\\n  }\\n\\n  .d-print-inline-flex {\\n    display: inline-flex !important;\\n  }\\n\\n  .d-print-none {\\n    display: none !important;\\n  }\\n}\\n\\n/*# sourceMappingURL=bootstrap.css.map */","// stylelint-disable declaration-no-important, selector-no-qualifying-type, property-no-vendor-prefix\\n\\n\\n// Reboot\\n//\\n// Normalization of HTML elements, manually forked from Normalize.css to remove\\n// styles targeting irrelevant browsers while applying new styles.\\n//\\n// Normalize is licensed MIT. https://github.com/necolas/normalize.css\\n\\n\\n// Document\\n//\\n// Change from `box-sizing: content-box` so that `width` is not affected by `padding` or `border`.\\n\\n*,\\n*::before,\\n*::after {\\n  box-sizing: border-box;\\n}\\n\\n\\n// Root\\n//\\n// Ability to the value of the root font sizes, affecting the value of `rem`.\\n// null by default, thus nothing is generated.\\n\\n:root {\\n  @if $font-size-root != null {\\n    font-size: var(--#{$variable-prefix}-root-font-size);\\n  }\\n\\n  @if $enable-smooth-scroll {\\n    @media (prefers-reduced-motion: no-preference) {\\n      scroll-behavior: smooth;\\n    }\\n  }\\n}\\n\\n\\n// Body\\n//\\n// 1. Remove the margin in all browsers.\\n// 2. As a best practice, apply a default `background-color`.\\n// 3. Prevent adjustments of font size after orientation changes in iOS.\\n// 4. Change the default tap highlight to be completely transparent in iOS.\\n\\n// scss-docs-start reboot-body-rules\\nbody {\\n  margin: 0; // 1\\n  font-family: var(--#{$variable-prefix}body-font-family);\\n  @include font-size(var(--#{$variable-prefix}body-font-size));\\n  font-weight: var(--#{$variable-prefix}body-font-weight);\\n  line-height: var(--#{$variable-prefix}body-line-height);\\n  color: var(--#{$variable-prefix}body-color);\\n  text-align: var(--#{$variable-prefix}body-text-align);\\n  background-color: var(--#{$variable-prefix}body-bg); // 2\\n  -webkit-text-size-adjust: 100%; // 3\\n  -webkit-tap-highlight-color: rgba($black, 0); // 4\\n}\\n// scss-docs-end reboot-body-rules\\n\\n\\n// Content grouping\\n//\\n// 1. Reset Firefox\'s gray color\\n// 2. Set correct height and prevent the `size` attribute to make the `hr` look like an input field\\n\\nhr {\\n  margin: $hr-margin-y 0;\\n  color: $hr-color; // 1\\n  background-color: currentColor;\\n  border: 0;\\n  opacity: $hr-opacity;\\n}\\n\\nhr:not([size]) {\\n  height: $hr-height; // 2\\n}\\n\\n\\n// Typography\\n//\\n// 1. Remove top margins from headings\\n//    By default, `<h1>`-`<h6>` all receive top and bottom margins. We nuke the top\\n//    margin for easier control within type scales as it avoids margin collapsing.\\n\\n%heading {\\n  margin-top: 0; // 1\\n  margin-bottom: $headings-margin-bottom;\\n  font-family: $headings-font-family;\\n  font-style: $headings-font-style;\\n  font-weight: $headings-font-weight;\\n  line-height: $headings-line-height;\\n  color: $headings-color;\\n}\\n\\nh1 {\\n  @extend %heading;\\n  @include font-size($h1-font-size);\\n}\\n\\nh2 {\\n  @extend %heading;\\n  @include font-size($h2-font-size);\\n}\\n\\nh3 {\\n  @extend %heading;\\n  @include font-size($h3-font-size);\\n}\\n\\nh4 {\\n  @extend %heading;\\n  @include font-size($h4-font-size);\\n}\\n\\nh5 {\\n  @extend %heading;\\n  @include font-size($h5-font-size);\\n}\\n\\nh6 {\\n  @extend %heading;\\n  @include font-size($h6-font-size);\\n}\\n\\n\\n// Reset margins on paragraphs\\n//\\n// Similarly, the top margin on `<p>`s get reset. However, we also reset the\\n// bottom margin to use `rem` units instead of `em`.\\n\\np {\\n  margin-top: 0;\\n  margin-bottom: $paragraph-margin-bottom;\\n}\\n\\n\\n// Abbreviations\\n//\\n// 1. Duplicate behavior to the data-bs-* attribute for our tooltip plugin\\n// 2. Add the correct text decoration in Chrome, Edge, Opera, and Safari.\\n// 3. Add explicit cursor to indicate changed behavior.\\n// 4. Prevent the text-decoration to be skipped.\\n\\nabbr[title],\\nabbr[data-bs-original-title] { // 1\\n  text-decoration: underline dotted; // 2\\n  cursor: help; // 3\\n  text-decoration-skip-ink: none; // 4\\n}\\n\\n\\n// Address\\n\\naddress {\\n  margin-bottom: 1rem;\\n  font-style: normal;\\n  line-height: inherit;\\n}\\n\\n\\n// Lists\\n\\nol,\\nul {\\n  padding-left: 2rem;\\n}\\n\\nol,\\nul,\\ndl {\\n  margin-top: 0;\\n  margin-bottom: 1rem;\\n}\\n\\nol ol,\\nul ul,\\nol ul,\\nul ol {\\n  margin-bottom: 0;\\n}\\n\\ndt {\\n  font-weight: $dt-font-weight;\\n}\\n\\n// 1. Undo browser default\\n\\ndd {\\n  margin-bottom: .5rem;\\n  margin-left: 0; // 1\\n}\\n\\n\\n// Blockquote\\n\\nblockquote {\\n  margin: 0 0 1rem;\\n}\\n\\n\\n// Strong\\n//\\n// Add the correct font weight in Chrome, Edge, and Safari\\n\\nb,\\nstrong {\\n  font-weight: $font-weight-bolder;\\n}\\n\\n\\n// Small\\n//\\n// Add the correct font size in all browsers\\n\\nsmall {\\n  @include font-size($small-font-size);\\n}\\n\\n\\n// Mark\\n\\nmark {\\n  padding: $mark-padding;\\n  background-color: $mark-bg;\\n}\\n\\n\\n// Sub and Sup\\n//\\n// Prevent `sub` and `sup` elements from affecting the line height in\\n// all browsers.\\n\\nsub,\\nsup {\\n  position: relative;\\n  @include font-size($sub-sup-font-size);\\n  line-height: 0;\\n  vertical-align: baseline;\\n}\\n\\nsub { bottom: -.25em; }\\nsup { top: -.5em; }\\n\\n\\n// Links\\n\\na {\\n  color: $link-color;\\n  text-decoration: $link-decoration;\\n\\n  &:hover {\\n    color: $link-hover-color;\\n    text-decoration: $link-hover-decoration;\\n  }\\n}\\n\\n// And undo these styles for placeholder links/named anchors (without href).\\n// It would be more straightforward to just use a[href] in previous block, but that\\n// causes specificity issues in many other styles that are too complex to fix.\\n// See https://github.com/twbs/bootstrap/issues/19402\\n\\na:not([href]):not([class]) {\\n  &,\\n  &:hover {\\n    color: inherit;\\n    text-decoration: none;\\n  }\\n}\\n\\n\\n// Code\\n\\npre,\\ncode,\\nkbd,\\nsamp {\\n  font-family: $font-family-code;\\n  @include font-size(1em); // Correct the odd `em` font sizing in all browsers.\\n  direction: ltr #{\\"/* rtl:ignore */\\"};\\n  unicode-bidi: bidi-override;\\n}\\n\\n// 1. Remove browser default top margin\\n// 2. Reset browser default of `1em` to use `rem`s\\n// 3. Don\'t allow content to break outside\\n\\npre {\\n  display: block;\\n  margin-top: 0; // 1\\n  margin-bottom: 1rem; // 2\\n  overflow: auto; // 3\\n  @include font-size($code-font-size);\\n  color: $pre-color;\\n\\n  // Account for some code outputs that place code tags in pre tags\\n  code {\\n    @include font-size(inherit);\\n    color: inherit;\\n    word-break: normal;\\n  }\\n}\\n\\ncode {\\n  @include font-size($code-font-size);\\n  color: $code-color;\\n  word-wrap: break-word;\\n\\n  // Streamline the style when inside anchors to avoid broken underline and more\\n  a > & {\\n    color: inherit;\\n  }\\n}\\n\\nkbd {\\n  padding: $kbd-padding-y $kbd-padding-x;\\n  @include font-size($kbd-font-size);\\n  color: $kbd-color;\\n  background-color: $kbd-bg;\\n  @include border-radius($border-radius-sm);\\n\\n  kbd {\\n    padding: 0;\\n    @include font-size(1em);\\n    font-weight: $nested-kbd-font-weight;\\n  }\\n}\\n\\n\\n// Figures\\n//\\n// Apply a consistent margin strategy (matches our type styles).\\n\\nfigure {\\n  margin: 0 0 1rem;\\n}\\n\\n\\n// Images and content\\n\\nimg,\\nsvg {\\n  vertical-align: middle;\\n}\\n\\n\\n// Tables\\n//\\n// Prevent double borders\\n\\ntable {\\n  caption-side: bottom;\\n  border-collapse: collapse;\\n}\\n\\ncaption {\\n  padding-top: $table-cell-padding-y;\\n  padding-bottom: $table-cell-padding-y;\\n  color: $table-caption-color;\\n  text-align: left;\\n}\\n\\n// 1. Removes font-weight bold by inheriting\\n// 2. Matches default `<td>` alignment by inheriting `text-align`.\\n// 3. Fix alignment for Safari\\n\\nth {\\n  font-weight: $table-th-font-weight; // 1\\n  text-align: inherit; // 2\\n  text-align: -webkit-match-parent; // 3\\n}\\n\\nthead,\\ntbody,\\ntfoot,\\ntr,\\ntd,\\nth {\\n  border-color: inherit;\\n  border-style: solid;\\n  border-width: 0;\\n}\\n\\n\\n// Forms\\n//\\n// 1. Allow labels to use `margin` for spacing.\\n\\nlabel {\\n  display: inline-block; // 1\\n}\\n\\n// Remove the default `border-radius` that macOS Chrome adds.\\n// See https://github.com/twbs/bootstrap/issues/24093\\n\\nbutton {\\n  // stylelint-disable-next-line property-disallowed-list\\n  border-radius: 0;\\n}\\n\\n// Explicitly remove focus outline in Chromium when it shouldn\'t be\\n// visible (e.g. as result of mouse click or touch tap). It already\\n// should be doing this automatically, but seems to currently be\\n// confused and applies its very visible two-tone outline anyway.\\n\\nbutton:focus:not(:focus-visible) {\\n  outline: 0;\\n}\\n\\n// 1. Remove the margin in Firefox and Safari\\n\\ninput,\\nbutton,\\nselect,\\noptgroup,\\ntextarea {\\n  margin: 0; // 1\\n  font-family: inherit;\\n  @include font-size(inherit);\\n  line-height: inherit;\\n}\\n\\n// Remove the inheritance of text transform in Firefox\\nbutton,\\nselect {\\n  text-transform: none;\\n}\\n// Set the cursor for non-`<button>` buttons\\n//\\n// Details at https://github.com/twbs/bootstrap/pull/30562\\n[role=\\"button\\"] {\\n  cursor: pointer;\\n}\\n\\nselect {\\n  // Remove the inheritance of word-wrap in Safari.\\n  // See https://github.com/twbs/bootstrap/issues/24990\\n  word-wrap: normal;\\n\\n  // Undo the opacity change from Chrome\\n  &:disabled {\\n    opacity: 1;\\n  }\\n}\\n\\n// Remove the dropdown arrow in Chrome from inputs built with datalists.\\n// See https://stackoverflow.com/a/54997118\\n\\n[list]::-webkit-calendar-picker-indicator {\\n  display: none;\\n}\\n\\n// 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`\\n//    controls in Android 4.\\n// 2. Correct the inability to style clickable types in iOS and Safari.\\n// 3. Opinionated: add \\"hand\\" cursor to non-disabled button elements.\\n\\nbutton,\\n[type=\\"button\\"], // 1\\n[type=\\"reset\\"],\\n[type=\\"submit\\"] {\\n  -webkit-appearance: button; // 2\\n\\n  @if $enable-button-pointers {\\n    &:not(:disabled) {\\n      cursor: pointer; // 3\\n    }\\n  }\\n}\\n\\n// Remove inner border and padding from Firefox, but don\'t restore the outline like Normalize.\\n\\n::-moz-focus-inner {\\n  padding: 0;\\n  border-style: none;\\n}\\n\\n// 1. Textareas should really only resize vertically so they don\'t break their (horizontal) containers.\\n\\ntextarea {\\n  resize: vertical; // 1\\n}\\n\\n// 1. Browsers set a default `min-width: min-content;` on fieldsets,\\n//    unlike e.g. `<div>`s, which have `min-width: 0;` by default.\\n//    So we reset that to ensure fieldsets behave more like a standard block element.\\n//    See https://github.com/twbs/bootstrap/issues/12359\\n//    and https://html.spec.whatwg.org/multipage/#the-fieldset-and-legend-elements\\n// 2. Reset the default outline behavior of fieldsets so they don\'t affect page layout.\\n\\nfieldset {\\n  min-width: 0; // 1\\n  padding: 0; // 2\\n  margin: 0; // 2\\n  border: 0; // 2\\n}\\n\\n// 1. By using `float: left`, the legend will behave like a block element.\\n//    This way the border of a fieldset wraps around the legend if present.\\n// 2. Fix wrapping bug.\\n//    See https://github.com/twbs/bootstrap/issues/29712\\n\\nlegend {\\n  float: left; // 1\\n  width: 100%;\\n  padding: 0;\\n  margin-bottom: $legend-margin-bottom;\\n  @include font-size($legend-font-size);\\n  font-weight: $legend-font-weight;\\n  line-height: inherit;\\n\\n  + * {\\n    clear: left; // 2\\n  }\\n}\\n\\n// Fix height of inputs with a type of datetime-local, date, month, week, or time\\n// See https://github.com/twbs/bootstrap/issues/18842\\n\\n::-webkit-datetime-edit-fields-wrapper,\\n::-webkit-datetime-edit-text,\\n::-webkit-datetime-edit-minute,\\n::-webkit-datetime-edit-hour-field,\\n::-webkit-datetime-edit-day-field,\\n::-webkit-datetime-edit-month-field,\\n::-webkit-datetime-edit-year-field {\\n  padding: 0;\\n}\\n\\n::-webkit-inner-spin-button {\\n  height: auto;\\n}\\n\\n// 1. Correct the outline style in Safari.\\n// 2. This overrides the extra rounded corners on search inputs in iOS so that our\\n//    `.form-control` class can properly style them. Note that this cannot simply\\n//    be added to `.form-control` as it\'s not specific enough. For details, see\\n//    https://github.com/twbs/bootstrap/issues/11586.\\n\\n[type=\\"search\\"] {\\n  outline-offset: -2px; // 1\\n  -webkit-appearance: textfield; // 2\\n}\\n\\n// 1. A few input types should stay LTR\\n// See https://rtlstyling.com/posts/rtl-styling#form-inputs\\n// 2. RTL only output\\n// See https://rtlcss.com/learn/usage-guide/control-directives/#raw\\n\\n/* rtl:raw:\\n[type=\\"tel\\"],\\n[type=\\"url\\"],\\n[type=\\"email\\"],\\n[type=\\"number\\"] {\\n  direction: ltr;\\n}\\n*/\\n\\n// Remove the inner padding in Chrome and Safari on macOS.\\n\\n::-webkit-search-decoration {\\n  -webkit-appearance: none;\\n}\\n\\n// Remove padding around color pickers in webkit browsers\\n\\n::-webkit-color-swatch-wrapper {\\n  padding: 0;\\n}\\n\\n\\n// Inherit font family and line height for file input buttons\\n\\n::file-selector-button {\\n  font: inherit;\\n}\\n\\n// 1. Change font properties to `inherit`\\n// 2. Correct the inability to style clickable types in iOS and Safari.\\n\\n::-webkit-file-upload-button {\\n  font: inherit; // 1\\n  -webkit-appearance: button; // 2\\n}\\n\\n// Correct element displays\\n\\noutput {\\n  display: inline-block;\\n}\\n\\n// Remove border from iframe\\n\\niframe {\\n  border: 0;\\n}\\n\\n// Summary\\n//\\n// 1. Add the correct display in all browsers\\n\\nsummary {\\n  display: list-item; // 1\\n  cursor: pointer;\\n}\\n\\n\\n// Progress\\n//\\n// Add the correct vertical alignment in Chrome, Firefox, and Opera.\\n\\nprogress {\\n  vertical-align: baseline;\\n}\\n\\n\\n// Hidden attribute\\n//\\n// Always hide an element with the `hidden` HTML attribute.\\n\\n[hidden] {\\n  display: none !important;\\n}\\n","// stylelint-disable property-blacklist, scss/dollar-variable-default\\n\\n// SCSS RFS mixin\\n//\\n// Automated responsive values for font sizes, paddings, margins and much more\\n//\\n// Licensed under MIT (https://github.com/twbs/rfs/blob/main/LICENSE)\\n\\n// Configuration\\n\\n// Base value\\n$rfs-base-value: 1.25rem !default;\\n$rfs-unit: rem !default;\\n\\n@if $rfs-unit != rem and $rfs-unit != px {\\n  @error \\"`#{$rfs-unit}` is not a valid unit for $rfs-unit. Use `px` or `rem`.\\";\\n}\\n\\n// Breakpoint at where values start decreasing if screen width is smaller\\n$rfs-breakpoint: 1200px !default;\\n$rfs-breakpoint-unit: px !default;\\n\\n@if $rfs-breakpoint-unit != px and $rfs-breakpoint-unit != em and $rfs-breakpoint-unit != rem {\\n  @error \\"`#{$rfs-breakpoint-unit}` is not a valid unit for $rfs-breakpoint-unit. Use `px`, `em` or `rem`.\\";\\n}\\n\\n// Resize values based on screen height and width\\n$rfs-two-dimensional: false !default;\\n\\n// Factor of decrease\\n$rfs-factor: 10 !default;\\n\\n@if type-of($rfs-factor) != number or $rfs-factor <= 1 {\\n  @error \\"`#{$rfs-factor}` is not a valid  $rfs-factor, it must be greater than 1.\\";\\n}\\n\\n// Mode. Possibilities: \\"min-media-query\\", \\"max-media-query\\"\\n$rfs-mode: min-media-query !default;\\n\\n// Generate enable or disable classes. Possibilities: false, \\"enable\\" or \\"disable\\"\\n$rfs-class: false !default;\\n\\n// 1 rem = $rfs-rem-value px\\n$rfs-rem-value: 16 !default;\\n\\n// Safari iframe resize bug: https://github.com/twbs/rfs/issues/14\\n$rfs-safari-iframe-resize-bug-fix: false !default;\\n\\n// Disable RFS by setting $enable-rfs to false\\n$enable-rfs: true !default;\\n\\n// Cache $rfs-base-value unit\\n$rfs-base-value-unit: unit($rfs-base-value);\\n\\n@function divide($dividend, $divisor, $precision: 10) {\\n  $sign: if($dividend > 0 and $divisor > 0 or $dividend < 0 and $divisor < 0, 1, -1);\\n  $dividend: abs($dividend);\\n  $divisor: abs($divisor);\\n  @if $dividend == 0 {\\n    @return 0;\\n  }\\n  @if $divisor == 0 {\\n    @error \\"Cannot divide by 0\\";\\n  }\\n  $remainder: $dividend;\\n  $result: 0;\\n  $factor: 10;\\n  @while ($remainder > 0 and $precision >= 0) {\\n    $quotient: 0;\\n    @while ($remainder >= $divisor) {\\n      $remainder: $remainder - $divisor;\\n      $quotient: $quotient + 1;\\n    }\\n    $result: $result * 10 + $quotient;\\n    $factor: $factor * .1;\\n    $remainder: $remainder * 10;\\n    $precision: $precision - 1;\\n    @if ($precision < 0 and $remainder >= $divisor * 5) {\\n      $result: $result + 1;\\n    }\\n  }\\n  $result: $result * $factor * $sign;\\n  $dividend-unit: unit($dividend);\\n  $divisor-unit: unit($divisor);\\n  $unit-map: (\\n    \\"px\\": 1px,\\n    \\"rem\\": 1rem,\\n    \\"em\\": 1em,\\n    \\"%\\": 1%\\n  );\\n  @if ($dividend-unit != $divisor-unit and map-has-key($unit-map, $dividend-unit)) {\\n    $result: $result * map-get($unit-map, $dividend-unit);\\n  }\\n  @return $result;\\n}\\n\\n// Remove px-unit from $rfs-base-value for calculations\\n@if $rfs-base-value-unit == px {\\n  $rfs-base-value: divide($rfs-base-value, $rfs-base-value * 0 + 1);\\n}\\n@else if $rfs-base-value-unit == rem {\\n  $rfs-base-value: divide($rfs-base-value, divide($rfs-base-value * 0 + 1, $rfs-rem-value));\\n}\\n\\n// Cache $rfs-breakpoint unit to prevent multiple calls\\n$rfs-breakpoint-unit-cache: unit($rfs-breakpoint);\\n\\n// Remove unit from $rfs-breakpoint for calculations\\n@if $rfs-breakpoint-unit-cache == px {\\n  $rfs-breakpoint: divide($rfs-breakpoint, $rfs-breakpoint * 0 + 1);\\n}\\n@else if $rfs-breakpoint-unit-cache == rem or $rfs-breakpoint-unit-cache == \\"em\\" {\\n  $rfs-breakpoint: divide($rfs-breakpoint, divide($rfs-breakpoint * 0 + 1, $rfs-rem-value));\\n}\\n\\n// Calculate the media query value\\n$rfs-mq-value: if($rfs-breakpoint-unit == px, #{$rfs-breakpoint}px, #{divide($rfs-breakpoint, $rfs-rem-value)}#{$rfs-breakpoint-unit});\\n$rfs-mq-property-width: if($rfs-mode == max-media-query, max-width, min-width);\\n$rfs-mq-property-height: if($rfs-mode == max-media-query, max-height, min-height);\\n\\n// Internal mixin used to determine which media query needs to be used\\n@mixin _rfs-media-query {\\n  @if $rfs-two-dimensional {\\n    @if $rfs-mode == max-media-query {\\n      @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}), (#{$rfs-mq-property-height}: #{$rfs-mq-value}) {\\n        @content;\\n      }\\n    }\\n    @else {\\n      @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}) and (#{$rfs-mq-property-height}: #{$rfs-mq-value}) {\\n        @content;\\n      }\\n    }\\n  }\\n  @else {\\n    @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}) {\\n      @content;\\n    }\\n  }\\n}\\n\\n// Internal mixin that adds disable classes to the selector if needed.\\n@mixin _rfs-rule {\\n  @if $rfs-class == disable and $rfs-mode == max-media-query {\\n    // Adding an extra class increases specificity, which prevents the media query to override the property\\n    &,\\n    .disable-rfs &,\\n    &.disable-rfs {\\n      @content;\\n    }\\n  }\\n  @else if $rfs-class == enable and $rfs-mode == min-media-query {\\n    .enable-rfs &,\\n    &.enable-rfs {\\n      @content;\\n    }\\n  }\\n  @else {\\n    @content;\\n  }\\n}\\n\\n// Internal mixin that adds enable classes to the selector if needed.\\n@mixin _rfs-media-query-rule {\\n\\n  @if $rfs-class == enable {\\n    @if $rfs-mode == min-media-query {\\n      @content;\\n    }\\n\\n    @include _rfs-media-query {\\n      .enable-rfs &,\\n      &.enable-rfs {\\n        @content;\\n      }\\n    }\\n  }\\n  @else {\\n    @if $rfs-class == disable and $rfs-mode == min-media-query {\\n      .disable-rfs &,\\n      &.disable-rfs {\\n        @content;\\n      }\\n    }\\n    @include _rfs-media-query {\\n      @content;\\n    }\\n  }\\n}\\n\\n// Helper function to get the formatted non-responsive value\\n@function rfs-value($values) {\\n  // Convert to list\\n  $values: if(type-of($values) != list, ($values,), $values);\\n\\n  $val: \'\';\\n\\n  // Loop over each value and calculate value\\n  @each $value in $values {\\n    @if $value == 0 {\\n      $val: $val + \' 0\';\\n    }\\n    @else {\\n      // Cache $value unit\\n      $unit: if(type-of($value) == \\"number\\", unit($value), false);\\n\\n      @if $unit == px {\\n        // Convert to rem if needed\\n        $val: $val + \' \' + if($rfs-unit == rem, #{divide($value, $value * 0 + $rfs-rem-value)}rem, $value);\\n      }\\n      @else if $unit == rem {\\n        // Convert to px if needed\\n        $val: $val + \' \' + if($rfs-unit == px, #{divide($value, $value * 0 + 1) * $rfs-rem-value}px, $value);\\n      }\\n      @else {\\n        // If $value isn\'t a number (like inherit) or $value has a unit (not px or rem, like 1.5em) or $ is 0, just print the value\\n        $val: $val + \' \' + $value;\\n      }\\n    }\\n  }\\n\\n  // Remove first space\\n  @return unquote(str-slice($val, 2));\\n}\\n\\n// Helper function to get the responsive value calculated by RFS\\n@function rfs-fluid-value($values) {\\n  // Convert to list\\n  $values: if(type-of($values) != list, ($values,), $values);\\n\\n  $val: \'\';\\n\\n  // Loop over each value and calculate value\\n  @each $value in $values {\\n    @if $value == 0 {\\n      $val: $val + \' 0\';\\n    }\\n\\n    @else {\\n      // Cache $value unit\\n      $unit: if(type-of($value) == \\"number\\", unit($value), false);\\n\\n      // If $value isn\'t a number (like inherit) or $value has a unit (not px or rem, like 1.5em) or $ is 0, just print the value\\n      @if not $unit or $unit != px and $unit != rem {\\n        $val: $val + \' \' + $value;\\n      }\\n\\n      @else {\\n        // Remove unit from $value for calculations\\n        $value: divide($value, $value * 0 + if($unit == px, 1, divide(1, $rfs-rem-value)));\\n\\n        // Only add the media query if the value is greater than the minimum value\\n        @if abs($value) <= $rfs-base-value or not $enable-rfs {\\n          $val: $val + \' \' +  if($rfs-unit == rem, #{divide($value, $rfs-rem-value)}rem, #{$value}px);\\n        }\\n        @else {\\n          // Calculate the minimum value\\n          $value-min: $rfs-base-value + divide(abs($value) - $rfs-base-value, $rfs-factor);\\n\\n          // Calculate difference between $value and the minimum value\\n          $value-diff: abs($value) - $value-min;\\n\\n          // Base value formatting\\n          $min-width: if($rfs-unit == rem, #{divide($value-min, $rfs-rem-value)}rem, #{$value-min}px);\\n\\n          // Use negative value if needed\\n          $min-width: if($value < 0, -$min-width, $min-width);\\n\\n          // Use `vmin` if two-dimensional is enabled\\n          $variable-unit: if($rfs-two-dimensional, vmin, vw);\\n\\n          // Calculate the variable width between 0 and $rfs-breakpoint\\n          $variable-width: #{divide($value-diff * 100, $rfs-breakpoint)}#{$variable-unit};\\n\\n          // Return the calculated value\\n          $val: $val + \' calc(\' + $min-width + if($value < 0, \' - \', \' + \') + $variable-width + \')\';\\n        }\\n      }\\n    }\\n  }\\n\\n  // Remove first space\\n  @return unquote(str-slice($val, 2));\\n}\\n\\n// RFS mixin\\n@mixin rfs($values, $property: font-size) {\\n  @if $values != null {\\n    $val: rfs-value($values);\\n    $fluidVal: rfs-fluid-value($values);\\n\\n    // Do not print the media query if responsive & non-responsive values are the same\\n    @if $val == $fluidVal {\\n      #{$property}: $val;\\n    }\\n    @else {\\n      @include _rfs-rule {\\n        #{$property}: if($rfs-mode == max-media-query, $val, $fluidVal);\\n\\n        // Include safari iframe resize fix if needed\\n        min-width: if($rfs-safari-iframe-resize-bug-fix, (0 * 1vw), null);\\n      }\\n\\n      @include _rfs-media-query-rule {\\n        #{$property}: if($rfs-mode == max-media-query, $fluidVal, $val);\\n      }\\n    }\\n  }\\n}\\n\\n// Shorthand helper mixins\\n@mixin font-size($value) {\\n  @include rfs($value);\\n}\\n\\n@mixin padding($value) {\\n  @include rfs($value, padding);\\n}\\n\\n@mixin padding-top($value) {\\n  @include rfs($value, padding-top);\\n}\\n\\n@mixin padding-right($value) {\\n  @include rfs($value, padding-right);\\n}\\n\\n@mixin padding-bottom($value) {\\n  @include rfs($value, padding-bottom);\\n}\\n\\n@mixin padding-left($value) {\\n  @include rfs($value, padding-left);\\n}\\n\\n@mixin margin($value) {\\n  @include rfs($value, margin);\\n}\\n\\n@mixin margin-top($value) {\\n  @include rfs($value, margin-top);\\n}\\n\\n@mixin margin-right($value) {\\n  @include rfs($value, margin-right);\\n}\\n\\n@mixin margin-bottom($value) {\\n  @include rfs($value, margin-bottom);\\n}\\n\\n@mixin margin-left($value) {\\n  @include rfs($value, margin-left);\\n}\\n","// stylelint-disable property-disallowed-list\\n// Single side border-radius\\n\\n// Helper function to replace negative values with 0\\n@function valid-radius($radius) {\\n  $return: ();\\n  @each $value in $radius {\\n    @if type-of($value) == number {\\n      $return: append($return, max($value, 0));\\n    } @else {\\n      $return: append($return, $value);\\n    }\\n  }\\n  @return $return;\\n}\\n\\n// scss-docs-start border-radius-mixins\\n@mixin border-radius($radius: $border-radius, $fallback-border-radius: false) {\\n  @if $enable-rounded {\\n    border-radius: valid-radius($radius);\\n  }\\n  @else if $fallback-border-radius != false {\\n    border-radius: $fallback-border-radius;\\n  }\\n}\\n\\n@mixin border-top-radius($radius: $border-radius) {\\n  @if $enable-rounded {\\n    border-top-left-radius: valid-radius($radius);\\n    border-top-right-radius: valid-radius($radius);\\n  }\\n}\\n\\n@mixin border-end-radius($radius: $border-radius) {\\n  @if $enable-rounded {\\n    border-top-right-radius: valid-radius($radius);\\n    border-bottom-right-radius: valid-radius($radius);\\n  }\\n}\\n\\n@mixin border-bottom-radius($radius: $border-radius) {\\n  @if $enable-rounded {\\n    border-bottom-right-radius: valid-radius($radius);\\n    border-bottom-left-radius: valid-radius($radius);\\n  }\\n}\\n\\n@mixin border-start-radius($radius: $border-radius) {\\n  @if $enable-rounded {\\n    border-top-left-radius: valid-radius($radius);\\n    border-bottom-left-radius: valid-radius($radius);\\n  }\\n}\\n\\n@mixin border-top-start-radius($radius: $border-radius) {\\n  @if $enable-rounded {\\n    border-top-left-radius: valid-radius($radius);\\n  }\\n}\\n\\n@mixin border-top-end-radius($radius: $border-radius) {\\n  @if $enable-rounded {\\n    border-top-right-radius: valid-radius($radius);\\n  }\\n}\\n\\n@mixin border-bottom-end-radius($radius: $border-radius) {\\n  @if $enable-rounded {\\n    border-bottom-right-radius: valid-radius($radius);\\n  }\\n}\\n\\n@mixin border-bottom-start-radius($radius: $border-radius) {\\n  @if $enable-rounded {\\n    border-bottom-left-radius: valid-radius($radius);\\n  }\\n}\\n// scss-docs-end border-radius-mixins\\n","//\\n// Headings\\n//\\n.h1 {\\n  @extend h1;\\n}\\n\\n.h2 {\\n  @extend h2;\\n}\\n\\n.h3 {\\n  @extend h3;\\n}\\n\\n.h4 {\\n  @extend h4;\\n}\\n\\n.h5 {\\n  @extend h5;\\n}\\n\\n.h6 {\\n  @extend h6;\\n}\\n\\n\\n.lead {\\n  @include font-size($lead-font-size);\\n  font-weight: $lead-font-weight;\\n}\\n\\n// Type display classes\\n@each $display, $font-size in $display-font-sizes {\\n  .display-#{$display} {\\n    @include font-size($font-size);\\n    font-weight: $display-font-weight;\\n    line-height: $display-line-height;\\n  }\\n}\\n\\n//\\n// Emphasis\\n//\\n.small {\\n  @extend small;\\n}\\n\\n.mark {\\n  @extend mark;\\n}\\n\\n//\\n// Lists\\n//\\n\\n.list-unstyled {\\n  @include list-unstyled();\\n}\\n\\n// Inline turns list items into inline-block\\n.list-inline {\\n  @include list-unstyled();\\n}\\n.list-inline-item {\\n  display: inline-block;\\n\\n  &:not(:last-child) {\\n    margin-right: $list-inline-padding;\\n  }\\n}\\n\\n\\n//\\n// Misc\\n//\\n\\n// Builds on `abbr`\\n.initialism {\\n  @include font-size($initialism-font-size);\\n  text-transform: uppercase;\\n}\\n\\n// Blockquotes\\n.blockquote {\\n  margin-bottom: $blockquote-margin-y;\\n  @include font-size($blockquote-font-size);\\n\\n  > :last-child {\\n    margin-bottom: 0;\\n  }\\n}\\n\\n.blockquote-footer {\\n  margin-top: -$blockquote-margin-y;\\n  margin-bottom: $blockquote-margin-y;\\n  @include font-size($blockquote-footer-font-size);\\n  color: $blockquote-footer-color;\\n\\n  &::before {\\n    content: \\"\\\\2014\\\\00A0\\"; // em dash, nbsp\\n  }\\n}\\n","// Lists\\n\\n// Unstyled keeps list items block level, just removes default browser padding and list-style\\n@mixin list-unstyled {\\n  padding-left: 0;\\n  list-style: none;\\n}\\n","// Responsive images (ensure images don\'t scale beyond their parents)\\n//\\n// This is purposefully opt-in via an explicit class rather than being the default for all `<img>`s.\\n// We previously tried the \\"images are responsive by default\\" approach in Bootstrap v2,\\n// and abandoned it in Bootstrap v3 because it breaks lots of third-party widgets (including Google Maps)\\n// which weren\'t expecting the images within themselves to be involuntarily resized.\\n// See also https://github.com/twbs/bootstrap/issues/18178\\n.img-fluid {\\n  @include img-fluid();\\n}\\n\\n\\n// Image thumbnails\\n.img-thumbnail {\\n  padding: $thumbnail-padding;\\n  background-color: $thumbnail-bg;\\n  border: $thumbnail-border-width solid $thumbnail-border-color;\\n  @include border-radius($thumbnail-border-radius);\\n  @include box-shadow($thumbnail-box-shadow);\\n\\n  // Keep them at most 100% wide\\n  @include img-fluid();\\n}\\n\\n//\\n// Figures\\n//\\n\\n.figure {\\n  // Ensures the caption\'s text aligns with the image.\\n  display: inline-block;\\n}\\n\\n.figure-img {\\n  margin-bottom: $spacer * .5;\\n  line-height: 1;\\n}\\n\\n.figure-caption {\\n  @include font-size($figure-caption-font-size);\\n  color: $figure-caption-color;\\n}\\n","// Image Mixins\\n// - Responsive image\\n// - Retina image\\n\\n\\n// Responsive image\\n//\\n// Keep images from scaling beyond the width of their parents.\\n\\n@mixin img-fluid {\\n  // Part 1: Set a maximum relative to the parent\\n  max-width: 100%;\\n  // Part 2: Override the height to auto, otherwise images will be stretched\\n  // when setting a width and height attribute on the img element.\\n  height: auto;\\n}\\n","// Container widths\\n//\\n// Set the container width, and override it for fixed navbars in media queries.\\n\\n@if $enable-grid-classes {\\n  // Single container class with breakpoint max-widths\\n  .container,\\n  // 100% wide container at all breakpoints\\n  .container-fluid {\\n    @include make-container();\\n  }\\n\\n  // Responsive containers that are 100% wide until a breakpoint\\n  @each $breakpoint, $container-max-width in $container-max-widths {\\n    .container-#{$breakpoint} {\\n      @extend .container-fluid;\\n    }\\n\\n    @include media-breakpoint-up($breakpoint, $grid-breakpoints) {\\n      %responsive-container-#{$breakpoint} {\\n        max-width: $container-max-width;\\n      }\\n\\n      // Extend each breakpoint which is smaller or equal to the current breakpoint\\n      $extend-breakpoint: true;\\n\\n      @each $name, $width in $grid-breakpoints {\\n        @if ($extend-breakpoint) {\\n          .container#{breakpoint-infix($name, $grid-breakpoints)} {\\n            @extend %responsive-container-#{$breakpoint};\\n          }\\n\\n          // Once the current breakpoint is reached, stop extending\\n          @if ($breakpoint == $name) {\\n            $extend-breakpoint: false;\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\n","// Container mixins\\n\\n@mixin make-container($gutter: $container-padding-x) {\\n  width: 100%;\\n  padding-right: var(--#{$variable-prefix}gutter-x, #{$gutter});\\n  padding-left: var(--#{$variable-prefix}gutter-x, #{$gutter});\\n  margin-right: auto;\\n  margin-left: auto;\\n}\\n","// Breakpoint viewport sizes and media queries.\\n//\\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\\n//\\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\\n//\\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\\n\\n// Name of the next breakpoint, or null for the last breakpoint.\\n//\\n//    >> breakpoint-next(sm)\\n//    md\\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\\n//    md\\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\\n//    md\\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\\n  $n: index($breakpoint-names, $name);\\n  @if not $n {\\n    @error \\"breakpoint `#{$name}` not found in `#{$breakpoints}`\\";\\n  }\\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\\n}\\n\\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\\n//\\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\\n//    576px\\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\\n  $min: map-get($breakpoints, $name);\\n  @return if($min != 0, $min, null);\\n}\\n\\n// Maximum breakpoint width.\\n// The maximum value is reduced by 0.02px to work around the limitations of\\n// `min-` and `max-` prefixes and viewports with fractional widths.\\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\\n//\\n//    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\\n//    767.98px\\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\\n  $max: map-get($breakpoints, $name);\\n  @return if($max and $max > 0, $max - .02, null);\\n}\\n\\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\\n// Useful for making responsive utilities.\\n//\\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\\n//    \\"\\"  (Returns a blank string)\\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\\n//    \\"-sm\\"\\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\\n  @return if(breakpoint-min($name, $breakpoints) == null, \\"\\", \\"-#{$name}\\");\\n}\\n\\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\\n// Makes the @content apply to the given breakpoint and wider.\\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\\n  $min: breakpoint-min($name, $breakpoints);\\n  @if $min {\\n    @media (min-width: $min) {\\n      @content;\\n    }\\n  } @else {\\n    @content;\\n  }\\n}\\n\\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\\n// Makes the @content apply to the given breakpoint and narrower.\\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\\n  $max: breakpoint-max($name, $breakpoints);\\n  @if $max {\\n    @media (max-width: $max) {\\n      @content;\\n    }\\n  } @else {\\n    @content;\\n  }\\n}\\n\\n// Media that spans multiple breakpoint widths.\\n// Makes the @content apply between the min and max breakpoints\\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\\n  $min: breakpoint-min($lower, $breakpoints);\\n  $max: breakpoint-max($upper, $breakpoints);\\n\\n  @if $min != null and $max != null {\\n    @media (min-width: $min) and (max-width: $max) {\\n      @content;\\n    }\\n  } @else if $max == null {\\n    @include media-breakpoint-up($lower, $breakpoints) {\\n      @content;\\n    }\\n  } @else if $min == null {\\n    @include media-breakpoint-down($upper, $breakpoints) {\\n      @content;\\n    }\\n  }\\n}\\n\\n// Media between the breakpoint\'s minimum and maximum widths.\\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\\n  $min:  breakpoint-min($name, $breakpoints);\\n  $next: breakpoint-next($name, $breakpoints);\\n  $max:  breakpoint-max($next);\\n\\n  @if $min != null and $max != null {\\n    @media (min-width: $min) and (max-width: $max) {\\n      @content;\\n    }\\n  } @else if $max == null {\\n    @include media-breakpoint-up($name, $breakpoints) {\\n      @content;\\n    }\\n  } @else if $min == null {\\n    @include media-breakpoint-down($next, $breakpoints) {\\n      @content;\\n    }\\n  }\\n}\\n","// Row\\n//\\n// Rows contain your columns.\\n\\n@if $enable-grid-classes {\\n  .row {\\n    @include make-row();\\n\\n    > * {\\n      @include make-col-ready();\\n    }\\n  }\\n}\\n\\n@if $enable-cssgrid {\\n  .grid {\\n    display: grid;\\n    grid-template-rows: repeat(var(--#{$variable-prefix}rows, 1), 1fr);\\n    grid-template-columns: repeat(var(--#{$variable-prefix}columns, #{$grid-columns}), 1fr);\\n    gap: var(--#{$variable-prefix}gap, #{$grid-gutter-width});\\n\\n    @include make-cssgrid();\\n  }\\n}\\n\\n\\n// Columns\\n//\\n// Common styles for small and large grid columns\\n\\n@if $enable-grid-classes {\\n  @include make-grid-columns();\\n}\\n","// Grid system\\n//\\n// Generate semantic grid columns with these mixins.\\n\\n@mixin make-row($gutter: $grid-gutter-width) {\\n  --#{$variable-prefix}gutter-x: #{$gutter};\\n  --#{$variable-prefix}gutter-y: 0;\\n  display: flex;\\n  flex-wrap: wrap;\\n  margin-top: calc(var(--#{$variable-prefix}gutter-y) * -1); // stylelint-disable-line function-disallowed-list\\n  margin-right: calc(var(--#{$variable-prefix}gutter-x) * -.5); // stylelint-disable-line function-disallowed-list\\n  margin-left: calc(var(--#{$variable-prefix}gutter-x) * -.5); // stylelint-disable-line function-disallowed-list\\n}\\n\\n@mixin make-col-ready($gutter: $grid-gutter-width) {\\n  // Add box sizing if only the grid is loaded\\n  box-sizing: if(variable-exists(include-column-box-sizing) and $include-column-box-sizing, border-box, null);\\n  // Prevent columns from becoming too narrow when at smaller grid tiers by\\n  // always setting `width: 100%;`. This works because we set the width\\n  // later on to override this initial width.\\n  flex-shrink: 0;\\n  width: 100%;\\n  max-width: 100%; // Prevent `.col-auto`, `.col` (& responsive variants) from breaking out the grid\\n  padding-right: calc(var(--#{$variable-prefix}gutter-x) * .5); // stylelint-disable-line function-disallowed-list\\n  padding-left: calc(var(--#{$variable-prefix}gutter-x) * .5); // stylelint-disable-line function-disallowed-list\\n  margin-top: var(--#{$variable-prefix}gutter-y);\\n}\\n\\n@mixin make-col($size: false, $columns: $grid-columns) {\\n  @if $size {\\n    flex: 0 0 auto;\\n    width: percentage(divide($size, $columns));\\n\\n  } @else {\\n    flex: 1 1 0;\\n    max-width: 100%;\\n  }\\n}\\n\\n@mixin make-col-auto() {\\n  flex: 0 0 auto;\\n  width: auto;\\n}\\n\\n@mixin make-col-offset($size, $columns: $grid-columns) {\\n  $num: divide($size, $columns);\\n  margin-left: if($num == 0, 0, percentage($num));\\n}\\n\\n// Row columns\\n//\\n// Specify on a parent element(e.g., .row) to force immediate children into NN\\n// numberof columns. Supports wrapping to new lines, but does not do a Masonry\\n// style grid.\\n@mixin row-cols($count) {\\n  > * {\\n    flex: 0 0 auto;\\n    width: divide(100%, $count);\\n  }\\n}\\n\\n// Framework grid generation\\n//\\n// Used only by Bootstrap to generate the correct number of grid classes given\\n// any value of `$grid-columns`.\\n\\n@mixin make-grid-columns($columns: $grid-columns, $gutter: $grid-gutter-width, $breakpoints: $grid-breakpoints) {\\n  @each $breakpoint in map-keys($breakpoints) {\\n    $infix: breakpoint-infix($breakpoint, $breakpoints);\\n\\n    @include media-breakpoint-up($breakpoint, $breakpoints) {\\n      // Provide basic `.col-{bp}` classes for equal-width flexbox columns\\n      .col#{$infix} {\\n        flex: 1 0 0%; // Flexbugs #4: https://github.com/philipwalton/flexbugs#flexbug-4\\n      }\\n\\n      .row-cols#{$infix}-auto > * {\\n        @include make-col-auto();\\n      }\\n\\n      @if $grid-row-columns > 0 {\\n        @for $i from 1 through $grid-row-columns {\\n          .row-cols#{$infix}-#{$i} {\\n            @include row-cols($i);\\n          }\\n        }\\n      }\\n\\n      .col#{$infix}-auto {\\n        @include make-col-auto();\\n      }\\n\\n      @if $columns > 0 {\\n        @for $i from 1 through $columns {\\n          .col#{$infix}-#{$i} {\\n            @include make-col($i, $columns);\\n          }\\n        }\\n\\n        // `$columns - 1` because offsetting by the width of an entire row isn\'t possible\\n        @for $i from 0 through ($columns - 1) {\\n          @if not ($infix == \\"\\" and $i == 0) { // Avoid emitting useless .offset-0\\n            .offset#{$infix}-#{$i} {\\n              @include make-col-offset($i, $columns);\\n            }\\n          }\\n        }\\n      }\\n\\n      // Gutters\\n      //\\n      // Make use of `.g-*`, `.gx-*` or `.gy-*` utilities to change spacing between the columns.\\n      @each $key, $value in $gutters {\\n        .g#{$infix}-#{$key},\\n        .gx#{$infix}-#{$key} {\\n          --#{$variable-prefix}gutter-x: #{$value};\\n        }\\n\\n        .g#{$infix}-#{$key},\\n        .gy#{$infix}-#{$key} {\\n          --#{$variable-prefix}gutter-y: #{$value};\\n        }\\n      }\\n    }\\n  }\\n}\\n\\n@mixin make-cssgrid($columns: $grid-columns, $breakpoints: $grid-breakpoints) {\\n  @each $breakpoint in map-keys($breakpoints) {\\n    $infix: breakpoint-infix($breakpoint, $breakpoints);\\n\\n    @include media-breakpoint-up($breakpoint, $breakpoints) {\\n      @if $columns > 0 {\\n        @for $i from 1 through $columns {\\n          .g-col#{$infix}-#{$i} {\\n            grid-column: auto / span $i;\\n          }\\n        }\\n\\n        // Start with `1` because `0` is and invalid value.\\n        // Ends with `$columns - 1` because offsetting by the width of an entire row isn\'t possible.\\n        @for $i from 1 through ($columns - 1) {\\n          .g-start#{$infix}-#{$i} {\\n            grid-column-start: $i;\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\n","//\\n// Basic Bootstrap table\\n//\\n\\n.table {\\n  --#{$variable-prefix}table-bg: #{$table-bg};\\n  --#{$variable-prefix}table-accent-bg: #{$table-accent-bg};\\n  --#{$variable-prefix}table-striped-color: #{$table-striped-color};\\n  --#{$variable-prefix}table-striped-bg: #{$table-striped-bg};\\n  --#{$variable-prefix}table-active-color: #{$table-active-color};\\n  --#{$variable-prefix}table-active-bg: #{$table-active-bg};\\n  --#{$variable-prefix}table-hover-color: #{$table-hover-color};\\n  --#{$variable-prefix}table-hover-bg: #{$table-hover-bg};\\n\\n  width: 100%;\\n  margin-bottom: $spacer;\\n  color: $table-color;\\n  vertical-align: $table-cell-vertical-align;\\n  border-color: $table-border-color;\\n\\n  // Target th & td\\n  // We need the child combinator to prevent styles leaking to nested tables which doesn\'t have a `.table` class.\\n  // We use the universal selectors here to simplify the selector (else we would need 6 different selectors).\\n  // Another advantage is that this generates less code and makes the selector less specific making it easier to override.\\n  // stylelint-disable-next-line selector-max-universal\\n  > :not(caption) > * > * {\\n    padding: $table-cell-padding-y $table-cell-padding-x;\\n    background-color: var(--#{$variable-prefix}table-bg);\\n    border-bottom-width: $table-border-width;\\n    box-shadow: inset 0 0 0 9999px var(--#{$variable-prefix}table-accent-bg);\\n  }\\n\\n  > tbody {\\n    vertical-align: inherit;\\n  }\\n\\n  > thead {\\n    vertical-align: bottom;\\n  }\\n\\n  // Highlight border color between thead, tbody and tfoot.\\n  > :not(:last-child) > :last-child > * {\\n    border-bottom-color: $table-group-separator-color;\\n  }\\n}\\n\\n\\n//\\n// Change placement of captions with a class\\n//\\n\\n.caption-top {\\n  caption-side: top;\\n}\\n\\n\\n//\\n// Condensed table w/ half padding\\n//\\n\\n.table-sm {\\n  // stylelint-disable-next-line selector-max-universal\\n  > :not(caption) > * > * {\\n    padding: $table-cell-padding-y-sm $table-cell-padding-x-sm;\\n  }\\n}\\n\\n\\n// Border versions\\n//\\n// Add or remove borders all around the table and between all the columns.\\n//\\n// When borders are added on all sides of the cells, the corners can render odd when\\n// these borders do not have the same color or if they are semi-transparent.\\n// Therefor we add top and border bottoms to the `tr`s and left and right borders\\n// to the `td`s or `th`s\\n\\n.table-bordered {\\n  > :not(caption) > * {\\n    border-width: $table-border-width 0;\\n\\n    // stylelint-disable-next-line selector-max-universal\\n    > * {\\n      border-width: 0 $table-border-width;\\n    }\\n  }\\n}\\n\\n.table-borderless {\\n  // stylelint-disable-next-line selector-max-universal\\n  > :not(caption) > * > * {\\n    border-bottom-width: 0;\\n  }\\n}\\n\\n// Zebra-striping\\n//\\n// Default zebra-stripe styles (alternating gray and transparent backgrounds)\\n\\n.table-striped {\\n  > tbody > tr:nth-of-type(#{$table-striped-order}) {\\n    --#{$variable-prefix}table-accent-bg: var(--#{$variable-prefix}table-striped-bg);\\n    color: var(--#{$variable-prefix}table-striped-color);\\n  }\\n}\\n\\n// Active table\\n//\\n// The `.table-active` class can be added to highlight rows or cells\\n\\n.table-active {\\n  --#{$variable-prefix}table-accent-bg: var(--#{$variable-prefix}table-active-bg);\\n  color: var(--#{$variable-prefix}table-active-color);\\n}\\n\\n// Hover effect\\n//\\n// Placed here since it has to come after the potential zebra striping\\n\\n.table-hover {\\n  > tbody > tr:hover {\\n    --#{$variable-prefix}table-accent-bg: var(--#{$variable-prefix}table-hover-bg);\\n    color: var(--#{$variable-prefix}table-hover-color);\\n  }\\n}\\n\\n\\n// Table variants\\n//\\n// Table variants set the table cell backgrounds, border colors\\n// and the colors of the striped, hovered & active tables\\n\\n@each $color, $value in $table-variants {\\n  @include table-variant($color, $value);\\n}\\n\\n// Responsive tables\\n//\\n// Generate series of `.table-responsive-*` classes for configuring the screen\\n// size of where your table will overflow.\\n\\n@each $breakpoint in map-keys($grid-breakpoints) {\\n  $infix: breakpoint-infix($breakpoint, $grid-breakpoints);\\n\\n  @include media-breakpoint-down($breakpoint) {\\n    .table-responsive#{$infix} {\\n      overflow-x: auto;\\n      -webkit-overflow-scrolling: touch;\\n    }\\n  }\\n}\\n","// scss-docs-start table-variant\\n@mixin table-variant($state, $background) {\\n  .table-#{$state} {\\n    $color: color-contrast(opaque($body-bg, $background));\\n    $hover-bg: mix($color, $background, percentage($table-hover-bg-factor));\\n    $striped-bg: mix($color, $background, percentage($table-striped-bg-factor));\\n    $active-bg: mix($color, $background, percentage($table-active-bg-factor));\\n\\n    --#{$variable-prefix}table-bg: #{$background};\\n    --#{$variable-prefix}table-striped-bg: #{$striped-bg};\\n    --#{$variable-prefix}table-striped-color: #{color-contrast($striped-bg)};\\n    --#{$variable-prefix}table-active-bg: #{$active-bg};\\n    --#{$variable-prefix}table-active-color: #{color-contrast($active-bg)};\\n    --#{$variable-prefix}table-hover-bg: #{$hover-bg};\\n    --#{$variable-prefix}table-hover-color: #{color-contrast($hover-bg)};\\n\\n    color: $color;\\n    border-color: mix($color, $background, percentage($table-border-factor));\\n  }\\n}\\n// scss-docs-end table-variant\\n","//\\n// Labels\\n//\\n\\n.form-label {\\n  margin-bottom: $form-label-margin-bottom;\\n  @include font-size($form-label-font-size);\\n  font-style: $form-label-font-style;\\n  font-weight: $form-label-font-weight;\\n  color: $form-label-color;\\n}\\n\\n// For use with horizontal and inline forms, when you need the label (or legend)\\n// text to align with the form controls.\\n.col-form-label {\\n  padding-top: add($input-padding-y, $input-border-width);\\n  padding-bottom: add($input-padding-y, $input-border-width);\\n  margin-bottom: 0; // Override the `<legend>` default\\n  @include font-size(inherit); // Override the `<legend>` default\\n  font-style: $form-label-font-style;\\n  font-weight: $form-label-font-weight;\\n  line-height: $input-line-height;\\n  color: $form-label-color;\\n}\\n\\n.col-form-label-lg {\\n  padding-top: add($input-padding-y-lg, $input-border-width);\\n  padding-bottom: add($input-padding-y-lg, $input-border-width);\\n  @include font-size($input-font-size-lg);\\n}\\n\\n.col-form-label-sm {\\n  padding-top: add($input-padding-y-sm, $input-border-width);\\n  padding-bottom: add($input-padding-y-sm, $input-border-width);\\n  @include font-size($input-font-size-sm);\\n}\\n","//\\n// Form text\\n//\\n\\n.form-text {\\n  margin-top: $form-text-margin-top;\\n  @include font-size($form-text-font-size);\\n  font-style: $form-text-font-style;\\n  font-weight: $form-text-font-weight;\\n  color: $form-text-color;\\n}\\n","//\\n// General form controls (plus a few specific high-level interventions)\\n//\\n\\n.form-control {\\n  display: block;\\n  width: 100%;\\n  padding: $input-padding-y $input-padding-x;\\n  font-family: $input-font-family;\\n  @include font-size($input-font-size);\\n  font-weight: $input-font-weight;\\n  line-height: $input-line-height;\\n  color: $input-color;\\n  background-color: $input-bg;\\n  background-clip: padding-box;\\n  border: $input-border-width solid $input-border-color;\\n  appearance: none; // Fix appearance for date inputs in Safari\\n\\n  // Note: This has no effect on <select>s in some browsers, due to the limited stylability of `<select>`s in CSS.\\n  @include border-radius($input-border-radius, 0);\\n\\n  @include box-shadow($input-box-shadow);\\n  @include transition($input-transition);\\n\\n  &[type=\\"file\\"] {\\n    overflow: hidden; // prevent pseudo element button overlap\\n\\n    &:not(:disabled):not([readonly]) {\\n      cursor: pointer;\\n    }\\n  }\\n\\n  // Customize the `:focus` state to imitate native WebKit styles.\\n  &:focus {\\n    color: $input-focus-color;\\n    background-color: $input-focus-bg;\\n    border-color: $input-focus-border-color;\\n    outline: 0;\\n    @if $enable-shadows {\\n      @include box-shadow($input-box-shadow, $input-focus-box-shadow);\\n    } @else {\\n      // Avoid using mixin so we can pass custom focus shadow properly\\n      box-shadow: $input-focus-box-shadow;\\n    }\\n  }\\n\\n  // Add some height to date inputs on iOS\\n  // https://github.com/twbs/bootstrap/issues/23307\\n  // TODO: we can remove this workaround once https://bugs.webkit.org/show_bug.cgi?id=198959 is resolved\\n  &::-webkit-date-and-time-value {\\n    // Multiply line-height by 1em if it has no unit\\n    height: if(unit($input-line-height) == \\"\\", $input-line-height * 1em, $input-line-height);\\n  }\\n\\n  // Placeholder\\n  &::placeholder {\\n    color: $input-placeholder-color;\\n    // Override Firefox\'s unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526.\\n    opacity: 1;\\n  }\\n\\n  // Disabled and read-only inputs\\n  //\\n  // HTML5 says that controls under a fieldset > legend:first-child won\'t be\\n  // disabled if the fieldset is disabled. Due to implementation difficulty, we\\n  // don\'t honor that edge case; we style them as disabled anyway.\\n  &:disabled,\\n  &[readonly] {\\n    background-color: $input-disabled-bg;\\n    border-color: $input-disabled-border-color;\\n    // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655.\\n    opacity: 1;\\n  }\\n\\n  // File input buttons theming\\n  &::file-selector-button {\\n    padding: $input-padding-y $input-padding-x;\\n    margin: (-$input-padding-y) (-$input-padding-x);\\n    margin-inline-end: $input-padding-x;\\n    color: $form-file-button-color;\\n    @include gradient-bg($form-file-button-bg);\\n    pointer-events: none;\\n    border-color: inherit;\\n    border-style: solid;\\n    border-width: 0;\\n    border-inline-end-width: $input-border-width;\\n    border-radius: 0; // stylelint-disable-line property-disallowed-list\\n    @include transition($btn-transition);\\n  }\\n\\n  &:hover:not(:disabled):not([readonly])::file-selector-button {\\n    background-color: $form-file-button-hover-bg;\\n  }\\n\\n  &::-webkit-file-upload-button {\\n    padding: $input-padding-y $input-padding-x;\\n    margin: (-$input-padding-y) (-$input-padding-x);\\n    margin-inline-end: $input-padding-x;\\n    color: $form-file-button-color;\\n    @include gradient-bg($form-file-button-bg);\\n    pointer-events: none;\\n    border-color: inherit;\\n    border-style: solid;\\n    border-width: 0;\\n    border-inline-end-width: $input-border-width;\\n    border-radius: 0; // stylelint-disable-line property-disallowed-list\\n    @include transition($btn-transition);\\n  }\\n\\n  &:hover:not(:disabled):not([readonly])::-webkit-file-upload-button {\\n    background-color: $form-file-button-hover-bg;\\n  }\\n}\\n\\n// Readonly controls as plain text\\n//\\n// Apply class to a readonly input to make it appear like regular plain\\n// text (without any border, background color, focus indicator)\\n\\n.form-control-plaintext {\\n  display: block;\\n  width: 100%;\\n  padding: $input-padding-y 0;\\n  margin-bottom: 0; // match inputs if this class comes on inputs with default margins\\n  line-height: $input-line-height;\\n  color: $input-plaintext-color;\\n  background-color: transparent;\\n  border: solid transparent;\\n  border-width: $input-border-width 0;\\n\\n  &.form-control-sm,\\n  &.form-control-lg {\\n    padding-right: 0;\\n    padding-left: 0;\\n  }\\n}\\n\\n// Form control sizing\\n//\\n// Build on `.form-control` with modifier classes to decrease or increase the\\n// height and font-size of form controls.\\n//\\n// Repeated in `_input_group.scss` to avoid Sass extend issues.\\n\\n.form-control-sm {\\n  min-height: $input-height-sm;\\n  padding: $input-padding-y-sm $input-padding-x-sm;\\n  @include font-size($input-font-size-sm);\\n  @include border-radius($input-border-radius-sm);\\n\\n  &::file-selector-button {\\n    padding: $input-padding-y-sm $input-padding-x-sm;\\n    margin: (-$input-padding-y-sm) (-$input-padding-x-sm);\\n    margin-inline-end: $input-padding-x-sm;\\n  }\\n\\n  &::-webkit-file-upload-button {\\n    padding: $input-padding-y-sm $input-padding-x-sm;\\n    margin: (-$input-padding-y-sm) (-$input-padding-x-sm);\\n    margin-inline-end: $input-padding-x-sm;\\n  }\\n}\\n\\n.form-control-lg {\\n  min-height: $input-height-lg;\\n  padding: $input-padding-y-lg $input-padding-x-lg;\\n  @include font-size($input-font-size-lg);\\n  @include border-radius($input-border-radius-lg);\\n\\n  &::file-selector-button {\\n    padding: $input-padding-y-lg $input-padding-x-lg;\\n    margin: (-$input-padding-y-lg) (-$input-padding-x-lg);\\n    margin-inline-end: $input-padding-x-lg;\\n  }\\n\\n  &::-webkit-file-upload-button {\\n    padding: $input-padding-y-lg $input-padding-x-lg;\\n    margin: (-$input-padding-y-lg) (-$input-padding-x-lg);\\n    margin-inline-end: $input-padding-x-lg;\\n  }\\n}\\n\\n// Make sure textareas don\'t shrink too much when resized\\n// https://github.com/twbs/bootstrap/pull/29124\\n// stylelint-disable selector-no-qualifying-type\\ntextarea {\\n  &.form-control {\\n    min-height: $input-height;\\n  }\\n\\n  &.form-control-sm {\\n    min-height: $input-height-sm;\\n  }\\n\\n  &.form-control-lg {\\n    min-height: $input-height-lg;\\n  }\\n}\\n// stylelint-enable selector-no-qualifying-type\\n\\n.form-control-color {\\n  width: $form-color-width;\\n  height: auto; // Override fixed browser height\\n  padding: $input-padding-y;\\n\\n  &:not(:disabled):not([readonly]) {\\n    cursor: pointer;\\n  }\\n\\n  &::-moz-color-swatch {\\n    height: if(unit($input-line-height) == \\"\\", $input-line-height * 1em, $input-line-height);\\n    @include border-radius($input-border-radius);\\n  }\\n\\n  &::-webkit-color-swatch {\\n    height: if(unit($input-line-height) == \\"\\", $input-line-height * 1em, $input-line-height);\\n    @include border-radius($input-border-radius);\\n  }\\n}\\n","// stylelint-disable property-disallowed-list\\n@mixin transition($transition...) {\\n  @if length($transition) == 0 {\\n    $transition: $transition-base;\\n  }\\n\\n  @if length($transition) > 1 {\\n    @each $value in $transition {\\n      @if $value == null or $value == none {\\n        @warn \\"The keyword \'none\' or \'null\' must be used as a single argument.\\";\\n      }\\n    }\\n  }\\n\\n  @if $enable-transitions {\\n    @if nth($transition, 1) != null {\\n      transition: $transition;\\n    }\\n\\n    @if $enable-reduced-motion and nth($transition, 1) != null and nth($transition, 1) != none {\\n      @media (prefers-reduced-motion: reduce) {\\n        transition: none;\\n      }\\n    }\\n  }\\n}\\n","// Gradients\\n\\n// scss-docs-start gradient-bg-mixin\\n@mixin gradient-bg($color: null) {\\n  background-color: $color;\\n\\n  @if $enable-gradients {\\n    background-image: var(--#{$variable-prefix}gradient);\\n  }\\n}\\n// scss-docs-end gradient-bg-mixin\\n\\n// scss-docs-start gradient-mixins\\n// Horizontal gradient, from left to right\\n//\\n// Creates two color stops, start and end, by specifying a color and position for each color stop.\\n@mixin gradient-x($start-color: $gray-700, $end-color: $gray-800, $start-percent: 0%, $end-percent: 100%) {\\n  background-image: linear-gradient(to right, $start-color $start-percent, $end-color $end-percent);\\n}\\n\\n// Vertical gradient, from top to bottom\\n//\\n// Creates two color stops, start and end, by specifying a color and position for each color stop.\\n@mixin gradient-y($start-color: $gray-700, $end-color: $gray-800, $start-percent: null, $end-percent: null) {\\n  background-image: linear-gradient(to bottom, $start-color $start-percent, $end-color $end-percent);\\n}\\n\\n@mixin gradient-directional($start-color: $gray-700, $end-color: $gray-800, $deg: 45deg) {\\n  background-image: linear-gradient($deg, $start-color, $end-color);\\n}\\n\\n@mixin gradient-x-three-colors($start-color: $blue, $mid-color: $purple, $color-stop: 50%, $end-color: $red) {\\n  background-image: linear-gradient(to right, $start-color, $mid-color $color-stop, $end-color);\\n}\\n\\n@mixin gradient-y-three-colors($start-color: $blue, $mid-color: $purple, $color-stop: 50%, $end-color: $red) {\\n  background-image: linear-gradient($start-color, $mid-color $color-stop, $end-color);\\n}\\n\\n@mixin gradient-radial($inner-color: $gray-700, $outer-color: $gray-800) {\\n  background-image: radial-gradient(circle, $inner-color, $outer-color);\\n}\\n\\n@mixin gradient-striped($color: rgba($white, .15), $angle: 45deg) {\\n  background-image: linear-gradient($angle, $color 25%, transparent 25%, transparent 50%, $color 50%, $color 75%, transparent 75%, transparent);\\n}\\n// scss-docs-end gradient-mixins\\n","// Select\\n//\\n// Replaces the browser default select with a custom one, mostly pulled from\\n// https://primer.github.io/.\\n\\n.form-select {\\n  display: block;\\n  width: 100%;\\n  padding: $form-select-padding-y $form-select-indicator-padding $form-select-padding-y $form-select-padding-x;\\n  // stylelint-disable-next-line property-no-vendor-prefix\\n  -moz-padding-start: subtract($form-select-padding-x, 3px); // See https://github.com/twbs/bootstrap/issues/32636\\n  font-family: $form-select-font-family;\\n  @include font-size($form-select-font-size);\\n  font-weight: $form-select-font-weight;\\n  line-height: $form-select-line-height;\\n  color: $form-select-color;\\n  background-color: $form-select-bg;\\n  background-image: escape-svg($form-select-indicator);\\n  background-repeat: no-repeat;\\n  background-position: $form-select-bg-position;\\n  background-size: $form-select-bg-size;\\n  border: $form-select-border-width solid $form-select-border-color;\\n  @include border-radius($form-select-border-radius, 0);\\n  @include box-shadow($form-select-box-shadow);\\n  @include transition($form-select-transition);\\n  appearance: none;\\n\\n  &:focus {\\n    border-color: $form-select-focus-border-color;\\n    outline: 0;\\n    @if $enable-shadows {\\n      @include box-shadow($form-select-box-shadow, $form-select-focus-box-shadow);\\n    } @else {\\n      // Avoid using mixin so we can pass custom focus shadow properly\\n      box-shadow: $form-select-focus-box-shadow;\\n    }\\n  }\\n\\n  &[multiple],\\n  &[size]:not([size=\\"1\\"]) {\\n    padding-right: $form-select-padding-x;\\n    background-image: none;\\n  }\\n\\n  &:disabled {\\n    color: $form-select-disabled-color;\\n    background-color: $form-select-disabled-bg;\\n    border-color: $form-select-disabled-border-color;\\n  }\\n\\n  // Remove outline from select box in FF\\n  &:-moz-focusring {\\n    color: transparent;\\n    text-shadow: 0 0 0 $form-select-color;\\n  }\\n}\\n\\n.form-select-sm {\\n  padding-top: $form-select-padding-y-sm;\\n  padding-bottom: $form-select-padding-y-sm;\\n  padding-left: $form-select-padding-x-sm;\\n  @include font-size($form-select-font-size-sm);\\n}\\n\\n.form-select-lg {\\n  padding-top: $form-select-padding-y-lg;\\n  padding-bottom: $form-select-padding-y-lg;\\n  padding-left: $form-select-padding-x-lg;\\n  @include font-size($form-select-font-size-lg);\\n}\\n","//\\n// Check/radio\\n//\\n\\n.form-check {\\n  display: block;\\n  min-height: $form-check-min-height;\\n  padding-left: $form-check-padding-start;\\n  margin-bottom: $form-check-margin-bottom;\\n\\n  .form-check-input {\\n    float: left;\\n    margin-left: $form-check-padding-start * -1;\\n  }\\n}\\n\\n.form-check-input {\\n  width: $form-check-input-width;\\n  height: $form-check-input-width;\\n  margin-top: ($line-height-base - $form-check-input-width) * .5; // line-height minus check height\\n  vertical-align: top;\\n  background-color: $form-check-input-bg;\\n  background-repeat: no-repeat;\\n  background-position: center;\\n  background-size: contain;\\n  border: $form-check-input-border;\\n  appearance: none;\\n  color-adjust: exact; // Keep themed appearance for print\\n  @include transition($form-check-transition);\\n\\n  &[type=\\"checkbox\\"] {\\n    @include border-radius($form-check-input-border-radius);\\n  }\\n\\n  &[type=\\"radio\\"] {\\n    // stylelint-disable-next-line property-disallowed-list\\n    border-radius: $form-check-radio-border-radius;\\n  }\\n\\n  &:active {\\n    filter: $form-check-input-active-filter;\\n  }\\n\\n  &:focus {\\n    border-color: $form-check-input-focus-border;\\n    outline: 0;\\n    box-shadow: $form-check-input-focus-box-shadow;\\n  }\\n\\n  &:checked {\\n    background-color: $form-check-input-checked-bg-color;\\n    border-color: $form-check-input-checked-border-color;\\n\\n    &[type=\\"checkbox\\"] {\\n      @if $enable-gradients {\\n        background-image: escape-svg($form-check-input-checked-bg-image), var(--#{$variable-prefix}gradient);\\n      } @else {\\n        background-image: escape-svg($form-check-input-checked-bg-image);\\n      }\\n    }\\n\\n    &[type=\\"radio\\"] {\\n      @if $enable-gradients {\\n        background-image: escape-svg($form-check-radio-checked-bg-image), var(--#{$variable-prefix}gradient);\\n      } @else {\\n        background-image: escape-svg($form-check-radio-checked-bg-image);\\n      }\\n    }\\n  }\\n\\n  &[type=\\"checkbox\\"]:indeterminate {\\n    background-color: $form-check-input-indeterminate-bg-color;\\n    border-color: $form-check-input-indeterminate-border-color;\\n\\n    @if $enable-gradients {\\n      background-image: escape-svg($form-check-input-indeterminate-bg-image), var(--#{$variable-prefix}gradient);\\n    } @else {\\n      background-image: escape-svg($form-check-input-indeterminate-bg-image);\\n    }\\n  }\\n\\n  &:disabled {\\n    pointer-events: none;\\n    filter: none;\\n    opacity: $form-check-input-disabled-opacity;\\n  }\\n\\n  // Use disabled attribute in addition of :disabled pseudo-class\\n  // See: https://github.com/twbs/bootstrap/issues/28247\\n  &[disabled],\\n  &:disabled {\\n    ~ .form-check-label {\\n      opacity: $form-check-label-disabled-opacity;\\n    }\\n  }\\n}\\n\\n.form-check-label {\\n  color: $form-check-label-color;\\n  cursor: $form-check-label-cursor;\\n}\\n\\n//\\n// Switch\\n//\\n\\n.form-switch {\\n  padding-left: $form-switch-padding-start;\\n\\n  .form-check-input {\\n    width: $form-switch-width;\\n    margin-left: $form-switch-padding-start * -1;\\n    background-image: escape-svg($form-switch-bg-image);\\n    background-position: left center;\\n    @include border-radius($form-switch-border-radius);\\n    @include transition($form-switch-transition);\\n\\n    &:focus {\\n      background-image: escape-svg($form-switch-focus-bg-image);\\n    }\\n\\n    &:checked {\\n      background-position: $form-switch-checked-bg-position;\\n\\n      @if $enable-gradients {\\n        background-image: escape-svg($form-switch-checked-bg-image), var(--#{$variable-prefix}gradient);\\n      } @else {\\n        background-image: escape-svg($form-switch-checked-bg-image);\\n      }\\n    }\\n  }\\n}\\n\\n.form-check-inline {\\n  display: inline-block;\\n  margin-right: $form-check-inline-margin-end;\\n}\\n\\n.btn-check {\\n  position: absolute;\\n  clip: rect(0, 0, 0, 0);\\n  pointer-events: none;\\n\\n  &[disabled],\\n  &:disabled {\\n    + .btn {\\n      pointer-events: none;\\n      filter: none;\\n      opacity: $form-check-btn-check-disabled-opacity;\\n    }\\n  }\\n}\\n","// Range\\n//\\n// Style range inputs the same across browsers. Vendor-specific rules for pseudo\\n// elements cannot be mixed. As such, there are no shared styles for focus or\\n// active states on prefixed selectors.\\n\\n.form-range {\\n  width: 100%;\\n  height: add($form-range-thumb-height, $form-range-thumb-focus-box-shadow-width * 2);\\n  padding: 0; // Need to reset padding\\n  background-color: transparent;\\n  appearance: none;\\n\\n  &:focus {\\n    outline: 0;\\n\\n    // Pseudo-elements must be split across multiple rulesets to have an effect.\\n    // No box-shadow() mixin for focus accessibility.\\n    &::-webkit-slider-thumb { box-shadow: $form-range-thumb-focus-box-shadow; }\\n    &::-moz-range-thumb     { box-shadow: $form-range-thumb-focus-box-shadow; }\\n  }\\n\\n  &::-moz-focus-outer {\\n    border: 0;\\n  }\\n\\n  &::-webkit-slider-thumb {\\n    width: $form-range-thumb-width;\\n    height: $form-range-thumb-height;\\n    margin-top: ($form-range-track-height - $form-range-thumb-height) * .5; // Webkit specific\\n    @include gradient-bg($form-range-thumb-bg);\\n    border: $form-range-thumb-border;\\n    @include border-radius($form-range-thumb-border-radius);\\n    @include box-shadow($form-range-thumb-box-shadow);\\n    @include transition($form-range-thumb-transition);\\n    appearance: none;\\n\\n    &:active {\\n      @include gradient-bg($form-range-thumb-active-bg);\\n    }\\n  }\\n\\n  &::-webkit-slider-runnable-track {\\n    width: $form-range-track-width;\\n    height: $form-range-track-height;\\n    color: transparent; // Why?\\n    cursor: $form-range-track-cursor;\\n    background-color: $form-range-track-bg;\\n    border-color: transparent;\\n    @include border-radius($form-range-track-border-radius);\\n    @include box-shadow($form-range-track-box-shadow);\\n  }\\n\\n  &::-moz-range-thumb {\\n    width: $form-range-thumb-width;\\n    height: $form-range-thumb-height;\\n    @include gradient-bg($form-range-thumb-bg);\\n    border: $form-range-thumb-border;\\n    @include border-radius($form-range-thumb-border-radius);\\n    @include box-shadow($form-range-thumb-box-shadow);\\n    @include transition($form-range-thumb-transition);\\n    appearance: none;\\n\\n    &:active {\\n      @include gradient-bg($form-range-thumb-active-bg);\\n    }\\n  }\\n\\n  &::-moz-range-track {\\n    width: $form-range-track-width;\\n    height: $form-range-track-height;\\n    color: transparent;\\n    cursor: $form-range-track-cursor;\\n    background-color: $form-range-track-bg;\\n    border-color: transparent; // Firefox specific?\\n    @include border-radius($form-range-track-border-radius);\\n    @include box-shadow($form-range-track-box-shadow);\\n  }\\n\\n  &:disabled {\\n    pointer-events: none;\\n\\n    &::-webkit-slider-thumb {\\n      background-color: $form-range-thumb-disabled-bg;\\n    }\\n\\n    &::-moz-range-thumb {\\n      background-color: $form-range-thumb-disabled-bg;\\n    }\\n  }\\n}\\n",".form-floating {\\n  position: relative;\\n\\n  > .form-control,\\n  > .form-select {\\n    height: $form-floating-height;\\n    line-height: $form-floating-line-height;\\n  }\\n\\n  > label {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    height: 100%; // allow textareas\\n    padding: $form-floating-padding-y $form-floating-padding-x;\\n    pointer-events: none;\\n    border: $input-border-width solid transparent; // Required for aligning label\'s text with the input as it affects inner box model\\n    transform-origin: 0 0;\\n    @include transition($form-floating-transition);\\n  }\\n\\n  // stylelint-disable no-duplicate-selectors\\n  > .form-control {\\n    padding: $form-floating-padding-y $form-floating-padding-x;\\n\\n    &::placeholder {\\n      color: transparent;\\n    }\\n\\n    &:focus,\\n    &:not(:placeholder-shown) {\\n      padding-top: $form-floating-input-padding-t;\\n      padding-bottom: $form-floating-input-padding-b;\\n    }\\n    // Duplicated because `:-webkit-autofill` invalidates other selectors when grouped\\n    &:-webkit-autofill {\\n      padding-top: $form-floating-input-padding-t;\\n      padding-bottom: $form-floating-input-padding-b;\\n    }\\n  }\\n\\n  > .form-select {\\n    padding-top: $form-floating-input-padding-t;\\n    padding-bottom: $form-floating-input-padding-b;\\n  }\\n\\n  > .form-control:focus,\\n  > .form-control:not(:placeholder-shown),\\n  > .form-select {\\n    ~ label {\\n      opacity: $form-floating-label-opacity;\\n      transform: $form-floating-label-transform;\\n    }\\n  }\\n  // Duplicated because `:-webkit-autofill` invalidates other selectors when grouped\\n  > .form-control:-webkit-autofill {\\n    ~ label {\\n      opacity: $form-floating-label-opacity;\\n      transform: $form-floating-label-transform;\\n    }\\n  }\\n  // stylelint-enable no-duplicate-selectors\\n}\\n","//\\n// Base styles\\n//\\n\\n.input-group {\\n  position: relative;\\n  display: flex;\\n  flex-wrap: wrap; // For form validation feedback\\n  align-items: stretch;\\n  width: 100%;\\n\\n  > .form-control,\\n  > .form-select {\\n    position: relative; // For focus state\'s z-index\\n    flex: 1 1 auto;\\n    width: 1%;\\n    min-width: 0; // https://stackoverflow.com/questions/36247140/why-dont-flex-items-shrink-past-content-size\\n  }\\n\\n  // Bring the \\"active\\" form control to the top of surrounding elements\\n  > .form-control:focus,\\n  > .form-select:focus {\\n    z-index: 3;\\n  }\\n\\n  // Ensure buttons are always above inputs for more visually pleasing borders.\\n  // This isn\'t needed for `.input-group-text` since it shares the same border-color\\n  // as our inputs.\\n  .btn {\\n    position: relative;\\n    z-index: 2;\\n\\n    &:focus {\\n      z-index: 3;\\n    }\\n  }\\n}\\n\\n\\n// Textual addons\\n//\\n// Serves as a catch-all element for any text or radio/checkbox input you wish\\n// to prepend or append to an input.\\n\\n.input-group-text {\\n  display: flex;\\n  align-items: center;\\n  padding: $input-group-addon-padding-y $input-group-addon-padding-x;\\n  @include font-size($input-font-size); // Match inputs\\n  font-weight: $input-group-addon-font-weight;\\n  line-height: $input-line-height;\\n  color: $input-group-addon-color;\\n  text-align: center;\\n  white-space: nowrap;\\n  background-color: $input-group-addon-bg;\\n  border: $input-border-width solid $input-group-addon-border-color;\\n  @include border-radius($input-border-radius);\\n}\\n\\n\\n// Sizing\\n//\\n// Remix the default form control sizing classes into new ones for easier\\n// manipulation.\\n\\n.input-group-lg > .form-control,\\n.input-group-lg > .form-select,\\n.input-group-lg > .input-group-text,\\n.input-group-lg > .btn {\\n  padding: $input-padding-y-lg $input-padding-x-lg;\\n  @include font-size($input-font-size-lg);\\n  @include border-radius($input-border-radius-lg);\\n}\\n\\n.input-group-sm > .form-control,\\n.input-group-sm > .form-select,\\n.input-group-sm > .input-group-text,\\n.input-group-sm > .btn {\\n  padding: $input-padding-y-sm $input-padding-x-sm;\\n  @include font-size($input-font-size-sm);\\n  @include border-radius($input-border-radius-sm);\\n}\\n\\n.input-group-lg > .form-select,\\n.input-group-sm > .form-select {\\n  padding-right: $form-select-padding-x + $form-select-indicator-padding;\\n}\\n\\n\\n// Rounded corners\\n//\\n// These rulesets must come after the sizing ones to properly override sm and lg\\n// border-radius values when extending. They\'re more specific than we\'d like\\n// with the `.input-group >` part, but without it, we cannot override the sizing.\\n\\n// stylelint-disable-next-line no-duplicate-selectors\\n.input-group {\\n  &:not(.has-validation) {\\n    > :not(:last-child):not(.dropdown-toggle):not(.dropdown-menu),\\n    > .dropdown-toggle:nth-last-child(n + 3) {\\n      @include border-end-radius(0);\\n    }\\n  }\\n\\n  &.has-validation {\\n    > :nth-last-child(n + 3):not(.dropdown-toggle):not(.dropdown-menu),\\n    > .dropdown-toggle:nth-last-child(n + 4) {\\n      @include border-end-radius(0);\\n    }\\n  }\\n\\n  $validation-messages: \\"\\";\\n  @each $state in map-keys($form-validation-states) {\\n    $validation-messages: $validation-messages + \\":not(.\\" + unquote($state) + \\"-tooltip)\\" + \\":not(.\\" + unquote($state) + \\"-feedback)\\";\\n  }\\n\\n  > :not(:first-child):not(.dropdown-menu)#{$validation-messages} {\\n    margin-left: -$input-border-width;\\n    @include border-start-radius(0);\\n  }\\n}\\n","// This mixin uses an `if()` technique to be compatible with Dart Sass\\n// See https://github.com/sass/sass/issues/1873#issuecomment-152293725 for more details\\n\\n// scss-docs-start form-validation-mixins\\n@mixin form-validation-state-selector($state) {\\n  @if ($state == \\"valid\\" or $state == \\"invalid\\") {\\n    .was-validated #{if(&, \\"&\\", \\"\\")}:#{$state},\\n    #{if(&, \\"&\\", \\"\\")}.is-#{$state} {\\n      @content;\\n    }\\n  } @else {\\n    #{if(&, \\"&\\", \\"\\")}.is-#{$state} {\\n      @content;\\n    }\\n  }\\n}\\n\\n@mixin form-validation-state(\\n  $state,\\n  $color,\\n  $icon,\\n  $tooltip-color: color-contrast($color),\\n  $tooltip-bg-color: rgba($color, $form-feedback-tooltip-opacity),\\n  $focus-box-shadow: 0 0 $input-btn-focus-blur $input-focus-width rgba($color, $input-btn-focus-color-opacity)\\n) {\\n  .#{$state}-feedback {\\n    display: none;\\n    width: 100%;\\n    margin-top: $form-feedback-margin-top;\\n    @include font-size($form-feedback-font-size);\\n    font-style: $form-feedback-font-style;\\n    color: $color;\\n  }\\n\\n  .#{$state}-tooltip {\\n    position: absolute;\\n    top: 100%;\\n    z-index: 5;\\n    display: none;\\n    max-width: 100%; // Contain to parent when possible\\n    padding: $form-feedback-tooltip-padding-y $form-feedback-tooltip-padding-x;\\n    margin-top: .1rem;\\n    @include font-size($form-feedback-tooltip-font-size);\\n    line-height: $form-feedback-tooltip-line-height;\\n    color: $tooltip-color;\\n    background-color: $tooltip-bg-color;\\n    @include border-radius($form-feedback-tooltip-border-radius);\\n  }\\n\\n  @include form-validation-state-selector($state) {\\n    ~ .#{$state}-feedback,\\n    ~ .#{$state}-tooltip {\\n      display: block;\\n    }\\n  }\\n\\n  .form-control {\\n    @include form-validation-state-selector($state) {\\n      border-color: $color;\\n\\n      @if $enable-validation-icons {\\n        padding-right: $input-height-inner;\\n        background-image: escape-svg($icon);\\n        background-repeat: no-repeat;\\n        background-position: right $input-height-inner-quarter center;\\n        background-size: $input-height-inner-half $input-height-inner-half;\\n      }\\n\\n      &:focus {\\n        border-color: $color;\\n        box-shadow: $focus-box-shadow;\\n      }\\n    }\\n  }\\n\\n  // stylelint-disable-next-line selector-no-qualifying-type\\n  textarea.form-control {\\n    @include form-validation-state-selector($state) {\\n      @if $enable-validation-icons {\\n        padding-right: $input-height-inner;\\n        background-position: top $input-height-inner-quarter right $input-height-inner-quarter;\\n      }\\n    }\\n  }\\n\\n  .form-select {\\n    @include form-validation-state-selector($state) {\\n      border-color: $color;\\n\\n      @if $enable-validation-icons {\\n        &:not([multiple]):not([size]),\\n        &:not([multiple])[size=\\"1\\"] {\\n          padding-right: $form-select-feedback-icon-padding-end;\\n          background-image: escape-svg($form-select-indicator), escape-svg($icon);\\n          background-position: $form-select-bg-position, $form-select-feedback-icon-position;\\n          background-size: $form-select-bg-size, $form-select-feedback-icon-size;\\n        }\\n      }\\n\\n      &:focus {\\n        border-color: $color;\\n        box-shadow: $focus-box-shadow;\\n      }\\n    }\\n  }\\n\\n  .form-check-input {\\n    @include form-validation-state-selector($state) {\\n      border-color: $color;\\n\\n      &:checked {\\n        background-color: $color;\\n      }\\n\\n      &:focus {\\n        box-shadow: $focus-box-shadow;\\n      }\\n\\n      ~ .form-check-label {\\n        color: $color;\\n      }\\n    }\\n  }\\n  .form-check-inline .form-check-input {\\n    ~ .#{$state}-feedback {\\n      margin-left: .5em;\\n    }\\n  }\\n\\n  .input-group .form-control,\\n  .input-group .form-select {\\n    @include form-validation-state-selector($state) {\\n      @if $state == \\"valid\\" {\\n        z-index: 1;\\n      } @else if $state == \\"invalid\\" {\\n        z-index: 2;\\n      }\\n      &:focus {\\n        z-index: 3;\\n      }\\n    }\\n  }\\n}\\n// scss-docs-end form-validation-mixins\\n","//\\n// Base styles\\n//\\n\\n.btn {\\n  display: inline-block;\\n  font-family: $btn-font-family;\\n  font-weight: $btn-font-weight;\\n  line-height: $btn-line-height;\\n  color: $body-color;\\n  text-align: center;\\n  text-decoration: if($link-decoration == none, null, none);\\n  white-space: $btn-white-space;\\n  vertical-align: middle;\\n  cursor: if($enable-button-pointers, pointer, null);\\n  user-select: none;\\n  background-color: transparent;\\n  border: $btn-border-width solid transparent;\\n  @include button-size($btn-padding-y, $btn-padding-x, $btn-font-size, $btn-border-radius);\\n  @include transition($btn-transition);\\n\\n  &:hover {\\n    color: $body-color;\\n    text-decoration: if($link-hover-decoration == underline, none, null);\\n  }\\n\\n  .btn-check:focus + &,\\n  &:focus {\\n    outline: 0;\\n    box-shadow: $btn-focus-box-shadow;\\n  }\\n\\n  .btn-check:checked + &,\\n  .btn-check:active + &,\\n  &:active,\\n  &.active {\\n    @include box-shadow($btn-active-box-shadow);\\n\\n    &:focus {\\n      @include box-shadow($btn-focus-box-shadow, $btn-active-box-shadow);\\n    }\\n  }\\n\\n  &:disabled,\\n  &.disabled,\\n  fieldset:disabled & {\\n    pointer-events: none;\\n    opacity: $btn-disabled-opacity;\\n    @include box-shadow(none);\\n  }\\n}\\n\\n\\n//\\n// Alternate buttons\\n//\\n\\n// scss-docs-start btn-variant-loops\\n@each $color, $value in $theme-colors {\\n  .btn-#{$color} {\\n    @include button-variant($value, $value);\\n  }\\n}\\n\\n@each $color, $value in $theme-colors {\\n  .btn-outline-#{$color} {\\n    @include button-outline-variant($value);\\n  }\\n}\\n// scss-docs-end btn-variant-loops\\n\\n\\n//\\n// Link buttons\\n//\\n\\n// Make a button look and behave like a link\\n.btn-link {\\n  font-weight: $font-weight-normal;\\n  color: $btn-link-color;\\n  text-decoration: $link-decoration;\\n\\n  &:hover {\\n    color: $btn-link-hover-color;\\n    text-decoration: $link-hover-decoration;\\n  }\\n\\n  &:focus {\\n    text-decoration: $link-hover-decoration;\\n  }\\n\\n  &:disabled,\\n  &.disabled {\\n    color: $btn-link-disabled-color;\\n  }\\n\\n  // No need for an active state here\\n}\\n\\n\\n//\\n// Button Sizes\\n//\\n\\n.btn-lg {\\n  @include button-size($btn-padding-y-lg, $btn-padding-x-lg, $btn-font-size-lg, $btn-border-radius-lg);\\n}\\n\\n.btn-sm {\\n  @include button-size($btn-padding-y-sm, $btn-padding-x-sm, $btn-font-size-sm, $btn-border-radius-sm);\\n}\\n","// Button variants\\n//\\n// Easily pump out default styles, as well as :hover, :focus, :active,\\n// and disabled options for all buttons\\n\\n// scss-docs-start btn-variant-mixin\\n@mixin button-variant(\\n  $background,\\n  $border,\\n  $color: color-contrast($background),\\n  $hover-background: if($color == $color-contrast-light, shade-color($background, $btn-hover-bg-shade-amount), tint-color($background, $btn-hover-bg-tint-amount)),\\n  $hover-border: if($color == $color-contrast-light, shade-color($border, $btn-hover-border-shade-amount), tint-color($border, $btn-hover-border-tint-amount)),\\n  $hover-color: color-contrast($hover-background),\\n  $active-background: if($color == $color-contrast-light, shade-color($background, $btn-active-bg-shade-amount), tint-color($background, $btn-active-bg-tint-amount)),\\n  $active-border: if($color == $color-contrast-light, shade-color($border, $btn-active-border-shade-amount), tint-color($border, $btn-active-border-tint-amount)),\\n  $active-color: color-contrast($active-background),\\n  $disabled-background: $background,\\n  $disabled-border: $border,\\n  $disabled-color: color-contrast($disabled-background)\\n) {\\n  color: $color;\\n  @include gradient-bg($background);\\n  border-color: $border;\\n  @include box-shadow($btn-box-shadow);\\n\\n  &:hover {\\n    color: $hover-color;\\n    @include gradient-bg($hover-background);\\n    border-color: $hover-border;\\n  }\\n\\n  .btn-check:focus + &,\\n  &:focus {\\n    color: $hover-color;\\n    @include gradient-bg($hover-background);\\n    border-color: $hover-border;\\n    @if $enable-shadows {\\n      @include box-shadow($btn-box-shadow, 0 0 0 $btn-focus-width rgba(mix($color, $border, 15%), .5));\\n    } @else {\\n      // Avoid using mixin so we can pass custom focus shadow properly\\n      box-shadow: 0 0 0 $btn-focus-width rgba(mix($color, $border, 15%), .5);\\n    }\\n  }\\n\\n  .btn-check:checked + &,\\n  .btn-check:active + &,\\n  &:active,\\n  &.active,\\n  .show > &.dropdown-toggle {\\n    color: $active-color;\\n    background-color: $active-background;\\n    // Remove CSS gradients if they\'re enabled\\n    background-image: if($enable-gradients, none, null);\\n    border-color: $active-border;\\n\\n    &:focus {\\n      @if $enable-shadows {\\n        @include box-shadow($btn-active-box-shadow, 0 0 0 $btn-focus-width rgba(mix($color, $border, 15%), .5));\\n      } @else {\\n        // Avoid using mixin so we can pass custom focus shadow properly\\n        box-shadow: 0 0 0 $btn-focus-width rgba(mix($color, $border, 15%), .5);\\n      }\\n    }\\n  }\\n\\n  &:disabled,\\n  &.disabled {\\n    color: $disabled-color;\\n    background-color: $disabled-background;\\n    // Remove CSS gradients if they\'re enabled\\n    background-image: if($enable-gradients, none, null);\\n    border-color: $disabled-border;\\n  }\\n}\\n// scss-docs-end btn-variant-mixin\\n\\n// scss-docs-start btn-outline-variant-mixin\\n@mixin button-outline-variant(\\n  $color,\\n  $color-hover: color-contrast($color),\\n  $active-background: $color,\\n  $active-border: $color,\\n  $active-color: color-contrast($active-background)\\n) {\\n  color: $color;\\n  border-color: $color;\\n\\n  &:hover {\\n    color: $color-hover;\\n    background-color: $active-background;\\n    border-color: $active-border;\\n  }\\n\\n  .btn-check:focus + &,\\n  &:focus {\\n    box-shadow: 0 0 0 $btn-focus-width rgba($color, .5);\\n  }\\n\\n  .btn-check:checked + &,\\n  .btn-check:active + &,\\n  &:active,\\n  &.active,\\n  &.dropdown-toggle.show {\\n    color: $active-color;\\n    background-color: $active-background;\\n    border-color: $active-border;\\n\\n    &:focus {\\n      @if $enable-shadows {\\n        @include box-shadow($btn-active-box-shadow, 0 0 0 $btn-focus-width rgba($color, .5));\\n      } @else {\\n        // Avoid using mixin so we can pass custom focus shadow properly\\n        box-shadow: 0 0 0 $btn-focus-width rgba($color, .5);\\n      }\\n    }\\n  }\\n\\n  &:disabled,\\n  &.disabled {\\n    color: $color;\\n    background-color: transparent;\\n  }\\n}\\n// scss-docs-end btn-outline-variant-mixin\\n\\n// scss-docs-start btn-size-mixin\\n@mixin button-size($padding-y, $padding-x, $font-size, $border-radius) {\\n  padding: $padding-y $padding-x;\\n  @include font-size($font-size);\\n  // Manually declare to provide an override to the browser default\\n  @include border-radius($border-radius, 0);\\n}\\n// scss-docs-end btn-size-mixin\\n",".fade {\\n  @include transition($transition-fade);\\n\\n  &:not(.show) {\\n    opacity: 0;\\n  }\\n}\\n\\n// scss-docs-start collapse-classes\\n.collapse {\\n  &:not(.show) {\\n    display: none;\\n  }\\n}\\n\\n.collapsing {\\n  height: 0;\\n  overflow: hidden;\\n  @include transition($transition-collapse);\\n\\n  &.collapse-horizontal {\\n    width: 0;\\n    height: auto;\\n    @include transition($transition-collapse-width);\\n  }\\n}\\n// scss-docs-end collapse-classes\\n","// The dropdown wrapper (`<div>`)\\n.dropup,\\n.dropend,\\n.dropdown,\\n.dropstart {\\n  position: relative;\\n}\\n\\n.dropdown-toggle {\\n  white-space: nowrap;\\n\\n  // Generate the caret automatically\\n  @include caret();\\n}\\n\\n// The dropdown menu\\n.dropdown-menu {\\n  position: absolute;\\n  z-index: $zindex-dropdown;\\n  display: none; // none by default, but block on \\"open\\" of the menu\\n  min-width: $dropdown-min-width;\\n  padding: $dropdown-padding-y $dropdown-padding-x;\\n  margin: 0; // Override default margin of ul\\n  @include font-size($dropdown-font-size);\\n  color: $dropdown-color;\\n  text-align: left; // Ensures proper alignment if parent has it changed (e.g., modal footer)\\n  list-style: none;\\n  background-color: $dropdown-bg;\\n  background-clip: padding-box;\\n  border: $dropdown-border-width solid $dropdown-border-color;\\n  @include border-radius($dropdown-border-radius);\\n  @include box-shadow($dropdown-box-shadow);\\n\\n  &[data-bs-popper] {\\n    top: 100%;\\n    left: 0;\\n    margin-top: $dropdown-spacer;\\n  }\\n}\\n\\n// scss-docs-start responsive-breakpoints\\n// We deliberately hardcode the `bs-` prefix because we check\\n// this custom property in JS to determine Popper\'s positioning\\n\\n@each $breakpoint in map-keys($grid-breakpoints) {\\n  @include media-breakpoint-up($breakpoint) {\\n    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);\\n\\n    .dropdown-menu#{$infix}-start {\\n      --bs-position: start;\\n\\n      &[data-bs-popper] {\\n        right: auto;\\n        left: 0;\\n      }\\n    }\\n\\n    .dropdown-menu#{$infix}-end {\\n      --bs-position: end;\\n\\n      &[data-bs-popper] {\\n        right: 0;\\n        left: auto;\\n      }\\n    }\\n  }\\n}\\n// scss-docs-end responsive-breakpoints\\n\\n// Allow for dropdowns to go bottom up (aka, dropup-menu)\\n// Just add .dropup after the standard .dropdown class and you\'re set.\\n.dropup {\\n  .dropdown-menu[data-bs-popper] {\\n    top: auto;\\n    bottom: 100%;\\n    margin-top: 0;\\n    margin-bottom: $dropdown-spacer;\\n  }\\n\\n  .dropdown-toggle {\\n    @include caret(up);\\n  }\\n}\\n\\n.dropend {\\n  .dropdown-menu[data-bs-popper] {\\n    top: 0;\\n    right: auto;\\n    left: 100%;\\n    margin-top: 0;\\n    margin-left: $dropdown-spacer;\\n  }\\n\\n  .dropdown-toggle {\\n    @include caret(end);\\n    &::after {\\n      vertical-align: 0;\\n    }\\n  }\\n}\\n\\n.dropstart {\\n  .dropdown-menu[data-bs-popper] {\\n    top: 0;\\n    right: 100%;\\n    left: auto;\\n    margin-top: 0;\\n    margin-right: $dropdown-spacer;\\n  }\\n\\n  .dropdown-toggle {\\n    @include caret(start);\\n    &::before {\\n      vertical-align: 0;\\n    }\\n  }\\n}\\n\\n\\n// Dividers (basically an `<hr>`) within the dropdown\\n.dropdown-divider {\\n  height: 0;\\n  margin: $dropdown-divider-margin-y 0;\\n  overflow: hidden;\\n  border-top: 1px solid $dropdown-divider-bg;\\n}\\n\\n// Links, buttons, and more within the dropdown menu\\n//\\n// `<button>`-specific styles are denoted with `// For <button>s`\\n.dropdown-item {\\n  display: block;\\n  width: 100%; // For `<button>`s\\n  padding: $dropdown-item-padding-y $dropdown-item-padding-x;\\n  clear: both;\\n  font-weight: $font-weight-normal;\\n  color: $dropdown-link-color;\\n  text-align: inherit; // For `<button>`s\\n  text-decoration: if($link-decoration == none, null, none);\\n  white-space: nowrap; // prevent links from randomly breaking onto new lines\\n  background-color: transparent; // For `<button>`s\\n  border: 0; // For `<button>`s\\n\\n  // Prevent dropdown overflow if there\'s no padding\\n  // See https://github.com/twbs/bootstrap/pull/27703\\n  @if $dropdown-padding-y == 0 {\\n    &:first-child {\\n      @include border-top-radius($dropdown-inner-border-radius);\\n    }\\n\\n    &:last-child {\\n      @include border-bottom-radius($dropdown-inner-border-radius);\\n    }\\n  }\\n\\n  &:hover,\\n  &:focus {\\n    color: $dropdown-link-hover-color;\\n    text-decoration: if($link-hover-decoration == underline, none, null);\\n    @include gradient-bg($dropdown-link-hover-bg);\\n  }\\n\\n  &.active,\\n  &:active {\\n    color: $dropdown-link-active-color;\\n    text-decoration: none;\\n    @include gradient-bg($dropdown-link-active-bg);\\n  }\\n\\n  &.disabled,\\n  &:disabled {\\n    color: $dropdown-link-disabled-color;\\n    pointer-events: none;\\n    background-color: transparent;\\n    // Remove CSS gradients if they\'re enabled\\n    background-image: if($enable-gradients, none, null);\\n  }\\n}\\n\\n.dropdown-menu.show {\\n  display: block;\\n}\\n\\n// Dropdown section headers\\n.dropdown-header {\\n  display: block;\\n  padding: $dropdown-header-padding;\\n  margin-bottom: 0; // for use with heading elements\\n  @include font-size($font-size-sm);\\n  color: $dropdown-header-color;\\n  white-space: nowrap; // as with > li > a\\n}\\n\\n// Dropdown text\\n.dropdown-item-text {\\n  display: block;\\n  padding: $dropdown-item-padding-y $dropdown-item-padding-x;\\n  color: $dropdown-link-color;\\n}\\n\\n// Dark dropdowns\\n.dropdown-menu-dark {\\n  color: $dropdown-dark-color;\\n  background-color: $dropdown-dark-bg;\\n  border-color: $dropdown-dark-border-color;\\n  @include box-shadow($dropdown-dark-box-shadow);\\n\\n  .dropdown-item {\\n    color: $dropdown-dark-link-color;\\n\\n    &:hover,\\n    &:focus {\\n      color: $dropdown-dark-link-hover-color;\\n      @include gradient-bg($dropdown-dark-link-hover-bg);\\n    }\\n\\n    &.active,\\n    &:active {\\n      color: $dropdown-dark-link-active-color;\\n      @include gradient-bg($dropdown-dark-link-active-bg);\\n    }\\n\\n    &.disabled,\\n    &:disabled {\\n      color: $dropdown-dark-link-disabled-color;\\n    }\\n  }\\n\\n  .dropdown-divider {\\n    border-color: $dropdown-dark-divider-bg;\\n  }\\n\\n  .dropdown-item-text {\\n    color: $dropdown-dark-link-color;\\n  }\\n\\n  .dropdown-header {\\n    color: $dropdown-dark-header-color;\\n  }\\n}\\n","// scss-docs-start caret-mixins\\n@mixin caret-down {\\n  border-top: $caret-width solid;\\n  border-right: $caret-width solid transparent;\\n  border-bottom: 0;\\n  border-left: $caret-width solid transparent;\\n}\\n\\n@mixin caret-up {\\n  border-top: 0;\\n  border-right: $caret-width solid transparent;\\n  border-bottom: $caret-width solid;\\n  border-left: $caret-width solid transparent;\\n}\\n\\n@mixin caret-end {\\n  border-top: $caret-width solid transparent;\\n  border-right: 0;\\n  border-bottom: $caret-width solid transparent;\\n  border-left: $caret-width solid;\\n}\\n\\n@mixin caret-start {\\n  border-top: $caret-width solid transparent;\\n  border-right: $caret-width solid;\\n  border-bottom: $caret-width solid transparent;\\n}\\n\\n@mixin caret($direction: down) {\\n  @if $enable-caret {\\n    &::after {\\n      display: inline-block;\\n      margin-left: $caret-spacing;\\n      vertical-align: $caret-vertical-align;\\n      content: \\"\\";\\n      @if $direction == down {\\n        @include caret-down();\\n      } @else if $direction == up {\\n        @include caret-up();\\n      } @else if $direction == end {\\n        @include caret-end();\\n      }\\n    }\\n\\n    @if $direction == start {\\n      &::after {\\n        display: none;\\n      }\\n\\n      &::before {\\n        display: inline-block;\\n        margin-right: $caret-spacing;\\n        vertical-align: $caret-vertical-align;\\n        content: \\"\\";\\n        @include caret-start();\\n      }\\n    }\\n\\n    &:empty::after {\\n      margin-left: 0;\\n    }\\n  }\\n}\\n// scss-docs-end caret-mixins\\n","// Make the div behave like a button\\n.btn-group,\\n.btn-group-vertical {\\n  position: relative;\\n  display: inline-flex;\\n  vertical-align: middle; // match .btn alignment given font-size hack above\\n\\n  > .btn {\\n    position: relative;\\n    flex: 1 1 auto;\\n  }\\n\\n  // Bring the hover, focused, and \\"active\\" buttons to the front to overlay\\n  // the borders properly\\n  > .btn-check:checked + .btn,\\n  > .btn-check:focus + .btn,\\n  > .btn:hover,\\n  > .btn:focus,\\n  > .btn:active,\\n  > .btn.active {\\n    z-index: 1;\\n  }\\n}\\n\\n// Optional: Group multiple button groups together for a toolbar\\n.btn-toolbar {\\n  display: flex;\\n  flex-wrap: wrap;\\n  justify-content: flex-start;\\n\\n  .input-group {\\n    width: auto;\\n  }\\n}\\n\\n.btn-group {\\n  // Prevent double borders when buttons are next to each other\\n  > .btn:not(:first-child),\\n  > .btn-group:not(:first-child) {\\n    margin-left: -$btn-border-width;\\n  }\\n\\n  // Reset rounded corners\\n  > .btn:not(:last-child):not(.dropdown-toggle),\\n  > .btn-group:not(:last-child) > .btn {\\n    @include border-end-radius(0);\\n  }\\n\\n  // The left radius should be 0 if the button is:\\n  // - the \\"third or more\\" child\\n  // - the second child and the previous element isn\'t `.btn-check` (making it the first child visually)\\n  // - part of a btn-group which isn\'t the first child\\n  > .btn:nth-child(n + 3),\\n  > :not(.btn-check) + .btn,\\n  > .btn-group:not(:first-child) > .btn {\\n    @include border-start-radius(0);\\n  }\\n}\\n\\n// Sizing\\n//\\n// Remix the default button sizing classes into new ones for easier manipulation.\\n\\n.btn-group-sm > .btn { @extend .btn-sm; }\\n.btn-group-lg > .btn { @extend .btn-lg; }\\n\\n\\n//\\n// Split button dropdowns\\n//\\n\\n.dropdown-toggle-split {\\n  padding-right: $btn-padding-x * .75;\\n  padding-left: $btn-padding-x * .75;\\n\\n  &::after,\\n  .dropup &::after,\\n  .dropend &::after {\\n    margin-left: 0;\\n  }\\n\\n  .dropstart &::before {\\n    margin-right: 0;\\n  }\\n}\\n\\n.btn-sm + .dropdown-toggle-split {\\n  padding-right: $btn-padding-x-sm * .75;\\n  padding-left: $btn-padding-x-sm * .75;\\n}\\n\\n.btn-lg + .dropdown-toggle-split {\\n  padding-right: $btn-padding-x-lg * .75;\\n  padding-left: $btn-padding-x-lg * .75;\\n}\\n\\n\\n// The clickable button for toggling the menu\\n// Set the same inset shadow as the :active state\\n.btn-group.show .dropdown-toggle {\\n  @include box-shadow($btn-active-box-shadow);\\n\\n  // Show no shadow for `.btn-link` since it has no other button styles.\\n  &.btn-link {\\n    @include box-shadow(none);\\n  }\\n}\\n\\n\\n//\\n// Vertical button groups\\n//\\n\\n.btn-group-vertical {\\n  flex-direction: column;\\n  align-items: flex-start;\\n  justify-content: center;\\n\\n  > .btn,\\n  > .btn-group {\\n    width: 100%;\\n  }\\n\\n  > .btn:not(:first-child),\\n  > .btn-group:not(:first-child) {\\n    margin-top: -$btn-border-width;\\n  }\\n\\n  // Reset rounded corners\\n  > .btn:not(:last-child):not(.dropdown-toggle),\\n  > .btn-group:not(:last-child) > .btn {\\n    @include border-bottom-radius(0);\\n  }\\n\\n  > .btn ~ .btn,\\n  > .btn-group:not(:first-child) > .btn {\\n    @include border-top-radius(0);\\n  }\\n}\\n","// Base class\\n//\\n// Kickstart any navigation component with a set of style resets. Works with\\n// `<nav>`s, `<ul>`s or `<ol>`s.\\n\\n.nav {\\n  display: flex;\\n  flex-wrap: wrap;\\n  padding-left: 0;\\n  margin-bottom: 0;\\n  list-style: none;\\n}\\n\\n.nav-link {\\n  display: block;\\n  padding: $nav-link-padding-y $nav-link-padding-x;\\n  @include font-size($nav-link-font-size);\\n  font-weight: $nav-link-font-weight;\\n  color: $nav-link-color;\\n  text-decoration: if($link-decoration == none, null, none);\\n  @include transition($nav-link-transition);\\n\\n  &:hover,\\n  &:focus {\\n    color: $nav-link-hover-color;\\n    text-decoration: if($link-hover-decoration == underline, none, null);\\n  }\\n\\n  // Disabled state lightens text\\n  &.disabled {\\n    color: $nav-link-disabled-color;\\n    pointer-events: none;\\n    cursor: default;\\n  }\\n}\\n\\n//\\n// Tabs\\n//\\n\\n.nav-tabs {\\n  border-bottom: $nav-tabs-border-width solid $nav-tabs-border-color;\\n\\n  .nav-link {\\n    margin-bottom: -$nav-tabs-border-width;\\n    background: none;\\n    border: $nav-tabs-border-width solid transparent;\\n    @include border-top-radius($nav-tabs-border-radius);\\n\\n    &:hover,\\n    &:focus {\\n      border-color: $nav-tabs-link-hover-border-color;\\n      // Prevents active .nav-link tab overlapping focus outline of previous/next .nav-link\\n      isolation: isolate;\\n    }\\n\\n    &.disabled {\\n      color: $nav-link-disabled-color;\\n      background-color: transparent;\\n      border-color: transparent;\\n    }\\n  }\\n\\n  .nav-link.active,\\n  .nav-item.show .nav-link {\\n    color: $nav-tabs-link-active-color;\\n    background-color: $nav-tabs-link-active-bg;\\n    border-color: $nav-tabs-link-active-border-color;\\n  }\\n\\n  .dropdown-menu {\\n    // Make dropdown border overlap tab border\\n    margin-top: -$nav-tabs-border-width;\\n    // Remove the top rounded corners here since there is a hard edge above the menu\\n    @include border-top-radius(0);\\n  }\\n}\\n\\n\\n//\\n// Pills\\n//\\n\\n.nav-pills {\\n  .nav-link {\\n    background: none;\\n    border: 0;\\n    @include border-radius($nav-pills-border-radius);\\n  }\\n\\n  .nav-link.active,\\n  .show > .nav-link {\\n    color: $nav-pills-link-active-color;\\n    @include gradient-bg($nav-pills-link-active-bg);\\n  }\\n}\\n\\n\\n//\\n// Justified variants\\n//\\n\\n.nav-fill {\\n  > .nav-link,\\n  .nav-item {\\n    flex: 1 1 auto;\\n    text-align: center;\\n  }\\n}\\n\\n.nav-justified {\\n  > .nav-link,\\n  .nav-item {\\n    flex-basis: 0;\\n    flex-grow: 1;\\n    text-align: center;\\n  }\\n}\\n\\n.nav-fill,\\n.nav-justified {\\n  .nav-item .nav-link {\\n    width: 100%; // Make sure button will grow\\n  }\\n}\\n\\n\\n// Tabbable tabs\\n//\\n// Hide tabbable panes to start, show them when `.active`\\n\\n.tab-content {\\n  > .tab-pane {\\n    display: none;\\n  }\\n  > .active {\\n    display: block;\\n  }\\n}\\n","// Contents\\n//\\n// Navbar\\n// Navbar brand\\n// Navbar nav\\n// Navbar text\\n// Responsive navbar\\n// Navbar position\\n// Navbar themes\\n\\n\\n// Navbar\\n//\\n// Provide a static navbar from which we expand to create full-width, fixed, and\\n// other navbar variations.\\n\\n.navbar {\\n  position: relative;\\n  display: flex;\\n  flex-wrap: wrap; // allow us to do the line break for collapsing content\\n  align-items: center;\\n  justify-content: space-between; // space out brand from logo\\n  padding-top: $navbar-padding-y;\\n  padding-right: $navbar-padding-x; // default: null\\n  padding-bottom: $navbar-padding-y;\\n  padding-left: $navbar-padding-x; // default: null\\n  @include gradient-bg();\\n\\n  // Because flex properties aren\'t inherited, we need to redeclare these first\\n  // few properties so that content nested within behave properly.\\n  // The `flex-wrap` property is inherited to simplify the expanded navbars\\n  %container-flex-properties {\\n    display: flex;\\n    flex-wrap: inherit;\\n    align-items: center;\\n    justify-content: space-between;\\n  }\\n\\n  > .container,\\n  > .container-fluid {\\n    @extend %container-flex-properties;\\n  }\\n\\n  @each $breakpoint, $container-max-width in $container-max-widths {\\n    > .container#{breakpoint-infix($breakpoint, $container-max-widths)} {\\n      @extend %container-flex-properties;\\n    }\\n  }\\n}\\n\\n\\n// Navbar brand\\n//\\n// Used for brand, project, or site names.\\n\\n.navbar-brand {\\n  padding-top: $navbar-brand-padding-y;\\n  padding-bottom: $navbar-brand-padding-y;\\n  margin-right: $navbar-brand-margin-end;\\n  @include font-size($navbar-brand-font-size);\\n  text-decoration: if($link-decoration == none, null, none);\\n  white-space: nowrap;\\n\\n  &:hover,\\n  &:focus {\\n    text-decoration: if($link-hover-decoration == underline, none, null);\\n  }\\n}\\n\\n\\n// Navbar nav\\n//\\n// Custom navbar navigation (doesn\'t require `.nav`, but does make use of `.nav-link`).\\n\\n.navbar-nav {\\n  display: flex;\\n  flex-direction: column; // cannot use `inherit` to get the `.navbar`s value\\n  padding-left: 0;\\n  margin-bottom: 0;\\n  list-style: none;\\n\\n  .nav-link {\\n    padding-right: 0;\\n    padding-left: 0;\\n  }\\n\\n  .dropdown-menu {\\n    position: static;\\n  }\\n}\\n\\n\\n// Navbar text\\n//\\n//\\n\\n.navbar-text {\\n  padding-top: $nav-link-padding-y;\\n  padding-bottom: $nav-link-padding-y;\\n}\\n\\n\\n// Responsive navbar\\n//\\n// Custom styles for responsive collapsing and toggling of navbar contents.\\n// Powered by the collapse Bootstrap JavaScript plugin.\\n\\n// When collapsed, prevent the toggleable navbar contents from appearing in\\n// the default flexbox row orientation. Requires the use of `flex-wrap: wrap`\\n// on the `.navbar` parent.\\n.navbar-collapse {\\n  flex-basis: 100%;\\n  flex-grow: 1;\\n  // For always expanded or extra full navbars, ensure content aligns itself\\n  // properly vertically. Can be easily overridden with flex utilities.\\n  align-items: center;\\n}\\n\\n// Button for toggling the navbar when in its collapsed state\\n.navbar-toggler {\\n  padding: $navbar-toggler-padding-y $navbar-toggler-padding-x;\\n  @include font-size($navbar-toggler-font-size);\\n  line-height: 1;\\n  background-color: transparent; // remove default button style\\n  border: $border-width solid transparent; // remove default button style\\n  @include border-radius($navbar-toggler-border-radius);\\n  @include transition($navbar-toggler-transition);\\n\\n  &:hover {\\n    text-decoration: none;\\n  }\\n\\n  &:focus {\\n    text-decoration: none;\\n    outline: 0;\\n    box-shadow: 0 0 0 $navbar-toggler-focus-width;\\n  }\\n}\\n\\n// Keep as a separate element so folks can easily override it with another icon\\n// or image file as needed.\\n.navbar-toggler-icon {\\n  display: inline-block;\\n  width: 1.5em;\\n  height: 1.5em;\\n  vertical-align: middle;\\n  background-repeat: no-repeat;\\n  background-position: center;\\n  background-size: 100%;\\n}\\n\\n.navbar-nav-scroll {\\n  max-height: var(--#{$variable-prefix}scroll-height, 75vh);\\n  overflow-y: auto;\\n}\\n\\n// scss-docs-start navbar-expand-loop\\n// Generate series of `.navbar-expand-*` responsive classes for configuring\\n// where your navbar collapses.\\n.navbar-expand {\\n  @each $breakpoint in map-keys($grid-breakpoints) {\\n    $next: breakpoint-next($breakpoint, $grid-breakpoints);\\n    $infix: breakpoint-infix($next, $grid-breakpoints);\\n\\n    // stylelint-disable-next-line scss/selector-no-union-class-name\\n    &#{$infix} {\\n      @include media-breakpoint-up($next) {\\n        flex-wrap: nowrap;\\n        justify-content: flex-start;\\n\\n        .navbar-nav {\\n          flex-direction: row;\\n\\n          .dropdown-menu {\\n            position: absolute;\\n          }\\n\\n          .nav-link {\\n            padding-right: $navbar-nav-link-padding-x;\\n            padding-left: $navbar-nav-link-padding-x;\\n          }\\n        }\\n\\n        .navbar-nav-scroll {\\n          overflow: visible;\\n        }\\n\\n        .navbar-collapse {\\n          display: flex !important; // stylelint-disable-line declaration-no-important\\n          flex-basis: auto;\\n        }\\n\\n        .navbar-toggler {\\n          display: none;\\n        }\\n\\n        .offcanvas-header {\\n          display: none;\\n        }\\n\\n        .offcanvas {\\n          position: inherit;\\n          bottom: 0;\\n          z-index: 1000;\\n          flex-grow: 1;\\n          visibility: visible !important; // stylelint-disable-line declaration-no-important\\n          background-color: transparent;\\n          border-right: 0;\\n          border-left: 0;\\n          @include transition(none);\\n          transform: none;\\n        }\\n        .offcanvas-top,\\n        .offcanvas-bottom {\\n          height: auto;\\n          border-top: 0;\\n          border-bottom: 0;\\n        }\\n\\n        .offcanvas-body {\\n          display: flex;\\n          flex-grow: 0;\\n          padding: 0;\\n          overflow-y: visible;\\n        }\\n      }\\n    }\\n  }\\n}\\n// scss-docs-end navbar-expand-loop\\n\\n// Navbar themes\\n//\\n// Styles for switching between navbars with light or dark background.\\n\\n// Dark links against a light background\\n.navbar-light {\\n  .navbar-brand {\\n    color: $navbar-light-brand-color;\\n\\n    &:hover,\\n    &:focus {\\n      color: $navbar-light-brand-hover-color;\\n    }\\n  }\\n\\n  .navbar-nav {\\n    .nav-link {\\n      color: $navbar-light-color;\\n\\n      &:hover,\\n      &:focus {\\n        color: $navbar-light-hover-color;\\n      }\\n\\n      &.disabled {\\n        color: $navbar-light-disabled-color;\\n      }\\n    }\\n\\n    .show > .nav-link,\\n    .nav-link.active {\\n      color: $navbar-light-active-color;\\n    }\\n  }\\n\\n  .navbar-toggler {\\n    color: $navbar-light-color;\\n    border-color: $navbar-light-toggler-border-color;\\n  }\\n\\n  .navbar-toggler-icon {\\n    background-image: escape-svg($navbar-light-toggler-icon-bg);\\n  }\\n\\n  .navbar-text {\\n    color: $navbar-light-color;\\n\\n    a,\\n    a:hover,\\n    a:focus  {\\n      color: $navbar-light-active-color;\\n    }\\n  }\\n}\\n\\n// White links against a dark background\\n.navbar-dark {\\n  .navbar-brand {\\n    color: $navbar-dark-brand-color;\\n\\n    &:hover,\\n    &:focus {\\n      color: $navbar-dark-brand-hover-color;\\n    }\\n  }\\n\\n  .navbar-nav {\\n    .nav-link {\\n      color: $navbar-dark-color;\\n\\n      &:hover,\\n      &:focus {\\n        color: $navbar-dark-hover-color;\\n      }\\n\\n      &.disabled {\\n        color: $navbar-dark-disabled-color;\\n      }\\n    }\\n\\n    .show > .nav-link,\\n    .nav-link.active {\\n      color: $navbar-dark-active-color;\\n    }\\n  }\\n\\n  .navbar-toggler {\\n    color: $navbar-dark-color;\\n    border-color: $navbar-dark-toggler-border-color;\\n  }\\n\\n  .navbar-toggler-icon {\\n    background-image: escape-svg($navbar-dark-toggler-icon-bg);\\n  }\\n\\n  .navbar-text {\\n    color: $navbar-dark-color;\\n    a,\\n    a:hover,\\n    a:focus {\\n      color: $navbar-dark-active-color;\\n    }\\n  }\\n}\\n","//\\n// Base styles\\n//\\n\\n.card {\\n  position: relative;\\n  display: flex;\\n  flex-direction: column;\\n  min-width: 0; // See https://github.com/twbs/bootstrap/pull/22740#issuecomment-305868106\\n  height: $card-height;\\n  word-wrap: break-word;\\n  background-color: $card-bg;\\n  background-clip: border-box;\\n  border: $card-border-width solid $card-border-color;\\n  @include border-radius($card-border-radius);\\n  @include box-shadow($card-box-shadow);\\n\\n  > hr {\\n    margin-right: 0;\\n    margin-left: 0;\\n  }\\n\\n  > .list-group {\\n    border-top: inherit;\\n    border-bottom: inherit;\\n\\n    &:first-child {\\n      border-top-width: 0;\\n      @include border-top-radius($card-inner-border-radius);\\n    }\\n\\n    &:last-child  {\\n      border-bottom-width: 0;\\n      @include border-bottom-radius($card-inner-border-radius);\\n    }\\n  }\\n\\n  // Due to specificity of the above selector (`.card > .list-group`), we must\\n  // use a child selector here to prevent double borders.\\n  > .card-header + .list-group,\\n  > .list-group + .card-footer {\\n    border-top: 0;\\n  }\\n}\\n\\n.card-body {\\n  // Enable `flex-grow: 1` for decks and groups so that card blocks take up\\n  // as much space as possible, ensuring footers are aligned to the bottom.\\n  flex: 1 1 auto;\\n  padding: $card-spacer-y $card-spacer-x;\\n  color: $card-color;\\n}\\n\\n.card-title {\\n  margin-bottom: $card-title-spacer-y;\\n}\\n\\n.card-subtitle {\\n  margin-top: -$card-title-spacer-y * .5;\\n  margin-bottom: 0;\\n}\\n\\n.card-text:last-child {\\n  margin-bottom: 0;\\n}\\n\\n.card-link {\\n  &:hover {\\n    text-decoration: if($link-hover-decoration == underline, none, null);\\n  }\\n\\n  + .card-link {\\n    margin-left: $card-spacer-x;\\n  }\\n}\\n\\n//\\n// Optional textual caps\\n//\\n\\n.card-header {\\n  padding: $card-cap-padding-y $card-cap-padding-x;\\n  margin-bottom: 0; // Removes the default margin-bottom of <hN>\\n  color: $card-cap-color;\\n  background-color: $card-cap-bg;\\n  border-bottom: $card-border-width solid $card-border-color;\\n\\n  &:first-child {\\n    @include border-radius($card-inner-border-radius $card-inner-border-radius 0 0);\\n  }\\n}\\n\\n.card-footer {\\n  padding: $card-cap-padding-y $card-cap-padding-x;\\n  color: $card-cap-color;\\n  background-color: $card-cap-bg;\\n  border-top: $card-border-width solid $card-border-color;\\n\\n  &:last-child {\\n    @include border-radius(0 0 $card-inner-border-radius $card-inner-border-radius);\\n  }\\n}\\n\\n\\n//\\n// Header navs\\n//\\n\\n.card-header-tabs {\\n  margin-right: -$card-cap-padding-x * .5;\\n  margin-bottom: -$card-cap-padding-y;\\n  margin-left: -$card-cap-padding-x * .5;\\n  border-bottom: 0;\\n\\n  @if $nav-tabs-link-active-bg != $card-bg {\\n    .nav-link.active {\\n      background-color: $card-bg;\\n      border-bottom-color: $card-bg;\\n    }\\n  }\\n}\\n\\n.card-header-pills {\\n  margin-right: -$card-cap-padding-x * .5;\\n  margin-left: -$card-cap-padding-x * .5;\\n}\\n\\n// Card image\\n.card-img-overlay {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n  padding: $card-img-overlay-padding;\\n  @include border-radius($card-inner-border-radius);\\n}\\n\\n.card-img,\\n.card-img-top,\\n.card-img-bottom {\\n  width: 100%; // Required because we use flexbox and this inherently applies align-self: stretch\\n}\\n\\n.card-img,\\n.card-img-top {\\n  @include border-top-radius($card-inner-border-radius);\\n}\\n\\n.card-img,\\n.card-img-bottom {\\n  @include border-bottom-radius($card-inner-border-radius);\\n}\\n\\n\\n//\\n// Card groups\\n//\\n\\n.card-group {\\n  // The child selector allows nested `.card` within `.card-group`\\n  // to display properly.\\n  > .card {\\n    margin-bottom: $card-group-margin;\\n  }\\n\\n  @include media-breakpoint-up(sm) {\\n    display: flex;\\n    flex-flow: row wrap;\\n    // The child selector allows nested `.card` within `.card-group`\\n    // to display properly.\\n    > .card {\\n      // Flexbugs #4: https://github.com/philipwalton/flexbugs#flexbug-4\\n      flex: 1 0 0%;\\n      margin-bottom: 0;\\n\\n      + .card {\\n        margin-left: 0;\\n        border-left: 0;\\n      }\\n\\n      // Handle rounded corners\\n      @if $enable-rounded {\\n        &:not(:last-child) {\\n          @include border-end-radius(0);\\n\\n          .card-img-top,\\n          .card-header {\\n            // stylelint-disable-next-line property-disallowed-list\\n            border-top-right-radius: 0;\\n          }\\n          .card-img-bottom,\\n          .card-footer {\\n            // stylelint-disable-next-line property-disallowed-list\\n            border-bottom-right-radius: 0;\\n          }\\n        }\\n\\n        &:not(:first-child) {\\n          @include border-start-radius(0);\\n\\n          .card-img-top,\\n          .card-header {\\n            // stylelint-disable-next-line property-disallowed-list\\n            border-top-left-radius: 0;\\n          }\\n          .card-img-bottom,\\n          .card-footer {\\n            // stylelint-disable-next-line property-disallowed-list\\n            border-bottom-left-radius: 0;\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\n","//\\n// Base styles\\n//\\n\\n.accordion-button {\\n  position: relative;\\n  display: flex;\\n  align-items: center;\\n  width: 100%;\\n  padding: $accordion-button-padding-y $accordion-button-padding-x;\\n  @include font-size($font-size-base);\\n  color: $accordion-button-color;\\n  text-align: left; // Reset button style\\n  background-color: $accordion-button-bg;\\n  border: 0;\\n  @include border-radius(0);\\n  overflow-anchor: none;\\n  @include transition($accordion-transition);\\n\\n  &:not(.collapsed) {\\n    color: $accordion-button-active-color;\\n    background-color: $accordion-button-active-bg;\\n    box-shadow: inset 0 ($accordion-border-width * -1) 0 $accordion-border-color;\\n\\n    &::after {\\n      background-image: escape-svg($accordion-button-active-icon);\\n      transform: $accordion-icon-transform;\\n    }\\n  }\\n\\n  // Accordion icon\\n  &::after {\\n    flex-shrink: 0;\\n    width: $accordion-icon-width;\\n    height: $accordion-icon-width;\\n    margin-left: auto;\\n    content: \\"\\";\\n    background-image: escape-svg($accordion-button-icon);\\n    background-repeat: no-repeat;\\n    background-size: $accordion-icon-width;\\n    @include transition($accordion-icon-transition);\\n  }\\n\\n  &:hover {\\n    z-index: 2;\\n  }\\n\\n  &:focus {\\n    z-index: 3;\\n    border-color: $accordion-button-focus-border-color;\\n    outline: 0;\\n    box-shadow: $accordion-button-focus-box-shadow;\\n  }\\n}\\n\\n.accordion-header {\\n  margin-bottom: 0;\\n}\\n\\n.accordion-item {\\n  background-color: $accordion-bg;\\n  border: $accordion-border-width solid $accordion-border-color;\\n\\n  &:first-of-type {\\n    @include border-top-radius($accordion-border-radius);\\n\\n    .accordion-button {\\n      @include border-top-radius($accordion-inner-border-radius);\\n    }\\n  }\\n\\n  &:not(:first-of-type) {\\n    border-top: 0;\\n  }\\n\\n  // Only set a border-radius on the last item if the accordion is collapsed\\n  &:last-of-type {\\n    @include border-bottom-radius($accordion-border-radius);\\n\\n    .accordion-button {\\n      &.collapsed {\\n        @include border-bottom-radius($accordion-inner-border-radius);\\n      }\\n    }\\n\\n    .accordion-collapse {\\n      @include border-bottom-radius($accordion-border-radius);\\n    }\\n  }\\n}\\n\\n.accordion-body {\\n  padding: $accordion-body-padding-y $accordion-body-padding-x;\\n}\\n\\n\\n// Flush accordion items\\n//\\n// Remove borders and border-radius to keep accordion items edge-to-edge.\\n\\n.accordion-flush {\\n  .accordion-collapse {\\n    border-width: 0;\\n  }\\n\\n  .accordion-item {\\n    border-right: 0;\\n    border-left: 0;\\n    @include border-radius(0);\\n\\n    &:first-child { border-top: 0; }\\n    &:last-child { border-bottom: 0; }\\n\\n    .accordion-button {\\n      @include border-radius(0);\\n    }\\n  }\\n}\\n",".breadcrumb {\\n  display: flex;\\n  flex-wrap: wrap;\\n  padding: $breadcrumb-padding-y $breadcrumb-padding-x;\\n  margin-bottom: $breadcrumb-margin-bottom;\\n  @include font-size($breadcrumb-font-size);\\n  list-style: none;\\n  background-color: $breadcrumb-bg;\\n  @include border-radius($breadcrumb-border-radius);\\n}\\n\\n.breadcrumb-item {\\n  // The separator between breadcrumbs (by default, a forward-slash: \\"/\\")\\n  + .breadcrumb-item {\\n    padding-left: $breadcrumb-item-padding-x;\\n\\n    &::before {\\n      float: left; // Suppress inline spacings and underlining of the separator\\n      padding-right: $breadcrumb-item-padding-x;\\n      color: $breadcrumb-divider-color;\\n      content: var(--#{$variable-prefix}breadcrumb-divider, escape-svg($breadcrumb-divider)) #{\\"/* rtl:\\"} var(--#{$variable-prefix}breadcrumb-divider, escape-svg($breadcrumb-divider-flipped)) #{\\"*/\\"};\\n    }\\n  }\\n\\n  &.active {\\n    color: $breadcrumb-active-color;\\n  }\\n}\\n",".pagination {\\n  display: flex;\\n  @include list-unstyled();\\n}\\n\\n.page-link {\\n  position: relative;\\n  display: block;\\n  color: $pagination-color;\\n  text-decoration: if($link-decoration == none, null, none);\\n  background-color: $pagination-bg;\\n  border: $pagination-border-width solid $pagination-border-color;\\n  @include transition($pagination-transition);\\n\\n  &:hover {\\n    z-index: 2;\\n    color: $pagination-hover-color;\\n    text-decoration: if($link-hover-decoration == underline, none, null);\\n    background-color: $pagination-hover-bg;\\n    border-color: $pagination-hover-border-color;\\n  }\\n\\n  &:focus {\\n    z-index: 3;\\n    color: $pagination-focus-color;\\n    background-color: $pagination-focus-bg;\\n    outline: $pagination-focus-outline;\\n    box-shadow: $pagination-focus-box-shadow;\\n  }\\n}\\n\\n.page-item {\\n  &:not(:first-child) .page-link {\\n    margin-left: $pagination-margin-start;\\n  }\\n\\n  &.active .page-link {\\n    z-index: 3;\\n    color: $pagination-active-color;\\n    @include gradient-bg($pagination-active-bg);\\n    border-color: $pagination-active-border-color;\\n  }\\n\\n  &.disabled .page-link {\\n    color: $pagination-disabled-color;\\n    pointer-events: none;\\n    background-color: $pagination-disabled-bg;\\n    border-color: $pagination-disabled-border-color;\\n  }\\n}\\n\\n\\n//\\n// Sizing\\n//\\n@include pagination-size($pagination-padding-y, $pagination-padding-x, null, $pagination-border-radius);\\n\\n.pagination-lg {\\n  @include pagination-size($pagination-padding-y-lg, $pagination-padding-x-lg, $font-size-lg, $pagination-border-radius-lg);\\n}\\n\\n.pagination-sm {\\n  @include pagination-size($pagination-padding-y-sm, $pagination-padding-x-sm, $font-size-sm, $pagination-border-radius-sm);\\n}\\n","// Pagination\\n\\n// scss-docs-start pagination-mixin\\n@mixin pagination-size($padding-y, $padding-x, $font-size, $border-radius) {\\n  .page-link {\\n    padding: $padding-y $padding-x;\\n    @include font-size($font-size);\\n  }\\n\\n  .page-item {\\n    @if $pagination-margin-start == (-$pagination-border-width) {\\n      &:first-child {\\n        .page-link {\\n          @include border-start-radius($border-radius);\\n        }\\n      }\\n\\n      &:last-child {\\n        .page-link {\\n          @include border-end-radius($border-radius);\\n        }\\n      }\\n    } @else {\\n      //Add border-radius to all pageLinks in case they have left margin\\n      .page-link {\\n        @include border-radius($border-radius);\\n      }\\n    }\\n  }\\n}\\n// scss-docs-end pagination-mixin\\n","// Base class\\n//\\n// Requires one of the contextual, color modifier classes for `color` and\\n// `background-color`.\\n\\n.badge {\\n  display: inline-block;\\n  padding: $badge-padding-y $badge-padding-x;\\n  @include font-size($badge-font-size);\\n  font-weight: $badge-font-weight;\\n  line-height: 1;\\n  color: $badge-color;\\n  text-align: center;\\n  white-space: nowrap;\\n  vertical-align: baseline;\\n  @include border-radius($badge-border-radius);\\n  @include gradient-bg();\\n\\n  // Empty badges collapse automatically\\n  &:empty {\\n    display: none;\\n  }\\n}\\n\\n// Quick fix for badges in buttons\\n.btn .badge {\\n  position: relative;\\n  top: -1px;\\n}\\n","//\\n// Base styles\\n//\\n\\n.alert {\\n  position: relative;\\n  padding: $alert-padding-y $alert-padding-x;\\n  margin-bottom: $alert-margin-bottom;\\n  border: $alert-border-width solid transparent;\\n  @include border-radius($alert-border-radius);\\n}\\n\\n// Headings for larger alerts\\n.alert-heading {\\n  // Specified to prevent conflicts of changing $headings-color\\n  color: inherit;\\n}\\n\\n// Provide class for links that match alerts\\n.alert-link {\\n  font-weight: $alert-link-font-weight;\\n}\\n\\n\\n// Dismissible alerts\\n//\\n// Expand the right padding and account for the close button\'s positioning.\\n\\n.alert-dismissible {\\n  padding-right: $alert-dismissible-padding-r;\\n\\n  // Adjust close link position\\n  .btn-close {\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    z-index: $stretched-link-z-index + 1;\\n    padding: $alert-padding-y * 1.25 $alert-padding-x;\\n  }\\n}\\n\\n\\n// scss-docs-start alert-modifiers\\n// Generate contextual modifier classes for colorizing the alert.\\n\\n@each $state, $value in $theme-colors {\\n  $alert-background: shift-color($value, $alert-bg-scale);\\n  $alert-border: shift-color($value, $alert-border-scale);\\n  $alert-color: shift-color($value, $alert-color-scale);\\n  @if (contrast-ratio($alert-background, $alert-color) < $min-contrast-ratio) {\\n    $alert-color: mix($value, color-contrast($alert-background), abs($alert-color-scale));\\n  }\\n  .alert-#{$state} {\\n    @include alert-variant($alert-background, $alert-border, $alert-color);\\n  }\\n}\\n// scss-docs-end alert-modifiers\\n","// scss-docs-start alert-variant-mixin\\n@mixin alert-variant($background, $border, $color) {\\n  color: $color;\\n  @include gradient-bg($background);\\n  border-color: $border;\\n\\n  .alert-link {\\n    color: shade-color($color, 20%);\\n  }\\n}\\n// scss-docs-end alert-variant-mixin\\n","// Disable animation if transitions are disabled\\n\\n// scss-docs-start progress-keyframes\\n@if $enable-transitions {\\n  @keyframes progress-bar-stripes {\\n    0% { background-position-x: $progress-height; }\\n  }\\n}\\n// scss-docs-end progress-keyframes\\n\\n.progress {\\n  display: flex;\\n  height: $progress-height;\\n  overflow: hidden; // force rounded corners by cropping it\\n  @include font-size($progress-font-size);\\n  background-color: $progress-bg;\\n  @include border-radius($progress-border-radius);\\n  @include box-shadow($progress-box-shadow);\\n}\\n\\n.progress-bar {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  overflow: hidden;\\n  color: $progress-bar-color;\\n  text-align: center;\\n  white-space: nowrap;\\n  background-color: $progress-bar-bg;\\n  @include transition($progress-bar-transition);\\n}\\n\\n.progress-bar-striped {\\n  @include gradient-striped();\\n  background-size: $progress-height $progress-height;\\n}\\n\\n@if $enable-transitions {\\n  .progress-bar-animated {\\n    animation: $progress-bar-animation-timing progress-bar-stripes;\\n\\n    @if $enable-reduced-motion {\\n      @media (prefers-reduced-motion: reduce) {\\n        animation: none;\\n      }\\n    }\\n  }\\n}\\n","// Base class\\n//\\n// Easily usable on <ul>, <ol>, or <div>.\\n\\n.list-group {\\n  display: flex;\\n  flex-direction: column;\\n\\n  // No need to set list-style: none; since .list-group-item is block level\\n  padding-left: 0; // reset padding because ul and ol\\n  margin-bottom: 0;\\n  @include border-radius($list-group-border-radius);\\n}\\n\\n.list-group-numbered {\\n  list-style-type: none;\\n  counter-reset: section;\\n\\n  > li::before {\\n    // Increments only this instance of the section counter\\n    content: counters(section, \\".\\") \\". \\";\\n    counter-increment: section;\\n  }\\n}\\n\\n\\n// Interactive list items\\n//\\n// Use anchor or button elements instead of `li`s or `div`s to create interactive\\n// list items. Includes an extra `.active` modifier class for selected items.\\n\\n.list-group-item-action {\\n  width: 100%; // For `<button>`s (anchors become 100% by default though)\\n  color: $list-group-action-color;\\n  text-align: inherit; // For `<button>`s (anchors inherit)\\n\\n  // Hover state\\n  &:hover,\\n  &:focus {\\n    z-index: 1; // Place hover/focus items above their siblings for proper border styling\\n    color: $list-group-action-hover-color;\\n    text-decoration: none;\\n    background-color: $list-group-hover-bg;\\n  }\\n\\n  &:active {\\n    color: $list-group-action-active-color;\\n    background-color: $list-group-action-active-bg;\\n  }\\n}\\n\\n\\n// Individual list items\\n//\\n// Use on `li`s or `div`s within the `.list-group` parent.\\n\\n.list-group-item {\\n  position: relative;\\n  display: block;\\n  padding: $list-group-item-padding-y $list-group-item-padding-x;\\n  color: $list-group-color;\\n  text-decoration: if($link-decoration == none, null, none);\\n  background-color: $list-group-bg;\\n  border: $list-group-border-width solid $list-group-border-color;\\n\\n  &:first-child {\\n    @include border-top-radius(inherit);\\n  }\\n\\n  &:last-child {\\n    @include border-bottom-radius(inherit);\\n  }\\n\\n  &.disabled,\\n  &:disabled {\\n    color: $list-group-disabled-color;\\n    pointer-events: none;\\n    background-color: $list-group-disabled-bg;\\n  }\\n\\n  // Include both here for `<a>`s and `<button>`s\\n  &.active {\\n    z-index: 2; // Place active items above their siblings for proper border styling\\n    color: $list-group-active-color;\\n    background-color: $list-group-active-bg;\\n    border-color: $list-group-active-border-color;\\n  }\\n\\n  & + & {\\n    border-top-width: 0;\\n\\n    &.active {\\n      margin-top: -$list-group-border-width;\\n      border-top-width: $list-group-border-width;\\n    }\\n  }\\n}\\n\\n\\n// Horizontal\\n//\\n// Change the layout of list group items from vertical (default) to horizontal.\\n\\n@each $breakpoint in map-keys($grid-breakpoints) {\\n  @include media-breakpoint-up($breakpoint) {\\n    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);\\n\\n    .list-group-horizontal#{$infix} {\\n      flex-direction: row;\\n\\n      > .list-group-item {\\n        &:first-child {\\n          @include border-bottom-start-radius($list-group-border-radius);\\n          @include border-top-end-radius(0);\\n        }\\n\\n        &:last-child {\\n          @include border-top-end-radius($list-group-border-radius);\\n          @include border-bottom-start-radius(0);\\n        }\\n\\n        &.active {\\n          margin-top: 0;\\n        }\\n\\n        + .list-group-item {\\n          border-top-width: $list-group-border-width;\\n          border-left-width: 0;\\n\\n          &.active {\\n            margin-left: -$list-group-border-width;\\n            border-left-width: $list-group-border-width;\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\n\\n\\n// Flush list items\\n//\\n// Remove borders and border-radius to keep list group items edge-to-edge. Most\\n// useful within other components (e.g., cards).\\n\\n.list-group-flush {\\n  @include border-radius(0);\\n\\n  > .list-group-item {\\n    border-width: 0 0 $list-group-border-width;\\n\\n    &:last-child {\\n      border-bottom-width: 0;\\n    }\\n  }\\n}\\n\\n\\n// scss-docs-start list-group-modifiers\\n// List group contextual variants\\n//\\n// Add modifier classes to change text and background color on individual items.\\n// Organizationally, this must come after the `:hover` states.\\n\\n@each $state, $value in $theme-colors {\\n  $list-group-variant-bg: shift-color($value, $list-group-item-bg-scale);\\n  $list-group-variant-color: shift-color($value, $list-group-item-color-scale);\\n  @if (contrast-ratio($list-group-variant-bg, $list-group-variant-color) < $min-contrast-ratio) {\\n    $list-group-variant-color: mix($value, color-contrast($list-group-variant-bg), abs($list-group-item-color-scale));\\n  }\\n\\n  @include list-group-item-variant($state, $list-group-variant-bg, $list-group-variant-color);\\n}\\n// scss-docs-end list-group-modifiers\\n","// List Groups\\n\\n// scss-docs-start list-group-mixin\\n@mixin list-group-item-variant($state, $background, $color) {\\n  .list-group-item-#{$state} {\\n    color: $color;\\n    background-color: $background;\\n\\n    &.list-group-item-action {\\n      &:hover,\\n      &:focus {\\n        color: $color;\\n        background-color: shade-color($background, 10%);\\n      }\\n\\n      &.active {\\n        color: $white;\\n        background-color: $color;\\n        border-color: $color;\\n      }\\n    }\\n  }\\n}\\n// scss-docs-end list-group-mixin\\n","// transparent background and border properties included for button version.\\n// iOS requires the button element instead of an anchor tag.\\n// If you want the anchor version, it requires `href=\\"#\\"`.\\n// See https://developer.mozilla.org/en-US/docs/Web/Events/click#Safari_Mobile\\n\\n.btn-close {\\n  box-sizing: content-box;\\n  width: $btn-close-width;\\n  height: $btn-close-height;\\n  padding: $btn-close-padding-y $btn-close-padding-x;\\n  color: $btn-close-color;\\n  background: transparent escape-svg($btn-close-bg) center / $btn-close-width auto no-repeat; // include transparent for button elements\\n  border: 0; // for button elements\\n  @include border-radius();\\n  opacity: $btn-close-opacity;\\n\\n  // Override <a>\'s hover style\\n  &:hover {\\n    color: $btn-close-color;\\n    text-decoration: none;\\n    opacity: $btn-close-hover-opacity;\\n  }\\n\\n  &:focus {\\n    outline: 0;\\n    box-shadow: $btn-close-focus-shadow;\\n    opacity: $btn-close-focus-opacity;\\n  }\\n\\n  &:disabled,\\n  &.disabled {\\n    pointer-events: none;\\n    user-select: none;\\n    opacity: $btn-close-disabled-opacity;\\n  }\\n}\\n\\n.btn-close-white {\\n  filter: $btn-close-white-filter;\\n}\\n",".toast {\\n  width: $toast-max-width;\\n  max-width: 100%;\\n  @include font-size($toast-font-size);\\n  color: $toast-color;\\n  pointer-events: auto;\\n  background-color: $toast-background-color;\\n  background-clip: padding-box;\\n  border: $toast-border-width solid $toast-border-color;\\n  box-shadow: $toast-box-shadow;\\n  @include border-radius($toast-border-radius);\\n\\n  &.showing {\\n    opacity: 0;\\n  }\\n\\n  &:not(.show) {\\n    display: none;\\n  }\\n}\\n\\n.toast-container {\\n  width: max-content;\\n  max-width: 100%;\\n  pointer-events: none;\\n\\n  > :not(:last-child) {\\n    margin-bottom: $toast-spacing;\\n  }\\n}\\n\\n.toast-header {\\n  display: flex;\\n  align-items: center;\\n  padding: $toast-padding-y $toast-padding-x;\\n  color: $toast-header-color;\\n  background-color: $toast-header-background-color;\\n  background-clip: padding-box;\\n  border-bottom: $toast-border-width solid $toast-header-border-color;\\n  @include border-top-radius(subtract($toast-border-radius, $toast-border-width));\\n\\n  .btn-close {\\n    margin-right: $toast-padding-x * -.5;\\n    margin-left: $toast-padding-x;\\n  }\\n}\\n\\n.toast-body {\\n  padding: $toast-padding-x; // apply to both vertical and horizontal\\n  word-wrap: break-word;\\n}\\n","// .modal-open      - body class for killing the scroll\\n// .modal           - container to scroll within\\n// .modal-dialog    - positioning shell for the actual modal\\n// .modal-content   - actual modal w/ bg and corners and stuff\\n\\n\\n// Container that the modal scrolls within\\n.modal {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  z-index: $zindex-modal;\\n  display: none;\\n  width: 100%;\\n  height: 100%;\\n  overflow-x: hidden;\\n  overflow-y: auto;\\n  // Prevent Chrome on Windows from adding a focus outline. For details, see\\n  // https://github.com/twbs/bootstrap/pull/10951.\\n  outline: 0;\\n  // We deliberately don\'t use `-webkit-overflow-scrolling: touch;` due to a\\n  // gnarly iOS Safari bug: https://bugs.webkit.org/show_bug.cgi?id=158342\\n  // See also https://github.com/twbs/bootstrap/issues/17695\\n}\\n\\n// Shell div to position the modal with bottom padding\\n.modal-dialog {\\n  position: relative;\\n  width: auto;\\n  margin: $modal-dialog-margin;\\n  // allow clicks to pass through for custom click handling to close modal\\n  pointer-events: none;\\n\\n  // When fading in the modal, animate it to slide down\\n  .modal.fade & {\\n    @include transition($modal-transition);\\n    transform: $modal-fade-transform;\\n  }\\n  .modal.show & {\\n    transform: $modal-show-transform;\\n  }\\n\\n  // When trying to close, animate focus to scale\\n  .modal.modal-static & {\\n    transform: $modal-scale-transform;\\n  }\\n}\\n\\n.modal-dialog-scrollable {\\n  height: subtract(100%, $modal-dialog-margin * 2);\\n\\n  .modal-content {\\n    max-height: 100%;\\n    overflow: hidden;\\n  }\\n\\n  .modal-body {\\n    overflow-y: auto;\\n  }\\n}\\n\\n.modal-dialog-centered {\\n  display: flex;\\n  align-items: center;\\n  min-height: subtract(100%, $modal-dialog-margin * 2);\\n}\\n\\n// Actual modal\\n.modal-content {\\n  position: relative;\\n  display: flex;\\n  flex-direction: column;\\n  width: 100%; // Ensure `.modal-content` extends the full width of the parent `.modal-dialog`\\n  // counteract the pointer-events: none; in the .modal-dialog\\n  color: $modal-content-color;\\n  pointer-events: auto;\\n  background-color: $modal-content-bg;\\n  background-clip: padding-box;\\n  border: $modal-content-border-width solid $modal-content-border-color;\\n  @include border-radius($modal-content-border-radius);\\n  @include box-shadow($modal-content-box-shadow-xs);\\n  // Remove focus outline from opened modal\\n  outline: 0;\\n}\\n\\n// Modal background\\n.modal-backdrop {\\n  @include overlay-backdrop($zindex-modal-backdrop, $modal-backdrop-bg, $modal-backdrop-opacity);\\n}\\n\\n// Modal header\\n// Top section of the modal w/ title and dismiss\\n.modal-header {\\n  display: flex;\\n  flex-shrink: 0;\\n  align-items: center;\\n  justify-content: space-between; // Put modal header elements (title and dismiss) on opposite ends\\n  padding: $modal-header-padding;\\n  border-bottom: $modal-header-border-width solid $modal-header-border-color;\\n  @include border-top-radius($modal-content-inner-border-radius);\\n\\n  .btn-close {\\n    padding: ($modal-header-padding-y * .5) ($modal-header-padding-x * .5);\\n    margin: ($modal-header-padding-y * -.5) ($modal-header-padding-x * -.5) ($modal-header-padding-y * -.5) auto;\\n  }\\n}\\n\\n// Title text within header\\n.modal-title {\\n  margin-bottom: 0;\\n  line-height: $modal-title-line-height;\\n}\\n\\n// Modal body\\n// Where all modal content resides (sibling of .modal-header and .modal-footer)\\n.modal-body {\\n  position: relative;\\n  // Enable `flex-grow: 1` so that the body take up as much space as possible\\n  // when there should be a fixed height on `.modal-dialog`.\\n  flex: 1 1 auto;\\n  padding: $modal-inner-padding;\\n}\\n\\n// Footer (for actions)\\n.modal-footer {\\n  display: flex;\\n  flex-wrap: wrap;\\n  flex-shrink: 0;\\n  align-items: center; // vertically center\\n  justify-content: flex-end; // Right align buttons with flex property because text-align doesn\'t work on flex items\\n  padding: $modal-inner-padding - $modal-footer-margin-between * .5;\\n  border-top: $modal-footer-border-width solid $modal-footer-border-color;\\n  @include border-bottom-radius($modal-content-inner-border-radius);\\n\\n  // Place margin between footer elements\\n  // This solution is far from ideal because of the universal selector usage,\\n  // but is needed to fix https://github.com/twbs/bootstrap/issues/24800\\n  > * {\\n    margin: $modal-footer-margin-between * .5;\\n  }\\n}\\n\\n// Scale up the modal\\n@include media-breakpoint-up(sm) {\\n  // Automatically set modal\'s width for larger viewports\\n  .modal-dialog {\\n    max-width: $modal-md;\\n    margin: $modal-dialog-margin-y-sm-up auto;\\n  }\\n\\n  .modal-dialog-scrollable {\\n    height: subtract(100%, $modal-dialog-margin-y-sm-up * 2);\\n  }\\n\\n  .modal-dialog-centered {\\n    min-height: subtract(100%, $modal-dialog-margin-y-sm-up * 2);\\n  }\\n\\n  .modal-content {\\n    @include box-shadow($modal-content-box-shadow-sm-up);\\n  }\\n\\n  .modal-sm { max-width: $modal-sm; }\\n}\\n\\n@include media-breakpoint-up(lg) {\\n  .modal-lg,\\n  .modal-xl {\\n    max-width: $modal-lg;\\n  }\\n}\\n\\n@include media-breakpoint-up(xl) {\\n  .modal-xl { max-width: $modal-xl; }\\n}\\n\\n// scss-docs-start modal-fullscreen-loop\\n@each $breakpoint in map-keys($grid-breakpoints) {\\n  $infix: breakpoint-infix($breakpoint, $grid-breakpoints);\\n  $postfix: if($infix != \\"\\", $infix + \\"-down\\", \\"\\");\\n\\n  @include media-breakpoint-down($breakpoint) {\\n    .modal-fullscreen#{$postfix} {\\n      width: 100vw;\\n      max-width: none;\\n      height: 100%;\\n      margin: 0;\\n\\n      .modal-content {\\n        height: 100%;\\n        border: 0;\\n        @include border-radius(0);\\n      }\\n\\n      .modal-header {\\n        @include border-radius(0);\\n      }\\n\\n      .modal-body {\\n        overflow-y: auto;\\n      }\\n\\n      .modal-footer {\\n        @include border-radius(0);\\n      }\\n    }\\n  }\\n}\\n// scss-docs-end modal-fullscreen-loop\\n","// Shared between modals and offcanvases\\n@mixin overlay-backdrop($zindex, $backdrop-bg, $backdrop-opacity) {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  z-index: $zindex;\\n  width: 100vw;\\n  height: 100vh;\\n  background-color: $backdrop-bg;\\n\\n  // Fade for backdrop\\n  &.fade { opacity: 0; }\\n  &.show { opacity: $backdrop-opacity; }\\n}\\n","// Base class\\n.tooltip {\\n  position: absolute;\\n  z-index: $zindex-tooltip;\\n  display: block;\\n  margin: $tooltip-margin;\\n  // Our parent element can be arbitrary since tooltips are by default inserted as a sibling of their target element.\\n  // So reset our font and text properties to avoid inheriting weird values.\\n  @include reset-text();\\n  @include font-size($tooltip-font-size);\\n  // Allow breaking very long words so they don\'t overflow the tooltip\'s bounds\\n  word-wrap: break-word;\\n  opacity: 0;\\n\\n  &.show { opacity: $tooltip-opacity; }\\n\\n  .tooltip-arrow {\\n    position: absolute;\\n    display: block;\\n    width: $tooltip-arrow-width;\\n    height: $tooltip-arrow-height;\\n\\n    &::before {\\n      position: absolute;\\n      content: \\"\\";\\n      border-color: transparent;\\n      border-style: solid;\\n    }\\n  }\\n}\\n\\n.bs-tooltip-top {\\n  padding: $tooltip-arrow-height 0;\\n\\n  .tooltip-arrow {\\n    bottom: 0;\\n\\n    &::before {\\n      top: -1px;\\n      border-width: $tooltip-arrow-height ($tooltip-arrow-width * .5) 0;\\n      border-top-color: $tooltip-arrow-color;\\n    }\\n  }\\n}\\n\\n.bs-tooltip-end {\\n  padding: 0 $tooltip-arrow-height;\\n\\n  .tooltip-arrow {\\n    left: 0;\\n    width: $tooltip-arrow-height;\\n    height: $tooltip-arrow-width;\\n\\n    &::before {\\n      right: -1px;\\n      border-width: ($tooltip-arrow-width * .5) $tooltip-arrow-height ($tooltip-arrow-width * .5) 0;\\n      border-right-color: $tooltip-arrow-color;\\n    }\\n  }\\n}\\n\\n.bs-tooltip-bottom {\\n  padding: $tooltip-arrow-height 0;\\n\\n  .tooltip-arrow {\\n    top: 0;\\n\\n    &::before {\\n      bottom: -1px;\\n      border-width: 0 ($tooltip-arrow-width * .5) $tooltip-arrow-height;\\n      border-bottom-color: $tooltip-arrow-color;\\n    }\\n  }\\n}\\n\\n.bs-tooltip-start {\\n  padding: 0 $tooltip-arrow-height;\\n\\n  .tooltip-arrow {\\n    right: 0;\\n    width: $tooltip-arrow-height;\\n    height: $tooltip-arrow-width;\\n\\n    &::before {\\n      left: -1px;\\n      border-width: ($tooltip-arrow-width * .5) 0 ($tooltip-arrow-width * .5) $tooltip-arrow-height;\\n      border-left-color: $tooltip-arrow-color;\\n    }\\n  }\\n}\\n\\n.bs-tooltip-auto {\\n  &[data-popper-placement^=\\"top\\"] {\\n    @extend .bs-tooltip-top;\\n  }\\n  &[data-popper-placement^=\\"right\\"] {\\n    @extend .bs-tooltip-end;\\n  }\\n  &[data-popper-placement^=\\"bottom\\"] {\\n    @extend .bs-tooltip-bottom;\\n  }\\n  &[data-popper-placement^=\\"left\\"] {\\n    @extend .bs-tooltip-start;\\n  }\\n}\\n\\n// Wrapper for the tooltip content\\n.tooltip-inner {\\n  max-width: $tooltip-max-width;\\n  padding: $tooltip-padding-y $tooltip-padding-x;\\n  color: $tooltip-color;\\n  text-align: center;\\n  background-color: $tooltip-bg;\\n  @include border-radius($tooltip-border-radius);\\n}\\n","@mixin reset-text {\\n  font-family: $font-family-base;\\n  // We deliberately do NOT reset font-size or overflow-wrap / word-wrap.\\n  font-style: normal;\\n  font-weight: $font-weight-normal;\\n  line-height: $line-height-base;\\n  text-align: left; // Fallback for where `start` is not supported\\n  text-align: start;\\n  text-decoration: none;\\n  text-shadow: none;\\n  text-transform: none;\\n  letter-spacing: normal;\\n  word-break: normal;\\n  word-spacing: normal;\\n  white-space: normal;\\n  line-break: auto;\\n}\\n",".popover {\\n  position: absolute;\\n  top: 0;\\n  left: 0 #{\\"/* rtl:ignore */\\"};\\n  z-index: $zindex-popover;\\n  display: block;\\n  max-width: $popover-max-width;\\n  // Our parent element can be arbitrary since tooltips are by default inserted as a sibling of their target element.\\n  // So reset our font and text properties to avoid inheriting weird values.\\n  @include reset-text();\\n  @include font-size($popover-font-size);\\n  // Allow breaking very long words so they don\'t overflow the popover\'s bounds\\n  word-wrap: break-word;\\n  background-color: $popover-bg;\\n  background-clip: padding-box;\\n  border: $popover-border-width solid $popover-border-color;\\n  @include border-radius($popover-border-radius);\\n  @include box-shadow($popover-box-shadow);\\n\\n  .popover-arrow {\\n    position: absolute;\\n    display: block;\\n    width: $popover-arrow-width;\\n    height: $popover-arrow-height;\\n\\n    &::before,\\n    &::after {\\n      position: absolute;\\n      display: block;\\n      content: \\"\\";\\n      border-color: transparent;\\n      border-style: solid;\\n    }\\n  }\\n}\\n\\n.bs-popover-top {\\n  > .popover-arrow {\\n    bottom: subtract(-$popover-arrow-height, $popover-border-width);\\n\\n    &::before {\\n      bottom: 0;\\n      border-width: $popover-arrow-height ($popover-arrow-width * .5) 0;\\n      border-top-color: $popover-arrow-outer-color;\\n    }\\n\\n    &::after {\\n      bottom: $popover-border-width;\\n      border-width: $popover-arrow-height ($popover-arrow-width * .5) 0;\\n      border-top-color: $popover-arrow-color;\\n    }\\n  }\\n}\\n\\n.bs-popover-end {\\n  > .popover-arrow {\\n    left: subtract(-$popover-arrow-height, $popover-border-width);\\n    width: $popover-arrow-height;\\n    height: $popover-arrow-width;\\n\\n    &::before {\\n      left: 0;\\n      border-width: ($popover-arrow-width * .5) $popover-arrow-height ($popover-arrow-width * .5) 0;\\n      border-right-color: $popover-arrow-outer-color;\\n    }\\n\\n    &::after {\\n      left: $popover-border-width;\\n      border-width: ($popover-arrow-width * .5) $popover-arrow-height ($popover-arrow-width * .5) 0;\\n      border-right-color: $popover-arrow-color;\\n    }\\n  }\\n}\\n\\n.bs-popover-bottom {\\n  > .popover-arrow {\\n    top: subtract(-$popover-arrow-height, $popover-border-width);\\n\\n    &::before {\\n      top: 0;\\n      border-width: 0 ($popover-arrow-width * .5) $popover-arrow-height ($popover-arrow-width * .5);\\n      border-bottom-color: $popover-arrow-outer-color;\\n    }\\n\\n    &::after {\\n      top: $popover-border-width;\\n      border-width: 0 ($popover-arrow-width * .5) $popover-arrow-height ($popover-arrow-width * .5);\\n      border-bottom-color: $popover-arrow-color;\\n    }\\n  }\\n\\n  // This will remove the popover-header\'s border just below the arrow\\n  .popover-header::before {\\n    position: absolute;\\n    top: 0;\\n    left: 50%;\\n    display: block;\\n    width: $popover-arrow-width;\\n    margin-left: -$popover-arrow-width * .5;\\n    content: \\"\\";\\n    border-bottom: $popover-border-width solid $popover-header-bg;\\n  }\\n}\\n\\n.bs-popover-start {\\n  > .popover-arrow {\\n    right: subtract(-$popover-arrow-height, $popover-border-width);\\n    width: $popover-arrow-height;\\n    height: $popover-arrow-width;\\n\\n    &::before {\\n      right: 0;\\n      border-width: ($popover-arrow-width * .5) 0 ($popover-arrow-width * .5) $popover-arrow-height;\\n      border-left-color: $popover-arrow-outer-color;\\n    }\\n\\n    &::after {\\n      right: $popover-border-width;\\n      border-width: ($popover-arrow-width * .5) 0 ($popover-arrow-width * .5) $popover-arrow-height;\\n      border-left-color: $popover-arrow-color;\\n    }\\n  }\\n}\\n\\n.bs-popover-auto {\\n  &[data-popper-placement^=\\"top\\"] {\\n    @extend .bs-popover-top;\\n  }\\n  &[data-popper-placement^=\\"right\\"] {\\n    @extend .bs-popover-end;\\n  }\\n  &[data-popper-placement^=\\"bottom\\"] {\\n    @extend .bs-popover-bottom;\\n  }\\n  &[data-popper-placement^=\\"left\\"] {\\n    @extend .bs-popover-start;\\n  }\\n}\\n\\n// Offset the popover to account for the popover arrow\\n.popover-header {\\n  padding: $popover-header-padding-y $popover-header-padding-x;\\n  margin-bottom: 0; // Reset the default from Reboot\\n  @include font-size($font-size-base);\\n  color: $popover-header-color;\\n  background-color: $popover-header-bg;\\n  border-bottom: $popover-border-width solid $popover-border-color;\\n  @include border-top-radius($popover-inner-border-radius);\\n\\n  &:empty {\\n    display: none;\\n  }\\n}\\n\\n.popover-body {\\n  padding: $popover-body-padding-y $popover-body-padding-x;\\n  color: $popover-body-color;\\n}\\n","// Notes on the classes:\\n//\\n// 1. .carousel.pointer-event should ideally be pan-y (to allow for users to scroll vertically)\\n//    even when their scroll action started on a carousel, but for compatibility (with Firefox)\\n//    we\'re preventing all actions instead\\n// 2. The .carousel-item-start and .carousel-item-end is used to indicate where\\n//    the active slide is heading.\\n// 3. .active.carousel-item is the current slide.\\n// 4. .active.carousel-item-start and .active.carousel-item-end is the current\\n//    slide in its in-transition state. Only one of these occurs at a time.\\n// 5. .carousel-item-next.carousel-item-start and .carousel-item-prev.carousel-item-end\\n//    is the upcoming slide in transition.\\n\\n.carousel {\\n  position: relative;\\n}\\n\\n.carousel.pointer-event {\\n  touch-action: pan-y;\\n}\\n\\n.carousel-inner {\\n  position: relative;\\n  width: 100%;\\n  overflow: hidden;\\n  @include clearfix();\\n}\\n\\n.carousel-item {\\n  position: relative;\\n  display: none;\\n  float: left;\\n  width: 100%;\\n  margin-right: -100%;\\n  backface-visibility: hidden;\\n  @include transition($carousel-transition);\\n}\\n\\n.carousel-item.active,\\n.carousel-item-next,\\n.carousel-item-prev {\\n  display: block;\\n}\\n\\n/* rtl:begin:ignore */\\n.carousel-item-next:not(.carousel-item-start),\\n.active.carousel-item-end {\\n  transform: translateX(100%);\\n}\\n\\n.carousel-item-prev:not(.carousel-item-end),\\n.active.carousel-item-start {\\n  transform: translateX(-100%);\\n}\\n\\n/* rtl:end:ignore */\\n\\n\\n//\\n// Alternate transitions\\n//\\n\\n.carousel-fade {\\n  .carousel-item {\\n    opacity: 0;\\n    transition-property: opacity;\\n    transform: none;\\n  }\\n\\n  .carousel-item.active,\\n  .carousel-item-next.carousel-item-start,\\n  .carousel-item-prev.carousel-item-end {\\n    z-index: 1;\\n    opacity: 1;\\n  }\\n\\n  .active.carousel-item-start,\\n  .active.carousel-item-end {\\n    z-index: 0;\\n    opacity: 0;\\n    @include transition(opacity 0s $carousel-transition-duration);\\n  }\\n}\\n\\n\\n//\\n// Left/right controls for nav\\n//\\n\\n.carousel-control-prev,\\n.carousel-control-next {\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  z-index: 1;\\n  // Use flex for alignment (1-3)\\n  display: flex; // 1. allow flex styles\\n  align-items: center; // 2. vertically center contents\\n  justify-content: center; // 3. horizontally center contents\\n  width: $carousel-control-width;\\n  padding: 0;\\n  color: $carousel-control-color;\\n  text-align: center;\\n  background: none;\\n  border: 0;\\n  opacity: $carousel-control-opacity;\\n  @include transition($carousel-control-transition);\\n\\n  // Hover/focus state\\n  &:hover,\\n  &:focus {\\n    color: $carousel-control-color;\\n    text-decoration: none;\\n    outline: 0;\\n    opacity: $carousel-control-hover-opacity;\\n  }\\n}\\n.carousel-control-prev {\\n  left: 0;\\n  background-image: if($enable-gradients, linear-gradient(90deg, rgba($black, .25), rgba($black, .001)), null);\\n}\\n.carousel-control-next {\\n  right: 0;\\n  background-image: if($enable-gradients, linear-gradient(270deg, rgba($black, .25), rgba($black, .001)), null);\\n}\\n\\n// Icons for within\\n.carousel-control-prev-icon,\\n.carousel-control-next-icon {\\n  display: inline-block;\\n  width: $carousel-control-icon-width;\\n  height: $carousel-control-icon-width;\\n  background-repeat: no-repeat;\\n  background-position: 50%;\\n  background-size: 100% 100%;\\n}\\n\\n/* rtl:options: {\\n  \\"autoRename\\": true,\\n  \\"stringMap\\":[ {\\n    \\"name\\"    : \\"prev-next\\",\\n    \\"search\\"  : \\"prev\\",\\n    \\"replace\\" : \\"next\\"\\n  } ]\\n} */\\n.carousel-control-prev-icon {\\n  background-image: escape-svg($carousel-control-prev-icon-bg);\\n}\\n.carousel-control-next-icon {\\n  background-image: escape-svg($carousel-control-next-icon-bg);\\n}\\n\\n// Optional indicator pips/controls\\n//\\n// Add a container (such as a list) with the following class and add an item (ideally a focusable control,\\n// like a button) with data-bs-target for each slide your carousel holds.\\n\\n.carousel-indicators {\\n  position: absolute;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n  z-index: 2;\\n  display: flex;\\n  justify-content: center;\\n  padding: 0;\\n  // Use the .carousel-control\'s width as margin so we don\'t overlay those\\n  margin-right: $carousel-control-width;\\n  margin-bottom: 1rem;\\n  margin-left: $carousel-control-width;\\n  list-style: none;\\n\\n  [data-bs-target] {\\n    box-sizing: content-box;\\n    flex: 0 1 auto;\\n    width: $carousel-indicator-width;\\n    height: $carousel-indicator-height;\\n    padding: 0;\\n    margin-right: $carousel-indicator-spacer;\\n    margin-left: $carousel-indicator-spacer;\\n    text-indent: -999px;\\n    cursor: pointer;\\n    background-color: $carousel-indicator-active-bg;\\n    background-clip: padding-box;\\n    border: 0;\\n    // Use transparent borders to increase the hit area by 10px on top and bottom.\\n    border-top: $carousel-indicator-hit-area-height solid transparent;\\n    border-bottom: $carousel-indicator-hit-area-height solid transparent;\\n    opacity: $carousel-indicator-opacity;\\n    @include transition($carousel-indicator-transition);\\n  }\\n\\n  .active {\\n    opacity: $carousel-indicator-active-opacity;\\n  }\\n}\\n\\n\\n// Optional captions\\n//\\n//\\n\\n.carousel-caption {\\n  position: absolute;\\n  right: (100% - $carousel-caption-width) * .5;\\n  bottom: $carousel-caption-spacer;\\n  left: (100% - $carousel-caption-width) * .5;\\n  padding-top: $carousel-caption-padding-y;\\n  padding-bottom: $carousel-caption-padding-y;\\n  color: $carousel-caption-color;\\n  text-align: center;\\n}\\n\\n// Dark mode carousel\\n\\n.carousel-dark {\\n  .carousel-control-prev-icon,\\n  .carousel-control-next-icon {\\n    filter: $carousel-dark-control-icon-filter;\\n  }\\n\\n  .carousel-indicators [data-bs-target] {\\n    background-color: $carousel-dark-indicator-active-bg;\\n  }\\n\\n  .carousel-caption {\\n    color: $carousel-dark-caption-color;\\n  }\\n}\\n","// scss-docs-start clearfix\\n@mixin clearfix() {\\n  &::after {\\n    display: block;\\n    clear: both;\\n    content: \\"\\";\\n  }\\n}\\n// scss-docs-end clearfix\\n","//\\n// Rotating border\\n//\\n\\n// scss-docs-start spinner-border-keyframes\\n@keyframes spinner-border {\\n  to { transform: rotate(360deg) #{\\"/* rtl:ignore */\\"}; }\\n}\\n// scss-docs-end spinner-border-keyframes\\n\\n.spinner-border {\\n  display: inline-block;\\n  width: $spinner-width;\\n  height: $spinner-height;\\n  vertical-align: $spinner-vertical-align;\\n  border: $spinner-border-width solid currentColor;\\n  border-right-color: transparent;\\n  // stylelint-disable-next-line property-disallowed-list\\n  border-radius: 50%;\\n  animation: $spinner-animation-speed linear infinite spinner-border;\\n}\\n\\n.spinner-border-sm {\\n  width: $spinner-width-sm;\\n  height: $spinner-height-sm;\\n  border-width: $spinner-border-width-sm;\\n}\\n\\n//\\n// Growing circle\\n//\\n\\n// scss-docs-start spinner-grow-keyframes\\n@keyframes spinner-grow {\\n  0% {\\n    transform: scale(0);\\n  }\\n  50% {\\n    opacity: 1;\\n    transform: none;\\n  }\\n}\\n// scss-docs-end spinner-grow-keyframes\\n\\n.spinner-grow {\\n  display: inline-block;\\n  width: $spinner-width;\\n  height: $spinner-height;\\n  vertical-align: $spinner-vertical-align;\\n  background-color: currentColor;\\n  // stylelint-disable-next-line property-disallowed-list\\n  border-radius: 50%;\\n  opacity: 0;\\n  animation: $spinner-animation-speed linear infinite spinner-grow;\\n}\\n\\n.spinner-grow-sm {\\n  width: $spinner-width-sm;\\n  height: $spinner-height-sm;\\n}\\n\\n@if $enable-reduced-motion {\\n  @media (prefers-reduced-motion: reduce) {\\n    .spinner-border,\\n    .spinner-grow {\\n      animation-duration: $spinner-animation-speed * 2;\\n    }\\n  }\\n}\\n",".offcanvas {\\n  position: fixed;\\n  bottom: 0;\\n  z-index: $zindex-offcanvas;\\n  display: flex;\\n  flex-direction: column;\\n  max-width: 100%;\\n  color: $offcanvas-color;\\n  visibility: hidden;\\n  background-color: $offcanvas-bg-color;\\n  background-clip: padding-box;\\n  outline: 0;\\n  @include box-shadow($offcanvas-box-shadow);\\n  @include transition(transform $offcanvas-transition-duration ease-in-out);\\n}\\n\\n.offcanvas-backdrop {\\n  @include overlay-backdrop($zindex-offcanvas-backdrop, $offcanvas-backdrop-bg, $offcanvas-backdrop-opacity);\\n}\\n\\n.offcanvas-header {\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  padding: $offcanvas-padding-y $offcanvas-padding-x;\\n\\n  .btn-close {\\n    padding: ($offcanvas-padding-y * .5) ($offcanvas-padding-x * .5);\\n    margin-top: $offcanvas-padding-y * -.5;\\n    margin-right: $offcanvas-padding-x * -.5;\\n    margin-bottom: $offcanvas-padding-y * -.5;\\n  }\\n}\\n\\n.offcanvas-title {\\n  margin-bottom: 0;\\n  line-height: $offcanvas-title-line-height;\\n}\\n\\n.offcanvas-body {\\n  flex-grow: 1;\\n  padding: $offcanvas-padding-y $offcanvas-padding-x;\\n  overflow-y: auto;\\n}\\n\\n.offcanvas-start {\\n  top: 0;\\n  left: 0;\\n  width: $offcanvas-horizontal-width;\\n  border-right: $offcanvas-border-width solid $offcanvas-border-color;\\n  transform: translateX(-100%);\\n}\\n\\n.offcanvas-end {\\n  top: 0;\\n  right: 0;\\n  width: $offcanvas-horizontal-width;\\n  border-left: $offcanvas-border-width solid $offcanvas-border-color;\\n  transform: translateX(100%);\\n}\\n\\n.offcanvas-top {\\n  top: 0;\\n  right: 0;\\n  left: 0;\\n  height: $offcanvas-vertical-height;\\n  max-height: 100%;\\n  border-bottom: $offcanvas-border-width solid $offcanvas-border-color;\\n  transform: translateY(-100%);\\n}\\n\\n.offcanvas-bottom {\\n  right: 0;\\n  left: 0;\\n  height: $offcanvas-vertical-height;\\n  max-height: 100%;\\n  border-top: $offcanvas-border-width solid $offcanvas-border-color;\\n  transform: translateY(100%);\\n}\\n\\n.offcanvas.show {\\n  transform: none;\\n}\\n",".placeholder {\\n  display: inline-block;\\n  min-height: 1em;\\n  vertical-align: middle;\\n  cursor: wait;\\n  background-color: currentColor;\\n  opacity: $placeholder-opacity-max;\\n\\n  &.btn::before {\\n    display: inline-block;\\n    content: \\"\\";\\n  }\\n}\\n\\n// Sizing\\n.placeholder-xs {\\n  min-height: .6em;\\n}\\n\\n.placeholder-sm {\\n  min-height: .8em;\\n}\\n\\n.placeholder-lg {\\n  min-height: 1.2em;\\n}\\n\\n// Animation\\n.placeholder-glow {\\n  .placeholder {\\n    animation: placeholder-glow 2s ease-in-out infinite;\\n  }\\n}\\n\\n@keyframes placeholder-glow {\\n  50% {\\n    opacity: $placeholder-opacity-min;\\n  }\\n}\\n\\n.placeholder-wave {\\n  mask-image: linear-gradient(130deg, $black 55%, rgba(0, 0, 0, (1 - $placeholder-opacity-min)) 75%, $black 95%);\\n  mask-size: 200% 100%;\\n  animation: placeholder-wave 2s linear infinite;\\n}\\n\\n@keyframes placeholder-wave {\\n  100% {\\n    mask-position: -200% 0%;\\n  }\\n}\\n","@each $color, $value in $theme-colors {\\n  .link-#{$color} {\\n    color: $value;\\n\\n    @if $link-shade-percentage != 0 {\\n      &:hover,\\n      &:focus {\\n        color: if(color-contrast($value) == $color-contrast-light, shade-color($value, $link-shade-percentage), tint-color($value, $link-shade-percentage));\\n      }\\n    }\\n  }\\n}\\n","// Credit: Nicolas Gallagher and SUIT CSS.\\n\\n.ratio {\\n  position: relative;\\n  width: 100%;\\n\\n  &::before {\\n    display: block;\\n    padding-top: var(--#{$variable-prefix}aspect-ratio);\\n    content: \\"\\";\\n  }\\n\\n  > * {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    width: 100%;\\n    height: 100%;\\n  }\\n}\\n\\n@each $key, $ratio in $aspect-ratios {\\n  .ratio-#{$key} {\\n    --#{$variable-prefix}aspect-ratio: #{$ratio};\\n  }\\n}\\n","// Shorthand\\n\\n.fixed-top {\\n  position: fixed;\\n  top: 0;\\n  right: 0;\\n  left: 0;\\n  z-index: $zindex-fixed;\\n}\\n\\n.fixed-bottom {\\n  position: fixed;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n  z-index: $zindex-fixed;\\n}\\n\\n// Responsive sticky top\\n@each $breakpoint in map-keys($grid-breakpoints) {\\n  @include media-breakpoint-up($breakpoint) {\\n    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);\\n\\n    .sticky#{$infix}-top {\\n      position: sticky;\\n      top: 0;\\n      z-index: $zindex-sticky;\\n    }\\n  }\\n}\\n","// scss-docs-start stacks\\n.hstack {\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  align-self: stretch;\\n}\\n\\n.vstack {\\n  display: flex;\\n  flex: 1 1 auto;\\n  flex-direction: column;\\n  align-self: stretch;\\n}\\n// scss-docs-end stacks\\n","//\\n// Visually hidden\\n//\\n\\n.visually-hidden,\\n.visually-hidden-focusable:not(:focus):not(:focus-within) {\\n  @include visually-hidden();\\n}\\n","// stylelint-disable declaration-no-important\\n\\n// Hide content visually while keeping it accessible to assistive technologies\\n//\\n// See: https://www.a11yproject.com/posts/2013-01-11-how-to-hide-content/\\n// See: https://hugogiraudel.com/2016/10/13/css-hide-and-seek/\\n\\n@mixin visually-hidden() {\\n  position: absolute !important;\\n  width: 1px !important;\\n  height: 1px !important;\\n  padding: 0 !important;\\n  margin: -1px !important; // Fix for https://github.com/twbs/bootstrap/issues/25686\\n  overflow: hidden !important;\\n  clip: rect(0, 0, 0, 0) !important;\\n  white-space: nowrap !important;\\n  border: 0 !important;\\n}\\n\\n// Use to only display content when it\'s focused, or one of its child elements is focused\\n// (i.e. when focus is within the element/container that the class was applied to)\\n//\\n// Useful for \\"Skip to main content\\" links; see https://www.w3.org/TR/2013/NOTE-WCAG20-TECHS-20130905/G1\\n\\n@mixin visually-hidden-focusable() {\\n  &:not(:focus):not(:focus-within) {\\n    @include visually-hidden();\\n  }\\n}\\n","//\\n// Stretched link\\n//\\n\\n.stretched-link {\\n  &::#{$stretched-link-pseudo-element} {\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    bottom: 0;\\n    left: 0;\\n    z-index: $stretched-link-z-index;\\n    content: \\"\\";\\n  }\\n}\\n","//\\n// Text truncation\\n//\\n\\n.text-truncate {\\n  @include text-truncate();\\n}\\n","// Text truncate\\n// Requires inline-block or block for proper styling\\n\\n@mixin text-truncate() {\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n}\\n",".vr {\\n  display: inline-block;\\n  align-self: stretch;\\n  width: 1px;\\n  min-height: 1em;\\n  background-color: currentColor;\\n  opacity: $hr-opacity;\\n}\\n","// Utility generator\\n// Used to generate utilities & print utilities\\n@mixin generate-utility($utility, $infix, $is-rfs-media-query: false) {\\n  $values: map-get($utility, values);\\n\\n  // If the values are a list or string, convert it into a map\\n  @if type-of($values) == \\"string\\" or type-of(nth($values, 1)) != \\"list\\" {\\n    $values: zip($values, $values);\\n  }\\n\\n  @each $key, $value in $values {\\n    $properties: map-get($utility, property);\\n\\n    // Multiple properties are possible, for example with vertical or horizontal margins or paddings\\n    @if type-of($properties) == \\"string\\" {\\n      $properties: append((), $properties);\\n    }\\n\\n    // Use custom class if present\\n    $property-class: if(map-has-key($utility, class), map-get($utility, class), nth($properties, 1));\\n    $property-class: if($property-class == null, \\"\\", $property-class);\\n\\n    // State params to generate pseudo-classes\\n    $state: if(map-has-key($utility, state), map-get($utility, state), ());\\n\\n    $infix: if($property-class == \\"\\" and str-slice($infix, 1, 1) == \\"-\\", str-slice($infix, 2), $infix);\\n\\n    // Don\'t prefix if value key is null (eg. with shadow class)\\n    $property-class-modifier: if($key, if($property-class == \\"\\" and $infix == \\"\\", \\"\\", \\"-\\") + $key, \\"\\");\\n\\n    @if map-get($utility, rfs) {\\n      // Inside the media query\\n      @if $is-rfs-media-query {\\n        $val: rfs-value($value);\\n\\n        // Do not render anything if fluid and non fluid values are the same\\n        $value: if($val == rfs-fluid-value($value), null, $val);\\n      }\\n      @else {\\n        $value: rfs-fluid-value($value);\\n      }\\n    }\\n\\n    $is-css-var: map-get($utility, css-var);\\n    $is-local-vars: map-get($utility, local-vars);\\n    $is-rtl: map-get($utility, rtl);\\n\\n    @if $value != null {\\n      @if $is-rtl == false {\\n        /* rtl:begin:remove */\\n      }\\n\\n      @if $is-css-var {\\n        .#{$property-class + $infix + $property-class-modifier} {\\n          --#{$variable-prefix}#{$property-class}: #{$value};\\n        }\\n\\n        @each $pseudo in $state {\\n          .#{$property-class + $infix + $property-class-modifier}-#{$pseudo}:#{$pseudo} {\\n            --#{$variable-prefix}#{$property-class}: #{$value};\\n          }\\n        }\\n      } @else {\\n        .#{$property-class + $infix + $property-class-modifier} {\\n          @each $property in $properties {\\n            @if $is-local-vars {\\n              @each $local-var, $value in $is-local-vars {\\n                --#{$variable-prefix}#{$local-var}: #{$value};\\n              }\\n            }\\n            #{$property}: $value if($enable-important-utilities, !important, null);\\n          }\\n        }\\n\\n        @each $pseudo in $state {\\n          .#{$property-class + $infix + $property-class-modifier}-#{$pseudo}:#{$pseudo} {\\n            @each $property in $properties {\\n              #{$property}: $value if($enable-important-utilities, !important, null);\\n            }\\n          }\\n        }\\n      }\\n\\n      @if $is-rtl == false {\\n        /* rtl:end:remove */\\n      }\\n    }\\n  }\\n}\\n","// Loop over each breakpoint\\n@each $breakpoint in map-keys($grid-breakpoints) {\\n\\n  // Generate media query if needed\\n  @include media-breakpoint-up($breakpoint) {\\n    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);\\n\\n    // Loop over each utility property\\n    @each $key, $utility in $utilities {\\n      // The utility can be disabled with `false`, thus check if the utility is a map first\\n      // Only proceed if responsive media queries are enabled or if it\'s the base media query\\n      @if type-of($utility) == \\"map\\" and (map-get($utility, responsive) or $infix == \\"\\") {\\n        @include generate-utility($utility, $infix);\\n      }\\n    }\\n  }\\n}\\n\\n// RFS rescaling\\n@media (min-width: $rfs-mq-value) {\\n  @each $breakpoint in map-keys($grid-breakpoints) {\\n    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);\\n\\n    @if (map-get($grid-breakpoints, $breakpoint) < $rfs-breakpoint) {\\n      // Loop over each utility property\\n      @each $key, $utility in $utilities {\\n        // The utility can be disabled with `false`, thus check if the utility is a map first\\n        // Only proceed if responsive media queries are enabled or if it\'s the base media query\\n        @if type-of($utility) == \\"map\\" and map-get($utility, rfs) and (map-get($utility, responsive) or $infix == \\"\\") {\\n          @include generate-utility($utility, $infix, true);\\n        }\\n      }\\n    }\\n  }\\n}\\n\\n\\n// Print utilities\\n@media print {\\n  @each $key, $utility in $utilities {\\n    // The utility can be disabled with `false`, thus check if the utility is a map first\\n    // Then check if the utility needs print styles\\n    @if type-of($utility) == \\"map\\" and map-get($utility, print) == true {\\n      @include generate-utility($utility, \\"-print\\");\\n    }\\n  }\\n}\\n"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///666\n')},982:(module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(202);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(929);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));\n___CSS_LOADER_EXPORT___.push([module.id, "@import url(https://fonts.googleapis.com/css2?family=Kaushan+Script&display=swap);"]);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, "body {\\r\\n  background-color: #fcdec0;\\r\\n  max-height: 100vh;\\r\\n  overflow-y: hidden;\\r\\n}\\r\\nheader {\\r\\n  height: 15vh;\\r\\n}\\r\\naside {\\r\\n  background-color: #c68b59;\\r\\n  height: 95vh;\\r\\n  width: 0 !important;\\r\\n  transition: visibility 0.01s, padding 0.8s ease-out, width 0.8s ease-out;\\r\\n  padding-top: 0px !important;\\r\\n  overflow-y: scroll;\\r\\n}\\r\\nmain {\\r\\n  max-height: 100vh;\\r\\n  overflow-y: scroll;\\r\\n}\\r\\n.tampil {\\r\\n  width: max-content !important;\\r\\n  padding: 0px 20px 20px 20px !important;\\r\\n  visibility: visible;\\r\\n}\\r\\nh2 {\\r\\n  font-family: \\"Kaushan Script\\", cursive;\\r\\n  padding: 5px;\\r\\n  border-bottom: 5px solid #fcdec0;\\r\\n}\\r\\n\\r\\n/*  Scrool bar */\\r\\n::-webkit-scrollbar {\\r\\n  width: 5px;\\r\\n}\\r\\n\\r\\n::-webkit-scrollbar-track {\\r\\n  box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\\r\\n  background: rgb(248, 241, 241);\\r\\n}\\r\\n\\r\\n::-webkit-scrollbar-thumb {\\r\\n  background: #8fc1d4;\\r\\n}\\r\\n\\r\\n@media screen and (max-width: 556px) {\\r\\n  aside {\\r\\n    position: absolute;\\r\\n    height: 100vh;\\r\\n  }\\r\\n  #asal,\\r\\n  #bahan,\\r\\n  #kategori {\\r\\n    max-height: 90vh;\\r\\n  }\\r\\n}\\r\\n", "",{"version":3,"sources":["webpack://./src/style/style.css"],"names":[],"mappings":"AACA;EACE,yBAAyB;EACzB,iBAAiB;EACjB,kBAAkB;AACpB;AACA;EACE,YAAY;AACd;AACA;EACE,yBAAyB;EACzB,YAAY;EACZ,mBAAmB;EACnB,wEAAwE;EACxE,2BAA2B;EAC3B,kBAAkB;AACpB;AACA;EACE,iBAAiB;EACjB,kBAAkB;AACpB;AACA;EACE,6BAA6B;EAC7B,sCAAsC;EACtC,mBAAmB;AACrB;AACA;EACE,sCAAsC;EACtC,YAAY;EACZ,gCAAgC;AAClC;;AAEA,gBAAgB;AAChB;EACE,UAAU;AACZ;;AAEA;EACE,4CAA4C;EAC5C,8BAA8B;AAChC;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE;IACE,kBAAkB;IAClB,aAAa;EACf;EACA;;;IAGE,gBAAgB;EAClB;AACF","sourcesContent":["@import url(\\"https://fonts.googleapis.com/css2?family=Kaushan+Script&display=swap\\");\\r\\nbody {\\r\\n  background-color: #fcdec0;\\r\\n  max-height: 100vh;\\r\\n  overflow-y: hidden;\\r\\n}\\r\\nheader {\\r\\n  height: 15vh;\\r\\n}\\r\\naside {\\r\\n  background-color: #c68b59;\\r\\n  height: 95vh;\\r\\n  width: 0 !important;\\r\\n  transition: visibility 0.01s, padding 0.8s ease-out, width 0.8s ease-out;\\r\\n  padding-top: 0px !important;\\r\\n  overflow-y: scroll;\\r\\n}\\r\\nmain {\\r\\n  max-height: 100vh;\\r\\n  overflow-y: scroll;\\r\\n}\\r\\n.tampil {\\r\\n  width: max-content !important;\\r\\n  padding: 0px 20px 20px 20px !important;\\r\\n  visibility: visible;\\r\\n}\\r\\nh2 {\\r\\n  font-family: \\"Kaushan Script\\", cursive;\\r\\n  padding: 5px;\\r\\n  border-bottom: 5px solid #fcdec0;\\r\\n}\\r\\n\\r\\n/*  Scrool bar */\\r\\n::-webkit-scrollbar {\\r\\n  width: 5px;\\r\\n}\\r\\n\\r\\n::-webkit-scrollbar-track {\\r\\n  box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\\r\\n  background: rgb(248, 241, 241);\\r\\n}\\r\\n\\r\\n::-webkit-scrollbar-thumb {\\r\\n  background: #8fc1d4;\\r\\n}\\r\\n\\r\\n@media screen and (max-width: 556px) {\\r\\n  aside {\\r\\n    position: absolute;\\r\\n    height: 100vh;\\r\\n  }\\r\\n  #asal,\\r\\n  #bahan,\\r\\n  #kategori {\\r\\n    max-height: 90vh;\\r\\n  }\\r\\n}\\r\\n"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTgyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUN5SDtBQUM3QjtBQUM1Riw4QkFBOEIsbUZBQTJCLENBQUMsd0dBQXFDO0FBQy9GLDRIQUE0SDtBQUM1SDtBQUNBLGdEQUFnRCxnQ0FBZ0Msd0JBQXdCLHlCQUF5QixLQUFLLFlBQVksbUJBQW1CLEtBQUssV0FBVyxnQ0FBZ0MsbUJBQW1CLDBCQUEwQiwrRUFBK0Usa0NBQWtDLHlCQUF5QixLQUFLLFVBQVUsd0JBQXdCLHlCQUF5QixLQUFLLGFBQWEsb0NBQW9DLDZDQUE2QywwQkFBMEIsS0FBSyxRQUFRLCtDQUErQyxtQkFBbUIsdUNBQXVDLEtBQUssa0RBQWtELGlCQUFpQixLQUFLLG1DQUFtQyxtREFBbUQscUNBQXFDLEtBQUssbUNBQW1DLDBCQUEwQixLQUFLLDhDQUE4QyxhQUFhLDJCQUEyQixzQkFBc0IsT0FBTywwQ0FBMEMseUJBQXlCLE9BQU8sS0FBSyxXQUFXLHNGQUFzRixZQUFZLGFBQWEsYUFBYSxNQUFNLEtBQUssVUFBVSxLQUFLLEtBQUssWUFBWSxXQUFXLFlBQVksYUFBYSxhQUFhLGFBQWEsTUFBTSxLQUFLLFlBQVksYUFBYSxNQUFNLEtBQUssWUFBWSxhQUFhLGFBQWEsTUFBTSxLQUFLLFlBQVksV0FBVyxZQUFZLE9BQU8sWUFBWSxNQUFNLFVBQVUsTUFBTSxLQUFLLFlBQVksYUFBYSxPQUFPLEtBQUssWUFBWSxPQUFPLEtBQUssS0FBSyxZQUFZLFdBQVcsS0FBSyxPQUFPLFlBQVksTUFBTSwrR0FBK0csVUFBVSxnQ0FBZ0Msd0JBQXdCLHlCQUF5QixLQUFLLFlBQVksbUJBQW1CLEtBQUssV0FBVyxnQ0FBZ0MsbUJBQW1CLDBCQUEwQiwrRUFBK0Usa0NBQWtDLHlCQUF5QixLQUFLLFVBQVUsd0JBQXdCLHlCQUF5QixLQUFLLGFBQWEsb0NBQW9DLDZDQUE2QywwQkFBMEIsS0FBSyxRQUFRLCtDQUErQyxtQkFBbUIsdUNBQXVDLEtBQUssa0RBQWtELGlCQUFpQixLQUFLLG1DQUFtQyxtREFBbUQscUNBQXFDLEtBQUssbUNBQW1DLDBCQUEwQixLQUFLLDhDQUE4QyxhQUFhLDJCQUEyQixzQkFBc0IsT0FBTywwQ0FBMEMseUJBQXlCLE9BQU8sS0FBSyx1QkFBdUI7QUFDeDVGO0FBQ0EsaUVBQWUsdUJBQXVCLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90aGVtZWFsLy4vc3JjL3N0eWxlL3N0eWxlLmNzcz84YmJiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvY3NzV2l0aE1hcHBpbmdUb1N0cmluZy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIkBpbXBvcnQgdXJsKGh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9S2F1c2hhbitTY3JpcHQmZGlzcGxheT1zd2FwKTtcIl0pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiYm9keSB7XFxyXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmNkZWMwO1xcclxcbiAgbWF4LWhlaWdodDogMTAwdmg7XFxyXFxuICBvdmVyZmxvdy15OiBoaWRkZW47XFxyXFxufVxcclxcbmhlYWRlciB7XFxyXFxuICBoZWlnaHQ6IDE1dmg7XFxyXFxufVxcclxcbmFzaWRlIHtcXHJcXG4gIGJhY2tncm91bmQtY29sb3I6ICNjNjhiNTk7XFxyXFxuICBoZWlnaHQ6IDk1dmg7XFxyXFxuICB3aWR0aDogMCAhaW1wb3J0YW50O1xcclxcbiAgdHJhbnNpdGlvbjogdmlzaWJpbGl0eSAwLjAxcywgcGFkZGluZyAwLjhzIGVhc2Utb3V0LCB3aWR0aCAwLjhzIGVhc2Utb3V0O1xcclxcbiAgcGFkZGluZy10b3A6IDBweCAhaW1wb3J0YW50O1xcclxcbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xcclxcbn1cXHJcXG5tYWluIHtcXHJcXG4gIG1heC1oZWlnaHQ6IDEwMHZoO1xcclxcbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xcclxcbn1cXHJcXG4udGFtcGlsIHtcXHJcXG4gIHdpZHRoOiBtYXgtY29udGVudCAhaW1wb3J0YW50O1xcclxcbiAgcGFkZGluZzogMHB4IDIwcHggMjBweCAyMHB4ICFpbXBvcnRhbnQ7XFxyXFxuICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xcclxcbn1cXHJcXG5oMiB7XFxyXFxuICBmb250LWZhbWlseTogXFxcIkthdXNoYW4gU2NyaXB0XFxcIiwgY3Vyc2l2ZTtcXHJcXG4gIHBhZGRpbmc6IDVweDtcXHJcXG4gIGJvcmRlci1ib3R0b206IDVweCBzb2xpZCAjZmNkZWMwO1xcclxcbn1cXHJcXG5cXHJcXG4vKiAgU2Nyb29sIGJhciAqL1xcclxcbjo6LXdlYmtpdC1zY3JvbGxiYXIge1xcclxcbiAgd2lkdGg6IDVweDtcXHJcXG59XFxyXFxuXFxyXFxuOjotd2Via2l0LXNjcm9sbGJhci10cmFjayB7XFxyXFxuICBib3gtc2hhZG93OiBpbnNldCAwIDAgNnB4IHJnYmEoMCwgMCwgMCwgMC4zKTtcXHJcXG4gIGJhY2tncm91bmQ6IHJnYigyNDgsIDI0MSwgMjQxKTtcXHJcXG59XFxyXFxuXFxyXFxuOjotd2Via2l0LXNjcm9sbGJhci10aHVtYiB7XFxyXFxuICBiYWNrZ3JvdW5kOiAjOGZjMWQ0O1xcclxcbn1cXHJcXG5cXHJcXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NTZweCkge1xcclxcbiAgYXNpZGUge1xcclxcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxyXFxuICAgIGhlaWdodDogMTAwdmg7XFxyXFxuICB9XFxyXFxuICAjYXNhbCxcXHJcXG4gICNiYWhhbixcXHJcXG4gICNrYXRlZ29yaSB7XFxyXFxuICAgIG1heC1oZWlnaHQ6IDkwdmg7XFxyXFxuICB9XFxyXFxufVxcclxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZS9zdHlsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQ0E7RUFDRSx5QkFBeUI7RUFDekIsaUJBQWlCO0VBQ2pCLGtCQUFrQjtBQUNwQjtBQUNBO0VBQ0UsWUFBWTtBQUNkO0FBQ0E7RUFDRSx5QkFBeUI7RUFDekIsWUFBWTtFQUNaLG1CQUFtQjtFQUNuQix3RUFBd0U7RUFDeEUsMkJBQTJCO0VBQzNCLGtCQUFrQjtBQUNwQjtBQUNBO0VBQ0UsaUJBQWlCO0VBQ2pCLGtCQUFrQjtBQUNwQjtBQUNBO0VBQ0UsNkJBQTZCO0VBQzdCLHNDQUFzQztFQUN0QyxtQkFBbUI7QUFDckI7QUFDQTtFQUNFLHNDQUFzQztFQUN0QyxZQUFZO0VBQ1osZ0NBQWdDO0FBQ2xDOztBQUVBLGdCQUFnQjtBQUNoQjtFQUNFLFVBQVU7QUFDWjs7QUFFQTtFQUNFLDRDQUE0QztFQUM1Qyw4QkFBOEI7QUFDaEM7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRTtJQUNFLGtCQUFrQjtJQUNsQixhQUFhO0VBQ2Y7RUFDQTs7O0lBR0UsZ0JBQWdCO0VBQ2xCO0FBQ0ZcIixcInNvdXJjZXNDb250ZW50XCI6W1wiQGltcG9ydCB1cmwoXFxcImh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9S2F1c2hhbitTY3JpcHQmZGlzcGxheT1zd2FwXFxcIik7XFxyXFxuYm9keSB7XFxyXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmNkZWMwO1xcclxcbiAgbWF4LWhlaWdodDogMTAwdmg7XFxyXFxuICBvdmVyZmxvdy15OiBoaWRkZW47XFxyXFxufVxcclxcbmhlYWRlciB7XFxyXFxuICBoZWlnaHQ6IDE1dmg7XFxyXFxufVxcclxcbmFzaWRlIHtcXHJcXG4gIGJhY2tncm91bmQtY29sb3I6ICNjNjhiNTk7XFxyXFxuICBoZWlnaHQ6IDk1dmg7XFxyXFxuICB3aWR0aDogMCAhaW1wb3J0YW50O1xcclxcbiAgdHJhbnNpdGlvbjogdmlzaWJpbGl0eSAwLjAxcywgcGFkZGluZyAwLjhzIGVhc2Utb3V0LCB3aWR0aCAwLjhzIGVhc2Utb3V0O1xcclxcbiAgcGFkZGluZy10b3A6IDBweCAhaW1wb3J0YW50O1xcclxcbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xcclxcbn1cXHJcXG5tYWluIHtcXHJcXG4gIG1heC1oZWlnaHQ6IDEwMHZoO1xcclxcbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xcclxcbn1cXHJcXG4udGFtcGlsIHtcXHJcXG4gIHdpZHRoOiBtYXgtY29udGVudCAhaW1wb3J0YW50O1xcclxcbiAgcGFkZGluZzogMHB4IDIwcHggMjBweCAyMHB4ICFpbXBvcnRhbnQ7XFxyXFxuICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xcclxcbn1cXHJcXG5oMiB7XFxyXFxuICBmb250LWZhbWlseTogXFxcIkthdXNoYW4gU2NyaXB0XFxcIiwgY3Vyc2l2ZTtcXHJcXG4gIHBhZGRpbmc6IDVweDtcXHJcXG4gIGJvcmRlci1ib3R0b206IDVweCBzb2xpZCAjZmNkZWMwO1xcclxcbn1cXHJcXG5cXHJcXG4vKiAgU2Nyb29sIGJhciAqL1xcclxcbjo6LXdlYmtpdC1zY3JvbGxiYXIge1xcclxcbiAgd2lkdGg6IDVweDtcXHJcXG59XFxyXFxuXFxyXFxuOjotd2Via2l0LXNjcm9sbGJhci10cmFjayB7XFxyXFxuICBib3gtc2hhZG93OiBpbnNldCAwIDAgNnB4IHJnYmEoMCwgMCwgMCwgMC4zKTtcXHJcXG4gIGJhY2tncm91bmQ6IHJnYigyNDgsIDI0MSwgMjQxKTtcXHJcXG59XFxyXFxuXFxyXFxuOjotd2Via2l0LXNjcm9sbGJhci10aHVtYiB7XFxyXFxuICBiYWNrZ3JvdW5kOiAjOGZjMWQ0O1xcclxcbn1cXHJcXG5cXHJcXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NTZweCkge1xcclxcbiAgYXNpZGUge1xcclxcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxyXFxuICAgIGhlaWdodDogMTAwdmg7XFxyXFxuICB9XFxyXFxuICAjYXNhbCxcXHJcXG4gICNiYWhhbixcXHJcXG4gICNrYXRlZ29yaSB7XFxyXFxuICAgIG1heC1oZWlnaHQ6IDkwdmg7XFxyXFxuICB9XFxyXFxufVxcclxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///982\n')},379:module=>{"use strict";eval('\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = "".concat(id, " ").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction addStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzc5LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViOztBQUVBO0FBQ0E7O0FBRUEsa0JBQWtCLHdCQUF3QjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLGtCQUFrQixpQkFBaUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLG9CQUFvQiw0QkFBNEI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEscUJBQXFCLDZCQUE2QjtBQUNsRDs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90aGVtZWFsLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzPzJkYmEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRvbSA9IFtdO1xuXG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRG9tLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRG9tW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM11cbiAgICB9O1xuXG4gICAgaWYgKGluZGV4ICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5Eb21baW5kZXhdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRG9tW2luZGV4XS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0eWxlc0luRG9tLnB1c2goe1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiBhZGRTdHlsZShvYmosIG9wdGlvbnMpLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBhZGRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGVTdHlsZShuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRG9tW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuXG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuXG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuXG4gICAgICBpZiAoc3R5bGVzSW5Eb21bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRG9tW19pbmRleF0udXBkYXRlcigpO1xuXG4gICAgICAgIHN0eWxlc0luRG9tLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///379\n')},569:module=>{"use strict";eval('\n\nvar memo = {};\n/* istanbul ignore next  */\n\nfunction getTarget(target) {\n  if (typeof memo[target] === "undefined") {\n    var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n\n    memo[target] = styleTarget;\n  }\n\n  return memo[target];\n}\n/* istanbul ignore next  */\n\n\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n\n  if (!target) {\n    throw new Error("Couldn\'t find a style target. This probably means that the value for the \'insert\' parameter is invalid.");\n  }\n\n  target.appendChild(style);\n}\n\nmodule.exports = insertBySelector;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTY5LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHNEQUFzRDs7QUFFdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL3RoZW1lYWwvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzP2IyMTQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTsgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuXG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuXG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuXG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///569\n')},216:module=>{"use strict";eval('\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var style = document.createElement("style");\n  options.setAttributes(style, options.attributes);\n  options.insert(style);\n  return style;\n}\n\nmodule.exports = insertStyleElement;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjE2LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGhlbWVhbC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcz9kZTZjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBzdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKHN0eWxlLCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChzdHlsZSk7XG4gIHJldHVybiBzdHlsZTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///216\n')},565:(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval('\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(style) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n\n  if (nonce) {\n    style.setAttribute("nonce", nonce);\n  }\n}\n\nmodule.exports = setAttributesWithoutAttributes;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTY1LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQSxjQUFjLEtBQXdDLEdBQUcsc0JBQWlCLEdBQUcsQ0FBSTs7QUFFakY7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90aGVtZWFsLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzP2RkY2UiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlKSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZS5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///565\n')},795:module=>{"use strict";eval('\n\n/* istanbul ignore next  */\nfunction apply(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute("media", media);\n  } else {\n    style.removeAttribute("media");\n  }\n\n  if (sourceMap && typeof btoa !== "undefined") {\n    css += "\\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  options.styleTagTransform(css, style);\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nfunction domAPI(options) {\n  var style = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(style, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(style);\n    }\n  };\n}\n\nmodule.exports = domAPI;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzk1LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBOztBQUVBO0FBQ0EseURBQXlEO0FBQ3pELElBQUk7O0FBRUo7OztBQUdBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL3RoZW1lYWwvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcz9lNDc5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlLCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IG9iai5jc3M7XG4gIHZhciBtZWRpYSA9IG9iai5tZWRpYTtcbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG5cbiAgaWYgKG1lZGlhKSB7XG4gICAgc3R5bGUuc2V0QXR0cmlidXRlKFwibWVkaWFcIiwgbWVkaWEpO1xuICB9IGVsc2Uge1xuICAgIHN0eWxlLnJlbW92ZUF0dHJpYnV0ZShcIm1lZGlhXCIpO1xuICB9XG5cbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9IC8vIEZvciBvbGQgSUVcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG5cblxuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGUpO1xufVxuXG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGUpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZS5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3R5bGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZSk7XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICB2YXIgc3R5bGUgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlLCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGUpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///795\n')},589:module=>{"use strict";eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, style) {\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nmodule.exports = styleTagTransform;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTg5LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90aGVtZWFsLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanM/MWRkZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlKSB7XG4gIGlmIChzdHlsZS5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGUuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZS5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZS5yZW1vdmVDaGlsZChzdHlsZS5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBzdHlsZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///589\n")},204:Q=>{"use strict";Q.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%27-4 -4 8 8%27%3e%3ccircle r=%272%27 fill=%27%23fff%27/%3e%3c/svg%3e"},609:Q=>{"use strict";Q.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%27-4 -4 8 8%27%3e%3ccircle r=%273%27 fill=%27%2386b7fe%27/%3e%3c/svg%3e"},469:Q=>{"use strict";Q.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%27-4 -4 8 8%27%3e%3ccircle r=%273%27 fill=%27%23fff%27/%3e%3c/svg%3e"},486:Q=>{"use strict";Q.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%27-4 -4 8 8%27%3e%3ccircle r=%273%27 fill=%27rgba%280, 0, 0, 0.25%29%27/%3e%3c/svg%3e"},144:Q=>{"use strict";Q.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 12 12%27 width=%2712%27 height=%2712%27 fill=%27none%27 stroke=%27%23dc3545%27%3e%3ccircle cx=%276%27 cy=%276%27 r=%274.5%27/%3e%3cpath stroke-linejoin=%27round%27 d=%27M5.8 3.6h.4L6 6.5z%27/%3e%3ccircle cx=%276%27 cy=%278.2%27 r=%27.6%27 fill=%27%23dc3545%27 stroke=%27none%27/%3e%3c/svg%3e"},175:Q=>{"use strict";Q.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27 fill=%27%23000%27%3e%3cpath d=%27M.293.293a1 1 0 011.414 0L8 6.586 14.293.293a1 1 0 111.414 1.414L9.414 8l6.293 6.293a1 1 0 01-1.414 1.414L8 9.414l-6.293 6.293a1 1 0 01-1.414-1.414L6.586 8 .293 1.707a1 1 0 010-1.414z%27/%3e%3c/svg%3e"},740:Q=>{"use strict";Q.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27 fill=%27%230c63e4%27%3e%3cpath fill-rule=%27evenodd%27 d=%27M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z%27/%3e%3c/svg%3e"},460:Q=>{"use strict";Q.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27 fill=%27%23212529%27%3e%3cpath fill-rule=%27evenodd%27 d=%27M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z%27/%3e%3c/svg%3e"},647:Q=>{"use strict";Q.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27 fill=%27%23fff%27%3e%3cpath d=%27M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z%27/%3e%3c/svg%3e"},692:Q=>{"use strict";Q.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27 fill=%27%23fff%27%3e%3cpath d=%27M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z%27/%3e%3c/svg%3e"},214:Q=>{"use strict";Q.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27%3e%3cpath fill=%27none%27 stroke=%27%23343a40%27 stroke-linecap=%27round%27 stroke-linejoin=%27round%27 stroke-width=%272%27 d=%27M2 5l6 6 6-6%27/%3e%3c/svg%3e"},931:Q=>{"use strict";Q.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 20 20%27%3e%3cpath fill=%27none%27 stroke=%27%23fff%27 stroke-linecap=%27round%27 stroke-linejoin=%27round%27 stroke-width=%273%27 d=%27M6 10h8%27/%3e%3c/svg%3e"},349:Q=>{"use strict";Q.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 20 20%27%3e%3cpath fill=%27none%27 stroke=%27%23fff%27 stroke-linecap=%27round%27 stroke-linejoin=%27round%27 stroke-width=%273%27 d=%27M6 10l3 3l6-6%27/%3e%3c/svg%3e"},217:Q=>{"use strict";Q.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 30 30%27%3e%3cpath stroke=%27rgba%280, 0, 0, 0.55%29%27 stroke-linecap=%27round%27 stroke-miterlimit=%2710%27 stroke-width=%272%27 d=%27M4 7h22M4 15h22M4 23h22%27/%3e%3c/svg%3e"},956:Q=>{"use strict";Q.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 30 30%27%3e%3cpath stroke=%27rgba%28255, 255, 255, 0.55%29%27 stroke-linecap=%27round%27 stroke-miterlimit=%2710%27 stroke-width=%272%27 d=%27M4 7h22M4 15h22M4 23h22%27/%3e%3c/svg%3e"},819:Q=>{"use strict";Q.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 8 8%27%3e%3cpath fill=%27%23198754%27 d=%27M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z%27/%3e%3c/svg%3e"}},__webpack_module_cache__={};function __webpack_require__(Q){var F=__webpack_module_cache__[Q];if(void 0!==F)return F.exports;var B=__webpack_module_cache__[Q]={id:Q,loaded:!1,exports:{}};return __webpack_modules__[Q].call(B.exports,B,B.exports,__webpack_require__),B.loaded=!0,B.exports}__webpack_require__.m=__webpack_modules__,__webpack_require__.n=Q=>{var F=Q&&Q.__esModule?()=>Q.default:()=>Q;return __webpack_require__.d(F,{a:F}),F},__webpack_require__.d=(Q,F)=>{for(var B in F)__webpack_require__.o(F,B)&&!__webpack_require__.o(Q,B)&&Object.defineProperty(Q,B,{enumerable:!0,get:F[B]})},__webpack_require__.o=(Q,F)=>Object.prototype.hasOwnProperty.call(Q,F),__webpack_require__.nmd=Q=>(Q.paths=[],Q.children||(Q.children=[]),Q),__webpack_require__.b=document.baseURI||self.location.href;var __webpack_exports__=__webpack_require__(957)})();